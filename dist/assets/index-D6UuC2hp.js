function FL(n,e){for(var t=0;t<e.length;t++){const s=e[t];if(typeof s!="string"&&!Array.isArray(s)){for(const r in s)if(r!=="default"&&!(r in n)){const i=Object.getOwnPropertyDescriptor(s,r);i&&Object.defineProperty(n,r,i.get?i:{enumerable:!0,get:()=>s[r]})}}}return Object.freeze(Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}))}(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const r of document.querySelectorAll('link[rel="modulepreload"]'))s(r);new MutationObserver(r=>{for(const i of r)if(i.type==="childList")for(const o of i.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&s(o)}).observe(document,{childList:!0,subtree:!0});function t(r){const i={};return r.integrity&&(i.integrity=r.integrity),r.referrerPolicy&&(i.referrerPolicy=r.referrerPolicy),r.crossOrigin==="use-credentials"?i.credentials="include":r.crossOrigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function s(r){if(r.ep)return;r.ep=!0;const i=t(r);fetch(r.href,i)}})();class $L{constructor(){this.logsContainer=document.getElementById("debug-logs"),this.statusText=document.getElementById("status-text"),this.videoStatus=document.getElementById("video-status"),this.modelStatus=document.getElementById("model-status"),this.poseStatus=document.getElementById("pose-status"),this.assetStatus=document.getElementById("asset-status"),this.fpsCounter=document.getElementById("fps-counter"),this.positionStatus=document.getElementById("position-status"),this.maxLogs=30}log(e,t){const s=document.createElement("div");s.className=`debug-log ${e}`,s.textContent=`[${new Date().toLocaleTimeString()}] ${t}`,this.logsContainer&&this.logsContainer.children.length>=this.maxLogs&&this.logsContainer.removeChild(this.logsContainer.lastChild),this.logsContainer&&this.logsContainer.prepend(s)}updateStatus(e){this.statusText&&(this.statusText.textContent=e)}updateVideoStatus(e){this.videoStatus&&(this.videoStatus.textContent=e)}updateModelStatus(e){this.modelStatus&&(this.modelStatus.textContent=e)}updatePoseStatus(e){this.poseStatus&&(this.poseStatus.textContent=e)}updateAssetStatus(e){this.assetStatus&&(this.assetStatus.textContent=e)}updateFPS(e){this.fpsCounter&&(this.fpsCounter.textContent=e.toFixed(1))}updatePositionStatus(e,t,s,r,i){this.positionStatus&&(this.positionStatus.textContent=`L P: (${e.x.toFixed(2)}, ${e.y.toFixed(2)}) R P: (${s.x.toFixed(2)}, ${s.y.toFixed(2)}) Offset: ${i.toFixed(2)}`)}}let f0="environment";function ZT(){return document.getElementById("video")}async function eB(){const n=await navigator.mediaDevices.getUserMedia({video:{facingMode:f0,width:{ideal:1280},height:{ideal:720}},audio:!1}),e=ZT();if(!e)throw new Error("Video element not found");e.srcObject=n,await e.play().catch(()=>{})}function tB(){const n=ZT();if(!n)return;const e=n.srcObject;e&&(e.getTracks().forEach(t=>t.stop()),n.srcObject=null)}async function PL(){tB(),f0=f0==="user"?"environment":"user",await eB()}function Sd(){return f0}/**
 * @license
 * Copyright 2010-2025 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const VC="180",LL=0,LS=1,OL=2,nB=1,QL=2,Za=3,ec=0,Li=1,zo=2,Yl=0,Nd=1,OS=2,QS=3,US=4,UL=5,jc=100,zL=101,GL=102,VL=103,WL=104,HL=200,qL=201,YL=202,jL=203,$b=204,Pb=205,XL=206,KL=207,JL=208,ZL=209,e4=210,t4=211,n4=212,s4=213,r4=214,Lb=0,Ob=1,Qb=2,Ld=3,Ub=4,zb=5,Gb=6,Vb=7,sB=0,i4=1,o4=2,jl=0,a4=1,l4=2,c4=3,u4=4,h4=5,d4=6,f4=7,rB=300,Od=301,Qd=302,Wb=303,Hb=304,ex=306,qb=1e3,ru=1001,Yb=1002,Dr=1003,p4=1004,jA=1005,Pi=1006,r2=1007,iu=1008,m4=1008,Ui=1009,iB=1010,oB=1011,Cm=1012,WC=1013,Oi=1014,ol=1015,ng=1016,HC=1017,qC=1018,Im=1020,aB=35902,lB=35899,cB=1021,uB=1022,Er=1023,wm=1026,Sm=1027,hB=1028,YC=1029,dB=1030,tx=1031,ll=1033,Vy=33776,Wy=33777,Hy=33778,qy=33779,jb=35840,Xb=35841,Kb=35842,Jb=35843,Zb=36196,ev=37492,tv=37496,nv=37808,sv=37809,rv=37810,iv=37811,ov=37812,av=37813,lv=37814,cv=37815,uv=37816,hv=37817,dv=37818,fv=37819,pv=37820,mv=37821,gv=36492,Av=36494,yv=36495,xv=36283,bv=36284,vv=36285,Cv=36286,g4=3200,A4=3201,fB=0,y4=1,Gl="",jr="srgb",Ud="srgb-linear",p0="linear",rs="srgb",td=7680,zS=519,x4=512,b4=513,v4=514,pB=515,C4=516,I4=517,w4=518,S4=519,GS=35044,E4=35048,m0="300 es",ba=2e3,g0=2001;class cf{addEventListener(e,t){this._listeners===void 0&&(this._listeners={});const s=this._listeners;s[e]===void 0&&(s[e]=[]),s[e].indexOf(t)===-1&&s[e].push(t)}hasEventListener(e,t){const s=this._listeners;return s===void 0?!1:s[e]!==void 0&&s[e].indexOf(t)!==-1}removeEventListener(e,t){const s=this._listeners;if(s===void 0)return;const r=s[e];if(r!==void 0){const i=r.indexOf(t);i!==-1&&r.splice(i,1)}}dispatchEvent(e){const t=this._listeners;if(t===void 0)return;const s=t[e.type];if(s!==void 0){e.target=this;const r=s.slice(0);for(let i=0,o=r.length;i<o;i++)r[i].call(this,e);e.target=null}}}const Gr=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];let VS=1234567;const dm=Math.PI/180,Em=180/Math.PI;function uf(){const n=Math.random()*4294967295|0,e=Math.random()*4294967295|0,t=Math.random()*4294967295|0,s=Math.random()*4294967295|0;return(Gr[n&255]+Gr[n>>8&255]+Gr[n>>16&255]+Gr[n>>24&255]+"-"+Gr[e&255]+Gr[e>>8&255]+"-"+Gr[e>>16&15|64]+Gr[e>>24&255]+"-"+Gr[t&63|128]+Gr[t>>8&255]+"-"+Gr[t>>16&255]+Gr[t>>24&255]+Gr[s&255]+Gr[s>>8&255]+Gr[s>>16&255]+Gr[s>>24&255]).toLowerCase()}function kn(n,e,t){return Math.max(e,Math.min(t,n))}function jC(n,e){return(n%e+e)%e}function _4(n,e,t,s,r){return s+(n-e)*(r-s)/(t-e)}function T4(n,e,t){return n!==e?(t-n)/(e-n):0}function fm(n,e,t){return(1-t)*n+t*e}function B4(n,e,t,s){return fm(n,e,1-Math.exp(-t*s))}function k4(n,e=1){return e-Math.abs(jC(n,e*2)-e)}function N4(n,e,t){return n<=e?0:n>=t?1:(n=(n-e)/(t-e),n*n*(3-2*n))}function R4(n,e,t){return n<=e?0:n>=t?1:(n=(n-e)/(t-e),n*n*n*(n*(n*6-15)+10))}function M4(n,e){return n+Math.floor(Math.random()*(e-n+1))}function D4(n,e){return n+Math.random()*(e-n)}function F4(n){return n*(.5-Math.random())}function $4(n){n!==void 0&&(VS=n);let e=VS+=1831565813;return e=Math.imul(e^e>>>15,e|1),e^=e+Math.imul(e^e>>>7,e|61),((e^e>>>14)>>>0)/4294967296}function P4(n){return n*dm}function L4(n){return n*Em}function O4(n){return(n&n-1)===0&&n!==0}function Q4(n){return Math.pow(2,Math.ceil(Math.log(n)/Math.LN2))}function U4(n){return Math.pow(2,Math.floor(Math.log(n)/Math.LN2))}function z4(n,e,t,s,r){const i=Math.cos,o=Math.sin,a=i(t/2),l=o(t/2),c=i((e+s)/2),u=o((e+s)/2),h=i((e-s)/2),d=o((e-s)/2),f=i((s-e)/2),p=o((s-e)/2);switch(r){case"XYX":n.set(a*u,l*h,l*d,a*c);break;case"YZY":n.set(l*d,a*u,l*h,a*c);break;case"ZXZ":n.set(l*h,l*d,a*u,a*c);break;case"XZX":n.set(a*u,l*p,l*f,a*c);break;case"YXY":n.set(l*f,a*u,l*p,a*c);break;case"ZYZ":n.set(l*p,l*f,a*u,a*c);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+r)}}function Ed(n,e){switch(e.constructor){case Float32Array:return n;case Uint32Array:return n/4294967295;case Uint16Array:return n/65535;case Uint8Array:return n/255;case Int32Array:return Math.max(n/2147483647,-1);case Int16Array:return Math.max(n/32767,-1);case Int8Array:return Math.max(n/127,-1);default:throw new Error("Invalid component type.")}}function hi(n,e){switch(e.constructor){case Float32Array:return n;case Uint32Array:return Math.round(n*4294967295);case Uint16Array:return Math.round(n*65535);case Uint8Array:return Math.round(n*255);case Int32Array:return Math.round(n*2147483647);case Int16Array:return Math.round(n*32767);case Int8Array:return Math.round(n*127);default:throw new Error("Invalid component type.")}}const XC={DEG2RAD:dm,RAD2DEG:Em,generateUUID:uf,clamp:kn,euclideanModulo:jC,mapLinear:_4,inverseLerp:T4,lerp:fm,damp:B4,pingpong:k4,smoothstep:N4,smootherstep:R4,randInt:M4,randFloat:D4,randFloatSpread:F4,seededRandom:$4,degToRad:P4,radToDeg:L4,isPowerOfTwo:O4,ceilPowerOfTwo:Q4,floorPowerOfTwo:U4,setQuaternionFromProperEuler:z4,normalize:hi,denormalize:Ed};class En{constructor(e=0,t=0){En.prototype.isVector2=!0,this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e){return this.x+=e.x,this.y+=e.y,this}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,s=this.y,r=e.elements;return this.x=r[0]*t+r[3]*s+r[6],this.y=r[1]*t+r[4]*s+r[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=kn(this.x,e.x,t.x),this.y=kn(this.y,e.y,t.y),this}clampScalar(e,t){return this.x=kn(this.x,e,t),this.y=kn(this.y,e,t),this}clampLength(e,t){const s=this.length();return this.divideScalar(s||1).multiplyScalar(kn(s,e,t))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const s=this.dot(e)/t;return Math.acos(kn(s,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,s=this.y-e.y;return t*t+s*s}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,s){return this.x=e.x+(t.x-e.x)*s,this.y=e.y+(t.y-e.y)*s,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const s=Math.cos(t),r=Math.sin(t),i=this.x-e.x,o=this.y-e.y;return this.x=i*s-o*r+e.x,this.y=i*r+o*s+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class fr{constructor(e=0,t=0,s=0,r=1){this.isQuaternion=!0,this._x=e,this._y=t,this._z=s,this._w=r}static slerpFlat(e,t,s,r,i,o,a){let l=s[r+0],c=s[r+1],u=s[r+2],h=s[r+3];const d=i[o+0],f=i[o+1],p=i[o+2],A=i[o+3];if(a===0){e[t+0]=l,e[t+1]=c,e[t+2]=u,e[t+3]=h;return}if(a===1){e[t+0]=d,e[t+1]=f,e[t+2]=p,e[t+3]=A;return}if(h!==A||l!==d||c!==f||u!==p){let m=1-a;const g=l*d+c*f+u*p+h*A,x=g>=0?1:-1,v=1-g*g;if(v>Number.EPSILON){const w=Math.sqrt(v),_=Math.atan2(w,g*x);m=Math.sin(m*_)/w,a=Math.sin(a*_)/w}const b=a*x;if(l=l*m+d*b,c=c*m+f*b,u=u*m+p*b,h=h*m+A*b,m===1-a){const w=1/Math.sqrt(l*l+c*c+u*u+h*h);l*=w,c*=w,u*=w,h*=w}}e[t]=l,e[t+1]=c,e[t+2]=u,e[t+3]=h}static multiplyQuaternionsFlat(e,t,s,r,i,o){const a=s[r],l=s[r+1],c=s[r+2],u=s[r+3],h=i[o],d=i[o+1],f=i[o+2],p=i[o+3];return e[t]=a*p+u*h+l*f-c*d,e[t+1]=l*p+u*d+c*h-a*f,e[t+2]=c*p+u*f+a*d-l*h,e[t+3]=u*p-a*h-l*d-c*f,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,s,r){return this._x=e,this._y=t,this._z=s,this._w=r,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t=!0){const s=e._x,r=e._y,i=e._z,o=e._order,a=Math.cos,l=Math.sin,c=a(s/2),u=a(r/2),h=a(i/2),d=l(s/2),f=l(r/2),p=l(i/2);switch(o){case"XYZ":this._x=d*u*h+c*f*p,this._y=c*f*h-d*u*p,this._z=c*u*p+d*f*h,this._w=c*u*h-d*f*p;break;case"YXZ":this._x=d*u*h+c*f*p,this._y=c*f*h-d*u*p,this._z=c*u*p-d*f*h,this._w=c*u*h+d*f*p;break;case"ZXY":this._x=d*u*h-c*f*p,this._y=c*f*h+d*u*p,this._z=c*u*p+d*f*h,this._w=c*u*h-d*f*p;break;case"ZYX":this._x=d*u*h-c*f*p,this._y=c*f*h+d*u*p,this._z=c*u*p-d*f*h,this._w=c*u*h+d*f*p;break;case"YZX":this._x=d*u*h+c*f*p,this._y=c*f*h+d*u*p,this._z=c*u*p-d*f*h,this._w=c*u*h-d*f*p;break;case"XZY":this._x=d*u*h-c*f*p,this._y=c*f*h-d*u*p,this._z=c*u*p+d*f*h,this._w=c*u*h+d*f*p;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+o)}return t===!0&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const s=t/2,r=Math.sin(s);return this._x=e.x*r,this._y=e.y*r,this._z=e.z*r,this._w=Math.cos(s),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,s=t[0],r=t[4],i=t[8],o=t[1],a=t[5],l=t[9],c=t[2],u=t[6],h=t[10],d=s+a+h;if(d>0){const f=.5/Math.sqrt(d+1);this._w=.25/f,this._x=(u-l)*f,this._y=(i-c)*f,this._z=(o-r)*f}else if(s>a&&s>h){const f=2*Math.sqrt(1+s-a-h);this._w=(u-l)/f,this._x=.25*f,this._y=(r+o)/f,this._z=(i+c)/f}else if(a>h){const f=2*Math.sqrt(1+a-s-h);this._w=(i-c)/f,this._x=(r+o)/f,this._y=.25*f,this._z=(l+u)/f}else{const f=2*Math.sqrt(1+h-s-a);this._w=(o-r)/f,this._x=(i+c)/f,this._y=(l+u)/f,this._z=.25*f}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let s=e.dot(t)+1;return s<1e-8?(s=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=s):(this._x=0,this._y=-e.z,this._z=e.y,this._w=s)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=s),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(kn(this.dot(e),-1,1)))}rotateTowards(e,t){const s=this.angleTo(e);if(s===0)return this;const r=Math.min(1,t/s);return this.slerp(e,r),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return e===0?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e){return this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const s=e._x,r=e._y,i=e._z,o=e._w,a=t._x,l=t._y,c=t._z,u=t._w;return this._x=s*u+o*a+r*c-i*l,this._y=r*u+o*l+i*a-s*c,this._z=i*u+o*c+s*l-r*a,this._w=o*u-s*a-r*l-i*c,this._onChangeCallback(),this}slerp(e,t){if(t===0)return this;if(t===1)return this.copy(e);const s=this._x,r=this._y,i=this._z,o=this._w;let a=o*e._w+s*e._x+r*e._y+i*e._z;if(a<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,a=-a):this.copy(e),a>=1)return this._w=o,this._x=s,this._y=r,this._z=i,this;const l=1-a*a;if(l<=Number.EPSILON){const f=1-t;return this._w=f*o+t*this._w,this._x=f*s+t*this._x,this._y=f*r+t*this._y,this._z=f*i+t*this._z,this.normalize(),this}const c=Math.sqrt(l),u=Math.atan2(c,a),h=Math.sin((1-t)*u)/c,d=Math.sin(t*u)/c;return this._w=o*h+this._w*d,this._x=s*h+this._x*d,this._y=r*h+this._y*d,this._z=i*h+this._z*d,this._onChangeCallback(),this}slerpQuaternions(e,t,s){return this.copy(e).slerp(t,s)}random(){const e=2*Math.PI*Math.random(),t=2*Math.PI*Math.random(),s=Math.random(),r=Math.sqrt(1-s),i=Math.sqrt(s);return this.set(r*Math.sin(e),r*Math.cos(e),i*Math.sin(t),i*Math.cos(t))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this._onChangeCallback(),this}toJSON(){return this.toArray()}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class Ae{constructor(e=0,t=0,s=0){Ae.prototype.isVector3=!0,this.x=e,this.y=t,this.z=s}set(e,t,s){return s===void 0&&(s=this.z),this.x=e,this.y=t,this.z=s,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return this.applyQuaternion(WS.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(WS.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,s=this.y,r=this.z,i=e.elements;return this.x=i[0]*t+i[3]*s+i[6]*r,this.y=i[1]*t+i[4]*s+i[7]*r,this.z=i[2]*t+i[5]*s+i[8]*r,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,s=this.y,r=this.z,i=e.elements,o=1/(i[3]*t+i[7]*s+i[11]*r+i[15]);return this.x=(i[0]*t+i[4]*s+i[8]*r+i[12])*o,this.y=(i[1]*t+i[5]*s+i[9]*r+i[13])*o,this.z=(i[2]*t+i[6]*s+i[10]*r+i[14])*o,this}applyQuaternion(e){const t=this.x,s=this.y,r=this.z,i=e.x,o=e.y,a=e.z,l=e.w,c=2*(o*r-a*s),u=2*(a*t-i*r),h=2*(i*s-o*t);return this.x=t+l*c+o*h-a*u,this.y=s+l*u+a*c-i*h,this.z=r+l*h+i*u-o*c,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,s=this.y,r=this.z,i=e.elements;return this.x=i[0]*t+i[4]*s+i[8]*r,this.y=i[1]*t+i[5]*s+i[9]*r,this.z=i[2]*t+i[6]*s+i[10]*r,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=kn(this.x,e.x,t.x),this.y=kn(this.y,e.y,t.y),this.z=kn(this.z,e.z,t.z),this}clampScalar(e,t){return this.x=kn(this.x,e,t),this.y=kn(this.y,e,t),this.z=kn(this.z,e,t),this}clampLength(e,t){const s=this.length();return this.divideScalar(s||1).multiplyScalar(kn(s,e,t))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,s){return this.x=e.x+(t.x-e.x)*s,this.y=e.y+(t.y-e.y)*s,this.z=e.z+(t.z-e.z)*s,this}cross(e){return this.crossVectors(this,e)}crossVectors(e,t){const s=e.x,r=e.y,i=e.z,o=t.x,a=t.y,l=t.z;return this.x=r*l-i*a,this.y=i*o-s*l,this.z=s*a-r*o,this}projectOnVector(e){const t=e.lengthSq();if(t===0)return this.set(0,0,0);const s=e.dot(this)/t;return this.copy(e).multiplyScalar(s)}projectOnPlane(e){return i2.copy(this).projectOnVector(e),this.sub(i2)}reflect(e){return this.sub(i2.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const s=this.dot(e)/t;return Math.acos(kn(s,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,s=this.y-e.y,r=this.z-e.z;return t*t+s*s+r*r}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,s){const r=Math.sin(t)*e;return this.x=r*Math.sin(s),this.y=Math.cos(t)*e,this.z=r*Math.cos(s),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,s){return this.x=e*Math.sin(t),this.y=s,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),s=this.setFromMatrixColumn(e,1).length(),r=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=s,this.z=r,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,t*4)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,t*3)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}setFromColor(e){return this.x=e.r,this.y=e.g,this.z=e.b,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=Math.random()*Math.PI*2,t=Math.random()*2-1,s=Math.sqrt(1-t*t);return this.x=s*Math.cos(e),this.y=t,this.z=s*Math.sin(e),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const i2=new Ae,WS=new fr;class gn{constructor(e,t,s,r,i,o,a,l,c){gn.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],e!==void 0&&this.set(e,t,s,r,i,o,a,l,c)}set(e,t,s,r,i,o,a,l,c){const u=this.elements;return u[0]=e,u[1]=r,u[2]=a,u[3]=t,u[4]=i,u[5]=l,u[6]=s,u[7]=o,u[8]=c,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const t=this.elements,s=e.elements;return t[0]=s[0],t[1]=s[1],t[2]=s[2],t[3]=s[3],t[4]=s[4],t[5]=s[5],t[6]=s[6],t[7]=s[7],t[8]=s[8],this}extractBasis(e,t,s){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),s.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const s=e.elements,r=t.elements,i=this.elements,o=s[0],a=s[3],l=s[6],c=s[1],u=s[4],h=s[7],d=s[2],f=s[5],p=s[8],A=r[0],m=r[3],g=r[6],x=r[1],v=r[4],b=r[7],w=r[2],_=r[5],N=r[8];return i[0]=o*A+a*x+l*w,i[3]=o*m+a*v+l*_,i[6]=o*g+a*b+l*N,i[1]=c*A+u*x+h*w,i[4]=c*m+u*v+h*_,i[7]=c*g+u*b+h*N,i[2]=d*A+f*x+p*w,i[5]=d*m+f*v+p*_,i[8]=d*g+f*b+p*N,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],s=e[1],r=e[2],i=e[3],o=e[4],a=e[5],l=e[6],c=e[7],u=e[8];return t*o*u-t*a*c-s*i*u+s*a*l+r*i*c-r*o*l}invert(){const e=this.elements,t=e[0],s=e[1],r=e[2],i=e[3],o=e[4],a=e[5],l=e[6],c=e[7],u=e[8],h=u*o-a*c,d=a*l-u*i,f=c*i-o*l,p=t*h+s*d+r*f;if(p===0)return this.set(0,0,0,0,0,0,0,0,0);const A=1/p;return e[0]=h*A,e[1]=(r*c-u*s)*A,e[2]=(a*s-r*o)*A,e[3]=d*A,e[4]=(u*t-r*l)*A,e[5]=(r*i-a*t)*A,e[6]=f*A,e[7]=(s*l-c*t)*A,e[8]=(o*t-s*i)*A,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,s,r,i,o,a){const l=Math.cos(i),c=Math.sin(i);return this.set(s*l,s*c,-s*(l*o+c*a)+o+e,-r*c,r*l,-r*(-c*o+l*a)+a+t,0,0,1),this}scale(e,t){return this.premultiply(o2.makeScale(e,t)),this}rotate(e){return this.premultiply(o2.makeRotation(-e)),this}translate(e,t){return this.premultiply(o2.makeTranslation(e,t)),this}makeTranslation(e,t){return e.isVector2?this.set(1,0,e.x,0,1,e.y,0,0,1):this.set(1,0,e,0,1,t,0,0,1),this}makeRotation(e){const t=Math.cos(e),s=Math.sin(e);return this.set(t,-s,0,s,t,0,0,0,1),this}makeScale(e,t){return this.set(e,0,0,0,t,0,0,0,1),this}equals(e){const t=this.elements,s=e.elements;for(let r=0;r<9;r++)if(t[r]!==s[r])return!1;return!0}fromArray(e,t=0){for(let s=0;s<9;s++)this.elements[s]=e[s+t];return this}toArray(e=[],t=0){const s=this.elements;return e[t]=s[0],e[t+1]=s[1],e[t+2]=s[2],e[t+3]=s[3],e[t+4]=s[4],e[t+5]=s[5],e[t+6]=s[6],e[t+7]=s[7],e[t+8]=s[8],e}clone(){return new this.constructor().fromArray(this.elements)}}const o2=new gn;function mB(n){for(let e=n.length-1;e>=0;--e)if(n[e]>=65535)return!0;return!1}function A0(n){return document.createElementNS("http://www.w3.org/1999/xhtml",n)}function G4(){const n=A0("canvas");return n.style.display="block",n}const HS={};function _m(n){n in HS||(HS[n]=!0,console.warn(n))}function V4(n,e,t){return new Promise(function(s,r){function i(){switch(n.clientWaitSync(e,n.SYNC_FLUSH_COMMANDS_BIT,0)){case n.WAIT_FAILED:r();break;case n.TIMEOUT_EXPIRED:setTimeout(i,t);break;default:s()}}setTimeout(i,t)})}const qS=new gn().set(.4123908,.3575843,.1804808,.212639,.7151687,.0721923,.0193308,.1191948,.9505322),YS=new gn().set(3.2409699,-1.5373832,-.4986108,-.9692436,1.8759675,.0415551,.0556301,-.203977,1.0569715);function W4(){const n={enabled:!0,workingColorSpace:Ud,spaces:{},convert:function(r,i,o){return this.enabled===!1||i===o||!i||!o||(this.spaces[i].transfer===rs&&(r.r=cl(r.r),r.g=cl(r.g),r.b=cl(r.b)),this.spaces[i].primaries!==this.spaces[o].primaries&&(r.applyMatrix3(this.spaces[i].toXYZ),r.applyMatrix3(this.spaces[o].fromXYZ)),this.spaces[o].transfer===rs&&(r.r=Rd(r.r),r.g=Rd(r.g),r.b=Rd(r.b))),r},workingToColorSpace:function(r,i){return this.convert(r,this.workingColorSpace,i)},colorSpaceToWorking:function(r,i){return this.convert(r,i,this.workingColorSpace)},getPrimaries:function(r){return this.spaces[r].primaries},getTransfer:function(r){return r===Gl?p0:this.spaces[r].transfer},getToneMappingMode:function(r){return this.spaces[r].outputColorSpaceConfig.toneMappingMode||"standard"},getLuminanceCoefficients:function(r,i=this.workingColorSpace){return r.fromArray(this.spaces[i].luminanceCoefficients)},define:function(r){Object.assign(this.spaces,r)},_getMatrix:function(r,i,o){return r.copy(this.spaces[i].toXYZ).multiply(this.spaces[o].fromXYZ)},_getDrawingBufferColorSpace:function(r){return this.spaces[r].outputColorSpaceConfig.drawingBufferColorSpace},_getUnpackColorSpace:function(r=this.workingColorSpace){return this.spaces[r].workingColorSpaceConfig.unpackColorSpace},fromWorkingColorSpace:function(r,i){return _m("THREE.ColorManagement: .fromWorkingColorSpace() has been renamed to .workingToColorSpace()."),n.workingToColorSpace(r,i)},toWorkingColorSpace:function(r,i){return _m("THREE.ColorManagement: .toWorkingColorSpace() has been renamed to .colorSpaceToWorking()."),n.colorSpaceToWorking(r,i)}},e=[.64,.33,.3,.6,.15,.06],t=[.2126,.7152,.0722],s=[.3127,.329];return n.define({[Ud]:{primaries:e,whitePoint:s,transfer:p0,toXYZ:qS,fromXYZ:YS,luminanceCoefficients:t,workingColorSpaceConfig:{unpackColorSpace:jr},outputColorSpaceConfig:{drawingBufferColorSpace:jr}},[jr]:{primaries:e,whitePoint:s,transfer:rs,toXYZ:qS,fromXYZ:YS,luminanceCoefficients:t,outputColorSpaceConfig:{drawingBufferColorSpace:jr}}}),n}const Gn=W4();function cl(n){return n<.04045?n*.0773993808:Math.pow(n*.9478672986+.0521327014,2.4)}function Rd(n){return n<.0031308?n*12.92:1.055*Math.pow(n,.41666)-.055}let nd;class H4{static getDataURL(e,t="image/png"){if(/^data:/i.test(e.src)||typeof HTMLCanvasElement>"u")return e.src;let s;if(e instanceof HTMLCanvasElement)s=e;else{nd===void 0&&(nd=A0("canvas")),nd.width=e.width,nd.height=e.height;const r=nd.getContext("2d");e instanceof ImageData?r.putImageData(e,0,0):r.drawImage(e,0,0,e.width,e.height),s=nd}return s.toDataURL(t)}static sRGBToLinear(e){if(typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&e instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&e instanceof ImageBitmap){const t=A0("canvas");t.width=e.width,t.height=e.height;const s=t.getContext("2d");s.drawImage(e,0,0,e.width,e.height);const r=s.getImageData(0,0,e.width,e.height),i=r.data;for(let o=0;o<i.length;o++)i[o]=cl(i[o]/255)*255;return s.putImageData(r,0,0),t}else if(e.data){const t=e.data.slice(0);for(let s=0;s<t.length;s++)t instanceof Uint8Array||t instanceof Uint8ClampedArray?t[s]=Math.floor(cl(t[s]/255)*255):t[s]=cl(t[s]);return{data:t,width:e.width,height:e.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}}let q4=0;class KC{constructor(e=null){this.isSource=!0,Object.defineProperty(this,"id",{value:q4++}),this.uuid=uf(),this.data=e,this.dataReady=!0,this.version=0}getSize(e){const t=this.data;return typeof HTMLVideoElement<"u"&&t instanceof HTMLVideoElement?e.set(t.videoWidth,t.videoHeight,0):t instanceof VideoFrame?e.set(t.displayHeight,t.displayWidth,0):t!==null?e.set(t.width,t.height,t.depth||0):e.set(0,0,0),e}set needsUpdate(e){e===!0&&this.version++}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.images[this.uuid]!==void 0)return e.images[this.uuid];const s={uuid:this.uuid,url:""},r=this.data;if(r!==null){let i;if(Array.isArray(r)){i=[];for(let o=0,a=r.length;o<a;o++)r[o].isDataTexture?i.push(a2(r[o].image)):i.push(a2(r[o]))}else i=a2(r);s.url=i}return t||(e.images[this.uuid]=s),s}}function a2(n){return typeof HTMLImageElement<"u"&&n instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&n instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&n instanceof ImageBitmap?H4.getDataURL(n):n.data?{data:Array.from(n.data),width:n.width,height:n.height,type:n.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let Y4=0;const l2=new Ae;class _r extends cf{constructor(e=_r.DEFAULT_IMAGE,t=_r.DEFAULT_MAPPING,s=ru,r=ru,i=Pi,o=iu,a=Er,l=Ui,c=_r.DEFAULT_ANISOTROPY,u=Gl){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:Y4++}),this.uuid=uf(),this.name="",this.source=new KC(e),this.mipmaps=[],this.mapping=t,this.channel=0,this.wrapS=s,this.wrapT=r,this.magFilter=i,this.minFilter=o,this.anisotropy=c,this.format=a,this.internalFormat=null,this.type=l,this.offset=new En(0,0),this.repeat=new En(1,1),this.center=new En(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new gn,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.colorSpace=u,this.userData={},this.updateRanges=[],this.version=0,this.onUpdate=null,this.renderTarget=null,this.isRenderTargetTexture=!1,this.isArrayTexture=!!(e&&e.depth&&e.depth>1),this.pmremVersion=0}get width(){return this.source.getSize(l2).x}get height(){return this.source.getSize(l2).y}get depth(){return this.source.getSize(l2).z}get image(){return this.source.data}set image(e=null){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.channel=e.channel,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.colorSpace=e.colorSpace,this.renderTarget=e.renderTarget,this.isRenderTargetTexture=e.isRenderTargetTexture,this.isArrayTexture=e.isArrayTexture,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}setValues(e){for(const t in e){const s=e[t];if(s===void 0){console.warn(`THREE.Texture.setValues(): parameter '${t}' has value of undefined.`);continue}const r=this[t];if(r===void 0){console.warn(`THREE.Texture.setValues(): property '${t}' does not exist.`);continue}r&&s&&r.isVector2&&s.isVector2||r&&s&&r.isVector3&&s.isVector3||r&&s&&r.isMatrix3&&s.isMatrix3?r.copy(s):this[t]=s}}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.textures[this.uuid]!==void 0)return e.textures[this.uuid];const s={metadata:{version:4.7,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(s.userData=this.userData),t||(e.textures[this.uuid]=s),s}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==rB)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case qb:e.x=e.x-Math.floor(e.x);break;case ru:e.x=e.x<0?0:1;break;case Yb:Math.abs(Math.floor(e.x)%2)===1?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x);break}if(e.y<0||e.y>1)switch(this.wrapT){case qb:e.y=e.y-Math.floor(e.y);break;case ru:e.y=e.y<0?0:1;break;case Yb:Math.abs(Math.floor(e.y)%2)===1?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y);break}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){e===!0&&(this.version++,this.source.needsUpdate=!0)}set needsPMREMUpdate(e){e===!0&&this.pmremVersion++}}_r.DEFAULT_IMAGE=null;_r.DEFAULT_MAPPING=rB;_r.DEFAULT_ANISOTROPY=1;class Vn{constructor(e=0,t=0,s=0,r=1){Vn.prototype.isVector4=!0,this.x=e,this.y=t,this.z=s,this.w=r}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,s,r){return this.x=e,this.y=t,this.z=s,this.w=r,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w!==void 0?e.w:1,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const t=this.x,s=this.y,r=this.z,i=this.w,o=e.elements;return this.x=o[0]*t+o[4]*s+o[8]*r+o[12]*i,this.y=o[1]*t+o[5]*s+o[9]*r+o[13]*i,this.z=o[2]*t+o[6]*s+o[10]*r+o[14]*i,this.w=o[3]*t+o[7]*s+o[11]*r+o[15]*i,this}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this.w/=e.w,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,s,r,i;const l=e.elements,c=l[0],u=l[4],h=l[8],d=l[1],f=l[5],p=l[9],A=l[2],m=l[6],g=l[10];if(Math.abs(u-d)<.01&&Math.abs(h-A)<.01&&Math.abs(p-m)<.01){if(Math.abs(u+d)<.1&&Math.abs(h+A)<.1&&Math.abs(p+m)<.1&&Math.abs(c+f+g-3)<.1)return this.set(1,0,0,0),this;t=Math.PI;const v=(c+1)/2,b=(f+1)/2,w=(g+1)/2,_=(u+d)/4,N=(h+A)/4,M=(p+m)/4;return v>b&&v>w?v<.01?(s=0,r=.707106781,i=.707106781):(s=Math.sqrt(v),r=_/s,i=N/s):b>w?b<.01?(s=.707106781,r=0,i=.707106781):(r=Math.sqrt(b),s=_/r,i=M/r):w<.01?(s=.707106781,r=.707106781,i=0):(i=Math.sqrt(w),s=N/i,r=M/i),this.set(s,r,i,t),this}let x=Math.sqrt((m-p)*(m-p)+(h-A)*(h-A)+(d-u)*(d-u));return Math.abs(x)<.001&&(x=1),this.x=(m-p)/x,this.y=(h-A)/x,this.z=(d-u)/x,this.w=Math.acos((c+f+g-1)/2),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this.w=t[15],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=kn(this.x,e.x,t.x),this.y=kn(this.y,e.y,t.y),this.z=kn(this.z,e.z,t.z),this.w=kn(this.w,e.w,t.w),this}clampScalar(e,t){return this.x=kn(this.x,e,t),this.y=kn(this.y,e,t),this.z=kn(this.z,e,t),this.w=kn(this.w,e,t),this}clampLength(e,t){const s=this.length();return this.divideScalar(s||1).multiplyScalar(kn(s,e,t))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this.w=Math.trunc(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,s){return this.x=e.x+(t.x-e.x)*s,this.y=e.y+(t.y-e.y)*s,this.z=e.z+(t.z-e.z)*s,this.w=e.w+(t.w-e.w)*s,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class j4 extends cf{constructor(e=1,t=1,s={}){super(),s=Object.assign({generateMipmaps:!1,internalFormat:null,minFilter:Pi,depthBuffer:!0,stencilBuffer:!1,resolveDepthBuffer:!0,resolveStencilBuffer:!0,depthTexture:null,samples:0,count:1,depth:1,multiview:!1},s),this.isRenderTarget=!0,this.width=e,this.height=t,this.depth=s.depth,this.scissor=new Vn(0,0,e,t),this.scissorTest=!1,this.viewport=new Vn(0,0,e,t);const r={width:e,height:t,depth:s.depth},i=new _r(r);this.textures=[];const o=s.count;for(let a=0;a<o;a++)this.textures[a]=i.clone(),this.textures[a].isRenderTargetTexture=!0,this.textures[a].renderTarget=this;this._setTextureOptions(s),this.depthBuffer=s.depthBuffer,this.stencilBuffer=s.stencilBuffer,this.resolveDepthBuffer=s.resolveDepthBuffer,this.resolveStencilBuffer=s.resolveStencilBuffer,this._depthTexture=null,this.depthTexture=s.depthTexture,this.samples=s.samples,this.multiview=s.multiview}_setTextureOptions(e={}){const t={minFilter:Pi,generateMipmaps:!1,flipY:!1,internalFormat:null};e.mapping!==void 0&&(t.mapping=e.mapping),e.wrapS!==void 0&&(t.wrapS=e.wrapS),e.wrapT!==void 0&&(t.wrapT=e.wrapT),e.wrapR!==void 0&&(t.wrapR=e.wrapR),e.magFilter!==void 0&&(t.magFilter=e.magFilter),e.minFilter!==void 0&&(t.minFilter=e.minFilter),e.format!==void 0&&(t.format=e.format),e.type!==void 0&&(t.type=e.type),e.anisotropy!==void 0&&(t.anisotropy=e.anisotropy),e.colorSpace!==void 0&&(t.colorSpace=e.colorSpace),e.flipY!==void 0&&(t.flipY=e.flipY),e.generateMipmaps!==void 0&&(t.generateMipmaps=e.generateMipmaps),e.internalFormat!==void 0&&(t.internalFormat=e.internalFormat);for(let s=0;s<this.textures.length;s++)this.textures[s].setValues(t)}get texture(){return this.textures[0]}set texture(e){this.textures[0]=e}set depthTexture(e){this._depthTexture!==null&&(this._depthTexture.renderTarget=null),e!==null&&(e.renderTarget=this),this._depthTexture=e}get depthTexture(){return this._depthTexture}setSize(e,t,s=1){if(this.width!==e||this.height!==t||this.depth!==s){this.width=e,this.height=t,this.depth=s;for(let r=0,i=this.textures.length;r<i;r++)this.textures[r].image.width=e,this.textures[r].image.height=t,this.textures[r].image.depth=s,this.textures[r].isArrayTexture=this.textures[r].image.depth>1;this.dispose()}this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return new this.constructor().copy(this)}copy(e){this.width=e.width,this.height=e.height,this.depth=e.depth,this.scissor.copy(e.scissor),this.scissorTest=e.scissorTest,this.viewport.copy(e.viewport),this.textures.length=0;for(let t=0,s=e.textures.length;t<s;t++){this.textures[t]=e.textures[t].clone(),this.textures[t].isRenderTargetTexture=!0,this.textures[t].renderTarget=this;const r=Object.assign({},e.textures[t].image);this.textures[t].source=new KC(r)}return this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,this.resolveDepthBuffer=e.resolveDepthBuffer,this.resolveStencilBuffer=e.resolveStencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class _a extends j4{constructor(e=1,t=1,s={}){super(e,t,s),this.isWebGLRenderTarget=!0}}class Ca extends _r{constructor(e=null,t=1,s=1,r=1){super(null),this.isDataArrayTexture=!0,this.image={data:e,width:t,height:s,depth:r},this.magFilter=Dr,this.minFilter=Dr,this.wrapR=ru,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.layerUpdates=new Set}addLayerUpdate(e){this.layerUpdates.add(e)}clearLayerUpdates(){this.layerUpdates.clear()}}class gB extends _a{constructor(e=1,t=1,s=1,r={}){super(e,t,r),this.isWebGLArrayRenderTarget=!0,this.depth=s,this.texture=new Ca(null,e,t,s),this._setTextureOptions(r),this.texture.isRenderTargetTexture=!0}}class AB extends _r{constructor(e=null,t=1,s=1,r=1){super(null),this.isData3DTexture=!0,this.image={data:e,width:t,height:s,depth:r},this.magFilter=Dr,this.minFilter=Dr,this.wrapR=ru,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class fc{constructor(e=new Ae(1/0,1/0,1/0),t=new Ae(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){this.makeEmpty();for(let t=0,s=e.length;t<s;t+=3)this.expandByPoint(Ro.fromArray(e,t));return this}setFromBufferAttribute(e){this.makeEmpty();for(let t=0,s=e.count;t<s;t++)this.expandByPoint(Ro.fromBufferAttribute(e,t));return this}setFromPoints(e){this.makeEmpty();for(let t=0,s=e.length;t<s;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const s=Ro.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(s),this.max.copy(e).add(s),this}setFromObject(e,t=!1){return this.makeEmpty(),this.expandByObject(e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,t=!1){e.updateWorldMatrix(!1,!1);const s=e.geometry;if(s!==void 0){const i=s.getAttribute("position");if(t===!0&&i!==void 0&&e.isInstancedMesh!==!0)for(let o=0,a=i.count;o<a;o++)e.isMesh===!0?e.getVertexPosition(o,Ro):Ro.fromBufferAttribute(i,o),Ro.applyMatrix4(e.matrixWorld),this.expandByPoint(Ro);else e.boundingBox!==void 0?(e.boundingBox===null&&e.computeBoundingBox(),XA.copy(e.boundingBox)):(s.boundingBox===null&&s.computeBoundingBox(),XA.copy(s.boundingBox)),XA.applyMatrix4(e.matrixWorld),this.union(XA)}const r=e.children;for(let i=0,o=r.length;i<o;i++)this.expandByObject(r[i],t);return this}containsPoint(e){return e.x>=this.min.x&&e.x<=this.max.x&&e.y>=this.min.y&&e.y<=this.max.y&&e.z>=this.min.z&&e.z<=this.max.z}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return e.max.x>=this.min.x&&e.min.x<=this.max.x&&e.max.y>=this.min.y&&e.min.y<=this.max.y&&e.max.z>=this.min.z&&e.min.z<=this.max.z}intersectsSphere(e){return this.clampPoint(e.center,Ro),Ro.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,s;return e.normal.x>0?(t=e.normal.x*this.min.x,s=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,s=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,s+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,s+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,s+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,s+=e.normal.z*this.min.z),t<=-e.constant&&s>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(zp),KA.subVectors(this.max,zp),sd.subVectors(e.a,zp),rd.subVectors(e.b,zp),id.subVectors(e.c,zp),Dl.subVectors(rd,sd),Fl.subVectors(id,rd),Dc.subVectors(sd,id);let t=[0,-Dl.z,Dl.y,0,-Fl.z,Fl.y,0,-Dc.z,Dc.y,Dl.z,0,-Dl.x,Fl.z,0,-Fl.x,Dc.z,0,-Dc.x,-Dl.y,Dl.x,0,-Fl.y,Fl.x,0,-Dc.y,Dc.x,0];return!c2(t,sd,rd,id,KA)||(t=[1,0,0,0,1,0,0,0,1],!c2(t,sd,rd,id,KA))?!1:(JA.crossVectors(Dl,Fl),t=[JA.x,JA.y,JA.z],c2(t,sd,rd,id,KA))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,Ro).distanceTo(e)}getBoundingSphere(e){return this.isEmpty()?e.makeEmpty():(this.getCenter(e.center),e.radius=this.getSize(Ro).length()*.5),e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()?this:(qa[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),qa[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),qa[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),qa[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),qa[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),qa[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),qa[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),qa[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(qa),this)}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}toJSON(){return{min:this.min.toArray(),max:this.max.toArray()}}fromJSON(e){return this.min.fromArray(e.min),this.max.fromArray(e.max),this}}const qa=[new Ae,new Ae,new Ae,new Ae,new Ae,new Ae,new Ae,new Ae],Ro=new Ae,XA=new fc,sd=new Ae,rd=new Ae,id=new Ae,Dl=new Ae,Fl=new Ae,Dc=new Ae,zp=new Ae,KA=new Ae,JA=new Ae,Fc=new Ae;function c2(n,e,t,s,r){for(let i=0,o=n.length-3;i<=o;i+=3){Fc.fromArray(n,i);const a=r.x*Math.abs(Fc.x)+r.y*Math.abs(Fc.y)+r.z*Math.abs(Fc.z),l=e.dot(Fc),c=t.dot(Fc),u=s.dot(Fc);if(Math.max(-Math.max(l,c,u),Math.min(l,c,u))>a)return!1}return!0}const X4=new fc,Gp=new Ae,u2=new Ae;class JC{constructor(e=new Ae,t=-1){this.isSphere=!0,this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const s=this.center;t!==void 0?s.copy(t):X4.setFromPoints(e).getCenter(s);let r=0;for(let i=0,o=e.length;i<o;i++)r=Math.max(r,s.distanceToSquared(e[i]));return this.radius=Math.sqrt(r),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const s=this.center.distanceToSquared(e);return t.copy(e),s>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){if(this.isEmpty())return this.center.copy(e),this.radius=0,this;Gp.subVectors(e,this.center);const t=Gp.lengthSq();if(t>this.radius*this.radius){const s=Math.sqrt(t),r=(s-this.radius)*.5;this.center.addScaledVector(Gp,r/s),this.radius+=r}return this}union(e){return e.isEmpty()?this:this.isEmpty()?(this.copy(e),this):(this.center.equals(e.center)===!0?this.radius=Math.max(this.radius,e.radius):(u2.subVectors(e.center,this.center).setLength(e.radius),this.expandByPoint(Gp.copy(e.center).add(u2)),this.expandByPoint(Gp.copy(e.center).sub(u2))),this)}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}toJSON(){return{radius:this.radius,center:this.center.toArray()}}fromJSON(e){return this.radius=e.radius,this.center.fromArray(e.center),this}}const Ya=new Ae,h2=new Ae,ZA=new Ae,$l=new Ae,d2=new Ae,ey=new Ae,f2=new Ae;class K4{constructor(e=new Ae,t=new Ae(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.origin).addScaledVector(this.direction,e)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,Ya)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);const s=t.dot(this.direction);return s<0?t.copy(this.origin):t.copy(this.origin).addScaledVector(this.direction,s)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=Ya.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(Ya.copy(this.origin).addScaledVector(this.direction,t),Ya.distanceToSquared(e))}distanceSqToSegment(e,t,s,r){h2.copy(e).add(t).multiplyScalar(.5),ZA.copy(t).sub(e).normalize(),$l.copy(this.origin).sub(h2);const i=e.distanceTo(t)*.5,o=-this.direction.dot(ZA),a=$l.dot(this.direction),l=-$l.dot(ZA),c=$l.lengthSq(),u=Math.abs(1-o*o);let h,d,f,p;if(u>0)if(h=o*l-a,d=o*a-l,p=i*u,h>=0)if(d>=-p)if(d<=p){const A=1/u;h*=A,d*=A,f=h*(h+o*d+2*a)+d*(o*h+d+2*l)+c}else d=i,h=Math.max(0,-(o*d+a)),f=-h*h+d*(d+2*l)+c;else d=-i,h=Math.max(0,-(o*d+a)),f=-h*h+d*(d+2*l)+c;else d<=-p?(h=Math.max(0,-(-o*i+a)),d=h>0?-i:Math.min(Math.max(-i,-l),i),f=-h*h+d*(d+2*l)+c):d<=p?(h=0,d=Math.min(Math.max(-i,-l),i),f=d*(d+2*l)+c):(h=Math.max(0,-(o*i+a)),d=h>0?i:Math.min(Math.max(-i,-l),i),f=-h*h+d*(d+2*l)+c);else d=o>0?-i:i,h=Math.max(0,-(o*d+a)),f=-h*h+d*(d+2*l)+c;return s&&s.copy(this.origin).addScaledVector(this.direction,h),r&&r.copy(h2).addScaledVector(ZA,d),f}intersectSphere(e,t){Ya.subVectors(e.center,this.origin);const s=Ya.dot(this.direction),r=Ya.dot(Ya)-s*s,i=e.radius*e.radius;if(r>i)return null;const o=Math.sqrt(i-r),a=s-o,l=s+o;return l<0?null:a<0?this.at(l,t):this.at(a,t)}intersectsSphere(e){return e.radius<0?!1:this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(t===0)return e.distanceToPoint(this.origin)===0?0:null;const s=-(this.origin.dot(e.normal)+e.constant)/t;return s>=0?s:null}intersectPlane(e,t){const s=this.distanceToPlane(e);return s===null?null:this.at(s,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);return t===0||e.normal.dot(this.direction)*t<0}intersectBox(e,t){let s,r,i,o,a,l;const c=1/this.direction.x,u=1/this.direction.y,h=1/this.direction.z,d=this.origin;return c>=0?(s=(e.min.x-d.x)*c,r=(e.max.x-d.x)*c):(s=(e.max.x-d.x)*c,r=(e.min.x-d.x)*c),u>=0?(i=(e.min.y-d.y)*u,o=(e.max.y-d.y)*u):(i=(e.max.y-d.y)*u,o=(e.min.y-d.y)*u),s>o||i>r||((i>s||isNaN(s))&&(s=i),(o<r||isNaN(r))&&(r=o),h>=0?(a=(e.min.z-d.z)*h,l=(e.max.z-d.z)*h):(a=(e.max.z-d.z)*h,l=(e.min.z-d.z)*h),s>l||a>r)||((a>s||s!==s)&&(s=a),(l<r||r!==r)&&(r=l),r<0)?null:this.at(s>=0?s:r,t)}intersectsBox(e){return this.intersectBox(e,Ya)!==null}intersectTriangle(e,t,s,r,i){d2.subVectors(t,e),ey.subVectors(s,e),f2.crossVectors(d2,ey);let o=this.direction.dot(f2),a;if(o>0){if(r)return null;a=1}else if(o<0)a=-1,o=-o;else return null;$l.subVectors(this.origin,e);const l=a*this.direction.dot(ey.crossVectors($l,ey));if(l<0)return null;const c=a*this.direction.dot(d2.cross($l));if(c<0||l+c>o)return null;const u=-a*$l.dot(f2);return u<0?null:this.at(u/o,i)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class is{constructor(e,t,s,r,i,o,a,l,c,u,h,d,f,p,A,m){is.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],e!==void 0&&this.set(e,t,s,r,i,o,a,l,c,u,h,d,f,p,A,m)}set(e,t,s,r,i,o,a,l,c,u,h,d,f,p,A,m){const g=this.elements;return g[0]=e,g[4]=t,g[8]=s,g[12]=r,g[1]=i,g[5]=o,g[9]=a,g[13]=l,g[2]=c,g[6]=u,g[10]=h,g[14]=d,g[3]=f,g[7]=p,g[11]=A,g[15]=m,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new is().fromArray(this.elements)}copy(e){const t=this.elements,s=e.elements;return t[0]=s[0],t[1]=s[1],t[2]=s[2],t[3]=s[3],t[4]=s[4],t[5]=s[5],t[6]=s[6],t[7]=s[7],t[8]=s[8],t[9]=s[9],t[10]=s[10],t[11]=s[11],t[12]=s[12],t[13]=s[13],t[14]=s[14],t[15]=s[15],this}copyPosition(e){const t=this.elements,s=e.elements;return t[12]=s[12],t[13]=s[13],t[14]=s[14],this}setFromMatrix3(e){const t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,s){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),s.setFromMatrixColumn(this,2),this}makeBasis(e,t,s){return this.set(e.x,t.x,s.x,0,e.y,t.y,s.y,0,e.z,t.z,s.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,s=e.elements,r=1/od.setFromMatrixColumn(e,0).length(),i=1/od.setFromMatrixColumn(e,1).length(),o=1/od.setFromMatrixColumn(e,2).length();return t[0]=s[0]*r,t[1]=s[1]*r,t[2]=s[2]*r,t[3]=0,t[4]=s[4]*i,t[5]=s[5]*i,t[6]=s[6]*i,t[7]=0,t[8]=s[8]*o,t[9]=s[9]*o,t[10]=s[10]*o,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){const t=this.elements,s=e.x,r=e.y,i=e.z,o=Math.cos(s),a=Math.sin(s),l=Math.cos(r),c=Math.sin(r),u=Math.cos(i),h=Math.sin(i);if(e.order==="XYZ"){const d=o*u,f=o*h,p=a*u,A=a*h;t[0]=l*u,t[4]=-l*h,t[8]=c,t[1]=f+p*c,t[5]=d-A*c,t[9]=-a*l,t[2]=A-d*c,t[6]=p+f*c,t[10]=o*l}else if(e.order==="YXZ"){const d=l*u,f=l*h,p=c*u,A=c*h;t[0]=d+A*a,t[4]=p*a-f,t[8]=o*c,t[1]=o*h,t[5]=o*u,t[9]=-a,t[2]=f*a-p,t[6]=A+d*a,t[10]=o*l}else if(e.order==="ZXY"){const d=l*u,f=l*h,p=c*u,A=c*h;t[0]=d-A*a,t[4]=-o*h,t[8]=p+f*a,t[1]=f+p*a,t[5]=o*u,t[9]=A-d*a,t[2]=-o*c,t[6]=a,t[10]=o*l}else if(e.order==="ZYX"){const d=o*u,f=o*h,p=a*u,A=a*h;t[0]=l*u,t[4]=p*c-f,t[8]=d*c+A,t[1]=l*h,t[5]=A*c+d,t[9]=f*c-p,t[2]=-c,t[6]=a*l,t[10]=o*l}else if(e.order==="YZX"){const d=o*l,f=o*c,p=a*l,A=a*c;t[0]=l*u,t[4]=A-d*h,t[8]=p*h+f,t[1]=h,t[5]=o*u,t[9]=-a*u,t[2]=-c*u,t[6]=f*h+p,t[10]=d-A*h}else if(e.order==="XZY"){const d=o*l,f=o*c,p=a*l,A=a*c;t[0]=l*u,t[4]=-h,t[8]=c*u,t[1]=d*h+A,t[5]=o*u,t[9]=f*h-p,t[2]=p*h-f,t[6]=a*u,t[10]=A*h+d}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(J4,e,Z4)}lookAt(e,t,s){const r=this.elements;return Zi.subVectors(e,t),Zi.lengthSq()===0&&(Zi.z=1),Zi.normalize(),Pl.crossVectors(s,Zi),Pl.lengthSq()===0&&(Math.abs(s.z)===1?Zi.x+=1e-4:Zi.z+=1e-4,Zi.normalize(),Pl.crossVectors(s,Zi)),Pl.normalize(),ty.crossVectors(Zi,Pl),r[0]=Pl.x,r[4]=ty.x,r[8]=Zi.x,r[1]=Pl.y,r[5]=ty.y,r[9]=Zi.y,r[2]=Pl.z,r[6]=ty.z,r[10]=Zi.z,this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const s=e.elements,r=t.elements,i=this.elements,o=s[0],a=s[4],l=s[8],c=s[12],u=s[1],h=s[5],d=s[9],f=s[13],p=s[2],A=s[6],m=s[10],g=s[14],x=s[3],v=s[7],b=s[11],w=s[15],_=r[0],N=r[4],M=r[8],T=r[12],k=r[1],B=r[5],L=r[9],U=r[13],V=r[2],W=r[6],H=r[10],ee=r[14],K=r[3],te=r[7],le=r[11],fe=r[15];return i[0]=o*_+a*k+l*V+c*K,i[4]=o*N+a*B+l*W+c*te,i[8]=o*M+a*L+l*H+c*le,i[12]=o*T+a*U+l*ee+c*fe,i[1]=u*_+h*k+d*V+f*K,i[5]=u*N+h*B+d*W+f*te,i[9]=u*M+h*L+d*H+f*le,i[13]=u*T+h*U+d*ee+f*fe,i[2]=p*_+A*k+m*V+g*K,i[6]=p*N+A*B+m*W+g*te,i[10]=p*M+A*L+m*H+g*le,i[14]=p*T+A*U+m*ee+g*fe,i[3]=x*_+v*k+b*V+w*K,i[7]=x*N+v*B+b*W+w*te,i[11]=x*M+v*L+b*H+w*le,i[15]=x*T+v*U+b*ee+w*fe,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],s=e[4],r=e[8],i=e[12],o=e[1],a=e[5],l=e[9],c=e[13],u=e[2],h=e[6],d=e[10],f=e[14],p=e[3],A=e[7],m=e[11],g=e[15];return p*(+i*l*h-r*c*h-i*a*d+s*c*d+r*a*f-s*l*f)+A*(+t*l*f-t*c*d+i*o*d-r*o*f+r*c*u-i*l*u)+m*(+t*c*h-t*a*f-i*o*h+s*o*f+i*a*u-s*c*u)+g*(-r*a*u-t*l*h+t*a*d+r*o*h-s*o*d+s*l*u)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,s){const r=this.elements;return e.isVector3?(r[12]=e.x,r[13]=e.y,r[14]=e.z):(r[12]=e,r[13]=t,r[14]=s),this}invert(){const e=this.elements,t=e[0],s=e[1],r=e[2],i=e[3],o=e[4],a=e[5],l=e[6],c=e[7],u=e[8],h=e[9],d=e[10],f=e[11],p=e[12],A=e[13],m=e[14],g=e[15],x=h*m*c-A*d*c+A*l*f-a*m*f-h*l*g+a*d*g,v=p*d*c-u*m*c-p*l*f+o*m*f+u*l*g-o*d*g,b=u*A*c-p*h*c+p*a*f-o*A*f-u*a*g+o*h*g,w=p*h*l-u*A*l-p*a*d+o*A*d+u*a*m-o*h*m,_=t*x+s*v+r*b+i*w;if(_===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const N=1/_;return e[0]=x*N,e[1]=(A*d*i-h*m*i-A*r*f+s*m*f+h*r*g-s*d*g)*N,e[2]=(a*m*i-A*l*i+A*r*c-s*m*c-a*r*g+s*l*g)*N,e[3]=(h*l*i-a*d*i-h*r*c+s*d*c+a*r*f-s*l*f)*N,e[4]=v*N,e[5]=(u*m*i-p*d*i+p*r*f-t*m*f-u*r*g+t*d*g)*N,e[6]=(p*l*i-o*m*i-p*r*c+t*m*c+o*r*g-t*l*g)*N,e[7]=(o*d*i-u*l*i+u*r*c-t*d*c-o*r*f+t*l*f)*N,e[8]=b*N,e[9]=(p*h*i-u*A*i-p*s*f+t*A*f+u*s*g-t*h*g)*N,e[10]=(o*A*i-p*a*i+p*s*c-t*A*c-o*s*g+t*a*g)*N,e[11]=(u*a*i-o*h*i-u*s*c+t*h*c+o*s*f-t*a*f)*N,e[12]=w*N,e[13]=(u*A*r-p*h*r+p*s*d-t*A*d-u*s*m+t*h*m)*N,e[14]=(p*a*r-o*A*r-p*s*l+t*A*l+o*s*m-t*a*m)*N,e[15]=(o*h*r-u*a*r+u*s*l-t*h*l-o*s*d+t*a*d)*N,this}scale(e){const t=this.elements,s=e.x,r=e.y,i=e.z;return t[0]*=s,t[4]*=r,t[8]*=i,t[1]*=s,t[5]*=r,t[9]*=i,t[2]*=s,t[6]*=r,t[10]*=i,t[3]*=s,t[7]*=r,t[11]*=i,this}getMaxScaleOnAxis(){const e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],s=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],r=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,s,r))}makeTranslation(e,t,s){return e.isVector3?this.set(1,0,0,e.x,0,1,0,e.y,0,0,1,e.z,0,0,0,1):this.set(1,0,0,e,0,1,0,t,0,0,1,s,0,0,0,1),this}makeRotationX(e){const t=Math.cos(e),s=Math.sin(e);return this.set(1,0,0,0,0,t,-s,0,0,s,t,0,0,0,0,1),this}makeRotationY(e){const t=Math.cos(e),s=Math.sin(e);return this.set(t,0,s,0,0,1,0,0,-s,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=Math.cos(e),s=Math.sin(e);return this.set(t,-s,0,0,s,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){const s=Math.cos(t),r=Math.sin(t),i=1-s,o=e.x,a=e.y,l=e.z,c=i*o,u=i*a;return this.set(c*o+s,c*a-r*l,c*l+r*a,0,c*a+r*l,u*a+s,u*l-r*o,0,c*l-r*a,u*l+r*o,i*l*l+s,0,0,0,0,1),this}makeScale(e,t,s){return this.set(e,0,0,0,0,t,0,0,0,0,s,0,0,0,0,1),this}makeShear(e,t,s,r,i,o){return this.set(1,s,i,0,e,1,o,0,t,r,1,0,0,0,0,1),this}compose(e,t,s){const r=this.elements,i=t._x,o=t._y,a=t._z,l=t._w,c=i+i,u=o+o,h=a+a,d=i*c,f=i*u,p=i*h,A=o*u,m=o*h,g=a*h,x=l*c,v=l*u,b=l*h,w=s.x,_=s.y,N=s.z;return r[0]=(1-(A+g))*w,r[1]=(f+b)*w,r[2]=(p-v)*w,r[3]=0,r[4]=(f-b)*_,r[5]=(1-(d+g))*_,r[6]=(m+x)*_,r[7]=0,r[8]=(p+v)*N,r[9]=(m-x)*N,r[10]=(1-(d+A))*N,r[11]=0,r[12]=e.x,r[13]=e.y,r[14]=e.z,r[15]=1,this}decompose(e,t,s){const r=this.elements;let i=od.set(r[0],r[1],r[2]).length();const o=od.set(r[4],r[5],r[6]).length(),a=od.set(r[8],r[9],r[10]).length();this.determinant()<0&&(i=-i),e.x=r[12],e.y=r[13],e.z=r[14],Mo.copy(this);const c=1/i,u=1/o,h=1/a;return Mo.elements[0]*=c,Mo.elements[1]*=c,Mo.elements[2]*=c,Mo.elements[4]*=u,Mo.elements[5]*=u,Mo.elements[6]*=u,Mo.elements[8]*=h,Mo.elements[9]*=h,Mo.elements[10]*=h,t.setFromRotationMatrix(Mo),s.x=i,s.y=o,s.z=a,this}makePerspective(e,t,s,r,i,o,a=ba,l=!1){const c=this.elements,u=2*i/(t-e),h=2*i/(s-r),d=(t+e)/(t-e),f=(s+r)/(s-r);let p,A;if(l)p=i/(o-i),A=o*i/(o-i);else if(a===ba)p=-(o+i)/(o-i),A=-2*o*i/(o-i);else if(a===g0)p=-o/(o-i),A=-o*i/(o-i);else throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+a);return c[0]=u,c[4]=0,c[8]=d,c[12]=0,c[1]=0,c[5]=h,c[9]=f,c[13]=0,c[2]=0,c[6]=0,c[10]=p,c[14]=A,c[3]=0,c[7]=0,c[11]=-1,c[15]=0,this}makeOrthographic(e,t,s,r,i,o,a=ba,l=!1){const c=this.elements,u=2/(t-e),h=2/(s-r),d=-(t+e)/(t-e),f=-(s+r)/(s-r);let p,A;if(l)p=1/(o-i),A=o/(o-i);else if(a===ba)p=-2/(o-i),A=-(o+i)/(o-i);else if(a===g0)p=-1/(o-i),A=-i/(o-i);else throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+a);return c[0]=u,c[4]=0,c[8]=0,c[12]=d,c[1]=0,c[5]=h,c[9]=0,c[13]=f,c[2]=0,c[6]=0,c[10]=p,c[14]=A,c[3]=0,c[7]=0,c[11]=0,c[15]=1,this}equals(e){const t=this.elements,s=e.elements;for(let r=0;r<16;r++)if(t[r]!==s[r])return!1;return!0}fromArray(e,t=0){for(let s=0;s<16;s++)this.elements[s]=e[s+t];return this}toArray(e=[],t=0){const s=this.elements;return e[t]=s[0],e[t+1]=s[1],e[t+2]=s[2],e[t+3]=s[3],e[t+4]=s[4],e[t+5]=s[5],e[t+6]=s[6],e[t+7]=s[7],e[t+8]=s[8],e[t+9]=s[9],e[t+10]=s[10],e[t+11]=s[11],e[t+12]=s[12],e[t+13]=s[13],e[t+14]=s[14],e[t+15]=s[15],e}}const od=new Ae,Mo=new is,J4=new Ae(0,0,0),Z4=new Ae(1,1,1),Pl=new Ae,ty=new Ae,Zi=new Ae,jS=new is,XS=new fr;class Ta{constructor(e=0,t=0,s=0,r=Ta.DEFAULT_ORDER){this.isEuler=!0,this._x=e,this._y=t,this._z=s,this._order=r}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,s,r=this._order){return this._x=e,this._y=t,this._z=s,this._order=r,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,s=!0){const r=e.elements,i=r[0],o=r[4],a=r[8],l=r[1],c=r[5],u=r[9],h=r[2],d=r[6],f=r[10];switch(t){case"XYZ":this._y=Math.asin(kn(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(-u,f),this._z=Math.atan2(-o,i)):(this._x=Math.atan2(d,c),this._z=0);break;case"YXZ":this._x=Math.asin(-kn(u,-1,1)),Math.abs(u)<.9999999?(this._y=Math.atan2(a,f),this._z=Math.atan2(l,c)):(this._y=Math.atan2(-h,i),this._z=0);break;case"ZXY":this._x=Math.asin(kn(d,-1,1)),Math.abs(d)<.9999999?(this._y=Math.atan2(-h,f),this._z=Math.atan2(-o,c)):(this._y=0,this._z=Math.atan2(l,i));break;case"ZYX":this._y=Math.asin(-kn(h,-1,1)),Math.abs(h)<.9999999?(this._x=Math.atan2(d,f),this._z=Math.atan2(l,i)):(this._x=0,this._z=Math.atan2(-o,c));break;case"YZX":this._z=Math.asin(kn(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(-u,c),this._y=Math.atan2(-h,i)):(this._x=0,this._y=Math.atan2(a,f));break;case"XZY":this._z=Math.asin(-kn(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(d,c),this._y=Math.atan2(a,i)):(this._x=Math.atan2(-u,f),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,s===!0&&this._onChangeCallback(),this}setFromQuaternion(e,t,s){return jS.makeRotationFromQuaternion(e),this.setFromRotationMatrix(jS,t,s)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return XS.setFromEuler(this),this.setFromQuaternion(XS,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],e[3]!==void 0&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}Ta.DEFAULT_ORDER="XYZ";class yB{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!==0}isEnabled(e){return(this.mask&(1<<e|0))!==0}}let eO=0;const KS=new Ae,ad=new fr,ja=new is,ny=new Ae,Vp=new Ae,tO=new Ae,nO=new fr,JS=new Ae(1,0,0),ZS=new Ae(0,1,0),eE=new Ae(0,0,1),tE={type:"added"},sO={type:"removed"},ld={type:"childadded",child:null},p2={type:"childremoved",child:null};class Fr extends cf{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:eO++}),this.uuid=uf(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=Fr.DEFAULT_UP.clone();const e=new Ae,t=new Ta,s=new fr,r=new Ae(1,1,1);function i(){s.setFromEuler(t,!1)}function o(){t.setFromQuaternion(s,void 0,!1)}t._onChange(i),s._onChange(o),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:s},scale:{configurable:!0,enumerable:!0,value:r},modelViewMatrix:{value:new is},normalMatrix:{value:new gn}}),this.matrix=new is,this.matrixWorld=new is,this.matrixAutoUpdate=Fr.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldAutoUpdate=Fr.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.layers=new yB,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.customDepthMaterial=void 0,this.customDistanceMaterial=void 0,this.userData={}}onBeforeShadow(){}onAfterShadow(){}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return ad.setFromAxisAngle(e,t),this.quaternion.multiply(ad),this}rotateOnWorldAxis(e,t){return ad.setFromAxisAngle(e,t),this.quaternion.premultiply(ad),this}rotateX(e){return this.rotateOnAxis(JS,e)}rotateY(e){return this.rotateOnAxis(ZS,e)}rotateZ(e){return this.rotateOnAxis(eE,e)}translateOnAxis(e,t){return KS.copy(e).applyQuaternion(this.quaternion),this.position.add(KS.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(JS,e)}translateY(e){return this.translateOnAxis(ZS,e)}translateZ(e){return this.translateOnAxis(eE,e)}localToWorld(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(ja.copy(this.matrixWorld).invert())}lookAt(e,t,s){e.isVector3?ny.copy(e):ny.set(e,t,s);const r=this.parent;this.updateWorldMatrix(!0,!1),Vp.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?ja.lookAt(Vp,ny,this.up):ja.lookAt(ny,Vp,this.up),this.quaternion.setFromRotationMatrix(ja),r&&(ja.extractRotation(r.matrixWorld),ad.setFromRotationMatrix(ja),this.quaternion.premultiply(ad.invert()))}add(e){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(e.removeFromParent(),e.parent=this,this.children.push(e),e.dispatchEvent(tE),ld.child=e,this.dispatchEvent(ld),ld.child=null):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let s=0;s<arguments.length;s++)this.remove(arguments[s]);return this}const t=this.children.indexOf(e);return t!==-1&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(sO),p2.child=e,this.dispatchEvent(p2),p2.child=null),this}removeFromParent(){const e=this.parent;return e!==null&&e.remove(this),this}clear(){return this.remove(...this.children)}attach(e){return this.updateWorldMatrix(!0,!1),ja.copy(this.matrixWorld).invert(),e.parent!==null&&(e.parent.updateWorldMatrix(!0,!1),ja.multiply(e.parent.matrixWorld)),e.applyMatrix4(ja),e.removeFromParent(),e.parent=this,this.children.push(e),e.updateWorldMatrix(!1,!0),e.dispatchEvent(tE),ld.child=e,this.dispatchEvent(ld),ld.child=null,this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let s=0,r=this.children.length;s<r;s++){const o=this.children[s].getObjectByProperty(e,t);if(o!==void 0)return o}}getObjectsByProperty(e,t,s=[]){this[e]===t&&s.push(this);const r=this.children;for(let i=0,o=r.length;i<o;i++)r[i].getObjectsByProperty(e,t,s);return s}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Vp,e,tO),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Vp,nO,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);const t=this.children;for(let s=0,r=t.length;s<r;s++)t[s].traverse(e)}traverseVisible(e){if(this.visible===!1)return;e(this);const t=this.children;for(let s=0,r=t.length;s<r;s++)t[s].traverseVisible(e)}traverseAncestors(e){const t=this.parent;t!==null&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let s=0,r=t.length;s<r;s++)t[s].updateMatrixWorld(e)}updateWorldMatrix(e,t){const s=this.parent;if(e===!0&&s!==null&&s.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),t===!0){const r=this.children;for(let i=0,o=r.length;i<o;i++)r[i].updateWorldMatrix(!1,!0)}}toJSON(e){const t=e===void 0||typeof e=="string",s={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},s.metadata={version:4.7,type:"Object",generator:"Object3D.toJSON"});const r={};r.uuid=this.uuid,r.type=this.type,this.name!==""&&(r.name=this.name),this.castShadow===!0&&(r.castShadow=!0),this.receiveShadow===!0&&(r.receiveShadow=!0),this.visible===!1&&(r.visible=!1),this.frustumCulled===!1&&(r.frustumCulled=!1),this.renderOrder!==0&&(r.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(r.userData=this.userData),r.layers=this.layers.mask,r.matrix=this.matrix.toArray(),r.up=this.up.toArray(),this.matrixAutoUpdate===!1&&(r.matrixAutoUpdate=!1),this.isInstancedMesh&&(r.type="InstancedMesh",r.count=this.count,r.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(r.instanceColor=this.instanceColor.toJSON())),this.isBatchedMesh&&(r.type="BatchedMesh",r.perObjectFrustumCulled=this.perObjectFrustumCulled,r.sortObjects=this.sortObjects,r.drawRanges=this._drawRanges,r.reservedRanges=this._reservedRanges,r.geometryInfo=this._geometryInfo.map(a=>({...a,boundingBox:a.boundingBox?a.boundingBox.toJSON():void 0,boundingSphere:a.boundingSphere?a.boundingSphere.toJSON():void 0})),r.instanceInfo=this._instanceInfo.map(a=>({...a})),r.availableInstanceIds=this._availableInstanceIds.slice(),r.availableGeometryIds=this._availableGeometryIds.slice(),r.nextIndexStart=this._nextIndexStart,r.nextVertexStart=this._nextVertexStart,r.geometryCount=this._geometryCount,r.maxInstanceCount=this._maxInstanceCount,r.maxVertexCount=this._maxVertexCount,r.maxIndexCount=this._maxIndexCount,r.geometryInitialized=this._geometryInitialized,r.matricesTexture=this._matricesTexture.toJSON(e),r.indirectTexture=this._indirectTexture.toJSON(e),this._colorsTexture!==null&&(r.colorsTexture=this._colorsTexture.toJSON(e)),this.boundingSphere!==null&&(r.boundingSphere=this.boundingSphere.toJSON()),this.boundingBox!==null&&(r.boundingBox=this.boundingBox.toJSON()));function i(a,l){return a[l.uuid]===void 0&&(a[l.uuid]=l.toJSON(e)),l.uuid}if(this.isScene)this.background&&(this.background.isColor?r.background=this.background.toJSON():this.background.isTexture&&(r.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(r.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){r.geometry=i(e.geometries,this.geometry);const a=this.geometry.parameters;if(a!==void 0&&a.shapes!==void 0){const l=a.shapes;if(Array.isArray(l))for(let c=0,u=l.length;c<u;c++){const h=l[c];i(e.shapes,h)}else i(e.shapes,l)}}if(this.isSkinnedMesh&&(r.bindMode=this.bindMode,r.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(i(e.skeletons,this.skeleton),r.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const a=[];for(let l=0,c=this.material.length;l<c;l++)a.push(i(e.materials,this.material[l]));r.material=a}else r.material=i(e.materials,this.material);if(this.children.length>0){r.children=[];for(let a=0;a<this.children.length;a++)r.children.push(this.children[a].toJSON(e).object)}if(this.animations.length>0){r.animations=[];for(let a=0;a<this.animations.length;a++){const l=this.animations[a];r.animations.push(i(e.animations,l))}}if(t){const a=o(e.geometries),l=o(e.materials),c=o(e.textures),u=o(e.images),h=o(e.shapes),d=o(e.skeletons),f=o(e.animations),p=o(e.nodes);a.length>0&&(s.geometries=a),l.length>0&&(s.materials=l),c.length>0&&(s.textures=c),u.length>0&&(s.images=u),h.length>0&&(s.shapes=h),d.length>0&&(s.skeletons=d),f.length>0&&(s.animations=f),p.length>0&&(s.nodes=p)}return s.object=r,s;function o(a){const l=[];for(const c in a){const u=a[c];delete u.metadata,l.push(u)}return l}}clone(e){return new this.constructor().copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldAutoUpdate=e.matrixWorldAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.animations=e.animations.slice(),this.userData=JSON.parse(JSON.stringify(e.userData)),t===!0)for(let s=0;s<e.children.length;s++){const r=e.children[s];this.add(r.clone())}return this}}Fr.DEFAULT_UP=new Ae(0,1,0);Fr.DEFAULT_MATRIX_AUTO_UPDATE=!0;Fr.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const Do=new Ae,Xa=new Ae,m2=new Ae,Ka=new Ae,cd=new Ae,ud=new Ae,nE=new Ae,g2=new Ae,A2=new Ae,y2=new Ae,x2=new Vn,b2=new Vn,v2=new Vn;class Go{constructor(e=new Ae,t=new Ae,s=new Ae){this.a=e,this.b=t,this.c=s}static getNormal(e,t,s,r){r.subVectors(s,t),Do.subVectors(e,t),r.cross(Do);const i=r.lengthSq();return i>0?r.multiplyScalar(1/Math.sqrt(i)):r.set(0,0,0)}static getBarycoord(e,t,s,r,i){Do.subVectors(r,t),Xa.subVectors(s,t),m2.subVectors(e,t);const o=Do.dot(Do),a=Do.dot(Xa),l=Do.dot(m2),c=Xa.dot(Xa),u=Xa.dot(m2),h=o*c-a*a;if(h===0)return i.set(0,0,0),null;const d=1/h,f=(c*l-a*u)*d,p=(o*u-a*l)*d;return i.set(1-f-p,p,f)}static containsPoint(e,t,s,r){return this.getBarycoord(e,t,s,r,Ka)===null?!1:Ka.x>=0&&Ka.y>=0&&Ka.x+Ka.y<=1}static getInterpolation(e,t,s,r,i,o,a,l){return this.getBarycoord(e,t,s,r,Ka)===null?(l.x=0,l.y=0,"z"in l&&(l.z=0),"w"in l&&(l.w=0),null):(l.setScalar(0),l.addScaledVector(i,Ka.x),l.addScaledVector(o,Ka.y),l.addScaledVector(a,Ka.z),l)}static getInterpolatedAttribute(e,t,s,r,i,o){return x2.setScalar(0),b2.setScalar(0),v2.setScalar(0),x2.fromBufferAttribute(e,t),b2.fromBufferAttribute(e,s),v2.fromBufferAttribute(e,r),o.setScalar(0),o.addScaledVector(x2,i.x),o.addScaledVector(b2,i.y),o.addScaledVector(v2,i.z),o}static isFrontFacing(e,t,s,r){return Do.subVectors(s,t),Xa.subVectors(e,t),Do.cross(Xa).dot(r)<0}set(e,t,s){return this.a.copy(e),this.b.copy(t),this.c.copy(s),this}setFromPointsAndIndices(e,t,s,r){return this.a.copy(e[t]),this.b.copy(e[s]),this.c.copy(e[r]),this}setFromAttributeAndIndices(e,t,s,r){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,s),this.c.fromBufferAttribute(e,r),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return Do.subVectors(this.c,this.b),Xa.subVectors(this.a,this.b),Do.cross(Xa).length()*.5}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return Go.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return Go.getBarycoord(e,this.a,this.b,this.c,t)}getInterpolation(e,t,s,r,i){return Go.getInterpolation(e,this.a,this.b,this.c,t,s,r,i)}containsPoint(e){return Go.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return Go.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){const s=this.a,r=this.b,i=this.c;let o,a;cd.subVectors(r,s),ud.subVectors(i,s),g2.subVectors(e,s);const l=cd.dot(g2),c=ud.dot(g2);if(l<=0&&c<=0)return t.copy(s);A2.subVectors(e,r);const u=cd.dot(A2),h=ud.dot(A2);if(u>=0&&h<=u)return t.copy(r);const d=l*h-u*c;if(d<=0&&l>=0&&u<=0)return o=l/(l-u),t.copy(s).addScaledVector(cd,o);y2.subVectors(e,i);const f=cd.dot(y2),p=ud.dot(y2);if(p>=0&&f<=p)return t.copy(i);const A=f*c-l*p;if(A<=0&&c>=0&&p<=0)return a=c/(c-p),t.copy(s).addScaledVector(ud,a);const m=u*p-f*h;if(m<=0&&h-u>=0&&f-p>=0)return nE.subVectors(i,r),a=(h-u)/(h-u+(f-p)),t.copy(r).addScaledVector(nE,a);const g=1/(m+A+d);return o=A*g,a=d*g,t.copy(s).addScaledVector(cd,o).addScaledVector(ud,a)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}const xB={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},Ll={h:0,s:0,l:0},sy={h:0,s:0,l:0};function C2(n,e,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?n+(e-n)*6*t:t<1/2?e:t<2/3?n+(e-n)*6*(2/3-t):n}class In{constructor(e,t,s){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(e,t,s)}set(e,t,s){if(t===void 0&&s===void 0){const r=e;r&&r.isColor?this.copy(r):typeof r=="number"?this.setHex(r):typeof r=="string"&&this.setStyle(r)}else this.setRGB(e,t,s);return this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,t=jr){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255,Gn.colorSpaceToWorking(this,t),this}setRGB(e,t,s,r=Gn.workingColorSpace){return this.r=e,this.g=t,this.b=s,Gn.colorSpaceToWorking(this,r),this}setHSL(e,t,s,r=Gn.workingColorSpace){if(e=jC(e,1),t=kn(t,0,1),s=kn(s,0,1),t===0)this.r=this.g=this.b=s;else{const i=s<=.5?s*(1+t):s+t-s*t,o=2*s-i;this.r=C2(o,i,e+1/3),this.g=C2(o,i,e),this.b=C2(o,i,e-1/3)}return Gn.colorSpaceToWorking(this,r),this}setStyle(e,t=jr){function s(i){i!==void 0&&parseFloat(i)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let r;if(r=/^(\w+)\(([^\)]*)\)/.exec(e)){let i;const o=r[1],a=r[2];switch(o){case"rgb":case"rgba":if(i=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return s(i[4]),this.setRGB(Math.min(255,parseInt(i[1],10))/255,Math.min(255,parseInt(i[2],10))/255,Math.min(255,parseInt(i[3],10))/255,t);if(i=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return s(i[4]),this.setRGB(Math.min(100,parseInt(i[1],10))/100,Math.min(100,parseInt(i[2],10))/100,Math.min(100,parseInt(i[3],10))/100,t);break;case"hsl":case"hsla":if(i=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return s(i[4]),this.setHSL(parseFloat(i[1])/360,parseFloat(i[2])/100,parseFloat(i[3])/100,t);break;default:console.warn("THREE.Color: Unknown color model "+e)}}else if(r=/^\#([A-Fa-f\d]+)$/.exec(e)){const i=r[1],o=i.length;if(o===3)return this.setRGB(parseInt(i.charAt(0),16)/15,parseInt(i.charAt(1),16)/15,parseInt(i.charAt(2),16)/15,t);if(o===6)return this.setHex(parseInt(i,16),t);console.warn("THREE.Color: Invalid hex color "+e)}else if(e&&e.length>0)return this.setColorName(e,t);return this}setColorName(e,t=jr){const s=xB[e.toLowerCase()];return s!==void 0?this.setHex(s,t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=cl(e.r),this.g=cl(e.g),this.b=cl(e.b),this}copyLinearToSRGB(e){return this.r=Rd(e.r),this.g=Rd(e.g),this.b=Rd(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=jr){return Gn.workingToColorSpace(Vr.copy(this),e),Math.round(kn(Vr.r*255,0,255))*65536+Math.round(kn(Vr.g*255,0,255))*256+Math.round(kn(Vr.b*255,0,255))}getHexString(e=jr){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,t=Gn.workingColorSpace){Gn.workingToColorSpace(Vr.copy(this),t);const s=Vr.r,r=Vr.g,i=Vr.b,o=Math.max(s,r,i),a=Math.min(s,r,i);let l,c;const u=(a+o)/2;if(a===o)l=0,c=0;else{const h=o-a;switch(c=u<=.5?h/(o+a):h/(2-o-a),o){case s:l=(r-i)/h+(r<i?6:0);break;case r:l=(i-s)/h+2;break;case i:l=(s-r)/h+4;break}l/=6}return e.h=l,e.s=c,e.l=u,e}getRGB(e,t=Gn.workingColorSpace){return Gn.workingToColorSpace(Vr.copy(this),t),e.r=Vr.r,e.g=Vr.g,e.b=Vr.b,e}getStyle(e=jr){Gn.workingToColorSpace(Vr.copy(this),e);const t=Vr.r,s=Vr.g,r=Vr.b;return e!==jr?`color(${e} ${t.toFixed(3)} ${s.toFixed(3)} ${r.toFixed(3)})`:`rgb(${Math.round(t*255)},${Math.round(s*255)},${Math.round(r*255)})`}offsetHSL(e,t,s){return this.getHSL(Ll),this.setHSL(Ll.h+e,Ll.s+t,Ll.l+s)}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,s){return this.r=e.r+(t.r-e.r)*s,this.g=e.g+(t.g-e.g)*s,this.b=e.b+(t.b-e.b)*s,this}lerpHSL(e,t){this.getHSL(Ll),e.getHSL(sy);const s=fm(Ll.h,sy.h,t),r=fm(Ll.s,sy.s,t),i=fm(Ll.l,sy.l,t);return this.setHSL(s,r,i),this}setFromVector3(e){return this.r=e.x,this.g=e.y,this.b=e.z,this}applyMatrix3(e){const t=this.r,s=this.g,r=this.b,i=e.elements;return this.r=i[0]*t+i[3]*s+i[6]*r,this.g=i[1]*t+i[4]*s+i[7]*r,this.b=i[2]*t+i[5]*s+i[8]*r,this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}const Vr=new In;In.NAMES=xB;let rO=0;class sg extends cf{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:rO++}),this.uuid=uf(),this.name="",this.type="Material",this.blending=Nd,this.side=ec,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.alphaHash=!1,this.blendSrc=$b,this.blendDst=Pb,this.blendEquation=jc,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.blendColor=new In(0,0,0),this.blendAlpha=0,this.depthFunc=Ld,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=zS,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=td,this.stencilZFail=td,this.stencilZPass=td,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.allowOverride=!0,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(e!==void 0)for(const t in e){const s=e[t];if(s===void 0){console.warn(`THREE.Material: parameter '${t}' has value of undefined.`);continue}const r=this[t];if(r===void 0){console.warn(`THREE.Material: '${t}' is not a property of THREE.${this.type}.`);continue}r&&r.isColor?r.set(s):r&&r.isVector3&&s&&s.isVector3?r.copy(s):this[t]=s}}toJSON(e){const t=e===void 0||typeof e=="string";t&&(e={textures:{},images:{}});const s={metadata:{version:4.7,type:"Material",generator:"Material.toJSON"}};s.uuid=this.uuid,s.type=this.type,this.name!==""&&(s.name=this.name),this.color&&this.color.isColor&&(s.color=this.color.getHex()),this.roughness!==void 0&&(s.roughness=this.roughness),this.metalness!==void 0&&(s.metalness=this.metalness),this.sheen!==void 0&&(s.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(s.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(s.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(s.emissive=this.emissive.getHex()),this.emissiveIntensity!==void 0&&this.emissiveIntensity!==1&&(s.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(s.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(s.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(s.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(s.shininess=this.shininess),this.clearcoat!==void 0&&(s.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(s.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(s.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(s.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(s.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,s.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.sheenColorMap&&this.sheenColorMap.isTexture&&(s.sheenColorMap=this.sheenColorMap.toJSON(e).uuid),this.sheenRoughnessMap&&this.sheenRoughnessMap.isTexture&&(s.sheenRoughnessMap=this.sheenRoughnessMap.toJSON(e).uuid),this.dispersion!==void 0&&(s.dispersion=this.dispersion),this.iridescence!==void 0&&(s.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(s.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(s.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(s.iridescenceMap=this.iridescenceMap.toJSON(e).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(s.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(e).uuid),this.anisotropy!==void 0&&(s.anisotropy=this.anisotropy),this.anisotropyRotation!==void 0&&(s.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(s.anisotropyMap=this.anisotropyMap.toJSON(e).uuid),this.map&&this.map.isTexture&&(s.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(s.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(s.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(s.lightMap=this.lightMap.toJSON(e).uuid,s.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(s.aoMap=this.aoMap.toJSON(e).uuid,s.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(s.bumpMap=this.bumpMap.toJSON(e).uuid,s.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(s.normalMap=this.normalMap.toJSON(e).uuid,s.normalMapType=this.normalMapType,s.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(s.displacementMap=this.displacementMap.toJSON(e).uuid,s.displacementScale=this.displacementScale,s.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(s.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(s.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(s.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(s.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(s.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(s.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(s.envMap=this.envMap.toJSON(e).uuid,this.combine!==void 0&&(s.combine=this.combine)),this.envMapRotation!==void 0&&(s.envMapRotation=this.envMapRotation.toArray()),this.envMapIntensity!==void 0&&(s.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(s.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(s.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(s.gradientMap=this.gradientMap.toJSON(e).uuid),this.transmission!==void 0&&(s.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(s.transmissionMap=this.transmissionMap.toJSON(e).uuid),this.thickness!==void 0&&(s.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(s.thicknessMap=this.thicknessMap.toJSON(e).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(s.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(s.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(s.size=this.size),this.shadowSide!==null&&(s.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(s.sizeAttenuation=this.sizeAttenuation),this.blending!==Nd&&(s.blending=this.blending),this.side!==ec&&(s.side=this.side),this.vertexColors===!0&&(s.vertexColors=!0),this.opacity<1&&(s.opacity=this.opacity),this.transparent===!0&&(s.transparent=!0),this.blendSrc!==$b&&(s.blendSrc=this.blendSrc),this.blendDst!==Pb&&(s.blendDst=this.blendDst),this.blendEquation!==jc&&(s.blendEquation=this.blendEquation),this.blendSrcAlpha!==null&&(s.blendSrcAlpha=this.blendSrcAlpha),this.blendDstAlpha!==null&&(s.blendDstAlpha=this.blendDstAlpha),this.blendEquationAlpha!==null&&(s.blendEquationAlpha=this.blendEquationAlpha),this.blendColor&&this.blendColor.isColor&&(s.blendColor=this.blendColor.getHex()),this.blendAlpha!==0&&(s.blendAlpha=this.blendAlpha),this.depthFunc!==Ld&&(s.depthFunc=this.depthFunc),this.depthTest===!1&&(s.depthTest=this.depthTest),this.depthWrite===!1&&(s.depthWrite=this.depthWrite),this.colorWrite===!1&&(s.colorWrite=this.colorWrite),this.stencilWriteMask!==255&&(s.stencilWriteMask=this.stencilWriteMask),this.stencilFunc!==zS&&(s.stencilFunc=this.stencilFunc),this.stencilRef!==0&&(s.stencilRef=this.stencilRef),this.stencilFuncMask!==255&&(s.stencilFuncMask=this.stencilFuncMask),this.stencilFail!==td&&(s.stencilFail=this.stencilFail),this.stencilZFail!==td&&(s.stencilZFail=this.stencilZFail),this.stencilZPass!==td&&(s.stencilZPass=this.stencilZPass),this.stencilWrite===!0&&(s.stencilWrite=this.stencilWrite),this.rotation!==void 0&&this.rotation!==0&&(s.rotation=this.rotation),this.polygonOffset===!0&&(s.polygonOffset=!0),this.polygonOffsetFactor!==0&&(s.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(s.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(s.linewidth=this.linewidth),this.dashSize!==void 0&&(s.dashSize=this.dashSize),this.gapSize!==void 0&&(s.gapSize=this.gapSize),this.scale!==void 0&&(s.scale=this.scale),this.dithering===!0&&(s.dithering=!0),this.alphaTest>0&&(s.alphaTest=this.alphaTest),this.alphaHash===!0&&(s.alphaHash=!0),this.alphaToCoverage===!0&&(s.alphaToCoverage=!0),this.premultipliedAlpha===!0&&(s.premultipliedAlpha=!0),this.forceSinglePass===!0&&(s.forceSinglePass=!0),this.wireframe===!0&&(s.wireframe=!0),this.wireframeLinewidth>1&&(s.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(s.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(s.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(s.flatShading=!0),this.visible===!1&&(s.visible=!1),this.toneMapped===!1&&(s.toneMapped=!1),this.fog===!1&&(s.fog=!1),Object.keys(this.userData).length>0&&(s.userData=this.userData);function r(i){const o=[];for(const a in i){const l=i[a];delete l.metadata,o.push(l)}return o}if(t){const i=r(e.textures),o=r(e.images);i.length>0&&(s.textures=i),o.length>0&&(s.images=o)}return s}clone(){return new this.constructor().copy(this)}copy(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.blendColor.copy(e.blendColor),this.blendAlpha=e.blendAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let s=null;if(t!==null){const r=t.length;s=new Array(r);for(let i=0;i!==r;++i)s[i]=t[i].clone()}return this.clippingPlanes=s,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaHash=e.alphaHash,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.forceSinglePass=e.forceSinglePass,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){e===!0&&this.version++}}class nx extends sg{constructor(e){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new In(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Ta,this.combine=sB,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}const js=new Ae,ry=new En;let iO=0;class io{constructor(e,t,s=!1){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,Object.defineProperty(this,"id",{value:iO++}),this.name="",this.array=e,this.itemSize=t,this.count=e!==void 0?e.length/t:0,this.normalized=s,this.usage=GS,this.updateRanges=[],this.gpuType=ol,this.version=0}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this.gpuType=e.gpuType,this}copyAt(e,t,s){e*=this.itemSize,s*=t.itemSize;for(let r=0,i=this.itemSize;r<i;r++)this.array[e+r]=t.array[s+r];return this}copyArray(e){return this.array.set(e),this}applyMatrix3(e){if(this.itemSize===2)for(let t=0,s=this.count;t<s;t++)ry.fromBufferAttribute(this,t),ry.applyMatrix3(e),this.setXY(t,ry.x,ry.y);else if(this.itemSize===3)for(let t=0,s=this.count;t<s;t++)js.fromBufferAttribute(this,t),js.applyMatrix3(e),this.setXYZ(t,js.x,js.y,js.z);return this}applyMatrix4(e){for(let t=0,s=this.count;t<s;t++)js.fromBufferAttribute(this,t),js.applyMatrix4(e),this.setXYZ(t,js.x,js.y,js.z);return this}applyNormalMatrix(e){for(let t=0,s=this.count;t<s;t++)js.fromBufferAttribute(this,t),js.applyNormalMatrix(e),this.setXYZ(t,js.x,js.y,js.z);return this}transformDirection(e){for(let t=0,s=this.count;t<s;t++)js.fromBufferAttribute(this,t),js.transformDirection(e),this.setXYZ(t,js.x,js.y,js.z);return this}set(e,t=0){return this.array.set(e,t),this}getComponent(e,t){let s=this.array[e*this.itemSize+t];return this.normalized&&(s=Ed(s,this.array)),s}setComponent(e,t,s){return this.normalized&&(s=hi(s,this.array)),this.array[e*this.itemSize+t]=s,this}getX(e){let t=this.array[e*this.itemSize];return this.normalized&&(t=Ed(t,this.array)),t}setX(e,t){return this.normalized&&(t=hi(t,this.array)),this.array[e*this.itemSize]=t,this}getY(e){let t=this.array[e*this.itemSize+1];return this.normalized&&(t=Ed(t,this.array)),t}setY(e,t){return this.normalized&&(t=hi(t,this.array)),this.array[e*this.itemSize+1]=t,this}getZ(e){let t=this.array[e*this.itemSize+2];return this.normalized&&(t=Ed(t,this.array)),t}setZ(e,t){return this.normalized&&(t=hi(t,this.array)),this.array[e*this.itemSize+2]=t,this}getW(e){let t=this.array[e*this.itemSize+3];return this.normalized&&(t=Ed(t,this.array)),t}setW(e,t){return this.normalized&&(t=hi(t,this.array)),this.array[e*this.itemSize+3]=t,this}setXY(e,t,s){return e*=this.itemSize,this.normalized&&(t=hi(t,this.array),s=hi(s,this.array)),this.array[e+0]=t,this.array[e+1]=s,this}setXYZ(e,t,s,r){return e*=this.itemSize,this.normalized&&(t=hi(t,this.array),s=hi(s,this.array),r=hi(r,this.array)),this.array[e+0]=t,this.array[e+1]=s,this.array[e+2]=r,this}setXYZW(e,t,s,r,i){return e*=this.itemSize,this.normalized&&(t=hi(t,this.array),s=hi(s,this.array),r=hi(r,this.array),i=hi(i,this.array)),this.array[e+0]=t,this.array[e+1]=s,this.array[e+2]=r,this.array[e+3]=i,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(e.name=this.name),this.usage!==GS&&(e.usage=this.usage),e}}class bB extends io{constructor(e,t,s){super(new Uint16Array(e),t,s)}}class vB extends io{constructor(e,t,s){super(new Uint32Array(e),t,s)}}class Xr extends io{constructor(e,t,s){super(new Float32Array(e),t,s)}}let oO=0;const Ao=new is,I2=new Fr,hd=new Ae,eo=new fc,Wp=new fc,Cr=new Ae;class sa extends cf{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:oO++}),this.uuid=uf(),this.name="",this.type="BufferGeometry",this.index=null,this.indirect=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(mB(e)?vB:bB)(e,1):this.index=e,this}setIndirect(e){return this.indirect=e,this}getIndirect(){return this.indirect}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return this.attributes[e]!==void 0}addGroup(e,t,s=0){this.groups.push({start:e,count:t,materialIndex:s})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){const t=this.attributes.position;t!==void 0&&(t.applyMatrix4(e),t.needsUpdate=!0);const s=this.attributes.normal;if(s!==void 0){const i=new gn().getNormalMatrix(e);s.applyNormalMatrix(i),s.needsUpdate=!0}const r=this.attributes.tangent;return r!==void 0&&(r.transformDirection(e),r.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(e){return Ao.makeRotationFromQuaternion(e),this.applyMatrix4(Ao),this}rotateX(e){return Ao.makeRotationX(e),this.applyMatrix4(Ao),this}rotateY(e){return Ao.makeRotationY(e),this.applyMatrix4(Ao),this}rotateZ(e){return Ao.makeRotationZ(e),this.applyMatrix4(Ao),this}translate(e,t,s){return Ao.makeTranslation(e,t,s),this.applyMatrix4(Ao),this}scale(e,t,s){return Ao.makeScale(e,t,s),this.applyMatrix4(Ao),this}lookAt(e){return I2.lookAt(e),I2.updateMatrix(),this.applyMatrix4(I2.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(hd).negate(),this.translate(hd.x,hd.y,hd.z),this}setFromPoints(e){const t=this.getAttribute("position");if(t===void 0){const s=[];for(let r=0,i=e.length;r<i;r++){const o=e[r];s.push(o.x,o.y,o.z||0)}this.setAttribute("position",new Xr(s,3))}else{const s=Math.min(e.length,t.count);for(let r=0;r<s;r++){const i=e[r];t.setXYZ(r,i.x,i.y,i.z||0)}e.length>t.count&&console.warn("THREE.BufferGeometry: Buffer size too small for points data. Use .dispose() and create a new geometry."),t.needsUpdate=!0}return this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new fc);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box.",this),this.boundingBox.set(new Ae(-1/0,-1/0,-1/0),new Ae(1/0,1/0,1/0));return}if(e!==void 0){if(this.boundingBox.setFromBufferAttribute(e),t)for(let s=0,r=t.length;s<r;s++){const i=t[s];eo.setFromBufferAttribute(i),this.morphTargetsRelative?(Cr.addVectors(this.boundingBox.min,eo.min),this.boundingBox.expandByPoint(Cr),Cr.addVectors(this.boundingBox.max,eo.max),this.boundingBox.expandByPoint(Cr)):(this.boundingBox.expandByPoint(eo.min),this.boundingBox.expandByPoint(eo.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new JC);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere.",this),this.boundingSphere.set(new Ae,1/0);return}if(e){const s=this.boundingSphere.center;if(eo.setFromBufferAttribute(e),t)for(let i=0,o=t.length;i<o;i++){const a=t[i];Wp.setFromBufferAttribute(a),this.morphTargetsRelative?(Cr.addVectors(eo.min,Wp.min),eo.expandByPoint(Cr),Cr.addVectors(eo.max,Wp.max),eo.expandByPoint(Cr)):(eo.expandByPoint(Wp.min),eo.expandByPoint(Wp.max))}eo.getCenter(s);let r=0;for(let i=0,o=e.count;i<o;i++)Cr.fromBufferAttribute(e,i),r=Math.max(r,s.distanceToSquared(Cr));if(t)for(let i=0,o=t.length;i<o;i++){const a=t[i],l=this.morphTargetsRelative;for(let c=0,u=a.count;c<u;c++)Cr.fromBufferAttribute(a,c),l&&(hd.fromBufferAttribute(e,c),Cr.add(hd)),r=Math.max(r,s.distanceToSquared(Cr))}this.boundingSphere.radius=Math.sqrt(r),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const e=this.index,t=this.attributes;if(e===null||t.position===void 0||t.normal===void 0||t.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const s=t.position,r=t.normal,i=t.uv;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new io(new Float32Array(4*s.count),4));const o=this.getAttribute("tangent"),a=[],l=[];for(let M=0;M<s.count;M++)a[M]=new Ae,l[M]=new Ae;const c=new Ae,u=new Ae,h=new Ae,d=new En,f=new En,p=new En,A=new Ae,m=new Ae;function g(M,T,k){c.fromBufferAttribute(s,M),u.fromBufferAttribute(s,T),h.fromBufferAttribute(s,k),d.fromBufferAttribute(i,M),f.fromBufferAttribute(i,T),p.fromBufferAttribute(i,k),u.sub(c),h.sub(c),f.sub(d),p.sub(d);const B=1/(f.x*p.y-p.x*f.y);isFinite(B)&&(A.copy(u).multiplyScalar(p.y).addScaledVector(h,-f.y).multiplyScalar(B),m.copy(h).multiplyScalar(f.x).addScaledVector(u,-p.x).multiplyScalar(B),a[M].add(A),a[T].add(A),a[k].add(A),l[M].add(m),l[T].add(m),l[k].add(m))}let x=this.groups;x.length===0&&(x=[{start:0,count:e.count}]);for(let M=0,T=x.length;M<T;++M){const k=x[M],B=k.start,L=k.count;for(let U=B,V=B+L;U<V;U+=3)g(e.getX(U+0),e.getX(U+1),e.getX(U+2))}const v=new Ae,b=new Ae,w=new Ae,_=new Ae;function N(M){w.fromBufferAttribute(r,M),_.copy(w);const T=a[M];v.copy(T),v.sub(w.multiplyScalar(w.dot(T))).normalize(),b.crossVectors(_,T);const B=b.dot(l[M])<0?-1:1;o.setXYZW(M,v.x,v.y,v.z,B)}for(let M=0,T=x.length;M<T;++M){const k=x[M],B=k.start,L=k.count;for(let U=B,V=B+L;U<V;U+=3)N(e.getX(U+0)),N(e.getX(U+1)),N(e.getX(U+2))}}computeVertexNormals(){const e=this.index,t=this.getAttribute("position");if(t!==void 0){let s=this.getAttribute("normal");if(s===void 0)s=new io(new Float32Array(t.count*3),3),this.setAttribute("normal",s);else for(let d=0,f=s.count;d<f;d++)s.setXYZ(d,0,0,0);const r=new Ae,i=new Ae,o=new Ae,a=new Ae,l=new Ae,c=new Ae,u=new Ae,h=new Ae;if(e)for(let d=0,f=e.count;d<f;d+=3){const p=e.getX(d+0),A=e.getX(d+1),m=e.getX(d+2);r.fromBufferAttribute(t,p),i.fromBufferAttribute(t,A),o.fromBufferAttribute(t,m),u.subVectors(o,i),h.subVectors(r,i),u.cross(h),a.fromBufferAttribute(s,p),l.fromBufferAttribute(s,A),c.fromBufferAttribute(s,m),a.add(u),l.add(u),c.add(u),s.setXYZ(p,a.x,a.y,a.z),s.setXYZ(A,l.x,l.y,l.z),s.setXYZ(m,c.x,c.y,c.z)}else for(let d=0,f=t.count;d<f;d+=3)r.fromBufferAttribute(t,d+0),i.fromBufferAttribute(t,d+1),o.fromBufferAttribute(t,d+2),u.subVectors(o,i),h.subVectors(r,i),u.cross(h),s.setXYZ(d+0,u.x,u.y,u.z),s.setXYZ(d+1,u.x,u.y,u.z),s.setXYZ(d+2,u.x,u.y,u.z);this.normalizeNormals(),s.needsUpdate=!0}}normalizeNormals(){const e=this.attributes.normal;for(let t=0,s=e.count;t<s;t++)Cr.fromBufferAttribute(e,t),Cr.normalize(),e.setXYZ(t,Cr.x,Cr.y,Cr.z)}toNonIndexed(){function e(a,l){const c=a.array,u=a.itemSize,h=a.normalized,d=new c.constructor(l.length*u);let f=0,p=0;for(let A=0,m=l.length;A<m;A++){a.isInterleavedBufferAttribute?f=l[A]*a.data.stride+a.offset:f=l[A]*u;for(let g=0;g<u;g++)d[p++]=c[f++]}return new io(d,u,h)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const t=new sa,s=this.index.array,r=this.attributes;for(const a in r){const l=r[a],c=e(l,s);t.setAttribute(a,c)}const i=this.morphAttributes;for(const a in i){const l=[],c=i[a];for(let u=0,h=c.length;u<h;u++){const d=c[u],f=e(d,s);l.push(f)}t.morphAttributes[a]=l}t.morphTargetsRelative=this.morphTargetsRelative;const o=this.groups;for(let a=0,l=o.length;a<l;a++){const c=o[a];t.addGroup(c.start,c.count,c.materialIndex)}return t}toJSON(){const e={metadata:{version:4.7,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),this.parameters!==void 0){const l=this.parameters;for(const c in l)l[c]!==void 0&&(e[c]=l[c]);return e}e.data={attributes:{}};const t=this.index;t!==null&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const s=this.attributes;for(const l in s){const c=s[l];e.data.attributes[l]=c.toJSON(e.data)}const r={};let i=!1;for(const l in this.morphAttributes){const c=this.morphAttributes[l],u=[];for(let h=0,d=c.length;h<d;h++){const f=c[h];u.push(f.toJSON(e.data))}u.length>0&&(r[l]=u,i=!0)}i&&(e.data.morphAttributes=r,e.data.morphTargetsRelative=this.morphTargetsRelative);const o=this.groups;o.length>0&&(e.data.groups=JSON.parse(JSON.stringify(o)));const a=this.boundingSphere;return a!==null&&(e.data.boundingSphere=a.toJSON()),e}clone(){return new this.constructor().copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const s=e.index;s!==null&&this.setIndex(s.clone());const r=e.attributes;for(const c in r){const u=r[c];this.setAttribute(c,u.clone(t))}const i=e.morphAttributes;for(const c in i){const u=[],h=i[c];for(let d=0,f=h.length;d<f;d++)u.push(h[d].clone(t));this.morphAttributes[c]=u}this.morphTargetsRelative=e.morphTargetsRelative;const o=e.groups;for(let c=0,u=o.length;c<u;c++){const h=o[c];this.addGroup(h.start,h.count,h.materialIndex)}const a=e.boundingBox;a!==null&&(this.boundingBox=a.clone());const l=e.boundingSphere;return l!==null&&(this.boundingSphere=l.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}const sE=new is,$c=new K4,iy=new JC,rE=new Ae,oy=new Ae,ay=new Ae,ly=new Ae,w2=new Ae,cy=new Ae,iE=new Ae,uy=new Ae;class hr extends Fr{constructor(e=new sa,t=new nx){super(),this.isMesh=!0,this.type="Mesh",this.geometry=e,this.material=t,this.morphTargetDictionary=void 0,this.morphTargetInfluences=void 0,this.count=1,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),e.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),e.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}updateMorphTargets(){const t=this.geometry.morphAttributes,s=Object.keys(t);if(s.length>0){const r=t[s[0]];if(r!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let i=0,o=r.length;i<o;i++){const a=r[i].name||String(i);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=i}}}}getVertexPosition(e,t){const s=this.geometry,r=s.attributes.position,i=s.morphAttributes.position,o=s.morphTargetsRelative;t.fromBufferAttribute(r,e);const a=this.morphTargetInfluences;if(i&&a){cy.set(0,0,0);for(let l=0,c=i.length;l<c;l++){const u=a[l],h=i[l];u!==0&&(w2.fromBufferAttribute(h,e),o?cy.addScaledVector(w2,u):cy.addScaledVector(w2.sub(t),u))}t.add(cy)}return t}raycast(e,t){const s=this.geometry,r=this.material,i=this.matrixWorld;r!==void 0&&(s.boundingSphere===null&&s.computeBoundingSphere(),iy.copy(s.boundingSphere),iy.applyMatrix4(i),$c.copy(e.ray).recast(e.near),!(iy.containsPoint($c.origin)===!1&&($c.intersectSphere(iy,rE)===null||$c.origin.distanceToSquared(rE)>(e.far-e.near)**2))&&(sE.copy(i).invert(),$c.copy(e.ray).applyMatrix4(sE),!(s.boundingBox!==null&&$c.intersectsBox(s.boundingBox)===!1)&&this._computeIntersections(e,t,$c)))}_computeIntersections(e,t,s){let r;const i=this.geometry,o=this.material,a=i.index,l=i.attributes.position,c=i.attributes.uv,u=i.attributes.uv1,h=i.attributes.normal,d=i.groups,f=i.drawRange;if(a!==null)if(Array.isArray(o))for(let p=0,A=d.length;p<A;p++){const m=d[p],g=o[m.materialIndex],x=Math.max(m.start,f.start),v=Math.min(a.count,Math.min(m.start+m.count,f.start+f.count));for(let b=x,w=v;b<w;b+=3){const _=a.getX(b),N=a.getX(b+1),M=a.getX(b+2);r=hy(this,g,e,s,c,u,h,_,N,M),r&&(r.faceIndex=Math.floor(b/3),r.face.materialIndex=m.materialIndex,t.push(r))}}else{const p=Math.max(0,f.start),A=Math.min(a.count,f.start+f.count);for(let m=p,g=A;m<g;m+=3){const x=a.getX(m),v=a.getX(m+1),b=a.getX(m+2);r=hy(this,o,e,s,c,u,h,x,v,b),r&&(r.faceIndex=Math.floor(m/3),t.push(r))}}else if(l!==void 0)if(Array.isArray(o))for(let p=0,A=d.length;p<A;p++){const m=d[p],g=o[m.materialIndex],x=Math.max(m.start,f.start),v=Math.min(l.count,Math.min(m.start+m.count,f.start+f.count));for(let b=x,w=v;b<w;b+=3){const _=b,N=b+1,M=b+2;r=hy(this,g,e,s,c,u,h,_,N,M),r&&(r.faceIndex=Math.floor(b/3),r.face.materialIndex=m.materialIndex,t.push(r))}}else{const p=Math.max(0,f.start),A=Math.min(l.count,f.start+f.count);for(let m=p,g=A;m<g;m+=3){const x=m,v=m+1,b=m+2;r=hy(this,o,e,s,c,u,h,x,v,b),r&&(r.faceIndex=Math.floor(m/3),t.push(r))}}}}function aO(n,e,t,s,r,i,o,a){let l;if(e.side===Li?l=s.intersectTriangle(o,i,r,!0,a):l=s.intersectTriangle(r,i,o,e.side===ec,a),l===null)return null;uy.copy(a),uy.applyMatrix4(n.matrixWorld);const c=t.ray.origin.distanceTo(uy);return c<t.near||c>t.far?null:{distance:c,point:uy.clone(),object:n}}function hy(n,e,t,s,r,i,o,a,l,c){n.getVertexPosition(a,oy),n.getVertexPosition(l,ay),n.getVertexPosition(c,ly);const u=aO(n,e,t,s,oy,ay,ly,iE);if(u){const h=new Ae;Go.getBarycoord(iE,oy,ay,ly,h),r&&(u.uv=Go.getInterpolatedAttribute(r,a,l,c,h,new En)),i&&(u.uv1=Go.getInterpolatedAttribute(i,a,l,c,h,new En)),o&&(u.normal=Go.getInterpolatedAttribute(o,a,l,c,h,new Ae),u.normal.dot(s.direction)>0&&u.normal.multiplyScalar(-1));const d={a,b:l,c,normal:new Ae,materialIndex:0};Go.getNormal(oy,ay,ly,d.normal),u.face=d,u.barycoord=h}return u}class hf extends sa{constructor(e=1,t=1,s=1,r=1,i=1,o=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:s,widthSegments:r,heightSegments:i,depthSegments:o};const a=this;r=Math.floor(r),i=Math.floor(i),o=Math.floor(o);const l=[],c=[],u=[],h=[];let d=0,f=0;p("z","y","x",-1,-1,s,t,e,o,i,0),p("z","y","x",1,-1,s,t,-e,o,i,1),p("x","z","y",1,1,e,s,t,r,o,2),p("x","z","y",1,-1,e,s,-t,r,o,3),p("x","y","z",1,-1,e,t,s,r,i,4),p("x","y","z",-1,-1,e,t,-s,r,i,5),this.setIndex(l),this.setAttribute("position",new Xr(c,3)),this.setAttribute("normal",new Xr(u,3)),this.setAttribute("uv",new Xr(h,2));function p(A,m,g,x,v,b,w,_,N,M,T){const k=b/N,B=w/M,L=b/2,U=w/2,V=_/2,W=N+1,H=M+1;let ee=0,K=0;const te=new Ae;for(let le=0;le<H;le++){const fe=le*B-U;for(let Ie=0;Ie<W;Ie++){const Se=Ie*k-L;te[A]=Se*x,te[m]=fe*v,te[g]=V,c.push(te.x,te.y,te.z),te[A]=0,te[m]=0,te[g]=_>0?1:-1,u.push(te.x,te.y,te.z),h.push(Ie/N),h.push(1-le/M),ee+=1}}for(let le=0;le<M;le++)for(let fe=0;fe<N;fe++){const Ie=d+fe+W*le,Se=d+fe+W*(le+1),De=d+(fe+1)+W*(le+1),Be=d+(fe+1)+W*le;l.push(Ie,Se,Be),l.push(Se,De,Be),K+=6}a.addGroup(f,K,T),f+=K,d+=ee}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new hf(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function zd(n){const e={};for(const t in n){e[t]={};for(const s in n[t]){const r=n[t][s];r&&(r.isColor||r.isMatrix3||r.isMatrix4||r.isVector2||r.isVector3||r.isVector4||r.isTexture||r.isQuaternion)?r.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),e[t][s]=null):e[t][s]=r.clone():Array.isArray(r)?e[t][s]=r.slice():e[t][s]=r}}return e}function fi(n){const e={};for(let t=0;t<n.length;t++){const s=zd(n[t]);for(const r in s)e[r]=s[r]}return e}function lO(n){const e=[];for(let t=0;t<n.length;t++)e.push(n[t].clone());return e}function CB(n){const e=n.getRenderTarget();return e===null?n.outputColorSpace:e.isXRRenderTarget===!0?e.texture.colorSpace:Gn.workingColorSpace}const cO={clone:zd,merge:fi};var uO=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,hO=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;class So extends sg{constructor(e){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=uO,this.fragmentShader=hO,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={clipCullDistance:!1,multiDraw:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,e!==void 0&&this.setValues(e)}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=zd(e.uniforms),this.uniformsGroups=lO(e.uniformsGroups),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(const r in this.uniforms){const o=this.uniforms[r].value;o&&o.isTexture?t.uniforms[r]={type:"t",value:o.toJSON(e).uuid}:o&&o.isColor?t.uniforms[r]={type:"c",value:o.getHex()}:o&&o.isVector2?t.uniforms[r]={type:"v2",value:o.toArray()}:o&&o.isVector3?t.uniforms[r]={type:"v3",value:o.toArray()}:o&&o.isVector4?t.uniforms[r]={type:"v4",value:o.toArray()}:o&&o.isMatrix3?t.uniforms[r]={type:"m3",value:o.toArray()}:o&&o.isMatrix4?t.uniforms[r]={type:"m4",value:o.toArray()}:t.uniforms[r]={value:o}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader,t.lights=this.lights,t.clipping=this.clipping;const s={};for(const r in this.extensions)this.extensions[r]===!0&&(s[r]=!0);return Object.keys(s).length>0&&(t.extensions=s),t}}class IB extends Fr{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new is,this.projectionMatrix=new is,this.projectionMatrixInverse=new is,this.coordinateSystem=ba,this._reversedDepth=!1}get reversedDepth(){return this._reversedDepth}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this.coordinateSystem=e.coordinateSystem,this}getWorldDirection(e){return super.getWorldDirection(e).negate()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}const Ol=new Ae,oE=new En,aE=new En;class Fi extends IB{constructor(e=50,t=1,s=.1,r=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=s,this.far=r,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=e.view===null?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const t=.5*this.getFilmHeight()/e;this.fov=Em*2*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(dm*.5*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return Em*2*Math.atan(Math.tan(dm*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}getViewBounds(e,t,s){Ol.set(-1,-1,.5).applyMatrix4(this.projectionMatrixInverse),t.set(Ol.x,Ol.y).multiplyScalar(-e/Ol.z),Ol.set(1,1,.5).applyMatrix4(this.projectionMatrixInverse),s.set(Ol.x,Ol.y).multiplyScalar(-e/Ol.z)}getViewSize(e,t){return this.getViewBounds(e,oE,aE),t.subVectors(aE,oE)}setViewOffset(e,t,s,r,i,o){this.aspect=e/t,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=s,this.view.offsetY=r,this.view.width=i,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let t=e*Math.tan(dm*.5*this.fov)/this.zoom,s=2*t,r=this.aspect*s,i=-.5*r;const o=this.view;if(this.view!==null&&this.view.enabled){const l=o.fullWidth,c=o.fullHeight;i+=o.offsetX*r/l,t-=o.offsetY*s/c,r*=o.width/l,s*=o.height/c}const a=this.filmOffset;a!==0&&(i+=e*a/this.getFilmWidth()),this.projectionMatrix.makePerspective(i,i+r,t,t-s,e,this.far,this.coordinateSystem,this.reversedDepth),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,this.view!==null&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}const dd=-90,fd=1;class wB extends Fr{constructor(e,t,s){super(),this.type="CubeCamera",this.renderTarget=s,this.coordinateSystem=null,this.activeMipmapLevel=0;const r=new Fi(dd,fd,e,t);r.layers=this.layers,this.add(r);const i=new Fi(dd,fd,e,t);i.layers=this.layers,this.add(i);const o=new Fi(dd,fd,e,t);o.layers=this.layers,this.add(o);const a=new Fi(dd,fd,e,t);a.layers=this.layers,this.add(a);const l=new Fi(dd,fd,e,t);l.layers=this.layers,this.add(l);const c=new Fi(dd,fd,e,t);c.layers=this.layers,this.add(c)}updateCoordinateSystem(){const e=this.coordinateSystem,t=this.children.concat(),[s,r,i,o,a,l]=t;for(const c of t)this.remove(c);if(e===ba)s.up.set(0,1,0),s.lookAt(1,0,0),r.up.set(0,1,0),r.lookAt(-1,0,0),i.up.set(0,0,-1),i.lookAt(0,1,0),o.up.set(0,0,1),o.lookAt(0,-1,0),a.up.set(0,1,0),a.lookAt(0,0,1),l.up.set(0,1,0),l.lookAt(0,0,-1);else if(e===g0)s.up.set(0,-1,0),s.lookAt(-1,0,0),r.up.set(0,-1,0),r.lookAt(1,0,0),i.up.set(0,0,1),i.lookAt(0,1,0),o.up.set(0,0,-1),o.lookAt(0,-1,0),a.up.set(0,-1,0),a.lookAt(0,0,1),l.up.set(0,-1,0),l.lookAt(0,0,-1);else throw new Error("THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: "+e);for(const c of t)this.add(c),c.updateMatrixWorld()}update(e,t){this.parent===null&&this.updateMatrixWorld();const{renderTarget:s,activeMipmapLevel:r}=this;this.coordinateSystem!==e.coordinateSystem&&(this.coordinateSystem=e.coordinateSystem,this.updateCoordinateSystem());const[i,o,a,l,c,u]=this.children,h=e.getRenderTarget(),d=e.getActiveCubeFace(),f=e.getActiveMipmapLevel(),p=e.xr.enabled;e.xr.enabled=!1;const A=s.texture.generateMipmaps;s.texture.generateMipmaps=!1,e.setRenderTarget(s,0,r),e.render(t,i),e.setRenderTarget(s,1,r),e.render(t,o),e.setRenderTarget(s,2,r),e.render(t,a),e.setRenderTarget(s,3,r),e.render(t,l),e.setRenderTarget(s,4,r),e.render(t,c),s.texture.generateMipmaps=A,e.setRenderTarget(s,5,r),e.render(t,u),e.setRenderTarget(h,d,f),e.xr.enabled=p,s.texture.needsPMREMUpdate=!0}}class SB extends _r{constructor(e=[],t=Od,s,r,i,o,a,l,c,u){super(e,t,s,r,i,o,a,l,c,u),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}class EB extends _a{constructor(e=1,t={}){super(e,e,t),this.isWebGLCubeRenderTarget=!0;const s={width:e,height:e,depth:1},r=[s,s,s,s,s,s];this.texture=new SB(r),this._setTextureOptions(t),this.texture.isRenderTargetTexture=!0}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.colorSpace=t.colorSpace,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const s={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},r=new hf(5,5,5),i=new So({name:"CubemapFromEquirect",uniforms:zd(s.uniforms),vertexShader:s.vertexShader,fragmentShader:s.fragmentShader,side:Li,blending:Yl});i.uniforms.tEquirect.value=t;const o=new hr(r,i),a=t.minFilter;return t.minFilter===iu&&(t.minFilter=Pi),new wB(1,10,this).update(e,o),t.minFilter=a,o.geometry.dispose(),o.material.dispose(),this}clear(e,t=!0,s=!0,r=!0){const i=e.getRenderTarget();for(let o=0;o<6;o++)e.setRenderTarget(this,o),e.clear(t,s,r);e.setRenderTarget(i)}}class Jp extends Fr{constructor(){super(),this.isGroup=!0,this.type="Group"}}const dO={type:"move"};class S2{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new Jp,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new Jp,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new Ae,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new Ae),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new Jp,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new Ae,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new Ae),this._grip}dispatchEvent(e){return this._targetRay!==null&&this._targetRay.dispatchEvent(e),this._grip!==null&&this._grip.dispatchEvent(e),this._hand!==null&&this._hand.dispatchEvent(e),this}connect(e){if(e&&e.hand){const t=this._hand;if(t)for(const s of e.hand.values())this._getHandJoint(t,s)}return this.dispatchEvent({type:"connected",data:e}),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(e,t,s){let r=null,i=null,o=null;const a=this._targetRay,l=this._grip,c=this._hand;if(e&&t.session.visibilityState!=="visible-blurred"){if(c&&e.hand){o=!0;for(const A of e.hand.values()){const m=t.getJointPose(A,s),g=this._getHandJoint(c,A);m!==null&&(g.matrix.fromArray(m.transform.matrix),g.matrix.decompose(g.position,g.rotation,g.scale),g.matrixWorldNeedsUpdate=!0,g.jointRadius=m.radius),g.visible=m!==null}const u=c.joints["index-finger-tip"],h=c.joints["thumb-tip"],d=u.position.distanceTo(h.position),f=.02,p=.005;c.inputState.pinching&&d>f+p?(c.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!c.inputState.pinching&&d<=f-p&&(c.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else l!==null&&e.gripSpace&&(i=t.getPose(e.gripSpace,s),i!==null&&(l.matrix.fromArray(i.transform.matrix),l.matrix.decompose(l.position,l.rotation,l.scale),l.matrixWorldNeedsUpdate=!0,i.linearVelocity?(l.hasLinearVelocity=!0,l.linearVelocity.copy(i.linearVelocity)):l.hasLinearVelocity=!1,i.angularVelocity?(l.hasAngularVelocity=!0,l.angularVelocity.copy(i.angularVelocity)):l.hasAngularVelocity=!1));a!==null&&(r=t.getPose(e.targetRaySpace,s),r===null&&i!==null&&(r=i),r!==null&&(a.matrix.fromArray(r.transform.matrix),a.matrix.decompose(a.position,a.rotation,a.scale),a.matrixWorldNeedsUpdate=!0,r.linearVelocity?(a.hasLinearVelocity=!0,a.linearVelocity.copy(r.linearVelocity)):a.hasLinearVelocity=!1,r.angularVelocity?(a.hasAngularVelocity=!0,a.angularVelocity.copy(r.angularVelocity)):a.hasAngularVelocity=!1,this.dispatchEvent(dO)))}return a!==null&&(a.visible=r!==null),l!==null&&(l.visible=i!==null),c!==null&&(c.visible=o!==null),this}_getHandJoint(e,t){if(e.joints[t.jointName]===void 0){const s=new Jp;s.matrixAutoUpdate=!1,s.visible=!1,e.joints[t.jointName]=s,e.add(s)}return e.joints[t.jointName]}}class fO extends Fr{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.backgroundRotation=new Ta,this.environmentIntensity=1,this.environmentRotation=new Ta,this.overrideMaterial=null,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),e.background!==null&&(this.background=e.background.clone()),e.environment!==null&&(this.environment=e.environment.clone()),e.fog!==null&&(this.fog=e.fog.clone()),this.backgroundBlurriness=e.backgroundBlurriness,this.backgroundIntensity=e.backgroundIntensity,this.backgroundRotation.copy(e.backgroundRotation),this.environmentIntensity=e.environmentIntensity,this.environmentRotation.copy(e.environmentRotation),e.overrideMaterial!==null&&(this.overrideMaterial=e.overrideMaterial.clone()),this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return this.fog!==null&&(t.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(t.object.backgroundBlurriness=this.backgroundBlurriness),this.backgroundIntensity!==1&&(t.object.backgroundIntensity=this.backgroundIntensity),t.object.backgroundRotation=this.backgroundRotation.toArray(),this.environmentIntensity!==1&&(t.object.environmentIntensity=this.environmentIntensity),t.object.environmentRotation=this.environmentRotation.toArray(),t}}class pO extends _r{constructor(e=null,t=1,s=1,r,i,o,a,l,c=Dr,u=Dr,h,d){super(null,o,a,l,c,u,r,i,h,d),this.isDataTexture=!0,this.image={data:e,width:t,height:s},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class mO extends io{constructor(e,t,s,r=1){super(e,t,s),this.isInstancedBufferAttribute=!0,this.meshPerAttribute=r}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}toJSON(){const e=super.toJSON();return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}}const E2=new Ae,gO=new Ae,AO=new gn;class Gc{constructor(e=new Ae(1,0,0),t=0){this.isPlane=!0,this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,s,r){return this.normal.set(e,t,s),this.constant=r,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,s){const r=E2.subVectors(s,t).cross(gO.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(r,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(e).addScaledVector(this.normal,-this.distanceToPoint(e))}intersectLine(e,t){const s=e.delta(E2),r=this.normal.dot(s);if(r===0)return this.distanceToPoint(e.start)===0?t.copy(e.start):null;const i=-(e.start.dot(this.normal)+this.constant)/r;return i<0||i>1?null:t.copy(e.start).addScaledVector(s,i)}intersectsLine(e){const t=this.distanceToPoint(e.start),s=this.distanceToPoint(e.end);return t<0&&s>0||s<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const s=t||AO.getNormalMatrix(e),r=this.coplanarPoint(E2).applyMatrix4(e),i=this.normal.applyMatrix3(s).normalize();return this.constant=-r.dot(i),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}}const Pc=new JC,yO=new En(.5,.5),dy=new Ae;class _B{constructor(e=new Gc,t=new Gc,s=new Gc,r=new Gc,i=new Gc,o=new Gc){this.planes=[e,t,s,r,i,o]}set(e,t,s,r,i,o){const a=this.planes;return a[0].copy(e),a[1].copy(t),a[2].copy(s),a[3].copy(r),a[4].copy(i),a[5].copy(o),this}copy(e){const t=this.planes;for(let s=0;s<6;s++)t[s].copy(e.planes[s]);return this}setFromProjectionMatrix(e,t=ba,s=!1){const r=this.planes,i=e.elements,o=i[0],a=i[1],l=i[2],c=i[3],u=i[4],h=i[5],d=i[6],f=i[7],p=i[8],A=i[9],m=i[10],g=i[11],x=i[12],v=i[13],b=i[14],w=i[15];if(r[0].setComponents(c-o,f-u,g-p,w-x).normalize(),r[1].setComponents(c+o,f+u,g+p,w+x).normalize(),r[2].setComponents(c+a,f+h,g+A,w+v).normalize(),r[3].setComponents(c-a,f-h,g-A,w-v).normalize(),s)r[4].setComponents(l,d,m,b).normalize(),r[5].setComponents(c-l,f-d,g-m,w-b).normalize();else if(r[4].setComponents(c-l,f-d,g-m,w-b).normalize(),t===ba)r[5].setComponents(c+l,f+d,g+m,w+b).normalize();else if(t===g0)r[5].setComponents(l,d,m,b).normalize();else throw new Error("THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: "+t);return this}intersectsObject(e){if(e.boundingSphere!==void 0)e.boundingSphere===null&&e.computeBoundingSphere(),Pc.copy(e.boundingSphere).applyMatrix4(e.matrixWorld);else{const t=e.geometry;t.boundingSphere===null&&t.computeBoundingSphere(),Pc.copy(t.boundingSphere).applyMatrix4(e.matrixWorld)}return this.intersectsSphere(Pc)}intersectsSprite(e){Pc.center.set(0,0,0);const t=yO.distanceTo(e.center);return Pc.radius=.7071067811865476+t,Pc.applyMatrix4(e.matrixWorld),this.intersectsSphere(Pc)}intersectsSphere(e){const t=this.planes,s=e.center,r=-e.radius;for(let i=0;i<6;i++)if(t[i].distanceToPoint(s)<r)return!1;return!0}intersectsBox(e){const t=this.planes;for(let s=0;s<6;s++){const r=t[s];if(dy.x=r.normal.x>0?e.max.x:e.min.x,dy.y=r.normal.y>0?e.max.y:e.min.y,dy.z=r.normal.z>0?e.max.z:e.min.z,r.distanceToPoint(dy)<0)return!1}return!0}containsPoint(e){const t=this.planes;for(let s=0;s<6;s++)if(t[s].distanceToPoint(e)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}class xO extends _r{constructor(e,t,s,r,i=Pi,o=Pi,a,l,c){super(e,t,s,r,i,o,a,l,c),this.isVideoTexture=!0,this.generateMipmaps=!1,this._requestVideoFrameCallbackId=0;const u=this;function h(){u.needsUpdate=!0,u._requestVideoFrameCallbackId=e.requestVideoFrameCallback(h)}"requestVideoFrameCallback"in e&&(this._requestVideoFrameCallbackId=e.requestVideoFrameCallback(h))}clone(){return new this.constructor(this.image).copy(this)}update(){const e=this.image;"requestVideoFrameCallback"in e===!1&&e.readyState>=e.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}dispose(){this._requestVideoFrameCallbackId!==0&&this.source.data.cancelVideoFrameCallback(this._requestVideoFrameCallbackId),super.dispose()}}class TB extends _r{constructor(e,t,s=Oi,r,i,o,a=Dr,l=Dr,c,u=wm,h=1){if(u!==wm&&u!==Sm)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");const d={width:e,height:t,depth:h};super(d,r,i,o,a,l,u,s,c),this.isDepthTexture=!0,this.flipY=!1,this.generateMipmaps=!1,this.compareFunction=null}copy(e){return super.copy(e),this.source=new KC(Object.assign({},e.image)),this.compareFunction=e.compareFunction,this}toJSON(e){const t=super.toJSON(e);return this.compareFunction!==null&&(t.compareFunction=this.compareFunction),t}}class BB extends _r{constructor(e=null){super(),this.sourceTexture=e,this.isExternalTexture=!0}copy(e){return super.copy(e),this.sourceTexture=e.sourceTexture,this}}class df extends sa{constructor(e=1,t=1,s=1,r=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:s,heightSegments:r};const i=e/2,o=t/2,a=Math.floor(s),l=Math.floor(r),c=a+1,u=l+1,h=e/a,d=t/l,f=[],p=[],A=[],m=[];for(let g=0;g<u;g++){const x=g*d-o;for(let v=0;v<c;v++){const b=v*h-i;p.push(b,-x,0),A.push(0,0,1),m.push(v/a),m.push(1-g/l)}}for(let g=0;g<l;g++)for(let x=0;x<a;x++){const v=x+c*g,b=x+c*(g+1),w=x+1+c*(g+1),_=x+1+c*g;f.push(v,b,_),f.push(b,w,_)}this.setIndex(f),this.setAttribute("position",new Xr(p,3)),this.setAttribute("normal",new Xr(A,3)),this.setAttribute("uv",new Xr(m,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new df(e.width,e.height,e.widthSegments,e.heightSegments)}}class ZC extends So{constructor(e){super(e),this.isRawShaderMaterial=!0,this.type="RawShaderMaterial"}}class Iv extends sg{constructor(e){super(),this.isMeshStandardMaterial=!0,this.type="MeshStandardMaterial",this.defines={STANDARD:""},this.color=new In(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new In(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=fB,this.normalScale=new En(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Ta,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.envMapIntensity=e.envMapIntensity,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class bO extends sg{constructor(e){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=g4,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}class vO extends sg{constructor(e){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(e)}copy(e){return super.copy(e),this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}const lE={enabled:!1,files:{},add:function(n,e){this.enabled!==!1&&(this.files[n]=e)},get:function(n){if(this.enabled!==!1)return this.files[n]},remove:function(n){delete this.files[n]},clear:function(){this.files={}}};class CO{constructor(e,t,s){const r=this;let i=!1,o=0,a=0,l;const c=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=s,this.abortController=new AbortController,this.itemStart=function(u){a++,i===!1&&r.onStart!==void 0&&r.onStart(u,o,a),i=!0},this.itemEnd=function(u){o++,r.onProgress!==void 0&&r.onProgress(u,o,a),o===a&&(i=!1,r.onLoad!==void 0&&r.onLoad())},this.itemError=function(u){r.onError!==void 0&&r.onError(u)},this.resolveURL=function(u){return l?l(u):u},this.setURLModifier=function(u){return l=u,this},this.addHandler=function(u,h){return c.push(u,h),this},this.removeHandler=function(u){const h=c.indexOf(u);return h!==-1&&c.splice(h,2),this},this.getHandler=function(u){for(let h=0,d=c.length;h<d;h+=2){const f=c[h],p=c[h+1];if(f.global&&(f.lastIndex=0),f.test(u))return p}return null},this.abort=function(){return this.abortController.abort(),this.abortController=new AbortController,this}}}const IO=new CO;class sx{constructor(e){this.manager=e!==void 0?e:IO,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(e,t){const s=this;return new Promise(function(r,i){s.load(e,r,t,i)})}parse(){}setCrossOrigin(e){return this.crossOrigin=e,this}setWithCredentials(e){return this.withCredentials=e,this}setPath(e){return this.path=e,this}setResourcePath(e){return this.resourcePath=e,this}setRequestHeader(e){return this.requestHeader=e,this}abort(){return this}}sx.DEFAULT_MATERIAL_NAME="__DEFAULT";const Ja={};class wO extends Error{constructor(e,t){super(e),this.response=t}}class kB extends sx{constructor(e){super(e),this.mimeType="",this.responseType="",this._abortController=new AbortController}load(e,t,s,r){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const i=lE.get(`file:${e}`);if(i!==void 0)return this.manager.itemStart(e),setTimeout(()=>{t&&t(i),this.manager.itemEnd(e)},0),i;if(Ja[e]!==void 0){Ja[e].push({onLoad:t,onProgress:s,onError:r});return}Ja[e]=[],Ja[e].push({onLoad:t,onProgress:s,onError:r});const o=new Request(e,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin",signal:typeof AbortSignal.any=="function"?AbortSignal.any([this._abortController.signal,this.manager.abortController.signal]):this._abortController.signal}),a=this.mimeType,l=this.responseType;fetch(o).then(c=>{if(c.status===200||c.status===0){if(c.status===0&&console.warn("THREE.FileLoader: HTTP Status 0 received."),typeof ReadableStream>"u"||c.body===void 0||c.body.getReader===void 0)return c;const u=Ja[e],h=c.body.getReader(),d=c.headers.get("X-File-Size")||c.headers.get("Content-Length"),f=d?parseInt(d):0,p=f!==0;let A=0;const m=new ReadableStream({start(g){x();function x(){h.read().then(({done:v,value:b})=>{if(v)g.close();else{A+=b.byteLength;const w=new ProgressEvent("progress",{lengthComputable:p,loaded:A,total:f});for(let _=0,N=u.length;_<N;_++){const M=u[_];M.onProgress&&M.onProgress(w)}g.enqueue(b),x()}},v=>{g.error(v)})}}});return new Response(m)}else throw new wO(`fetch for "${c.url}" responded with ${c.status}: ${c.statusText}`,c)}).then(c=>{switch(l){case"arraybuffer":return c.arrayBuffer();case"blob":return c.blob();case"document":return c.text().then(u=>new DOMParser().parseFromString(u,a));case"json":return c.json();default:if(a==="")return c.text();{const h=/charset="?([^;"\s]*)"?/i.exec(a),d=h&&h[1]?h[1].toLowerCase():void 0,f=new TextDecoder(d);return c.arrayBuffer().then(p=>f.decode(p))}}}).then(c=>{lE.add(`file:${e}`,c);const u=Ja[e];delete Ja[e];for(let h=0,d=u.length;h<d;h++){const f=u[h];f.onLoad&&f.onLoad(c)}}).catch(c=>{const u=Ja[e];if(u===void 0)throw this.manager.itemError(e),c;delete Ja[e];for(let h=0,d=u.length;h<d;h++){const f=u[h];f.onError&&f.onError(c)}this.manager.itemError(e)}).finally(()=>{this.manager.itemEnd(e)}),this.manager.itemStart(e)}setResponseType(e){return this.responseType=e,this}setMimeType(e){return this.mimeType=e,this}abort(){return this._abortController.abort(),this._abortController=new AbortController,this}}class SO extends Fr{constructor(e,t=1){super(),this.isLight=!0,this.type="Light",this.color=new In(e),this.intensity=t}dispose(){}copy(e,t){return super.copy(e,t),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){const t=super.toJSON(e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,this.groundColor!==void 0&&(t.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(t.object.distance=this.distance),this.angle!==void 0&&(t.object.angle=this.angle),this.decay!==void 0&&(t.object.decay=this.decay),this.penumbra!==void 0&&(t.object.penumbra=this.penumbra),this.shadow!==void 0&&(t.object.shadow=this.shadow.toJSON()),this.target!==void 0&&(t.object.target=this.target.uuid),t}}class NB extends IB{constructor(e=-1,t=1,s=1,r=-1,i=.1,o=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=s,this.bottom=r,this.near=i,this.far=o,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=e.view===null?null:Object.assign({},e.view),this}setViewOffset(e,t,s,r,i,o){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=s,this.view.offsetY=r,this.view.width=i,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),s=(this.right+this.left)/2,r=(this.top+this.bottom)/2;let i=s-e,o=s+e,a=r+t,l=r-t;if(this.view!==null&&this.view.enabled){const c=(this.right-this.left)/this.view.fullWidth/this.zoom,u=(this.top-this.bottom)/this.view.fullHeight/this.zoom;i+=c*this.view.offsetX,o=i+c*this.view.width,a-=u*this.view.offsetY,l=a-u*this.view.height}this.projectionMatrix.makeOrthographic(i,o,a,l,this.near,this.far,this.coordinateSystem,this.reversedDepth),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,this.view!==null&&(t.object.view=Object.assign({},this.view)),t}}class EO extends SO{constructor(e,t){super(e,t),this.isAmbientLight=!0,this.type="AmbientLight"}}class _O extends sa{constructor(){super(),this.isInstancedBufferGeometry=!0,this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(e){return super.copy(e),this.instanceCount=e.instanceCount,this}toJSON(){const e=super.toJSON();return e.instanceCount=this.instanceCount,e.isInstancedBufferGeometry=!0,e}}class TO extends Fi{constructor(e=[]){super(),this.isArrayCamera=!0,this.isMultiViewCamera=!1,this.cameras=e}}class RB{constructor(e=!0){this.autoStart=e,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=performance.now(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let e=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const t=performance.now();e=(t-this.oldTime)/1e3,this.oldTime=t,this.elapsedTime+=e}return e}}class rx{constructor(e,t,s,r){rx.prototype.isMatrix2=!0,this.elements=[1,0,0,1],e!==void 0&&this.set(e,t,s,r)}identity(){return this.set(1,0,0,1),this}fromArray(e,t=0){for(let s=0;s<4;s++)this.elements[s]=e[s+t];return this}set(e,t,s,r){const i=this.elements;return i[0]=e,i[2]=t,i[1]=s,i[3]=r,this}}function cE(n,e,t,s){const r=BO(s);switch(t){case cB:return n*e;case hB:return n*e/r.components*r.byteLength;case YC:return n*e/r.components*r.byteLength;case dB:return n*e*2/r.components*r.byteLength;case tx:return n*e*2/r.components*r.byteLength;case uB:return n*e*3/r.components*r.byteLength;case Er:return n*e*4/r.components*r.byteLength;case ll:return n*e*4/r.components*r.byteLength;case Vy:case Wy:return Math.floor((n+3)/4)*Math.floor((e+3)/4)*8;case Hy:case qy:return Math.floor((n+3)/4)*Math.floor((e+3)/4)*16;case Xb:case Jb:return Math.max(n,16)*Math.max(e,8)/4;case jb:case Kb:return Math.max(n,8)*Math.max(e,8)/2;case Zb:case ev:return Math.floor((n+3)/4)*Math.floor((e+3)/4)*8;case tv:return Math.floor((n+3)/4)*Math.floor((e+3)/4)*16;case nv:return Math.floor((n+3)/4)*Math.floor((e+3)/4)*16;case sv:return Math.floor((n+4)/5)*Math.floor((e+3)/4)*16;case rv:return Math.floor((n+4)/5)*Math.floor((e+4)/5)*16;case iv:return Math.floor((n+5)/6)*Math.floor((e+4)/5)*16;case ov:return Math.floor((n+5)/6)*Math.floor((e+5)/6)*16;case av:return Math.floor((n+7)/8)*Math.floor((e+4)/5)*16;case lv:return Math.floor((n+7)/8)*Math.floor((e+5)/6)*16;case cv:return Math.floor((n+7)/8)*Math.floor((e+7)/8)*16;case uv:return Math.floor((n+9)/10)*Math.floor((e+4)/5)*16;case hv:return Math.floor((n+9)/10)*Math.floor((e+5)/6)*16;case dv:return Math.floor((n+9)/10)*Math.floor((e+7)/8)*16;case fv:return Math.floor((n+9)/10)*Math.floor((e+9)/10)*16;case pv:return Math.floor((n+11)/12)*Math.floor((e+9)/10)*16;case mv:return Math.floor((n+11)/12)*Math.floor((e+11)/12)*16;case gv:case Av:case yv:return Math.ceil(n/4)*Math.ceil(e/4)*16;case xv:case bv:return Math.ceil(n/4)*Math.ceil(e/4)*8;case vv:case Cv:return Math.ceil(n/4)*Math.ceil(e/4)*16}throw new Error(`Unable to determine texture byte length for ${t} format.`)}function BO(n){switch(n){case Ui:case iB:return{byteLength:1,components:1};case Cm:case oB:case ng:return{byteLength:2,components:1};case HC:case qC:return{byteLength:2,components:4};case Oi:case WC:case ol:return{byteLength:4,components:1};case aB:case lB:return{byteLength:4,components:3}}throw new Error(`Unknown texture type ${n}.`)}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:VC}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=VC);/**
 * @license
 * Copyright 2010-2025 Three.js Authors
 * SPDX-License-Identifier: MIT
 */function MB(){let n=null,e=!1,t=null,s=null;function r(i,o){t(i,o),s=n.requestAnimationFrame(r)}return{start:function(){e!==!0&&t!==null&&(s=n.requestAnimationFrame(r),e=!0)},stop:function(){n.cancelAnimationFrame(s),e=!1},setAnimationLoop:function(i){t=i},setContext:function(i){n=i}}}function kO(n){const e=new WeakMap;function t(a,l){const c=a.array,u=a.usage,h=c.byteLength,d=n.createBuffer();n.bindBuffer(l,d),n.bufferData(l,c,u),a.onUploadCallback();let f;if(c instanceof Float32Array)f=n.FLOAT;else if(typeof Float16Array<"u"&&c instanceof Float16Array)f=n.HALF_FLOAT;else if(c instanceof Uint16Array)a.isFloat16BufferAttribute?f=n.HALF_FLOAT:f=n.UNSIGNED_SHORT;else if(c instanceof Int16Array)f=n.SHORT;else if(c instanceof Uint32Array)f=n.UNSIGNED_INT;else if(c instanceof Int32Array)f=n.INT;else if(c instanceof Int8Array)f=n.BYTE;else if(c instanceof Uint8Array)f=n.UNSIGNED_BYTE;else if(c instanceof Uint8ClampedArray)f=n.UNSIGNED_BYTE;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+c);return{buffer:d,type:f,bytesPerElement:c.BYTES_PER_ELEMENT,version:a.version,size:h}}function s(a,l,c){const u=l.array,h=l.updateRanges;if(n.bindBuffer(c,a),h.length===0)n.bufferSubData(c,0,u);else{h.sort((f,p)=>f.start-p.start);let d=0;for(let f=1;f<h.length;f++){const p=h[d],A=h[f];A.start<=p.start+p.count+1?p.count=Math.max(p.count,A.start+A.count-p.start):(++d,h[d]=A)}h.length=d+1;for(let f=0,p=h.length;f<p;f++){const A=h[f];n.bufferSubData(c,A.start*u.BYTES_PER_ELEMENT,u,A.start,A.count)}l.clearUpdateRanges()}l.onUploadCallback()}function r(a){return a.isInterleavedBufferAttribute&&(a=a.data),e.get(a)}function i(a){a.isInterleavedBufferAttribute&&(a=a.data);const l=e.get(a);l&&(n.deleteBuffer(l.buffer),e.delete(a))}function o(a,l){if(a.isInterleavedBufferAttribute&&(a=a.data),a.isGLBufferAttribute){const u=e.get(a);(!u||u.version<a.version)&&e.set(a,{buffer:a.buffer,type:a.type,bytesPerElement:a.elementSize,version:a.version});return}const c=e.get(a);if(c===void 0)e.set(a,t(a,l));else if(c.version<a.version){if(c.size!==a.array.byteLength)throw new Error("THREE.WebGLAttributes: The size of the buffer attribute's array buffer does not match the original size. Resizing buffer attributes is not supported.");s(c.buffer,a,l),c.version=a.version}}return{get:r,remove:i,update:o}}var NO=`#ifdef USE_ALPHAHASH
	if ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;
#endif`,RO=`#ifdef USE_ALPHAHASH
	const float ALPHA_HASH_SCALE = 0.05;
	float hash2D( vec2 value ) {
		return fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );
	}
	float hash3D( vec3 value ) {
		return hash2D( vec2( hash2D( value.xy ), value.z ) );
	}
	float getAlphaHashThreshold( vec3 position ) {
		float maxDeriv = max(
			length( dFdx( position.xyz ) ),
			length( dFdy( position.xyz ) )
		);
		float pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );
		vec2 pixScales = vec2(
			exp2( floor( log2( pixScale ) ) ),
			exp2( ceil( log2( pixScale ) ) )
		);
		vec2 alpha = vec2(
			hash3D( floor( pixScales.x * position.xyz ) ),
			hash3D( floor( pixScales.y * position.xyz ) )
		);
		float lerpFactor = fract( log2( pixScale ) );
		float x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;
		float a = min( lerpFactor, 1.0 - lerpFactor );
		vec3 cases = vec3(
			x * x / ( 2.0 * a * ( 1.0 - a ) ),
			( x - 0.5 * a ) / ( 1.0 - a ),
			1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )
		);
		float threshold = ( x < ( 1.0 - a ) )
			? ( ( x < a ) ? cases.x : cases.y )
			: cases.z;
		return clamp( threshold , 1.0e-6, 1.0 );
	}
#endif`,MO=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;
#endif`,DO=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,FO=`#ifdef USE_ALPHATEST
	#ifdef ALPHA_TO_COVERAGE
	diffuseColor.a = smoothstep( alphaTest, alphaTest + fwidth( diffuseColor.a ), diffuseColor.a );
	if ( diffuseColor.a == 0.0 ) discard;
	#else
	if ( diffuseColor.a < alphaTest ) discard;
	#endif
#endif`,$O=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,PO=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_CLEARCOAT ) 
		clearcoatSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_SHEEN ) 
		sheenSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometryNormal, geometryViewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,LO=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,OO=`#ifdef USE_BATCHING
	#if ! defined( GL_ANGLE_multi_draw )
	#define gl_DrawID _gl_DrawID
	uniform int _gl_DrawID;
	#endif
	uniform highp sampler2D batchingTexture;
	uniform highp usampler2D batchingIdTexture;
	mat4 getBatchingMatrix( const in float i ) {
		int size = textureSize( batchingTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( batchingTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( batchingTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( batchingTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( batchingTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
	float getIndirectIndex( const in int i ) {
		int size = textureSize( batchingIdTexture, 0 ).x;
		int x = i % size;
		int y = i / size;
		return float( texelFetch( batchingIdTexture, ivec2( x, y ), 0 ).r );
	}
#endif
#ifdef USE_BATCHING_COLOR
	uniform sampler2D batchingColorTexture;
	vec3 getBatchingColor( const in float i ) {
		int size = textureSize( batchingColorTexture, 0 ).x;
		int j = int( i );
		int x = j % size;
		int y = j / size;
		return texelFetch( batchingColorTexture, ivec2( x, y ), 0 ).rgb;
	}
#endif`,QO=`#ifdef USE_BATCHING
	mat4 batchingMatrix = getBatchingMatrix( getIndirectIndex( gl_DrawID ) );
#endif`,UO=`vec3 transformed = vec3( position );
#ifdef USE_ALPHAHASH
	vPosition = vec3( position );
#endif`,zO=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,GO=`float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
} // validated`,VO=`#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`,WO=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vBumpMapUv );
		vec2 dSTdy = dFdy( vBumpMapUv );
		float Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = normalize( dFdx( surf_pos.xyz ) );
		vec3 vSigmaY = normalize( dFdy( surf_pos.xyz ) );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,HO=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#ifdef ALPHA_TO_COVERAGE
		float distanceToPlane, distanceGradient;
		float clipOpacity = 1.0;
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
			distanceGradient = fwidth( distanceToPlane ) / 2.0;
			clipOpacity *= smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			if ( clipOpacity == 0.0 ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			float unionClipOpacity = 1.0;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
				distanceGradient = fwidth( distanceToPlane ) / 2.0;
				unionClipOpacity *= 1.0 - smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			}
			#pragma unroll_loop_end
			clipOpacity *= 1.0 - unionClipOpacity;
		#endif
		diffuseColor.a *= clipOpacity;
		if ( diffuseColor.a == 0.0 ) discard;
	#else
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			bool clipped = true;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
			}
			#pragma unroll_loop_end
			if ( clipped ) discard;
		#endif
	#endif
#endif`,qO=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,YO=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,jO=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,XO=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,KO=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,JO=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )
	varying vec3 vColor;
#endif`,ZO=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif
#ifdef USE_BATCHING_COLOR
	vec3 batchingColor = getBatchingColor( getIndirectIndex( gl_DrawID ) );
	vColor.xyz *= batchingColor.xyz;
#endif`,eQ=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
#ifdef USE_ALPHAHASH
	varying vec3 vPosition;
#endif
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}
vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
} // validated`,tQ=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		highp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define cubeUV_r0 1.0
	#define cubeUV_m0 - 2.0
	#define cubeUV_r1 0.8
	#define cubeUV_m1 - 1.0
	#define cubeUV_r4 0.4
	#define cubeUV_m4 2.0
	#define cubeUV_r5 0.305
	#define cubeUV_m5 3.0
	#define cubeUV_r6 0.21
	#define cubeUV_m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= cubeUV_r1 ) {
			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;
		} else if ( roughness >= cubeUV_r4 ) {
			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;
		} else if ( roughness >= cubeUV_r5 ) {
			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;
		} else if ( roughness >= cubeUV_r6 ) {
			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,nQ=`vec3 transformedNormal = objectNormal;
#ifdef USE_TANGENT
	vec3 transformedTangent = objectTangent;
#endif
#ifdef USE_BATCHING
	mat3 bm = mat3( batchingMatrix );
	transformedNormal /= vec3( dot( bm[ 0 ], bm[ 0 ] ), dot( bm[ 1 ], bm[ 1 ] ), dot( bm[ 2 ], bm[ 2 ] ) );
	transformedNormal = bm * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = bm * transformedTangent;
	#endif
#endif
#ifdef USE_INSTANCING
	mat3 im = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( im[ 0 ], im[ 0 ] ), dot( im[ 1 ], im[ 1 ] ), dot( im[ 2 ], im[ 2 ] ) );
	transformedNormal = im * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = im * transformedTangent;
	#endif
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	transformedTangent = ( modelViewMatrix * vec4( transformedTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,sQ=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,rQ=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );
#endif`,iQ=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );
	#ifdef DECODE_VIDEO_TEXTURE_EMISSIVE
		emissiveColor = sRGBTransferEOTF( emissiveColor );
	#endif
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,oQ=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,aQ="gl_FragColor = linearToOutputTexel( gl_FragColor );",lQ=`vec4 LinearTransferOETF( in vec4 value ) {
	return value;
}
vec4 sRGBTransferEOTF( in vec4 value ) {
	return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );
}
vec4 sRGBTransferOETF( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}`,cQ=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, envMapRotation * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,uQ=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	uniform mat3 envMapRotation;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,hQ=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,dQ=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,fQ=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,pQ=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,mQ=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,gQ=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,AQ=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,yQ=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		vec2 fw = fwidth( coord ) * 0.5;
		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );
	#endif
}`,xQ=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,bQ=`LambertMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularStrength = specularStrength;`,vQ=`varying vec3 vViewPosition;
struct LambertMaterial {
	vec3 diffuseColor;
	float specularStrength;
};
void RE_Direct_Lambert( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Lambert
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert`,CQ=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
#if defined( USE_LIGHT_PROBES )
	uniform vec3 lightProbe[ 9 ];
#endif
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
	if ( cutoffDistance > 0.0 ) {
		distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
	}
	return distanceFalloff;
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,IQ=`#ifdef USE_ENVMAP
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	#ifdef USE_ANISOTROPY
		vec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {
			#ifdef ENVMAP_TYPE_CUBE_UV
				vec3 bentNormal = cross( bitangent, viewDir );
				bentNormal = normalize( cross( bentNormal, bitangent ) );
				bentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );
				return getIBLRadiance( viewDir, bentNormal, roughness );
			#else
				return vec3( 0.0 );
			#endif
		}
	#endif
#endif`,wQ=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,SQ=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometryNormal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon`,EQ=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,_Q=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometryViewDir, geometryNormal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong`,TQ=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( nonPerturbedNormal ) ), abs( dFdy( nonPerturbedNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	material.ior = ior;
	#ifdef USE_SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULAR_COLORMAP
			specularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;
		#endif
		#ifdef USE_SPECULAR_INTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_DISPERSION
	material.dispersion = dispersion;
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEEN_COLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEEN_ROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;
	#endif
#endif
#ifdef USE_ANISOTROPY
	#ifdef USE_ANISOTROPYMAP
		mat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );
		vec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;
		vec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;
	#else
		vec2 anisotropyV = anisotropyVector;
	#endif
	material.anisotropy = length( anisotropyV );
	if( material.anisotropy == 0.0 ) {
		anisotropyV = vec2( 1.0, 0.0 );
	} else {
		anisotropyV /= material.anisotropy;
		material.anisotropy = saturate( material.anisotropy );
	}
	material.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );
	material.anisotropyT = tbn[ 0 ] * anisotropyV.x + tbn[ 1 ] * anisotropyV.y;
	material.anisotropyB = tbn[ 1 ] * anisotropyV.x - tbn[ 0 ] * anisotropyV.y;
#endif`,BQ=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	float dispersion;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
	#ifdef IOR
		float ior;
	#endif
	#ifdef USE_TRANSMISSION
		float transmission;
		float transmissionAlpha;
		float thickness;
		float attenuationDistance;
		vec3 attenuationColor;
	#endif
	#ifdef USE_ANISOTROPY
		float anisotropy;
		float alphaT;
		vec3 anisotropyT;
		vec3 anisotropyB;
	#endif
};
vec3 clearcoatSpecularDirect = vec3( 0.0 );
vec3 clearcoatSpecularIndirect = vec3( 0.0 );
vec3 sheenSpecularDirect = vec3( 0.0 );
vec3 sheenSpecularIndirect = vec3(0.0 );
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
#ifdef USE_ANISOTROPY
	float V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {
		float gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );
		float gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );
		float v = 0.5 / ( gv + gl );
		return saturate(v);
	}
	float D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {
		float a2 = alphaT * alphaB;
		highp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );
		highp float v2 = dot( v, v );
		float w2 = a2 / v2;
		return RECIPROCAL_PI * a2 * pow2 ( w2 );
	}
#endif
#ifdef USE_CLEARCOAT
	vec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {
		vec3 f0 = material.clearcoatF0;
		float f90 = material.clearcoatF90;
		float roughness = material.clearcoatRoughness;
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = F_Schlick( f0, f90, dotVH );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {
	vec3 f0 = material.specularColor;
	float f90 = material.specularF90;
	float roughness = material.roughness;
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	#ifdef USE_IRIDESCENCE
		F = mix( F, material.iridescenceFresnel, material.iridescence );
	#endif
	#ifdef USE_ANISOTROPY
		float dotTL = dot( material.anisotropyT, lightDir );
		float dotTV = dot( material.anisotropyT, viewDir );
		float dotTH = dot( material.anisotropyT, halfDir );
		float dotBL = dot( material.anisotropyB, lightDir );
		float dotBV = dot( material.anisotropyB, viewDir );
		float dotBH = dot( material.anisotropyB, halfDir );
		float V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );
		float D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );
	#else
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
	#endif
	return F * ( V * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometryNormal;
		vec3 viewDir = geometryViewDir;
		vec3 position = geometryPosition;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometryClearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecularDirect += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometryViewDir, geometryClearcoatNormal, material );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularDirect += irradiance * BRDF_Sheen( directLight.direction, geometryViewDir, geometryNormal, material.sheenColor, material.sheenRoughness );
	#endif
	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometryViewDir, geometryNormal, material );
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecularIndirect += clearcoatRadiance * EnvironmentBRDF( geometryClearcoatNormal, geometryViewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularIndirect += irradiance * material.sheenColor * IBLSheenBRDF( geometryNormal, geometryViewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,kQ=`
vec3 geometryPosition = - vViewPosition;
vec3 geometryNormal = normal;
vec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
vec3 geometryClearcoatNormal = vec3( 0.0 );
#ifdef USE_CLEARCOAT
	geometryClearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometryViewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometryPosition, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowIntensity, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	vec4 spotColor;
	vec3 spotLightCoord;
	bool inSpotLightMap;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometryPosition, directLight );
		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX
		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS
		#else
		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#endif
		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )
			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;
			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );
			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );
			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;
		#endif
		#undef SPOT_LIGHT_MAP_INDEX
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowIntensity, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowIntensity, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	#if defined( USE_LIGHT_PROBES )
		irradiance += getLightProbeIrradiance( lightProbe, geometryNormal );
	#endif
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,NQ=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometryNormal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	#ifdef USE_ANISOTROPY
		radiance += getIBLAnisotropyRadiance( geometryViewDir, geometryNormal, material.roughness, material.anisotropyB, material.anisotropy );
	#else
		radiance += getIBLRadiance( geometryViewDir, geometryNormal, material.roughness );
	#endif
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometryViewDir, geometryClearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,RQ=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif`,MQ=`#if defined( USE_LOGARITHMIC_DEPTH_BUFFER )
	gl_FragDepth = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,DQ=`#if defined( USE_LOGARITHMIC_DEPTH_BUFFER )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,FQ=`#ifdef USE_LOGARITHMIC_DEPTH_BUFFER
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,$Q=`#ifdef USE_LOGARITHMIC_DEPTH_BUFFER
	vFragDepth = 1.0 + gl_Position.w;
	vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
#endif`,PQ=`#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vMapUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = sRGBTransferEOTF( sampledDiffuseColor );
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,LQ=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,OQ=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	#if defined( USE_POINTS_UV )
		vec2 uv = vUv;
	#else
		vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
	#endif
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,QQ=`#if defined( USE_POINTS_UV )
	varying vec2 vUv;
#else
	#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
		uniform mat3 uvTransform;
	#endif
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,UQ=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );
	metalnessFactor *= texelMetalness.b;
#endif`,zQ=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,GQ=`#ifdef USE_INSTANCING_MORPH
	float morphTargetInfluences[ MORPHTARGETS_COUNT ];
	float morphTargetBaseInfluence = texelFetch( morphTexture, ivec2( 0, gl_InstanceID ), 0 ).r;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		morphTargetInfluences[i] =  texelFetch( morphTexture, ivec2( i + 1, gl_InstanceID ), 0 ).r;
	}
#endif`,VQ=`#if defined( USE_MORPHCOLORS )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,WQ=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
	}
#endif`,HQ=`#ifdef USE_MORPHTARGETS
	#ifndef USE_INSTANCING_MORPH
		uniform float morphTargetBaseInfluence;
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
	#endif
	uniform sampler2DArray morphTargetsTexture;
	uniform ivec2 morphTargetsTextureSize;
	vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
		int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
		int y = texelIndex / morphTargetsTextureSize.x;
		int x = texelIndex - y * morphTargetsTextureSize.x;
		ivec3 morphUV = ivec3( x, y, morphTargetIndex );
		return texelFetch( morphTargetsTexture, morphUV, 0 );
	}
#endif`,qQ=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
	}
#endif`,YQ=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = dFdx( vViewPosition );
	vec3 fdy = dFdy( vViewPosition );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal *= faceDirection;
	#endif
#endif
#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )
	#ifdef USE_TANGENT
		mat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn = getTangentFrame( - vViewPosition, normal,
		#if defined( USE_NORMALMAP )
			vNormalMapUv
		#elif defined( USE_CLEARCOAT_NORMALMAP )
			vClearcoatNormalMapUv
		#else
			vUv
		#endif
		);
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn[0] *= faceDirection;
		tbn[1] *= faceDirection;
	#endif
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	#ifdef USE_TANGENT
		mat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn2[0] *= faceDirection;
		tbn2[1] *= faceDirection;
	#endif
#endif
vec3 nonPerturbedNormal = normal;`,jQ=`#ifdef USE_NORMALMAP_OBJECTSPACE
	normal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( USE_NORMALMAP_TANGENTSPACE )
	vec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	normal = normalize( tbn * mapN );
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,XQ=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,KQ=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,JQ=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,ZQ=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef USE_NORMALMAP_OBJECTSPACE
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )
	mat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( uv.st );
		vec2 st1 = dFdy( uv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );
		return mat3( T * scale, B * scale, N );
	}
#endif`,eU=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = nonPerturbedNormal;
#endif`,tU=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	clearcoatNormal = normalize( tbn2 * clearcoatMapN );
#endif`,nU=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif`,sU=`#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`,rU=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= material.transmissionAlpha;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,iU=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;const float ShiftRight8 = 1. / 256.;
const float Inv255 = 1. / 255.;
const vec4 PackFactors = vec4( 1.0, 256.0, 256.0 * 256.0, 256.0 * 256.0 * 256.0 );
const vec2 UnpackFactors2 = vec2( UnpackDownscale, 1.0 / PackFactors.g );
const vec3 UnpackFactors3 = vec3( UnpackDownscale / PackFactors.rg, 1.0 / PackFactors.b );
const vec4 UnpackFactors4 = vec4( UnpackDownscale / PackFactors.rgb, 1.0 / PackFactors.a );
vec4 packDepthToRGBA( const in float v ) {
	if( v <= 0.0 )
		return vec4( 0., 0., 0., 0. );
	if( v >= 1.0 )
		return vec4( 1., 1., 1., 1. );
	float vuf;
	float af = modf( v * PackFactors.a, vuf );
	float bf = modf( vuf * ShiftRight8, vuf );
	float gf = modf( vuf * ShiftRight8, vuf );
	return vec4( vuf * Inv255, gf * PackUpscale, bf * PackUpscale, af );
}
vec3 packDepthToRGB( const in float v ) {
	if( v <= 0.0 )
		return vec3( 0., 0., 0. );
	if( v >= 1.0 )
		return vec3( 1., 1., 1. );
	float vuf;
	float bf = modf( v * PackFactors.b, vuf );
	float gf = modf( vuf * ShiftRight8, vuf );
	return vec3( vuf * Inv255, gf * PackUpscale, bf );
}
vec2 packDepthToRG( const in float v ) {
	if( v <= 0.0 )
		return vec2( 0., 0. );
	if( v >= 1.0 )
		return vec2( 1., 1. );
	float vuf;
	float gf = modf( v * 256., vuf );
	return vec2( vuf * Inv255, gf );
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors4 );
}
float unpackRGBToDepth( const in vec3 v ) {
	return dot( v, UnpackFactors3 );
}
float unpackRGToDepth( const in vec2 v ) {
	return v.r * UnpackFactors2.r + v.g * UnpackFactors2.g;
}
vec4 pack2HalfToRGBA( const in vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( const in vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return depth * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * depth - far );
}`,oU=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,aU=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_BATCHING
	mvPosition = batchingMatrix * mvPosition;
#endif
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,lU=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,cU=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,uU=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );
	roughnessFactor *= texelRoughness.g;
#endif`,hU=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,dU=`#if NUM_SPOT_LIGHT_COORDS > 0
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#if NUM_SPOT_LIGHT_MAPS > 0
	uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		float depth = unpackRGBAToDepth( texture2D( depths, uv ) );
		#ifdef USE_REVERSED_DEPTH_BUFFER
			return step( depth, compare );
		#else
			return step( compare, depth );
		#endif
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow( sampler2D shadow, vec2 uv, float compare ) {
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		#ifdef USE_REVERSED_DEPTH_BUFFER
			float hard_shadow = step( distribution.x, compare );
		#else
			float hard_shadow = step( compare, distribution.x );
		#endif
		if ( hard_shadow != 1.0 ) {
			float distance = compare - distribution.x;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;
		bool frustumTest = inFrustum && shadowCoord.z <= 1.0;
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return mix( 1.0, shadow, shadowIntensity );
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		float shadow = 1.0;
		vec3 lightToPosition = shadowCoord.xyz;
		
		float lightToPositionLength = length( lightToPosition );
		if ( lightToPositionLength - shadowCameraFar <= 0.0 && lightToPositionLength - shadowCameraNear >= 0.0 ) {
			float dp = ( lightToPositionLength - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );			dp += shadowBias;
			vec3 bd3D = normalize( lightToPosition );
			vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
			#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
				vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
				shadow = (
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
				) * ( 1.0 / 9.0 );
			#else
				shadow = texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
			#endif
		}
		return mix( 1.0, shadow, shadowIntensity );
	}
#endif`,fU=`#if NUM_SPOT_LIGHT_COORDS > 0
	uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		struct SpotLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,pU=`#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )
	vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
	vec4 shadowWorldPosition;
#endif
#if defined( USE_SHADOWMAP )
	#if NUM_DIR_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
			vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
			vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
#endif
#if NUM_SPOT_LIGHT_COORDS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {
		shadowWorldPosition = worldPosition;
		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;
		#endif
		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
#endif`,mU=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowIntensity, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowIntensity, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowIntensity, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,gU=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,AU=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	mat4 getBoneMatrix( const in float i ) {
		int size = textureSize( boneTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( boneTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( boneTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( boneTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( boneTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
#endif`,yU=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,xU=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,bU=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,vU=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,CU=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,IU=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return saturate( toneMappingExposure * color );
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 CineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
const mat3 LINEAR_REC2020_TO_LINEAR_SRGB = mat3(
	vec3( 1.6605, - 0.1246, - 0.0182 ),
	vec3( - 0.5876, 1.1329, - 0.1006 ),
	vec3( - 0.0728, - 0.0083, 1.1187 )
);
const mat3 LINEAR_SRGB_TO_LINEAR_REC2020 = mat3(
	vec3( 0.6274, 0.0691, 0.0164 ),
	vec3( 0.3293, 0.9195, 0.0880 ),
	vec3( 0.0433, 0.0113, 0.8956 )
);
vec3 agxDefaultContrastApprox( vec3 x ) {
	vec3 x2 = x * x;
	vec3 x4 = x2 * x2;
	return + 15.5 * x4 * x2
		- 40.14 * x4 * x
		+ 31.96 * x4
		- 6.868 * x2 * x
		+ 0.4298 * x2
		+ 0.1191 * x
		- 0.00232;
}
vec3 AgXToneMapping( vec3 color ) {
	const mat3 AgXInsetMatrix = mat3(
		vec3( 0.856627153315983, 0.137318972929847, 0.11189821299995 ),
		vec3( 0.0951212405381588, 0.761241990602591, 0.0767994186031903 ),
		vec3( 0.0482516061458583, 0.101439036467562, 0.811302368396859 )
	);
	const mat3 AgXOutsetMatrix = mat3(
		vec3( 1.1271005818144368, - 0.1413297634984383, - 0.14132976349843826 ),
		vec3( - 0.11060664309660323, 1.157823702216272, - 0.11060664309660294 ),
		vec3( - 0.016493938717834573, - 0.016493938717834257, 1.2519364065950405 )
	);
	const float AgxMinEv = - 12.47393;	const float AgxMaxEv = 4.026069;
	color *= toneMappingExposure;
	color = LINEAR_SRGB_TO_LINEAR_REC2020 * color;
	color = AgXInsetMatrix * color;
	color = max( color, 1e-10 );	color = log2( color );
	color = ( color - AgxMinEv ) / ( AgxMaxEv - AgxMinEv );
	color = clamp( color, 0.0, 1.0 );
	color = agxDefaultContrastApprox( color );
	color = AgXOutsetMatrix * color;
	color = pow( max( vec3( 0.0 ), color ), vec3( 2.2 ) );
	color = LINEAR_REC2020_TO_LINEAR_SRGB * color;
	color = clamp( color, 0.0, 1.0 );
	return color;
}
vec3 NeutralToneMapping( vec3 color ) {
	const float StartCompression = 0.8 - 0.04;
	const float Desaturation = 0.15;
	color *= toneMappingExposure;
	float x = min( color.r, min( color.g, color.b ) );
	float offset = x < 0.08 ? x - 6.25 * x * x : 0.04;
	color -= offset;
	float peak = max( color.r, max( color.g, color.b ) );
	if ( peak < StartCompression ) return color;
	float d = 1. - StartCompression;
	float newPeak = 1. - d * d / ( peak + d - StartCompression );
	color *= newPeak / peak;
	float g = 1. - 1. / ( Desaturation * ( peak - newPeak ) + 1. );
	return mix( color, vec3( newPeak ), g );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,wU=`#ifdef USE_TRANSMISSION
	material.transmission = transmission;
	material.transmissionAlpha = 1.0;
	material.thickness = thickness;
	material.attenuationDistance = attenuationDistance;
	material.attenuationColor = attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		material.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		material.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmitted = getIBLVolumeRefraction(
		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, material.dispersion, material.ior, material.thickness,
		material.attenuationColor, material.attenuationDistance );
	material.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );
	totalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );
#endif`,SU=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	float w0( float a ) {
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );
	}
	float w1( float a ) {
		return ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );
	}
	float w2( float a ){
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );
	}
	float w3( float a ) {
		return ( 1.0 / 6.0 ) * ( a * a * a );
	}
	float g0( float a ) {
		return w0( a ) + w1( a );
	}
	float g1( float a ) {
		return w2( a ) + w3( a );
	}
	float h0( float a ) {
		return - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );
	}
	float h1( float a ) {
		return 1.0 + w3( a ) / ( w2( a ) + w3( a ) );
	}
	vec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {
		uv = uv * texelSize.zw + 0.5;
		vec2 iuv = floor( uv );
		vec2 fuv = fract( uv );
		float g0x = g0( fuv.x );
		float g1x = g1( fuv.x );
		float h0x = h0( fuv.x );
		float h1x = h1( fuv.x );
		float h0y = h0( fuv.y );
		float h1y = h1( fuv.y );
		vec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		vec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		return g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +
			g1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );
	}
	vec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {
		vec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );
		vec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );
		vec2 fLodSizeInv = 1.0 / fLodSize;
		vec2 cLodSizeInv = 1.0 / cLodSize;
		vec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );
		vec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );
		return mix( fSample, cSample, fract( lod ) );
	}
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		return textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );
	}
	vec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( isinf( attenuationDistance ) ) {
			return vec3( 1.0 );
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float dispersion, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec4 transmittedLight;
		vec3 transmittance;
		#ifdef USE_DISPERSION
			float halfSpread = ( ior - 1.0 ) * 0.025 * dispersion;
			vec3 iors = vec3( ior - halfSpread, ior, ior + halfSpread );
			for ( int i = 0; i < 3; i ++ ) {
				vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, iors[ i ], modelMatrix );
				vec3 refractedRayExit = position + transmissionRay;
				vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
				vec2 refractionCoords = ndcPos.xy / ndcPos.w;
				refractionCoords += 1.0;
				refractionCoords /= 2.0;
				vec4 transmissionSample = getTransmissionSample( refractionCoords, roughness, iors[ i ] );
				transmittedLight[ i ] = transmissionSample[ i ];
				transmittedLight.a += transmissionSample.a;
				transmittance[ i ] = diffuseColor[ i ] * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance )[ i ];
			}
			transmittedLight.a /= 3.0;
		#else
			vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
			vec3 refractedRayExit = position + transmissionRay;
			vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
			vec2 refractionCoords = ndcPos.xy / ndcPos.w;
			refractionCoords += 1.0;
			refractionCoords /= 2.0;
			transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
			transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );
		#endif
		vec3 attenuatedColor = transmittance * transmittedLight.rgb;
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		float transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;
		return vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );
	}
#endif`,EU=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_SPECULARMAP
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,_U=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	uniform mat3 mapTransform;
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	uniform mat3 alphaMapTransform;
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	uniform mat3 lightMapTransform;
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	uniform mat3 aoMapTransform;
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	uniform mat3 bumpMapTransform;
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	uniform mat3 normalMapTransform;
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_DISPLACEMENTMAP
	uniform mat3 displacementMapTransform;
	varying vec2 vDisplacementMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	uniform mat3 emissiveMapTransform;
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	uniform mat3 metalnessMapTransform;
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	uniform mat3 roughnessMapTransform;
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	uniform mat3 anisotropyMapTransform;
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	uniform mat3 clearcoatMapTransform;
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform mat3 clearcoatNormalMapTransform;
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform mat3 clearcoatRoughnessMapTransform;
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	uniform mat3 sheenColorMapTransform;
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	uniform mat3 sheenRoughnessMapTransform;
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	uniform mat3 iridescenceMapTransform;
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform mat3 iridescenceThicknessMapTransform;
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SPECULARMAP
	uniform mat3 specularMapTransform;
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	uniform mat3 specularColorMapTransform;
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	uniform mat3 specularIntensityMapTransform;
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,TU=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	vUv = vec3( uv, 1 ).xy;
#endif
#ifdef USE_MAP
	vMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ALPHAMAP
	vAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_LIGHTMAP
	vLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_AOMAP
	vAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_BUMPMAP
	vBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_NORMALMAP
	vNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_DISPLACEMENTMAP
	vDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_EMISSIVEMAP
	vEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_METALNESSMAP
	vMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ROUGHNESSMAP
	vRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ANISOTROPYMAP
	vAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOATMAP
	vClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	vClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	vClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCEMAP
	vIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	vIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_COLORMAP
	vSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	vSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULARMAP
	vSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_COLORMAP
	vSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	vSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_TRANSMISSIONMAP
	vTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_THICKNESSMAP
	vThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;
#endif`,BU=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_BATCHING
		worldPosition = batchingMatrix * worldPosition;
	#endif
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const kU=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,NU=`uniform sampler2D t2D;
uniform float backgroundIntensity;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		texColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,RU=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,MU=`#ifdef ENVMAP_TYPE_CUBE
	uniform samplerCube envMap;
#elif defined( ENVMAP_TYPE_CUBE_UV )
	uniform sampler2D envMap;
#endif
uniform float flipEnvMap;
uniform float backgroundBlurriness;
uniform float backgroundIntensity;
uniform mat3 backgroundRotation;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	#ifdef ENVMAP_TYPE_CUBE
		vec4 texColor = textureCube( envMap, backgroundRotation * vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 texColor = textureCubeUV( envMap, backgroundRotation * vWorldDirection, backgroundBlurriness );
	#else
		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,DU=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,FU=`uniform samplerCube tCube;
uniform float tFlip;
uniform float opacity;
varying vec3 vWorldDirection;
void main() {
	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );
	gl_FragColor = texColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,$U=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,PU=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <logdepthbuf_fragment>
	#ifdef USE_REVERSED_DEPTH_BUFFER
		float fragCoordZ = vHighPrecisionZW[ 0 ] / vHighPrecisionZW[ 1 ];
	#else
		float fragCoordZ = 0.5 * vHighPrecisionZW[ 0 ] / vHighPrecisionZW[ 1 ] + 0.5;
	#endif
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#elif DEPTH_PACKING == 3202
		gl_FragColor = vec4( packDepthToRGB( fragCoordZ ), 1.0 );
	#elif DEPTH_PACKING == 3203
		gl_FragColor = vec4( packDepthToRG( fragCoordZ ), 0.0, 1.0 );
	#endif
}`,LU=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,OU=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,QU=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,UU=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,zU=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,GU=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,VU=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,WU=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,HU=`#define LAMBERT
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,qU=`#define LAMBERT
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_lambert_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_lambert_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,YU=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,jU=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,XU=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	vViewPosition = - mvPosition.xyz;
#endif
}`,KU=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( 0.0, 0.0, 0.0, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), diffuseColor.a );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,JU=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,ZU=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,ez=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,tz=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define USE_SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef USE_SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULAR_COLORMAP
		uniform sampler2D specularColorMap;
	#endif
	#ifdef USE_SPECULAR_INTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_DISPERSION
	uniform float dispersion;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEEN_COLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEEN_ROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
#ifdef USE_ANISOTROPY
	uniform vec2 anisotropyVector;
	#ifdef USE_ANISOTROPYMAP
		uniform sampler2D anisotropyMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecularDirect + sheenSpecularIndirect;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + ( clearcoatSpecularDirect + clearcoatSpecularIndirect ) * material.clearcoat;
	#endif
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,nz=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,sz=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,rz=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
#ifdef USE_POINTS_UV
	varying vec2 vUv;
	uniform mat3 uvTransform;
#endif
void main() {
	#ifdef USE_POINTS_UV
		vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	#endif
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,iz=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,oz=`#include <common>
#include <batching_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,az=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <logdepthbuf_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	#include <logdepthbuf_fragment>
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,lz=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix[ 3 ];
	vec2 scale = vec2( length( modelMatrix[ 0 ].xyz ), length( modelMatrix[ 1 ].xyz ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,cz=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,bn={alphahash_fragment:NO,alphahash_pars_fragment:RO,alphamap_fragment:MO,alphamap_pars_fragment:DO,alphatest_fragment:FO,alphatest_pars_fragment:$O,aomap_fragment:PO,aomap_pars_fragment:LO,batching_pars_vertex:OO,batching_vertex:QO,begin_vertex:UO,beginnormal_vertex:zO,bsdfs:GO,iridescence_fragment:VO,bumpmap_pars_fragment:WO,clipping_planes_fragment:HO,clipping_planes_pars_fragment:qO,clipping_planes_pars_vertex:YO,clipping_planes_vertex:jO,color_fragment:XO,color_pars_fragment:KO,color_pars_vertex:JO,color_vertex:ZO,common:eQ,cube_uv_reflection_fragment:tQ,defaultnormal_vertex:nQ,displacementmap_pars_vertex:sQ,displacementmap_vertex:rQ,emissivemap_fragment:iQ,emissivemap_pars_fragment:oQ,colorspace_fragment:aQ,colorspace_pars_fragment:lQ,envmap_fragment:cQ,envmap_common_pars_fragment:uQ,envmap_pars_fragment:hQ,envmap_pars_vertex:dQ,envmap_physical_pars_fragment:IQ,envmap_vertex:fQ,fog_vertex:pQ,fog_pars_vertex:mQ,fog_fragment:gQ,fog_pars_fragment:AQ,gradientmap_pars_fragment:yQ,lightmap_pars_fragment:xQ,lights_lambert_fragment:bQ,lights_lambert_pars_fragment:vQ,lights_pars_begin:CQ,lights_toon_fragment:wQ,lights_toon_pars_fragment:SQ,lights_phong_fragment:EQ,lights_phong_pars_fragment:_Q,lights_physical_fragment:TQ,lights_physical_pars_fragment:BQ,lights_fragment_begin:kQ,lights_fragment_maps:NQ,lights_fragment_end:RQ,logdepthbuf_fragment:MQ,logdepthbuf_pars_fragment:DQ,logdepthbuf_pars_vertex:FQ,logdepthbuf_vertex:$Q,map_fragment:PQ,map_pars_fragment:LQ,map_particle_fragment:OQ,map_particle_pars_fragment:QQ,metalnessmap_fragment:UQ,metalnessmap_pars_fragment:zQ,morphinstance_vertex:GQ,morphcolor_vertex:VQ,morphnormal_vertex:WQ,morphtarget_pars_vertex:HQ,morphtarget_vertex:qQ,normal_fragment_begin:YQ,normal_fragment_maps:jQ,normal_pars_fragment:XQ,normal_pars_vertex:KQ,normal_vertex:JQ,normalmap_pars_fragment:ZQ,clearcoat_normal_fragment_begin:eU,clearcoat_normal_fragment_maps:tU,clearcoat_pars_fragment:nU,iridescence_pars_fragment:sU,opaque_fragment:rU,packing:iU,premultiplied_alpha_fragment:oU,project_vertex:aU,dithering_fragment:lU,dithering_pars_fragment:cU,roughnessmap_fragment:uU,roughnessmap_pars_fragment:hU,shadowmap_pars_fragment:dU,shadowmap_pars_vertex:fU,shadowmap_vertex:pU,shadowmask_pars_fragment:mU,skinbase_vertex:gU,skinning_pars_vertex:AU,skinning_vertex:yU,skinnormal_vertex:xU,specularmap_fragment:bU,specularmap_pars_fragment:vU,tonemapping_fragment:CU,tonemapping_pars_fragment:IU,transmission_fragment:wU,transmission_pars_fragment:SU,uv_pars_fragment:EU,uv_pars_vertex:_U,uv_vertex:TU,worldpos_vertex:BU,background_vert:kU,background_frag:NU,backgroundCube_vert:RU,backgroundCube_frag:MU,cube_vert:DU,cube_frag:FU,depth_vert:$U,depth_frag:PU,distanceRGBA_vert:LU,distanceRGBA_frag:OU,equirect_vert:QU,equirect_frag:UU,linedashed_vert:zU,linedashed_frag:GU,meshbasic_vert:VU,meshbasic_frag:WU,meshlambert_vert:HU,meshlambert_frag:qU,meshmatcap_vert:YU,meshmatcap_frag:jU,meshnormal_vert:XU,meshnormal_frag:KU,meshphong_vert:JU,meshphong_frag:ZU,meshphysical_vert:ez,meshphysical_frag:tz,meshtoon_vert:nz,meshtoon_frag:sz,points_vert:rz,points_frag:iz,shadow_vert:oz,shadow_frag:az,sprite_vert:lz,sprite_frag:cz},It={common:{diffuse:{value:new In(16777215)},opacity:{value:1},map:{value:null},mapTransform:{value:new gn},alphaMap:{value:null},alphaMapTransform:{value:new gn},alphaTest:{value:0}},specularmap:{specularMap:{value:null},specularMapTransform:{value:new gn}},envmap:{envMap:{value:null},envMapRotation:{value:new gn},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1},aoMapTransform:{value:new gn}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1},lightMapTransform:{value:new gn}},bumpmap:{bumpMap:{value:null},bumpMapTransform:{value:new gn},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalMapTransform:{value:new gn},normalScale:{value:new En(1,1)}},displacementmap:{displacementMap:{value:null},displacementMapTransform:{value:new gn},displacementScale:{value:1},displacementBias:{value:0}},emissivemap:{emissiveMap:{value:null},emissiveMapTransform:{value:new gn}},metalnessmap:{metalnessMap:{value:null},metalnessMapTransform:{value:new gn}},roughnessmap:{roughnessMap:{value:null},roughnessMapTransform:{value:new gn}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new In(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new In(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaMapTransform:{value:new gn},alphaTest:{value:0},uvTransform:{value:new gn}},sprite:{diffuse:{value:new In(16777215)},opacity:{value:1},center:{value:new En(.5,.5)},rotation:{value:0},map:{value:null},mapTransform:{value:new gn},alphaMap:{value:null},alphaMapTransform:{value:new gn},alphaTest:{value:0}}},ma={basic:{uniforms:fi([It.common,It.specularmap,It.envmap,It.aomap,It.lightmap,It.fog]),vertexShader:bn.meshbasic_vert,fragmentShader:bn.meshbasic_frag},lambert:{uniforms:fi([It.common,It.specularmap,It.envmap,It.aomap,It.lightmap,It.emissivemap,It.bumpmap,It.normalmap,It.displacementmap,It.fog,It.lights,{emissive:{value:new In(0)}}]),vertexShader:bn.meshlambert_vert,fragmentShader:bn.meshlambert_frag},phong:{uniforms:fi([It.common,It.specularmap,It.envmap,It.aomap,It.lightmap,It.emissivemap,It.bumpmap,It.normalmap,It.displacementmap,It.fog,It.lights,{emissive:{value:new In(0)},specular:{value:new In(1118481)},shininess:{value:30}}]),vertexShader:bn.meshphong_vert,fragmentShader:bn.meshphong_frag},standard:{uniforms:fi([It.common,It.envmap,It.aomap,It.lightmap,It.emissivemap,It.bumpmap,It.normalmap,It.displacementmap,It.roughnessmap,It.metalnessmap,It.fog,It.lights,{emissive:{value:new In(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:bn.meshphysical_vert,fragmentShader:bn.meshphysical_frag},toon:{uniforms:fi([It.common,It.aomap,It.lightmap,It.emissivemap,It.bumpmap,It.normalmap,It.displacementmap,It.gradientmap,It.fog,It.lights,{emissive:{value:new In(0)}}]),vertexShader:bn.meshtoon_vert,fragmentShader:bn.meshtoon_frag},matcap:{uniforms:fi([It.common,It.bumpmap,It.normalmap,It.displacementmap,It.fog,{matcap:{value:null}}]),vertexShader:bn.meshmatcap_vert,fragmentShader:bn.meshmatcap_frag},points:{uniforms:fi([It.points,It.fog]),vertexShader:bn.points_vert,fragmentShader:bn.points_frag},dashed:{uniforms:fi([It.common,It.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:bn.linedashed_vert,fragmentShader:bn.linedashed_frag},depth:{uniforms:fi([It.common,It.displacementmap]),vertexShader:bn.depth_vert,fragmentShader:bn.depth_frag},normal:{uniforms:fi([It.common,It.bumpmap,It.normalmap,It.displacementmap,{opacity:{value:1}}]),vertexShader:bn.meshnormal_vert,fragmentShader:bn.meshnormal_frag},sprite:{uniforms:fi([It.sprite,It.fog]),vertexShader:bn.sprite_vert,fragmentShader:bn.sprite_frag},background:{uniforms:{uvTransform:{value:new gn},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:bn.background_vert,fragmentShader:bn.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1},backgroundRotation:{value:new gn}},vertexShader:bn.backgroundCube_vert,fragmentShader:bn.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:bn.cube_vert,fragmentShader:bn.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:bn.equirect_vert,fragmentShader:bn.equirect_frag},distanceRGBA:{uniforms:fi([It.common,It.displacementmap,{referencePosition:{value:new Ae},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:bn.distanceRGBA_vert,fragmentShader:bn.distanceRGBA_frag},shadow:{uniforms:fi([It.lights,It.fog,{color:{value:new In(0)},opacity:{value:1}}]),vertexShader:bn.shadow_vert,fragmentShader:bn.shadow_frag}};ma.physical={uniforms:fi([ma.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatMapTransform:{value:new gn},clearcoatNormalMap:{value:null},clearcoatNormalMapTransform:{value:new gn},clearcoatNormalScale:{value:new En(1,1)},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatRoughnessMapTransform:{value:new gn},dispersion:{value:0},iridescence:{value:0},iridescenceMap:{value:null},iridescenceMapTransform:{value:new gn},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},iridescenceThicknessMapTransform:{value:new gn},sheen:{value:0},sheenColor:{value:new In(0)},sheenColorMap:{value:null},sheenColorMapTransform:{value:new gn},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},sheenRoughnessMapTransform:{value:new gn},transmission:{value:0},transmissionMap:{value:null},transmissionMapTransform:{value:new gn},transmissionSamplerSize:{value:new En},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},thicknessMapTransform:{value:new gn},attenuationDistance:{value:0},attenuationColor:{value:new In(0)},specularColor:{value:new In(1,1,1)},specularColorMap:{value:null},specularColorMapTransform:{value:new gn},specularIntensity:{value:1},specularIntensityMap:{value:null},specularIntensityMapTransform:{value:new gn},anisotropyVector:{value:new En},anisotropyMap:{value:null},anisotropyMapTransform:{value:new gn}}]),vertexShader:bn.meshphysical_vert,fragmentShader:bn.meshphysical_frag};const fy={r:0,b:0,g:0},Lc=new Ta,uz=new is;function hz(n,e,t,s,r,i,o){const a=new In(0);let l=i===!0?0:1,c,u,h=null,d=0,f=null;function p(v){let b=v.isScene===!0?v.background:null;return b&&b.isTexture&&(b=(v.backgroundBlurriness>0?t:e).get(b)),b}function A(v){let b=!1;const w=p(v);w===null?g(a,l):w&&w.isColor&&(g(w,1),b=!0);const _=n.xr.getEnvironmentBlendMode();_==="additive"?s.buffers.color.setClear(0,0,0,1,o):_==="alpha-blend"&&s.buffers.color.setClear(0,0,0,0,o),(n.autoClear||b)&&(s.buffers.depth.setTest(!0),s.buffers.depth.setMask(!0),s.buffers.color.setMask(!0),n.clear(n.autoClearColor,n.autoClearDepth,n.autoClearStencil))}function m(v,b){const w=p(b);w&&(w.isCubeTexture||w.mapping===ex)?(u===void 0&&(u=new hr(new hf(1,1,1),new So({name:"BackgroundCubeMaterial",uniforms:zd(ma.backgroundCube.uniforms),vertexShader:ma.backgroundCube.vertexShader,fragmentShader:ma.backgroundCube.fragmentShader,side:Li,depthTest:!1,depthWrite:!1,fog:!1,allowOverride:!1})),u.geometry.deleteAttribute("normal"),u.geometry.deleteAttribute("uv"),u.onBeforeRender=function(_,N,M){this.matrixWorld.copyPosition(M.matrixWorld)},Object.defineProperty(u.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),r.update(u)),Lc.copy(b.backgroundRotation),Lc.x*=-1,Lc.y*=-1,Lc.z*=-1,w.isCubeTexture&&w.isRenderTargetTexture===!1&&(Lc.y*=-1,Lc.z*=-1),u.material.uniforms.envMap.value=w,u.material.uniforms.flipEnvMap.value=w.isCubeTexture&&w.isRenderTargetTexture===!1?-1:1,u.material.uniforms.backgroundBlurriness.value=b.backgroundBlurriness,u.material.uniforms.backgroundIntensity.value=b.backgroundIntensity,u.material.uniforms.backgroundRotation.value.setFromMatrix4(uz.makeRotationFromEuler(Lc)),u.material.toneMapped=Gn.getTransfer(w.colorSpace)!==rs,(h!==w||d!==w.version||f!==n.toneMapping)&&(u.material.needsUpdate=!0,h=w,d=w.version,f=n.toneMapping),u.layers.enableAll(),v.unshift(u,u.geometry,u.material,0,0,null)):w&&w.isTexture&&(c===void 0&&(c=new hr(new df(2,2),new So({name:"BackgroundMaterial",uniforms:zd(ma.background.uniforms),vertexShader:ma.background.vertexShader,fragmentShader:ma.background.fragmentShader,side:ec,depthTest:!1,depthWrite:!1,fog:!1,allowOverride:!1})),c.geometry.deleteAttribute("normal"),Object.defineProperty(c.material,"map",{get:function(){return this.uniforms.t2D.value}}),r.update(c)),c.material.uniforms.t2D.value=w,c.material.uniforms.backgroundIntensity.value=b.backgroundIntensity,c.material.toneMapped=Gn.getTransfer(w.colorSpace)!==rs,w.matrixAutoUpdate===!0&&w.updateMatrix(),c.material.uniforms.uvTransform.value.copy(w.matrix),(h!==w||d!==w.version||f!==n.toneMapping)&&(c.material.needsUpdate=!0,h=w,d=w.version,f=n.toneMapping),c.layers.enableAll(),v.unshift(c,c.geometry,c.material,0,0,null))}function g(v,b){v.getRGB(fy,CB(n)),s.buffers.color.setClear(fy.r,fy.g,fy.b,b,o)}function x(){u!==void 0&&(u.geometry.dispose(),u.material.dispose(),u=void 0),c!==void 0&&(c.geometry.dispose(),c.material.dispose(),c=void 0)}return{getClearColor:function(){return a},setClearColor:function(v,b=1){a.set(v),l=b,g(a,l)},getClearAlpha:function(){return l},setClearAlpha:function(v){l=v,g(a,l)},render:A,addToRenderList:m,dispose:x}}function dz(n,e){const t=n.getParameter(n.MAX_VERTEX_ATTRIBS),s={},r=d(null);let i=r,o=!1;function a(k,B,L,U,V){let W=!1;const H=h(U,L,B);i!==H&&(i=H,c(i.object)),W=f(k,U,L,V),W&&p(k,U,L,V),V!==null&&e.update(V,n.ELEMENT_ARRAY_BUFFER),(W||o)&&(o=!1,b(k,B,L,U),V!==null&&n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,e.get(V).buffer))}function l(){return n.createVertexArray()}function c(k){return n.bindVertexArray(k)}function u(k){return n.deleteVertexArray(k)}function h(k,B,L){const U=L.wireframe===!0;let V=s[k.id];V===void 0&&(V={},s[k.id]=V);let W=V[B.id];W===void 0&&(W={},V[B.id]=W);let H=W[U];return H===void 0&&(H=d(l()),W[U]=H),H}function d(k){const B=[],L=[],U=[];for(let V=0;V<t;V++)B[V]=0,L[V]=0,U[V]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:B,enabledAttributes:L,attributeDivisors:U,object:k,attributes:{},index:null}}function f(k,B,L,U){const V=i.attributes,W=B.attributes;let H=0;const ee=L.getAttributes();for(const K in ee)if(ee[K].location>=0){const le=V[K];let fe=W[K];if(fe===void 0&&(K==="instanceMatrix"&&k.instanceMatrix&&(fe=k.instanceMatrix),K==="instanceColor"&&k.instanceColor&&(fe=k.instanceColor)),le===void 0||le.attribute!==fe||fe&&le.data!==fe.data)return!0;H++}return i.attributesNum!==H||i.index!==U}function p(k,B,L,U){const V={},W=B.attributes;let H=0;const ee=L.getAttributes();for(const K in ee)if(ee[K].location>=0){let le=W[K];le===void 0&&(K==="instanceMatrix"&&k.instanceMatrix&&(le=k.instanceMatrix),K==="instanceColor"&&k.instanceColor&&(le=k.instanceColor));const fe={};fe.attribute=le,le&&le.data&&(fe.data=le.data),V[K]=fe,H++}i.attributes=V,i.attributesNum=H,i.index=U}function A(){const k=i.newAttributes;for(let B=0,L=k.length;B<L;B++)k[B]=0}function m(k){g(k,0)}function g(k,B){const L=i.newAttributes,U=i.enabledAttributes,V=i.attributeDivisors;L[k]=1,U[k]===0&&(n.enableVertexAttribArray(k),U[k]=1),V[k]!==B&&(n.vertexAttribDivisor(k,B),V[k]=B)}function x(){const k=i.newAttributes,B=i.enabledAttributes;for(let L=0,U=B.length;L<U;L++)B[L]!==k[L]&&(n.disableVertexAttribArray(L),B[L]=0)}function v(k,B,L,U,V,W,H){H===!0?n.vertexAttribIPointer(k,B,L,V,W):n.vertexAttribPointer(k,B,L,U,V,W)}function b(k,B,L,U){A();const V=U.attributes,W=L.getAttributes(),H=B.defaultAttributeValues;for(const ee in W){const K=W[ee];if(K.location>=0){let te=V[ee];if(te===void 0&&(ee==="instanceMatrix"&&k.instanceMatrix&&(te=k.instanceMatrix),ee==="instanceColor"&&k.instanceColor&&(te=k.instanceColor)),te!==void 0){const le=te.normalized,fe=te.itemSize,Ie=e.get(te);if(Ie===void 0)continue;const Se=Ie.buffer,De=Ie.type,Be=Ie.bytesPerElement,he=De===n.INT||De===n.UNSIGNED_INT||te.gpuType===WC;if(te.isInterleavedBufferAttribute){const ge=te.data,Ne=ge.stride,Oe=te.offset;if(ge.isInstancedInterleavedBuffer){for(let Qe=0;Qe<K.locationSize;Qe++)g(K.location+Qe,ge.meshPerAttribute);k.isInstancedMesh!==!0&&U._maxInstanceCount===void 0&&(U._maxInstanceCount=ge.meshPerAttribute*ge.count)}else for(let Qe=0;Qe<K.locationSize;Qe++)m(K.location+Qe);n.bindBuffer(n.ARRAY_BUFFER,Se);for(let Qe=0;Qe<K.locationSize;Qe++)v(K.location+Qe,fe/K.locationSize,De,le,Ne*Be,(Oe+fe/K.locationSize*Qe)*Be,he)}else{if(te.isInstancedBufferAttribute){for(let ge=0;ge<K.locationSize;ge++)g(K.location+ge,te.meshPerAttribute);k.isInstancedMesh!==!0&&U._maxInstanceCount===void 0&&(U._maxInstanceCount=te.meshPerAttribute*te.count)}else for(let ge=0;ge<K.locationSize;ge++)m(K.location+ge);n.bindBuffer(n.ARRAY_BUFFER,Se);for(let ge=0;ge<K.locationSize;ge++)v(K.location+ge,fe/K.locationSize,De,le,fe*Be,fe/K.locationSize*ge*Be,he)}}else if(H!==void 0){const le=H[ee];if(le!==void 0)switch(le.length){case 2:n.vertexAttrib2fv(K.location,le);break;case 3:n.vertexAttrib3fv(K.location,le);break;case 4:n.vertexAttrib4fv(K.location,le);break;default:n.vertexAttrib1fv(K.location,le)}}}}x()}function w(){M();for(const k in s){const B=s[k];for(const L in B){const U=B[L];for(const V in U)u(U[V].object),delete U[V];delete B[L]}delete s[k]}}function _(k){if(s[k.id]===void 0)return;const B=s[k.id];for(const L in B){const U=B[L];for(const V in U)u(U[V].object),delete U[V];delete B[L]}delete s[k.id]}function N(k){for(const B in s){const L=s[B];if(L[k.id]===void 0)continue;const U=L[k.id];for(const V in U)u(U[V].object),delete U[V];delete L[k.id]}}function M(){T(),o=!0,i!==r&&(i=r,c(i.object))}function T(){r.geometry=null,r.program=null,r.wireframe=!1}return{setup:a,reset:M,resetDefaultState:T,dispose:w,releaseStatesOfGeometry:_,releaseStatesOfProgram:N,initAttributes:A,enableAttribute:m,disableUnusedAttributes:x}}function fz(n,e,t){let s;function r(c){s=c}function i(c,u){n.drawArrays(s,c,u),t.update(u,s,1)}function o(c,u,h){h!==0&&(n.drawArraysInstanced(s,c,u,h),t.update(u,s,h))}function a(c,u,h){if(h===0)return;e.get("WEBGL_multi_draw").multiDrawArraysWEBGL(s,c,0,u,0,h);let f=0;for(let p=0;p<h;p++)f+=u[p];t.update(f,s,1)}function l(c,u,h,d){if(h===0)return;const f=e.get("WEBGL_multi_draw");if(f===null)for(let p=0;p<c.length;p++)o(c[p],u[p],d[p]);else{f.multiDrawArraysInstancedWEBGL(s,c,0,u,0,d,0,h);let p=0;for(let A=0;A<h;A++)p+=u[A]*d[A];t.update(p,s,1)}}this.setMode=r,this.render=i,this.renderInstances=o,this.renderMultiDraw=a,this.renderMultiDrawInstances=l}function pz(n,e,t,s){let r;function i(){if(r!==void 0)return r;if(e.has("EXT_texture_filter_anisotropic")===!0){const N=e.get("EXT_texture_filter_anisotropic");r=n.getParameter(N.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else r=0;return r}function o(N){return!(N!==Er&&s.convert(N)!==n.getParameter(n.IMPLEMENTATION_COLOR_READ_FORMAT))}function a(N){const M=N===ng&&(e.has("EXT_color_buffer_half_float")||e.has("EXT_color_buffer_float"));return!(N!==Ui&&s.convert(N)!==n.getParameter(n.IMPLEMENTATION_COLOR_READ_TYPE)&&N!==ol&&!M)}function l(N){if(N==="highp"){if(n.getShaderPrecisionFormat(n.VERTEX_SHADER,n.HIGH_FLOAT).precision>0&&n.getShaderPrecisionFormat(n.FRAGMENT_SHADER,n.HIGH_FLOAT).precision>0)return"highp";N="mediump"}return N==="mediump"&&n.getShaderPrecisionFormat(n.VERTEX_SHADER,n.MEDIUM_FLOAT).precision>0&&n.getShaderPrecisionFormat(n.FRAGMENT_SHADER,n.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}let c=t.precision!==void 0?t.precision:"highp";const u=l(c);u!==c&&(console.warn("THREE.WebGLRenderer:",c,"not supported, using",u,"instead."),c=u);const h=t.logarithmicDepthBuffer===!0,d=t.reversedDepthBuffer===!0&&e.has("EXT_clip_control"),f=n.getParameter(n.MAX_TEXTURE_IMAGE_UNITS),p=n.getParameter(n.MAX_VERTEX_TEXTURE_IMAGE_UNITS),A=n.getParameter(n.MAX_TEXTURE_SIZE),m=n.getParameter(n.MAX_CUBE_MAP_TEXTURE_SIZE),g=n.getParameter(n.MAX_VERTEX_ATTRIBS),x=n.getParameter(n.MAX_VERTEX_UNIFORM_VECTORS),v=n.getParameter(n.MAX_VARYING_VECTORS),b=n.getParameter(n.MAX_FRAGMENT_UNIFORM_VECTORS),w=p>0,_=n.getParameter(n.MAX_SAMPLES);return{isWebGL2:!0,getMaxAnisotropy:i,getMaxPrecision:l,textureFormatReadable:o,textureTypeReadable:a,precision:c,logarithmicDepthBuffer:h,reversedDepthBuffer:d,maxTextures:f,maxVertexTextures:p,maxTextureSize:A,maxCubemapSize:m,maxAttributes:g,maxVertexUniforms:x,maxVaryings:v,maxFragmentUniforms:b,vertexTextures:w,maxSamples:_}}function mz(n){const e=this;let t=null,s=0,r=!1,i=!1;const o=new Gc,a=new gn,l={value:null,needsUpdate:!1};this.uniform=l,this.numPlanes=0,this.numIntersection=0,this.init=function(h,d){const f=h.length!==0||d||s!==0||r;return r=d,s=h.length,f},this.beginShadows=function(){i=!0,u(null)},this.endShadows=function(){i=!1},this.setGlobalState=function(h,d){t=u(h,d,0)},this.setState=function(h,d,f){const p=h.clippingPlanes,A=h.clipIntersection,m=h.clipShadows,g=n.get(h);if(!r||p===null||p.length===0||i&&!m)i?u(null):c();else{const x=i?0:s,v=x*4;let b=g.clippingState||null;l.value=b,b=u(p,d,v,f);for(let w=0;w!==v;++w)b[w]=t[w];g.clippingState=b,this.numIntersection=A?this.numPlanes:0,this.numPlanes+=x}};function c(){l.value!==t&&(l.value=t,l.needsUpdate=s>0),e.numPlanes=s,e.numIntersection=0}function u(h,d,f,p){const A=h!==null?h.length:0;let m=null;if(A!==0){if(m=l.value,p!==!0||m===null){const g=f+A*4,x=d.matrixWorldInverse;a.getNormalMatrix(x),(m===null||m.length<g)&&(m=new Float32Array(g));for(let v=0,b=f;v!==A;++v,b+=4)o.copy(h[v]).applyMatrix4(x,a),o.normal.toArray(m,b),m[b+3]=o.constant}l.value=m,l.needsUpdate=!0}return e.numPlanes=A,e.numIntersection=0,m}}function gz(n){let e=new WeakMap;function t(o,a){return a===Wb?o.mapping=Od:a===Hb&&(o.mapping=Qd),o}function s(o){if(o&&o.isTexture){const a=o.mapping;if(a===Wb||a===Hb)if(e.has(o)){const l=e.get(o).texture;return t(l,o.mapping)}else{const l=o.image;if(l&&l.height>0){const c=new EB(l.height);return c.fromEquirectangularTexture(n,o),e.set(o,c),o.addEventListener("dispose",r),t(c.texture,o.mapping)}else return null}}return o}function r(o){const a=o.target;a.removeEventListener("dispose",r);const l=e.get(a);l!==void 0&&(e.delete(a),l.dispose())}function i(){e=new WeakMap}return{get:s,dispose:i}}const Bd=4,uE=[.125,.215,.35,.446,.526,.582],Xc=20,_2=new NB,hE=new In;let T2=null,B2=0,k2=0,N2=!1;const Vc=(1+Math.sqrt(5))/2,pd=1/Vc,dE=[new Ae(-Vc,pd,0),new Ae(Vc,pd,0),new Ae(-pd,0,Vc),new Ae(pd,0,Vc),new Ae(0,Vc,-pd),new Ae(0,Vc,pd),new Ae(-1,1,-1),new Ae(1,1,-1),new Ae(-1,1,1),new Ae(1,1,1)],Az=new Ae;class wv{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,s=.1,r=100,i={}){const{size:o=256,position:a=Az}=i;T2=this._renderer.getRenderTarget(),B2=this._renderer.getActiveCubeFace(),k2=this._renderer.getActiveMipmapLevel(),N2=this._renderer.xr.enabled,this._renderer.xr.enabled=!1,this._setSize(o);const l=this._allocateTargets();return l.depthBuffer=!0,this._sceneToCubeUV(e,s,r,l,a),t>0&&this._blur(l,0,0,t),this._applyPMREM(l),this._cleanup(l),l}fromEquirectangular(e,t=null){return this._fromTexture(e,t)}fromCubemap(e,t=null){return this._fromTexture(e,t)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=mE(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=pE(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(T2,B2,k2),this._renderer.xr.enabled=N2,e.scissorTest=!1,py(e,0,0,e.width,e.height)}_fromTexture(e,t){e.mapping===Od||e.mapping===Qd?this._setSize(e.image.length===0?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),T2=this._renderer.getRenderTarget(),B2=this._renderer.getActiveCubeFace(),k2=this._renderer.getActiveMipmapLevel(),N2=this._renderer.xr.enabled,this._renderer.xr.enabled=!1;const s=t||this._allocateTargets();return this._textureToCubeUV(e,s),this._applyPMREM(s),this._cleanup(s),s}_allocateTargets(){const e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize,s={magFilter:Pi,minFilter:Pi,generateMipmaps:!1,type:ng,format:Er,colorSpace:Ud,depthBuffer:!1},r=fE(e,t,s);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==e||this._pingPongRenderTarget.height!==t){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=fE(e,t,s);const{_lodMax:i}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=yz(i)),this._blurMaterial=xz(i,e,t)}return r}_compileMaterial(e){const t=new hr(this._lodPlanes[0],e);this._renderer.compile(t,_2)}_sceneToCubeUV(e,t,s,r,i){const l=new Fi(90,1,t,s),c=[1,-1,1,1,1,1],u=[1,1,1,-1,-1,-1],h=this._renderer,d=h.autoClear,f=h.toneMapping;h.getClearColor(hE),h.toneMapping=jl,h.autoClear=!1,h.state.buffers.depth.getReversed()&&(h.setRenderTarget(r),h.clearDepth(),h.setRenderTarget(null));const A=new nx({name:"PMREM.Background",side:Li,depthWrite:!1,depthTest:!1}),m=new hr(new hf,A);let g=!1;const x=e.background;x?x.isColor&&(A.color.copy(x),e.background=null,g=!0):(A.color.copy(hE),g=!0);for(let v=0;v<6;v++){const b=v%3;b===0?(l.up.set(0,c[v],0),l.position.set(i.x,i.y,i.z),l.lookAt(i.x+u[v],i.y,i.z)):b===1?(l.up.set(0,0,c[v]),l.position.set(i.x,i.y,i.z),l.lookAt(i.x,i.y+u[v],i.z)):(l.up.set(0,c[v],0),l.position.set(i.x,i.y,i.z),l.lookAt(i.x,i.y,i.z+u[v]));const w=this._cubeSize;py(r,b*w,v>2?w:0,w,w),h.setRenderTarget(r),g&&h.render(m,l),h.render(e,l)}m.geometry.dispose(),m.material.dispose(),h.toneMapping=f,h.autoClear=d,e.background=x}_textureToCubeUV(e,t){const s=this._renderer,r=e.mapping===Od||e.mapping===Qd;r?(this._cubemapMaterial===null&&(this._cubemapMaterial=mE()),this._cubemapMaterial.uniforms.flipEnvMap.value=e.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=pE());const i=r?this._cubemapMaterial:this._equirectMaterial,o=new hr(this._lodPlanes[0],i),a=i.uniforms;a.envMap.value=e;const l=this._cubeSize;py(t,0,0,3*l,2*l),s.setRenderTarget(t),s.render(o,_2)}_applyPMREM(e){const t=this._renderer,s=t.autoClear;t.autoClear=!1;const r=this._lodPlanes.length;for(let i=1;i<r;i++){const o=Math.sqrt(this._sigmas[i]*this._sigmas[i]-this._sigmas[i-1]*this._sigmas[i-1]),a=dE[(r-i-1)%dE.length];this._blur(e,i-1,i,o,a)}t.autoClear=s}_blur(e,t,s,r,i){const o=this._pingPongRenderTarget;this._halfBlur(e,o,t,s,r,"latitudinal",i),this._halfBlur(o,e,s,s,r,"longitudinal",i)}_halfBlur(e,t,s,r,i,o,a){const l=this._renderer,c=this._blurMaterial;o!=="latitudinal"&&o!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const u=3,h=new hr(this._lodPlanes[r],c),d=c.uniforms,f=this._sizeLods[s]-1,p=isFinite(i)?Math.PI/(2*f):2*Math.PI/(2*Xc-1),A=i/p,m=isFinite(i)?1+Math.floor(u*A):Xc;m>Xc&&console.warn(`sigmaRadians, ${i}, is too large and will clip, as it requested ${m} samples when the maximum is set to ${Xc}`);const g=[];let x=0;for(let N=0;N<Xc;++N){const M=N/A,T=Math.exp(-M*M/2);g.push(T),N===0?x+=T:N<m&&(x+=2*T)}for(let N=0;N<g.length;N++)g[N]=g[N]/x;d.envMap.value=e.texture,d.samples.value=m,d.weights.value=g,d.latitudinal.value=o==="latitudinal",a&&(d.poleAxis.value=a);const{_lodMax:v}=this;d.dTheta.value=p,d.mipInt.value=v-s;const b=this._sizeLods[r],w=3*b*(r>v-Bd?r-v+Bd:0),_=4*(this._cubeSize-b);py(t,w,_,3*b,2*b),l.setRenderTarget(t),l.render(h,_2)}}function yz(n){const e=[],t=[],s=[];let r=n;const i=n-Bd+1+uE.length;for(let o=0;o<i;o++){const a=Math.pow(2,r);t.push(a);let l=1/a;o>n-Bd?l=uE[o-n+Bd-1]:o===0&&(l=0),s.push(l);const c=1/(a-2),u=-c,h=1+c,d=[u,u,h,u,h,h,u,u,h,h,u,h],f=6,p=6,A=3,m=2,g=1,x=new Float32Array(A*p*f),v=new Float32Array(m*p*f),b=new Float32Array(g*p*f);for(let _=0;_<f;_++){const N=_%3*2/3-1,M=_>2?0:-1,T=[N,M,0,N+2/3,M,0,N+2/3,M+1,0,N,M,0,N+2/3,M+1,0,N,M+1,0];x.set(T,A*p*_),v.set(d,m*p*_);const k=[_,_,_,_,_,_];b.set(k,g*p*_)}const w=new sa;w.setAttribute("position",new io(x,A)),w.setAttribute("uv",new io(v,m)),w.setAttribute("faceIndex",new io(b,g)),e.push(w),r>Bd&&r--}return{lodPlanes:e,sizeLods:t,sigmas:s}}function fE(n,e,t){const s=new _a(n,e,t);return s.texture.mapping=ex,s.texture.name="PMREM.cubeUv",s.scissorTest=!0,s}function py(n,e,t,s,r){n.viewport.set(e,t,s,r),n.scissor.set(e,t,s,r)}function xz(n,e,t){const s=new Float32Array(Xc),r=new Ae(0,1,0);return new So({name:"SphericalGaussianBlur",defines:{n:Xc,CUBEUV_TEXEL_WIDTH:1/e,CUBEUV_TEXEL_HEIGHT:1/t,CUBEUV_MAX_MIP:`${n}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:s},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:r}},vertexShader:eI(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:Yl,depthTest:!1,depthWrite:!1})}function pE(){return new So({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:eI(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:Yl,depthTest:!1,depthWrite:!1})}function mE(){return new So({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:eI(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:Yl,depthTest:!1,depthWrite:!1})}function eI(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function bz(n){let e=new WeakMap,t=null;function s(a){if(a&&a.isTexture){const l=a.mapping,c=l===Wb||l===Hb,u=l===Od||l===Qd;if(c||u){let h=e.get(a);const d=h!==void 0?h.texture.pmremVersion:0;if(a.isRenderTargetTexture&&a.pmremVersion!==d)return t===null&&(t=new wv(n)),h=c?t.fromEquirectangular(a,h):t.fromCubemap(a,h),h.texture.pmremVersion=a.pmremVersion,e.set(a,h),h.texture;if(h!==void 0)return h.texture;{const f=a.image;return c&&f&&f.height>0||u&&f&&r(f)?(t===null&&(t=new wv(n)),h=c?t.fromEquirectangular(a):t.fromCubemap(a),h.texture.pmremVersion=a.pmremVersion,e.set(a,h),a.addEventListener("dispose",i),h.texture):null}}}return a}function r(a){let l=0;const c=6;for(let u=0;u<c;u++)a[u]!==void 0&&l++;return l===c}function i(a){const l=a.target;l.removeEventListener("dispose",i);const c=e.get(l);c!==void 0&&(e.delete(l),c.dispose())}function o(){e=new WeakMap,t!==null&&(t.dispose(),t=null)}return{get:s,dispose:o}}function vz(n){const e={};function t(s){if(e[s]!==void 0)return e[s];let r;switch(s){case"WEBGL_depth_texture":r=n.getExtension("WEBGL_depth_texture")||n.getExtension("MOZ_WEBGL_depth_texture")||n.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":r=n.getExtension("EXT_texture_filter_anisotropic")||n.getExtension("MOZ_EXT_texture_filter_anisotropic")||n.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":r=n.getExtension("WEBGL_compressed_texture_s3tc")||n.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||n.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":r=n.getExtension("WEBGL_compressed_texture_pvrtc")||n.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:r=n.getExtension(s)}return e[s]=r,r}return{has:function(s){return t(s)!==null},init:function(){t("EXT_color_buffer_float"),t("WEBGL_clip_cull_distance"),t("OES_texture_float_linear"),t("EXT_color_buffer_half_float"),t("WEBGL_multisampled_render_to_texture"),t("WEBGL_render_shared_exponent")},get:function(s){const r=t(s);return r===null&&_m("THREE.WebGLRenderer: "+s+" extension not supported."),r}}}function Cz(n,e,t,s){const r={},i=new WeakMap;function o(h){const d=h.target;d.index!==null&&e.remove(d.index);for(const p in d.attributes)e.remove(d.attributes[p]);d.removeEventListener("dispose",o),delete r[d.id];const f=i.get(d);f&&(e.remove(f),i.delete(d)),s.releaseStatesOfGeometry(d),d.isInstancedBufferGeometry===!0&&delete d._maxInstanceCount,t.memory.geometries--}function a(h,d){return r[d.id]===!0||(d.addEventListener("dispose",o),r[d.id]=!0,t.memory.geometries++),d}function l(h){const d=h.attributes;for(const f in d)e.update(d[f],n.ARRAY_BUFFER)}function c(h){const d=[],f=h.index,p=h.attributes.position;let A=0;if(f!==null){const x=f.array;A=f.version;for(let v=0,b=x.length;v<b;v+=3){const w=x[v+0],_=x[v+1],N=x[v+2];d.push(w,_,_,N,N,w)}}else if(p!==void 0){const x=p.array;A=p.version;for(let v=0,b=x.length/3-1;v<b;v+=3){const w=v+0,_=v+1,N=v+2;d.push(w,_,_,N,N,w)}}else return;const m=new(mB(d)?vB:bB)(d,1);m.version=A;const g=i.get(h);g&&e.remove(g),i.set(h,m)}function u(h){const d=i.get(h);if(d){const f=h.index;f!==null&&d.version<f.version&&c(h)}else c(h);return i.get(h)}return{get:a,update:l,getWireframeAttribute:u}}function Iz(n,e,t){let s;function r(d){s=d}let i,o;function a(d){i=d.type,o=d.bytesPerElement}function l(d,f){n.drawElements(s,f,i,d*o),t.update(f,s,1)}function c(d,f,p){p!==0&&(n.drawElementsInstanced(s,f,i,d*o,p),t.update(f,s,p))}function u(d,f,p){if(p===0)return;e.get("WEBGL_multi_draw").multiDrawElementsWEBGL(s,f,0,i,d,0,p);let m=0;for(let g=0;g<p;g++)m+=f[g];t.update(m,s,1)}function h(d,f,p,A){if(p===0)return;const m=e.get("WEBGL_multi_draw");if(m===null)for(let g=0;g<d.length;g++)c(d[g]/o,f[g],A[g]);else{m.multiDrawElementsInstancedWEBGL(s,f,0,i,d,0,A,0,p);let g=0;for(let x=0;x<p;x++)g+=f[x]*A[x];t.update(g,s,1)}}this.setMode=r,this.setIndex=a,this.render=l,this.renderInstances=c,this.renderMultiDraw=u,this.renderMultiDrawInstances=h}function wz(n){const e={geometries:0,textures:0},t={frame:0,calls:0,triangles:0,points:0,lines:0};function s(i,o,a){switch(t.calls++,o){case n.TRIANGLES:t.triangles+=a*(i/3);break;case n.LINES:t.lines+=a*(i/2);break;case n.LINE_STRIP:t.lines+=a*(i-1);break;case n.LINE_LOOP:t.lines+=a*i;break;case n.POINTS:t.points+=a*i;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",o);break}}function r(){t.calls=0,t.triangles=0,t.points=0,t.lines=0}return{memory:e,render:t,programs:null,autoReset:!0,reset:r,update:s}}function Sz(n,e,t){const s=new WeakMap,r=new Vn;function i(o,a,l){const c=o.morphTargetInfluences,u=a.morphAttributes.position||a.morphAttributes.normal||a.morphAttributes.color,h=u!==void 0?u.length:0;let d=s.get(a);if(d===void 0||d.count!==h){let T=function(){N.dispose(),s.delete(a),a.removeEventListener("dispose",T)};d!==void 0&&d.texture.dispose();const f=a.morphAttributes.position!==void 0,p=a.morphAttributes.normal!==void 0,A=a.morphAttributes.color!==void 0,m=a.morphAttributes.position||[],g=a.morphAttributes.normal||[],x=a.morphAttributes.color||[];let v=0;f===!0&&(v=1),p===!0&&(v=2),A===!0&&(v=3);let b=a.attributes.position.count*v,w=1;b>e.maxTextureSize&&(w=Math.ceil(b/e.maxTextureSize),b=e.maxTextureSize);const _=new Float32Array(b*w*4*h),N=new Ca(_,b,w,h);N.type=ol,N.needsUpdate=!0;const M=v*4;for(let k=0;k<h;k++){const B=m[k],L=g[k],U=x[k],V=b*w*4*k;for(let W=0;W<B.count;W++){const H=W*M;f===!0&&(r.fromBufferAttribute(B,W),_[V+H+0]=r.x,_[V+H+1]=r.y,_[V+H+2]=r.z,_[V+H+3]=0),p===!0&&(r.fromBufferAttribute(L,W),_[V+H+4]=r.x,_[V+H+5]=r.y,_[V+H+6]=r.z,_[V+H+7]=0),A===!0&&(r.fromBufferAttribute(U,W),_[V+H+8]=r.x,_[V+H+9]=r.y,_[V+H+10]=r.z,_[V+H+11]=U.itemSize===4?r.w:1)}}d={count:h,texture:N,size:new En(b,w)},s.set(a,d),a.addEventListener("dispose",T)}if(o.isInstancedMesh===!0&&o.morphTexture!==null)l.getUniforms().setValue(n,"morphTexture",o.morphTexture,t);else{let f=0;for(let A=0;A<c.length;A++)f+=c[A];const p=a.morphTargetsRelative?1:1-f;l.getUniforms().setValue(n,"morphTargetBaseInfluence",p),l.getUniforms().setValue(n,"morphTargetInfluences",c)}l.getUniforms().setValue(n,"morphTargetsTexture",d.texture,t),l.getUniforms().setValue(n,"morphTargetsTextureSize",d.size)}return{update:i}}function Ez(n,e,t,s){let r=new WeakMap;function i(l){const c=s.render.frame,u=l.geometry,h=e.get(l,u);if(r.get(h)!==c&&(e.update(h),r.set(h,c)),l.isInstancedMesh&&(l.hasEventListener("dispose",a)===!1&&l.addEventListener("dispose",a),r.get(l)!==c&&(t.update(l.instanceMatrix,n.ARRAY_BUFFER),l.instanceColor!==null&&t.update(l.instanceColor,n.ARRAY_BUFFER),r.set(l,c))),l.isSkinnedMesh){const d=l.skeleton;r.get(d)!==c&&(d.update(),r.set(d,c))}return h}function o(){r=new WeakMap}function a(l){const c=l.target;c.removeEventListener("dispose",a),t.remove(c.instanceMatrix),c.instanceColor!==null&&t.remove(c.instanceColor)}return{update:i,dispose:o}}const DB=new _r,gE=new TB(1,1),FB=new Ca,$B=new AB,PB=new SB,AE=[],yE=[],xE=new Float32Array(16),bE=new Float32Array(9),vE=new Float32Array(4);function ff(n,e,t){const s=n[0];if(s<=0||s>0)return n;const r=e*t;let i=AE[r];if(i===void 0&&(i=new Float32Array(r),AE[r]=i),e!==0){s.toArray(i,0);for(let o=1,a=0;o!==e;++o)a+=t,n[o].toArray(i,a)}return i}function pr(n,e){if(n.length!==e.length)return!1;for(let t=0,s=n.length;t<s;t++)if(n[t]!==e[t])return!1;return!0}function mr(n,e){for(let t=0,s=e.length;t<s;t++)n[t]=e[t]}function ix(n,e){let t=yE[e];t===void 0&&(t=new Int32Array(e),yE[e]=t);for(let s=0;s!==e;++s)t[s]=n.allocateTextureUnit();return t}function _z(n,e){const t=this.cache;t[0]!==e&&(n.uniform1f(this.addr,e),t[0]=e)}function Tz(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(n.uniform2f(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(pr(t,e))return;n.uniform2fv(this.addr,e),mr(t,e)}}function Bz(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(n.uniform3f(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else if(e.r!==void 0)(t[0]!==e.r||t[1]!==e.g||t[2]!==e.b)&&(n.uniform3f(this.addr,e.r,e.g,e.b),t[0]=e.r,t[1]=e.g,t[2]=e.b);else{if(pr(t,e))return;n.uniform3fv(this.addr,e),mr(t,e)}}function kz(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(n.uniform4f(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(pr(t,e))return;n.uniform4fv(this.addr,e),mr(t,e)}}function Nz(n,e){const t=this.cache,s=e.elements;if(s===void 0){if(pr(t,e))return;n.uniformMatrix2fv(this.addr,!1,e),mr(t,e)}else{if(pr(t,s))return;vE.set(s),n.uniformMatrix2fv(this.addr,!1,vE),mr(t,s)}}function Rz(n,e){const t=this.cache,s=e.elements;if(s===void 0){if(pr(t,e))return;n.uniformMatrix3fv(this.addr,!1,e),mr(t,e)}else{if(pr(t,s))return;bE.set(s),n.uniformMatrix3fv(this.addr,!1,bE),mr(t,s)}}function Mz(n,e){const t=this.cache,s=e.elements;if(s===void 0){if(pr(t,e))return;n.uniformMatrix4fv(this.addr,!1,e),mr(t,e)}else{if(pr(t,s))return;xE.set(s),n.uniformMatrix4fv(this.addr,!1,xE),mr(t,s)}}function Dz(n,e){const t=this.cache;t[0]!==e&&(n.uniform1i(this.addr,e),t[0]=e)}function Fz(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(n.uniform2i(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(pr(t,e))return;n.uniform2iv(this.addr,e),mr(t,e)}}function $z(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(n.uniform3i(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(pr(t,e))return;n.uniform3iv(this.addr,e),mr(t,e)}}function Pz(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(n.uniform4i(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(pr(t,e))return;n.uniform4iv(this.addr,e),mr(t,e)}}function Lz(n,e){const t=this.cache;t[0]!==e&&(n.uniform1ui(this.addr,e),t[0]=e)}function Oz(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(n.uniform2ui(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(pr(t,e))return;n.uniform2uiv(this.addr,e),mr(t,e)}}function Qz(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(n.uniform3ui(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(pr(t,e))return;n.uniform3uiv(this.addr,e),mr(t,e)}}function Uz(n,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(n.uniform4ui(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(pr(t,e))return;n.uniform4uiv(this.addr,e),mr(t,e)}}function zz(n,e,t){const s=this.cache,r=t.allocateTextureUnit();s[0]!==r&&(n.uniform1i(this.addr,r),s[0]=r);let i;this.type===n.SAMPLER_2D_SHADOW?(gE.compareFunction=pB,i=gE):i=DB,t.setTexture2D(e||i,r)}function Gz(n,e,t){const s=this.cache,r=t.allocateTextureUnit();s[0]!==r&&(n.uniform1i(this.addr,r),s[0]=r),t.setTexture3D(e||$B,r)}function Vz(n,e,t){const s=this.cache,r=t.allocateTextureUnit();s[0]!==r&&(n.uniform1i(this.addr,r),s[0]=r),t.setTextureCube(e||PB,r)}function Wz(n,e,t){const s=this.cache,r=t.allocateTextureUnit();s[0]!==r&&(n.uniform1i(this.addr,r),s[0]=r),t.setTexture2DArray(e||FB,r)}function Hz(n){switch(n){case 5126:return _z;case 35664:return Tz;case 35665:return Bz;case 35666:return kz;case 35674:return Nz;case 35675:return Rz;case 35676:return Mz;case 5124:case 35670:return Dz;case 35667:case 35671:return Fz;case 35668:case 35672:return $z;case 35669:case 35673:return Pz;case 5125:return Lz;case 36294:return Oz;case 36295:return Qz;case 36296:return Uz;case 35678:case 36198:case 36298:case 36306:case 35682:return zz;case 35679:case 36299:case 36307:return Gz;case 35680:case 36300:case 36308:case 36293:return Vz;case 36289:case 36303:case 36311:case 36292:return Wz}}function qz(n,e){n.uniform1fv(this.addr,e)}function Yz(n,e){const t=ff(e,this.size,2);n.uniform2fv(this.addr,t)}function jz(n,e){const t=ff(e,this.size,3);n.uniform3fv(this.addr,t)}function Xz(n,e){const t=ff(e,this.size,4);n.uniform4fv(this.addr,t)}function Kz(n,e){const t=ff(e,this.size,4);n.uniformMatrix2fv(this.addr,!1,t)}function Jz(n,e){const t=ff(e,this.size,9);n.uniformMatrix3fv(this.addr,!1,t)}function Zz(n,e){const t=ff(e,this.size,16);n.uniformMatrix4fv(this.addr,!1,t)}function eG(n,e){n.uniform1iv(this.addr,e)}function tG(n,e){n.uniform2iv(this.addr,e)}function nG(n,e){n.uniform3iv(this.addr,e)}function sG(n,e){n.uniform4iv(this.addr,e)}function rG(n,e){n.uniform1uiv(this.addr,e)}function iG(n,e){n.uniform2uiv(this.addr,e)}function oG(n,e){n.uniform3uiv(this.addr,e)}function aG(n,e){n.uniform4uiv(this.addr,e)}function lG(n,e,t){const s=this.cache,r=e.length,i=ix(t,r);pr(s,i)||(n.uniform1iv(this.addr,i),mr(s,i));for(let o=0;o!==r;++o)t.setTexture2D(e[o]||DB,i[o])}function cG(n,e,t){const s=this.cache,r=e.length,i=ix(t,r);pr(s,i)||(n.uniform1iv(this.addr,i),mr(s,i));for(let o=0;o!==r;++o)t.setTexture3D(e[o]||$B,i[o])}function uG(n,e,t){const s=this.cache,r=e.length,i=ix(t,r);pr(s,i)||(n.uniform1iv(this.addr,i),mr(s,i));for(let o=0;o!==r;++o)t.setTextureCube(e[o]||PB,i[o])}function hG(n,e,t){const s=this.cache,r=e.length,i=ix(t,r);pr(s,i)||(n.uniform1iv(this.addr,i),mr(s,i));for(let o=0;o!==r;++o)t.setTexture2DArray(e[o]||FB,i[o])}function dG(n){switch(n){case 5126:return qz;case 35664:return Yz;case 35665:return jz;case 35666:return Xz;case 35674:return Kz;case 35675:return Jz;case 35676:return Zz;case 5124:case 35670:return eG;case 35667:case 35671:return tG;case 35668:case 35672:return nG;case 35669:case 35673:return sG;case 5125:return rG;case 36294:return iG;case 36295:return oG;case 36296:return aG;case 35678:case 36198:case 36298:case 36306:case 35682:return lG;case 35679:case 36299:case 36307:return cG;case 35680:case 36300:case 36308:case 36293:return uG;case 36289:case 36303:case 36311:case 36292:return hG}}class fG{constructor(e,t,s){this.id=e,this.addr=s,this.cache=[],this.type=t.type,this.setValue=Hz(t.type)}}class pG{constructor(e,t,s){this.id=e,this.addr=s,this.cache=[],this.type=t.type,this.size=t.size,this.setValue=dG(t.type)}}class mG{constructor(e){this.id=e,this.seq=[],this.map={}}setValue(e,t,s){const r=this.seq;for(let i=0,o=r.length;i!==o;++i){const a=r[i];a.setValue(e,t[a.id],s)}}}const R2=/(\w+)(\])?(\[|\.)?/g;function CE(n,e){n.seq.push(e),n.map[e.id]=e}function gG(n,e,t){const s=n.name,r=s.length;for(R2.lastIndex=0;;){const i=R2.exec(s),o=R2.lastIndex;let a=i[1];const l=i[2]==="]",c=i[3];if(l&&(a=a|0),c===void 0||c==="["&&o+2===r){CE(t,c===void 0?new fG(a,n,e):new pG(a,n,e));break}else{let h=t.map[a];h===void 0&&(h=new mG(a),CE(t,h)),t=h}}}class Yy{constructor(e,t){this.seq=[],this.map={};const s=e.getProgramParameter(t,e.ACTIVE_UNIFORMS);for(let r=0;r<s;++r){const i=e.getActiveUniform(t,r),o=e.getUniformLocation(t,i.name);gG(i,o,this)}}setValue(e,t,s,r){const i=this.map[t];i!==void 0&&i.setValue(e,s,r)}setOptional(e,t,s){const r=t[s];r!==void 0&&this.setValue(e,s,r)}static upload(e,t,s,r){for(let i=0,o=t.length;i!==o;++i){const a=t[i],l=s[a.id];l.needsUpdate!==!1&&a.setValue(e,l.value,r)}}static seqWithValue(e,t){const s=[];for(let r=0,i=e.length;r!==i;++r){const o=e[r];o.id in t&&s.push(o)}return s}}function IE(n,e,t){const s=n.createShader(e);return n.shaderSource(s,t),n.compileShader(s),s}const AG=37297;let yG=0;function xG(n,e){const t=n.split(`
`),s=[],r=Math.max(e-6,0),i=Math.min(e+6,t.length);for(let o=r;o<i;o++){const a=o+1;s.push(`${a===e?">":" "} ${a}: ${t[o]}`)}return s.join(`
`)}const wE=new gn;function bG(n){Gn._getMatrix(wE,Gn.workingColorSpace,n);const e=`mat3( ${wE.elements.map(t=>t.toFixed(4))} )`;switch(Gn.getTransfer(n)){case p0:return[e,"LinearTransferOETF"];case rs:return[e,"sRGBTransferOETF"];default:return console.warn("THREE.WebGLProgram: Unsupported color space: ",n),[e,"LinearTransferOETF"]}}function SE(n,e,t){const s=n.getShaderParameter(e,n.COMPILE_STATUS),i=(n.getShaderInfoLog(e)||"").trim();if(s&&i==="")return"";const o=/ERROR: 0:(\d+)/.exec(i);if(o){const a=parseInt(o[1]);return t.toUpperCase()+`

`+i+`

`+xG(n.getShaderSource(e),a)}else return i}function vG(n,e){const t=bG(e);return[`vec4 ${n}( vec4 value ) {`,`	return ${t[1]}( vec4( value.rgb * ${t[0]}, value.a ) );`,"}"].join(`
`)}function CG(n,e){let t;switch(e){case a4:t="Linear";break;case l4:t="Reinhard";break;case c4:t="Cineon";break;case u4:t="ACESFilmic";break;case d4:t="AgX";break;case f4:t="Neutral";break;case h4:t="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),t="Linear"}return"vec3 "+n+"( vec3 color ) { return "+t+"ToneMapping( color ); }"}const my=new Ae;function IG(){Gn.getLuminanceCoefficients(my);const n=my.x.toFixed(4),e=my.y.toFixed(4),t=my.z.toFixed(4);return["float luminance( const in vec3 rgb ) {",`	const vec3 weights = vec3( ${n}, ${e}, ${t} );`,"	return dot( weights, rgb );","}"].join(`
`)}function wG(n){return[n.extensionClipCullDistance?"#extension GL_ANGLE_clip_cull_distance : require":"",n.extensionMultiDraw?"#extension GL_ANGLE_multi_draw : require":""].filter(Zp).join(`
`)}function SG(n){const e=[];for(const t in n){const s=n[t];s!==!1&&e.push("#define "+t+" "+s)}return e.join(`
`)}function EG(n,e){const t={},s=n.getProgramParameter(e,n.ACTIVE_ATTRIBUTES);for(let r=0;r<s;r++){const i=n.getActiveAttrib(e,r),o=i.name;let a=1;i.type===n.FLOAT_MAT2&&(a=2),i.type===n.FLOAT_MAT3&&(a=3),i.type===n.FLOAT_MAT4&&(a=4),t[o]={type:i.type,location:n.getAttribLocation(e,o),locationSize:a}}return t}function Zp(n){return n!==""}function EE(n,e){const t=e.numSpotLightShadows+e.numSpotLightMaps-e.numSpotLightShadowsWithMaps;return n.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,e.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,t).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,e.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function _E(n,e){return n.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const _G=/^[ \t]*#include +<([\w\d./]+)>/gm;function Sv(n){return n.replace(_G,BG)}const TG=new Map;function BG(n,e){let t=bn[e];if(t===void 0){const s=TG.get(e);if(s!==void 0)t=bn[s],console.warn('THREE.WebGLRenderer: Shader chunk "%s" has been deprecated. Use "%s" instead.',e,s);else throw new Error("Can not resolve #include <"+e+">")}return Sv(t)}const kG=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function TE(n){return n.replace(kG,NG)}function NG(n,e,t,s){let r="";for(let i=parseInt(e);i<parseInt(t);i++)r+=s.replace(/\[\s*i\s*\]/g,"[ "+i+" ]").replace(/UNROLLED_LOOP_INDEX/g,i);return r}function BE(n){let e=`precision ${n.precision} float;
	precision ${n.precision} int;
	precision ${n.precision} sampler2D;
	precision ${n.precision} samplerCube;
	precision ${n.precision} sampler3D;
	precision ${n.precision} sampler2DArray;
	precision ${n.precision} sampler2DShadow;
	precision ${n.precision} samplerCubeShadow;
	precision ${n.precision} sampler2DArrayShadow;
	precision ${n.precision} isampler2D;
	precision ${n.precision} isampler3D;
	precision ${n.precision} isamplerCube;
	precision ${n.precision} isampler2DArray;
	precision ${n.precision} usampler2D;
	precision ${n.precision} usampler3D;
	precision ${n.precision} usamplerCube;
	precision ${n.precision} usampler2DArray;
	`;return n.precision==="highp"?e+=`
#define HIGH_PRECISION`:n.precision==="mediump"?e+=`
#define MEDIUM_PRECISION`:n.precision==="lowp"&&(e+=`
#define LOW_PRECISION`),e}function RG(n){let e="SHADOWMAP_TYPE_BASIC";return n.shadowMapType===nB?e="SHADOWMAP_TYPE_PCF":n.shadowMapType===QL?e="SHADOWMAP_TYPE_PCF_SOFT":n.shadowMapType===Za&&(e="SHADOWMAP_TYPE_VSM"),e}function MG(n){let e="ENVMAP_TYPE_CUBE";if(n.envMap)switch(n.envMapMode){case Od:case Qd:e="ENVMAP_TYPE_CUBE";break;case ex:e="ENVMAP_TYPE_CUBE_UV";break}return e}function DG(n){let e="ENVMAP_MODE_REFLECTION";if(n.envMap)switch(n.envMapMode){case Qd:e="ENVMAP_MODE_REFRACTION";break}return e}function FG(n){let e="ENVMAP_BLENDING_NONE";if(n.envMap)switch(n.combine){case sB:e="ENVMAP_BLENDING_MULTIPLY";break;case i4:e="ENVMAP_BLENDING_MIX";break;case o4:e="ENVMAP_BLENDING_ADD";break}return e}function $G(n){const e=n.envMapCubeUVHeight;if(e===null)return null;const t=Math.log2(e)-2,s=1/e;return{texelWidth:1/(3*Math.max(Math.pow(2,t),112)),texelHeight:s,maxMip:t}}function PG(n,e,t,s){const r=n.getContext(),i=t.defines;let o=t.vertexShader,a=t.fragmentShader;const l=RG(t),c=MG(t),u=DG(t),h=FG(t),d=$G(t),f=wG(t),p=SG(i),A=r.createProgram();let m,g,x=t.glslVersion?"#version "+t.glslVersion+`
`:"";t.isRawShaderMaterial?(m=["#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,p].filter(Zp).join(`
`),m.length>0&&(m+=`
`),g=["#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,p].filter(Zp).join(`
`),g.length>0&&(g+=`
`)):(m=[BE(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,p,t.extensionClipCullDistance?"#define USE_CLIP_DISTANCE":"",t.batching?"#define USE_BATCHING":"",t.batchingColor?"#define USE_BATCHING_COLOR":"",t.instancing?"#define USE_INSTANCING":"",t.instancingColor?"#define USE_INSTANCING_COLOR":"",t.instancingMorph?"#define USE_INSTANCING_MORPH":"",t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+u:"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.displacementMap?"#define USE_DISPLACEMENTMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropy?"#define USE_ANISOTROPY":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaHash?"#define USE_ALPHAHASH":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.mapUv?"#define MAP_UV "+t.mapUv:"",t.alphaMapUv?"#define ALPHAMAP_UV "+t.alphaMapUv:"",t.lightMapUv?"#define LIGHTMAP_UV "+t.lightMapUv:"",t.aoMapUv?"#define AOMAP_UV "+t.aoMapUv:"",t.emissiveMapUv?"#define EMISSIVEMAP_UV "+t.emissiveMapUv:"",t.bumpMapUv?"#define BUMPMAP_UV "+t.bumpMapUv:"",t.normalMapUv?"#define NORMALMAP_UV "+t.normalMapUv:"",t.displacementMapUv?"#define DISPLACEMENTMAP_UV "+t.displacementMapUv:"",t.metalnessMapUv?"#define METALNESSMAP_UV "+t.metalnessMapUv:"",t.roughnessMapUv?"#define ROUGHNESSMAP_UV "+t.roughnessMapUv:"",t.anisotropyMapUv?"#define ANISOTROPYMAP_UV "+t.anisotropyMapUv:"",t.clearcoatMapUv?"#define CLEARCOATMAP_UV "+t.clearcoatMapUv:"",t.clearcoatNormalMapUv?"#define CLEARCOAT_NORMALMAP_UV "+t.clearcoatNormalMapUv:"",t.clearcoatRoughnessMapUv?"#define CLEARCOAT_ROUGHNESSMAP_UV "+t.clearcoatRoughnessMapUv:"",t.iridescenceMapUv?"#define IRIDESCENCEMAP_UV "+t.iridescenceMapUv:"",t.iridescenceThicknessMapUv?"#define IRIDESCENCE_THICKNESSMAP_UV "+t.iridescenceThicknessMapUv:"",t.sheenColorMapUv?"#define SHEEN_COLORMAP_UV "+t.sheenColorMapUv:"",t.sheenRoughnessMapUv?"#define SHEEN_ROUGHNESSMAP_UV "+t.sheenRoughnessMapUv:"",t.specularMapUv?"#define SPECULARMAP_UV "+t.specularMapUv:"",t.specularColorMapUv?"#define SPECULAR_COLORMAP_UV "+t.specularColorMapUv:"",t.specularIntensityMapUv?"#define SPECULAR_INTENSITYMAP_UV "+t.specularIntensityMapUv:"",t.transmissionMapUv?"#define TRANSMISSIONMAP_UV "+t.transmissionMapUv:"",t.thicknessMapUv?"#define THICKNESSMAP_UV "+t.thicknessMapUv:"",t.vertexTangents&&t.flatShading===!1?"#define USE_TANGENT":"",t.vertexColors?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.flatShading?"#define FLAT_SHADED":"",t.skinning?"#define USE_SKINNING":"",t.morphTargets?"#define USE_MORPHTARGETS":"",t.morphNormals&&t.flatShading===!1?"#define USE_MORPHNORMALS":"",t.morphColors?"#define USE_MORPHCOLORS":"",t.morphTargetsCount>0?"#define MORPHTARGETS_TEXTURE_STRIDE "+t.morphTextureStride:"",t.morphTargetsCount>0?"#define MORPHTARGETS_COUNT "+t.morphTargetsCount:"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+l:"",t.sizeAttenuation?"#define USE_SIZEATTENUATION":"",t.numLightProbes>0?"#define USE_LIGHT_PROBES":"",t.logarithmicDepthBuffer?"#define USE_LOGARITHMIC_DEPTH_BUFFER":"",t.reversedDepthBuffer?"#define USE_REVERSED_DEPTH_BUFFER":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","#ifdef USE_INSTANCING_MORPH","	uniform sampler2D morphTexture;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_UV1","	attribute vec2 uv1;","#endif","#ifdef USE_UV2","	attribute vec2 uv2;","#endif","#ifdef USE_UV3","	attribute vec2 uv3;","#endif","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(Zp).join(`
`),g=[BE(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,p,t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.alphaToCoverage?"#define ALPHA_TO_COVERAGE":"",t.map?"#define USE_MAP":"",t.matcap?"#define USE_MATCAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+c:"",t.envMap?"#define "+u:"",t.envMap?"#define "+h:"",d?"#define CUBEUV_TEXEL_WIDTH "+d.texelWidth:"",d?"#define CUBEUV_TEXEL_HEIGHT "+d.texelHeight:"",d?"#define CUBEUV_MAX_MIP "+d.maxMip+".0":"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropy?"#define USE_ANISOTROPY":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoat?"#define USE_CLEARCOAT":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.dispersion?"#define USE_DISPERSION":"",t.iridescence?"#define USE_IRIDESCENCE":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaTest?"#define USE_ALPHATEST":"",t.alphaHash?"#define USE_ALPHAHASH":"",t.sheen?"#define USE_SHEEN":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.vertexTangents&&t.flatShading===!1?"#define USE_TANGENT":"",t.vertexColors||t.instancingColor||t.batchingColor?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.gradientMap?"#define USE_GRADIENTMAP":"",t.flatShading?"#define FLAT_SHADED":"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+l:"",t.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",t.numLightProbes>0?"#define USE_LIGHT_PROBES":"",t.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",t.decodeVideoTextureEmissive?"#define DECODE_VIDEO_TEXTURE_EMISSIVE":"",t.logarithmicDepthBuffer?"#define USE_LOGARITHMIC_DEPTH_BUFFER":"",t.reversedDepthBuffer?"#define USE_REVERSED_DEPTH_BUFFER":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",t.toneMapping!==jl?"#define TONE_MAPPING":"",t.toneMapping!==jl?bn.tonemapping_pars_fragment:"",t.toneMapping!==jl?CG("toneMapping",t.toneMapping):"",t.dithering?"#define DITHERING":"",t.opaque?"#define OPAQUE":"",bn.colorspace_pars_fragment,vG("linearToOutputTexel",t.outputColorSpace),IG(),t.useDepthPacking?"#define DEPTH_PACKING "+t.depthPacking:"",`
`].filter(Zp).join(`
`)),o=Sv(o),o=EE(o,t),o=_E(o,t),a=Sv(a),a=EE(a,t),a=_E(a,t),o=TE(o),a=TE(a),t.isRawShaderMaterial!==!0&&(x=`#version 300 es
`,m=[f,"#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+m,g=["#define varying in",t.glslVersion===m0?"":"layout(location = 0) out highp vec4 pc_fragColor;",t.glslVersion===m0?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+g);const v=x+m+o,b=x+g+a,w=IE(r,r.VERTEX_SHADER,v),_=IE(r,r.FRAGMENT_SHADER,b);r.attachShader(A,w),r.attachShader(A,_),t.index0AttributeName!==void 0?r.bindAttribLocation(A,0,t.index0AttributeName):t.morphTargets===!0&&r.bindAttribLocation(A,0,"position"),r.linkProgram(A);function N(B){if(n.debug.checkShaderErrors){const L=r.getProgramInfoLog(A)||"",U=r.getShaderInfoLog(w)||"",V=r.getShaderInfoLog(_)||"",W=L.trim(),H=U.trim(),ee=V.trim();let K=!0,te=!0;if(r.getProgramParameter(A,r.LINK_STATUS)===!1)if(K=!1,typeof n.debug.onShaderError=="function")n.debug.onShaderError(r,A,w,_);else{const le=SE(r,w,"vertex"),fe=SE(r,_,"fragment");console.error("THREE.WebGLProgram: Shader Error "+r.getError()+" - VALIDATE_STATUS "+r.getProgramParameter(A,r.VALIDATE_STATUS)+`

Material Name: `+B.name+`
Material Type: `+B.type+`

Program Info Log: `+W+`
`+le+`
`+fe)}else W!==""?console.warn("THREE.WebGLProgram: Program Info Log:",W):(H===""||ee==="")&&(te=!1);te&&(B.diagnostics={runnable:K,programLog:W,vertexShader:{log:H,prefix:m},fragmentShader:{log:ee,prefix:g}})}r.deleteShader(w),r.deleteShader(_),M=new Yy(r,A),T=EG(r,A)}let M;this.getUniforms=function(){return M===void 0&&N(this),M};let T;this.getAttributes=function(){return T===void 0&&N(this),T};let k=t.rendererExtensionParallelShaderCompile===!1;return this.isReady=function(){return k===!1&&(k=r.getProgramParameter(A,AG)),k},this.destroy=function(){s.releaseStatesOfProgram(this),r.deleteProgram(A),this.program=void 0},this.type=t.shaderType,this.name=t.shaderName,this.id=yG++,this.cacheKey=e,this.usedTimes=1,this.program=A,this.vertexShader=w,this.fragmentShader=_,this}let LG=0;class OG{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){const t=e.vertexShader,s=e.fragmentShader,r=this._getShaderStage(t),i=this._getShaderStage(s),o=this._getShaderCacheForMaterial(e);return o.has(r)===!1&&(o.add(r),r.usedTimes++),o.has(i)===!1&&(o.add(i),i.usedTimes++),this}remove(e){const t=this.materialCache.get(e);for(const s of t)s.usedTimes--,s.usedTimes===0&&this.shaderCache.delete(s.code);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){const t=this.materialCache;let s=t.get(e);return s===void 0&&(s=new Set,t.set(e,s)),s}_getShaderStage(e){const t=this.shaderCache;let s=t.get(e);return s===void 0&&(s=new QG(e),t.set(e,s)),s}}class QG{constructor(e){this.id=LG++,this.code=e,this.usedTimes=0}}function UG(n,e,t,s,r,i,o){const a=new yB,l=new OG,c=new Set,u=[],h=r.logarithmicDepthBuffer,d=r.vertexTextures;let f=r.precision;const p={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function A(T){return c.add(T),T===0?"uv":`uv${T}`}function m(T,k,B,L,U){const V=L.fog,W=U.geometry,H=T.isMeshStandardMaterial?L.environment:null,ee=(T.isMeshStandardMaterial?t:e).get(T.envMap||H),K=ee&&ee.mapping===ex?ee.image.height:null,te=p[T.type];T.precision!==null&&(f=r.getMaxPrecision(T.precision),f!==T.precision&&console.warn("THREE.WebGLProgram.getParameters:",T.precision,"not supported, using",f,"instead."));const le=W.morphAttributes.position||W.morphAttributes.normal||W.morphAttributes.color,fe=le!==void 0?le.length:0;let Ie=0;W.morphAttributes.position!==void 0&&(Ie=1),W.morphAttributes.normal!==void 0&&(Ie=2),W.morphAttributes.color!==void 0&&(Ie=3);let Se,De,Be,he;if(te){const mn=ma[te];Se=mn.vertexShader,De=mn.fragmentShader}else Se=T.vertexShader,De=T.fragmentShader,l.update(T),Be=l.getVertexShaderID(T),he=l.getFragmentShaderID(T);const ge=n.getRenderTarget(),Ne=n.state.buffers.depth.getReversed(),Oe=U.isInstancedMesh===!0,Qe=U.isBatchedMesh===!0,Ye=!!T.map,_t=!!T.matcap,J=!!ee,ht=!!T.aoMap,dt=!!T.lightMap,tt=!!T.bumpMap,Ke=!!T.normalMap,kt=!!T.displacementMap,Xe=!!T.emissiveMap,ot=!!T.metalnessMap,wn=!!T.roughnessMap,sn=T.anisotropy>0,Z=T.clearcoat>0,G=T.dispersion>0,we=T.iridescence>0,ke=T.sheen>0,Ue=T.transmission>0,Re=sn&&!!T.anisotropyMap,bt=Z&&!!T.clearcoatMap,et=Z&&!!T.clearcoatNormalMap,St=Z&&!!T.clearcoatRoughnessMap,Tt=we&&!!T.iridescenceMap,We=we&&!!T.iridescenceThicknessMap,ct=ke&&!!T.sheenColorMap,Ut=ke&&!!T.sheenRoughnessMap,Dt=!!T.specularMap,mt=!!T.specularColorMap,Yt=!!T.specularIntensityMap,de=Ue&&!!T.transmissionMap,je=Ue&&!!T.thicknessMap,at=!!T.gradientMap,At=!!T.alphaMap,Ge=T.alphaTest>0,Ve=!!T.alphaHash,ut=!!T.extensions;let qt=jl;T.toneMapped&&(ge===null||ge.isXRRenderTarget===!0)&&(qt=n.toneMapping);const Mn={shaderID:te,shaderType:T.type,shaderName:T.name,vertexShader:Se,fragmentShader:De,defines:T.defines,customVertexShaderID:Be,customFragmentShaderID:he,isRawShaderMaterial:T.isRawShaderMaterial===!0,glslVersion:T.glslVersion,precision:f,batching:Qe,batchingColor:Qe&&U._colorsTexture!==null,instancing:Oe,instancingColor:Oe&&U.instanceColor!==null,instancingMorph:Oe&&U.morphTexture!==null,supportsVertexTextures:d,outputColorSpace:ge===null?n.outputColorSpace:ge.isXRRenderTarget===!0?ge.texture.colorSpace:Ud,alphaToCoverage:!!T.alphaToCoverage,map:Ye,matcap:_t,envMap:J,envMapMode:J&&ee.mapping,envMapCubeUVHeight:K,aoMap:ht,lightMap:dt,bumpMap:tt,normalMap:Ke,displacementMap:d&&kt,emissiveMap:Xe,normalMapObjectSpace:Ke&&T.normalMapType===y4,normalMapTangentSpace:Ke&&T.normalMapType===fB,metalnessMap:ot,roughnessMap:wn,anisotropy:sn,anisotropyMap:Re,clearcoat:Z,clearcoatMap:bt,clearcoatNormalMap:et,clearcoatRoughnessMap:St,dispersion:G,iridescence:we,iridescenceMap:Tt,iridescenceThicknessMap:We,sheen:ke,sheenColorMap:ct,sheenRoughnessMap:Ut,specularMap:Dt,specularColorMap:mt,specularIntensityMap:Yt,transmission:Ue,transmissionMap:de,thicknessMap:je,gradientMap:at,opaque:T.transparent===!1&&T.blending===Nd&&T.alphaToCoverage===!1,alphaMap:At,alphaTest:Ge,alphaHash:Ve,combine:T.combine,mapUv:Ye&&A(T.map.channel),aoMapUv:ht&&A(T.aoMap.channel),lightMapUv:dt&&A(T.lightMap.channel),bumpMapUv:tt&&A(T.bumpMap.channel),normalMapUv:Ke&&A(T.normalMap.channel),displacementMapUv:kt&&A(T.displacementMap.channel),emissiveMapUv:Xe&&A(T.emissiveMap.channel),metalnessMapUv:ot&&A(T.metalnessMap.channel),roughnessMapUv:wn&&A(T.roughnessMap.channel),anisotropyMapUv:Re&&A(T.anisotropyMap.channel),clearcoatMapUv:bt&&A(T.clearcoatMap.channel),clearcoatNormalMapUv:et&&A(T.clearcoatNormalMap.channel),clearcoatRoughnessMapUv:St&&A(T.clearcoatRoughnessMap.channel),iridescenceMapUv:Tt&&A(T.iridescenceMap.channel),iridescenceThicknessMapUv:We&&A(T.iridescenceThicknessMap.channel),sheenColorMapUv:ct&&A(T.sheenColorMap.channel),sheenRoughnessMapUv:Ut&&A(T.sheenRoughnessMap.channel),specularMapUv:Dt&&A(T.specularMap.channel),specularColorMapUv:mt&&A(T.specularColorMap.channel),specularIntensityMapUv:Yt&&A(T.specularIntensityMap.channel),transmissionMapUv:de&&A(T.transmissionMap.channel),thicknessMapUv:je&&A(T.thicknessMap.channel),alphaMapUv:At&&A(T.alphaMap.channel),vertexTangents:!!W.attributes.tangent&&(Ke||sn),vertexColors:T.vertexColors,vertexAlphas:T.vertexColors===!0&&!!W.attributes.color&&W.attributes.color.itemSize===4,pointsUvs:U.isPoints===!0&&!!W.attributes.uv&&(Ye||At),fog:!!V,useFog:T.fog===!0,fogExp2:!!V&&V.isFogExp2,flatShading:T.flatShading===!0&&T.wireframe===!1,sizeAttenuation:T.sizeAttenuation===!0,logarithmicDepthBuffer:h,reversedDepthBuffer:Ne,skinning:U.isSkinnedMesh===!0,morphTargets:W.morphAttributes.position!==void 0,morphNormals:W.morphAttributes.normal!==void 0,morphColors:W.morphAttributes.color!==void 0,morphTargetsCount:fe,morphTextureStride:Ie,numDirLights:k.directional.length,numPointLights:k.point.length,numSpotLights:k.spot.length,numSpotLightMaps:k.spotLightMap.length,numRectAreaLights:k.rectArea.length,numHemiLights:k.hemi.length,numDirLightShadows:k.directionalShadowMap.length,numPointLightShadows:k.pointShadowMap.length,numSpotLightShadows:k.spotShadowMap.length,numSpotLightShadowsWithMaps:k.numSpotLightShadowsWithMaps,numLightProbes:k.numLightProbes,numClippingPlanes:o.numPlanes,numClipIntersection:o.numIntersection,dithering:T.dithering,shadowMapEnabled:n.shadowMap.enabled&&B.length>0,shadowMapType:n.shadowMap.type,toneMapping:qt,decodeVideoTexture:Ye&&T.map.isVideoTexture===!0&&Gn.getTransfer(T.map.colorSpace)===rs,decodeVideoTextureEmissive:Xe&&T.emissiveMap.isVideoTexture===!0&&Gn.getTransfer(T.emissiveMap.colorSpace)===rs,premultipliedAlpha:T.premultipliedAlpha,doubleSided:T.side===zo,flipSided:T.side===Li,useDepthPacking:T.depthPacking>=0,depthPacking:T.depthPacking||0,index0AttributeName:T.index0AttributeName,extensionClipCullDistance:ut&&T.extensions.clipCullDistance===!0&&s.has("WEBGL_clip_cull_distance"),extensionMultiDraw:(ut&&T.extensions.multiDraw===!0||Qe)&&s.has("WEBGL_multi_draw"),rendererExtensionParallelShaderCompile:s.has("KHR_parallel_shader_compile"),customProgramCacheKey:T.customProgramCacheKey()};return Mn.vertexUv1s=c.has(1),Mn.vertexUv2s=c.has(2),Mn.vertexUv3s=c.has(3),c.clear(),Mn}function g(T){const k=[];if(T.shaderID?k.push(T.shaderID):(k.push(T.customVertexShaderID),k.push(T.customFragmentShaderID)),T.defines!==void 0)for(const B in T.defines)k.push(B),k.push(T.defines[B]);return T.isRawShaderMaterial===!1&&(x(k,T),v(k,T),k.push(n.outputColorSpace)),k.push(T.customProgramCacheKey),k.join()}function x(T,k){T.push(k.precision),T.push(k.outputColorSpace),T.push(k.envMapMode),T.push(k.envMapCubeUVHeight),T.push(k.mapUv),T.push(k.alphaMapUv),T.push(k.lightMapUv),T.push(k.aoMapUv),T.push(k.bumpMapUv),T.push(k.normalMapUv),T.push(k.displacementMapUv),T.push(k.emissiveMapUv),T.push(k.metalnessMapUv),T.push(k.roughnessMapUv),T.push(k.anisotropyMapUv),T.push(k.clearcoatMapUv),T.push(k.clearcoatNormalMapUv),T.push(k.clearcoatRoughnessMapUv),T.push(k.iridescenceMapUv),T.push(k.iridescenceThicknessMapUv),T.push(k.sheenColorMapUv),T.push(k.sheenRoughnessMapUv),T.push(k.specularMapUv),T.push(k.specularColorMapUv),T.push(k.specularIntensityMapUv),T.push(k.transmissionMapUv),T.push(k.thicknessMapUv),T.push(k.combine),T.push(k.fogExp2),T.push(k.sizeAttenuation),T.push(k.morphTargetsCount),T.push(k.morphAttributeCount),T.push(k.numDirLights),T.push(k.numPointLights),T.push(k.numSpotLights),T.push(k.numSpotLightMaps),T.push(k.numHemiLights),T.push(k.numRectAreaLights),T.push(k.numDirLightShadows),T.push(k.numPointLightShadows),T.push(k.numSpotLightShadows),T.push(k.numSpotLightShadowsWithMaps),T.push(k.numLightProbes),T.push(k.shadowMapType),T.push(k.toneMapping),T.push(k.numClippingPlanes),T.push(k.numClipIntersection),T.push(k.depthPacking)}function v(T,k){a.disableAll(),k.supportsVertexTextures&&a.enable(0),k.instancing&&a.enable(1),k.instancingColor&&a.enable(2),k.instancingMorph&&a.enable(3),k.matcap&&a.enable(4),k.envMap&&a.enable(5),k.normalMapObjectSpace&&a.enable(6),k.normalMapTangentSpace&&a.enable(7),k.clearcoat&&a.enable(8),k.iridescence&&a.enable(9),k.alphaTest&&a.enable(10),k.vertexColors&&a.enable(11),k.vertexAlphas&&a.enable(12),k.vertexUv1s&&a.enable(13),k.vertexUv2s&&a.enable(14),k.vertexUv3s&&a.enable(15),k.vertexTangents&&a.enable(16),k.anisotropy&&a.enable(17),k.alphaHash&&a.enable(18),k.batching&&a.enable(19),k.dispersion&&a.enable(20),k.batchingColor&&a.enable(21),k.gradientMap&&a.enable(22),T.push(a.mask),a.disableAll(),k.fog&&a.enable(0),k.useFog&&a.enable(1),k.flatShading&&a.enable(2),k.logarithmicDepthBuffer&&a.enable(3),k.reversedDepthBuffer&&a.enable(4),k.skinning&&a.enable(5),k.morphTargets&&a.enable(6),k.morphNormals&&a.enable(7),k.morphColors&&a.enable(8),k.premultipliedAlpha&&a.enable(9),k.shadowMapEnabled&&a.enable(10),k.doubleSided&&a.enable(11),k.flipSided&&a.enable(12),k.useDepthPacking&&a.enable(13),k.dithering&&a.enable(14),k.transmission&&a.enable(15),k.sheen&&a.enable(16),k.opaque&&a.enable(17),k.pointsUvs&&a.enable(18),k.decodeVideoTexture&&a.enable(19),k.decodeVideoTextureEmissive&&a.enable(20),k.alphaToCoverage&&a.enable(21),T.push(a.mask)}function b(T){const k=p[T.type];let B;if(k){const L=ma[k];B=cO.clone(L.uniforms)}else B=T.uniforms;return B}function w(T,k){let B;for(let L=0,U=u.length;L<U;L++){const V=u[L];if(V.cacheKey===k){B=V,++B.usedTimes;break}}return B===void 0&&(B=new PG(n,k,T,i),u.push(B)),B}function _(T){if(--T.usedTimes===0){const k=u.indexOf(T);u[k]=u[u.length-1],u.pop(),T.destroy()}}function N(T){l.remove(T)}function M(){l.dispose()}return{getParameters:m,getProgramCacheKey:g,getUniforms:b,acquireProgram:w,releaseProgram:_,releaseShaderCache:N,programs:u,dispose:M}}function zG(){let n=new WeakMap;function e(o){return n.has(o)}function t(o){let a=n.get(o);return a===void 0&&(a={},n.set(o,a)),a}function s(o){n.delete(o)}function r(o,a,l){n.get(o)[a]=l}function i(){n=new WeakMap}return{has:e,get:t,remove:s,update:r,dispose:i}}function GG(n,e){return n.groupOrder!==e.groupOrder?n.groupOrder-e.groupOrder:n.renderOrder!==e.renderOrder?n.renderOrder-e.renderOrder:n.material.id!==e.material.id?n.material.id-e.material.id:n.z!==e.z?n.z-e.z:n.id-e.id}function kE(n,e){return n.groupOrder!==e.groupOrder?n.groupOrder-e.groupOrder:n.renderOrder!==e.renderOrder?n.renderOrder-e.renderOrder:n.z!==e.z?e.z-n.z:n.id-e.id}function NE(){const n=[];let e=0;const t=[],s=[],r=[];function i(){e=0,t.length=0,s.length=0,r.length=0}function o(h,d,f,p,A,m){let g=n[e];return g===void 0?(g={id:h.id,object:h,geometry:d,material:f,groupOrder:p,renderOrder:h.renderOrder,z:A,group:m},n[e]=g):(g.id=h.id,g.object=h,g.geometry=d,g.material=f,g.groupOrder=p,g.renderOrder=h.renderOrder,g.z=A,g.group=m),e++,g}function a(h,d,f,p,A,m){const g=o(h,d,f,p,A,m);f.transmission>0?s.push(g):f.transparent===!0?r.push(g):t.push(g)}function l(h,d,f,p,A,m){const g=o(h,d,f,p,A,m);f.transmission>0?s.unshift(g):f.transparent===!0?r.unshift(g):t.unshift(g)}function c(h,d){t.length>1&&t.sort(h||GG),s.length>1&&s.sort(d||kE),r.length>1&&r.sort(d||kE)}function u(){for(let h=e,d=n.length;h<d;h++){const f=n[h];if(f.id===null)break;f.id=null,f.object=null,f.geometry=null,f.material=null,f.group=null}}return{opaque:t,transmissive:s,transparent:r,init:i,push:a,unshift:l,finish:u,sort:c}}function VG(){let n=new WeakMap;function e(s,r){const i=n.get(s);let o;return i===void 0?(o=new NE,n.set(s,[o])):r>=i.length?(o=new NE,i.push(o)):o=i[r],o}function t(){n=new WeakMap}return{get:e,dispose:t}}function WG(){const n={};return{get:function(e){if(n[e.id]!==void 0)return n[e.id];let t;switch(e.type){case"DirectionalLight":t={direction:new Ae,color:new In};break;case"SpotLight":t={position:new Ae,direction:new Ae,color:new In,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":t={position:new Ae,color:new In,distance:0,decay:0};break;case"HemisphereLight":t={direction:new Ae,skyColor:new In,groundColor:new In};break;case"RectAreaLight":t={color:new In,position:new Ae,halfWidth:new Ae,halfHeight:new Ae};break}return n[e.id]=t,t}}}function HG(){const n={};return{get:function(e){if(n[e.id]!==void 0)return n[e.id];let t;switch(e.type){case"DirectionalLight":t={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new En};break;case"SpotLight":t={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new En};break;case"PointLight":t={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new En,shadowCameraNear:1,shadowCameraFar:1e3};break}return n[e.id]=t,t}}}let qG=0;function YG(n,e){return(e.castShadow?2:0)-(n.castShadow?2:0)+(e.map?1:0)-(n.map?1:0)}function jG(n){const e=new WG,t=HG(),s={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1,numLightProbes:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0,numLightProbes:0};for(let c=0;c<9;c++)s.probe.push(new Ae);const r=new Ae,i=new is,o=new is;function a(c){let u=0,h=0,d=0;for(let T=0;T<9;T++)s.probe[T].set(0,0,0);let f=0,p=0,A=0,m=0,g=0,x=0,v=0,b=0,w=0,_=0,N=0;c.sort(YG);for(let T=0,k=c.length;T<k;T++){const B=c[T],L=B.color,U=B.intensity,V=B.distance,W=B.shadow&&B.shadow.map?B.shadow.map.texture:null;if(B.isAmbientLight)u+=L.r*U,h+=L.g*U,d+=L.b*U;else if(B.isLightProbe){for(let H=0;H<9;H++)s.probe[H].addScaledVector(B.sh.coefficients[H],U);N++}else if(B.isDirectionalLight){const H=e.get(B);if(H.color.copy(B.color).multiplyScalar(B.intensity),B.castShadow){const ee=B.shadow,K=t.get(B);K.shadowIntensity=ee.intensity,K.shadowBias=ee.bias,K.shadowNormalBias=ee.normalBias,K.shadowRadius=ee.radius,K.shadowMapSize=ee.mapSize,s.directionalShadow[f]=K,s.directionalShadowMap[f]=W,s.directionalShadowMatrix[f]=B.shadow.matrix,x++}s.directional[f]=H,f++}else if(B.isSpotLight){const H=e.get(B);H.position.setFromMatrixPosition(B.matrixWorld),H.color.copy(L).multiplyScalar(U),H.distance=V,H.coneCos=Math.cos(B.angle),H.penumbraCos=Math.cos(B.angle*(1-B.penumbra)),H.decay=B.decay,s.spot[A]=H;const ee=B.shadow;if(B.map&&(s.spotLightMap[w]=B.map,w++,ee.updateMatrices(B),B.castShadow&&_++),s.spotLightMatrix[A]=ee.matrix,B.castShadow){const K=t.get(B);K.shadowIntensity=ee.intensity,K.shadowBias=ee.bias,K.shadowNormalBias=ee.normalBias,K.shadowRadius=ee.radius,K.shadowMapSize=ee.mapSize,s.spotShadow[A]=K,s.spotShadowMap[A]=W,b++}A++}else if(B.isRectAreaLight){const H=e.get(B);H.color.copy(L).multiplyScalar(U),H.halfWidth.set(B.width*.5,0,0),H.halfHeight.set(0,B.height*.5,0),s.rectArea[m]=H,m++}else if(B.isPointLight){const H=e.get(B);if(H.color.copy(B.color).multiplyScalar(B.intensity),H.distance=B.distance,H.decay=B.decay,B.castShadow){const ee=B.shadow,K=t.get(B);K.shadowIntensity=ee.intensity,K.shadowBias=ee.bias,K.shadowNormalBias=ee.normalBias,K.shadowRadius=ee.radius,K.shadowMapSize=ee.mapSize,K.shadowCameraNear=ee.camera.near,K.shadowCameraFar=ee.camera.far,s.pointShadow[p]=K,s.pointShadowMap[p]=W,s.pointShadowMatrix[p]=B.shadow.matrix,v++}s.point[p]=H,p++}else if(B.isHemisphereLight){const H=e.get(B);H.skyColor.copy(B.color).multiplyScalar(U),H.groundColor.copy(B.groundColor).multiplyScalar(U),s.hemi[g]=H,g++}}m>0&&(n.has("OES_texture_float_linear")===!0?(s.rectAreaLTC1=It.LTC_FLOAT_1,s.rectAreaLTC2=It.LTC_FLOAT_2):(s.rectAreaLTC1=It.LTC_HALF_1,s.rectAreaLTC2=It.LTC_HALF_2)),s.ambient[0]=u,s.ambient[1]=h,s.ambient[2]=d;const M=s.hash;(M.directionalLength!==f||M.pointLength!==p||M.spotLength!==A||M.rectAreaLength!==m||M.hemiLength!==g||M.numDirectionalShadows!==x||M.numPointShadows!==v||M.numSpotShadows!==b||M.numSpotMaps!==w||M.numLightProbes!==N)&&(s.directional.length=f,s.spot.length=A,s.rectArea.length=m,s.point.length=p,s.hemi.length=g,s.directionalShadow.length=x,s.directionalShadowMap.length=x,s.pointShadow.length=v,s.pointShadowMap.length=v,s.spotShadow.length=b,s.spotShadowMap.length=b,s.directionalShadowMatrix.length=x,s.pointShadowMatrix.length=v,s.spotLightMatrix.length=b+w-_,s.spotLightMap.length=w,s.numSpotLightShadowsWithMaps=_,s.numLightProbes=N,M.directionalLength=f,M.pointLength=p,M.spotLength=A,M.rectAreaLength=m,M.hemiLength=g,M.numDirectionalShadows=x,M.numPointShadows=v,M.numSpotShadows=b,M.numSpotMaps=w,M.numLightProbes=N,s.version=qG++)}function l(c,u){let h=0,d=0,f=0,p=0,A=0;const m=u.matrixWorldInverse;for(let g=0,x=c.length;g<x;g++){const v=c[g];if(v.isDirectionalLight){const b=s.directional[h];b.direction.setFromMatrixPosition(v.matrixWorld),r.setFromMatrixPosition(v.target.matrixWorld),b.direction.sub(r),b.direction.transformDirection(m),h++}else if(v.isSpotLight){const b=s.spot[f];b.position.setFromMatrixPosition(v.matrixWorld),b.position.applyMatrix4(m),b.direction.setFromMatrixPosition(v.matrixWorld),r.setFromMatrixPosition(v.target.matrixWorld),b.direction.sub(r),b.direction.transformDirection(m),f++}else if(v.isRectAreaLight){const b=s.rectArea[p];b.position.setFromMatrixPosition(v.matrixWorld),b.position.applyMatrix4(m),o.identity(),i.copy(v.matrixWorld),i.premultiply(m),o.extractRotation(i),b.halfWidth.set(v.width*.5,0,0),b.halfHeight.set(0,v.height*.5,0),b.halfWidth.applyMatrix4(o),b.halfHeight.applyMatrix4(o),p++}else if(v.isPointLight){const b=s.point[d];b.position.setFromMatrixPosition(v.matrixWorld),b.position.applyMatrix4(m),d++}else if(v.isHemisphereLight){const b=s.hemi[A];b.direction.setFromMatrixPosition(v.matrixWorld),b.direction.transformDirection(m),A++}}}return{setup:a,setupView:l,state:s}}function RE(n){const e=new jG(n),t=[],s=[];function r(u){c.camera=u,t.length=0,s.length=0}function i(u){t.push(u)}function o(u){s.push(u)}function a(){e.setup(t)}function l(u){e.setupView(t,u)}const c={lightsArray:t,shadowsArray:s,camera:null,lights:e,transmissionRenderTarget:{}};return{init:r,state:c,setupLights:a,setupLightsView:l,pushLight:i,pushShadow:o}}function XG(n){let e=new WeakMap;function t(r,i=0){const o=e.get(r);let a;return o===void 0?(a=new RE(n),e.set(r,[a])):i>=o.length?(a=new RE(n),o.push(a)):a=o[i],a}function s(){e=new WeakMap}return{get:t,dispose:s}}const KG=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,JG=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function ZG(n,e,t){let s=new _B;const r=new En,i=new En,o=new Vn,a=new bO({depthPacking:A4}),l=new vO,c={},u=t.maxTextureSize,h={[ec]:Li,[Li]:ec,[zo]:zo},d=new So({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new En},radius:{value:4}},vertexShader:KG,fragmentShader:JG}),f=d.clone();f.defines.HORIZONTAL_PASS=1;const p=new sa;p.setAttribute("position",new io(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const A=new hr(p,d),m=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=nB;let g=this.type;this.render=function(_,N,M){if(m.enabled===!1||m.autoUpdate===!1&&m.needsUpdate===!1||_.length===0)return;const T=n.getRenderTarget(),k=n.getActiveCubeFace(),B=n.getActiveMipmapLevel(),L=n.state;L.setBlending(Yl),L.buffers.depth.getReversed()===!0?L.buffers.color.setClear(0,0,0,0):L.buffers.color.setClear(1,1,1,1),L.buffers.depth.setTest(!0),L.setScissorTest(!1);const U=g!==Za&&this.type===Za,V=g===Za&&this.type!==Za;for(let W=0,H=_.length;W<H;W++){const ee=_[W],K=ee.shadow;if(K===void 0){console.warn("THREE.WebGLShadowMap:",ee,"has no shadow.");continue}if(K.autoUpdate===!1&&K.needsUpdate===!1)continue;r.copy(K.mapSize);const te=K.getFrameExtents();if(r.multiply(te),i.copy(K.mapSize),(r.x>u||r.y>u)&&(r.x>u&&(i.x=Math.floor(u/te.x),r.x=i.x*te.x,K.mapSize.x=i.x),r.y>u&&(i.y=Math.floor(u/te.y),r.y=i.y*te.y,K.mapSize.y=i.y)),K.map===null||U===!0||V===!0){const fe=this.type!==Za?{minFilter:Dr,magFilter:Dr}:{};K.map!==null&&K.map.dispose(),K.map=new _a(r.x,r.y,fe),K.map.texture.name=ee.name+".shadowMap",K.camera.updateProjectionMatrix()}n.setRenderTarget(K.map),n.clear();const le=K.getViewportCount();for(let fe=0;fe<le;fe++){const Ie=K.getViewport(fe);o.set(i.x*Ie.x,i.y*Ie.y,i.x*Ie.z,i.y*Ie.w),L.viewport(o),K.updateMatrices(ee,fe),s=K.getFrustum(),b(N,M,K.camera,ee,this.type)}K.isPointLightShadow!==!0&&this.type===Za&&x(K,M),K.needsUpdate=!1}g=this.type,m.needsUpdate=!1,n.setRenderTarget(T,k,B)};function x(_,N){const M=e.update(A);d.defines.VSM_SAMPLES!==_.blurSamples&&(d.defines.VSM_SAMPLES=_.blurSamples,f.defines.VSM_SAMPLES=_.blurSamples,d.needsUpdate=!0,f.needsUpdate=!0),_.mapPass===null&&(_.mapPass=new _a(r.x,r.y)),d.uniforms.shadow_pass.value=_.map.texture,d.uniforms.resolution.value=_.mapSize,d.uniforms.radius.value=_.radius,n.setRenderTarget(_.mapPass),n.clear(),n.renderBufferDirect(N,null,M,d,A,null),f.uniforms.shadow_pass.value=_.mapPass.texture,f.uniforms.resolution.value=_.mapSize,f.uniforms.radius.value=_.radius,n.setRenderTarget(_.map),n.clear(),n.renderBufferDirect(N,null,M,f,A,null)}function v(_,N,M,T){let k=null;const B=M.isPointLight===!0?_.customDistanceMaterial:_.customDepthMaterial;if(B!==void 0)k=B;else if(k=M.isPointLight===!0?l:a,n.localClippingEnabled&&N.clipShadows===!0&&Array.isArray(N.clippingPlanes)&&N.clippingPlanes.length!==0||N.displacementMap&&N.displacementScale!==0||N.alphaMap&&N.alphaTest>0||N.map&&N.alphaTest>0||N.alphaToCoverage===!0){const L=k.uuid,U=N.uuid;let V=c[L];V===void 0&&(V={},c[L]=V);let W=V[U];W===void 0&&(W=k.clone(),V[U]=W,N.addEventListener("dispose",w)),k=W}if(k.visible=N.visible,k.wireframe=N.wireframe,T===Za?k.side=N.shadowSide!==null?N.shadowSide:N.side:k.side=N.shadowSide!==null?N.shadowSide:h[N.side],k.alphaMap=N.alphaMap,k.alphaTest=N.alphaToCoverage===!0?.5:N.alphaTest,k.map=N.map,k.clipShadows=N.clipShadows,k.clippingPlanes=N.clippingPlanes,k.clipIntersection=N.clipIntersection,k.displacementMap=N.displacementMap,k.displacementScale=N.displacementScale,k.displacementBias=N.displacementBias,k.wireframeLinewidth=N.wireframeLinewidth,k.linewidth=N.linewidth,M.isPointLight===!0&&k.isMeshDistanceMaterial===!0){const L=n.properties.get(k);L.light=M}return k}function b(_,N,M,T,k){if(_.visible===!1)return;if(_.layers.test(N.layers)&&(_.isMesh||_.isLine||_.isPoints)&&(_.castShadow||_.receiveShadow&&k===Za)&&(!_.frustumCulled||s.intersectsObject(_))){_.modelViewMatrix.multiplyMatrices(M.matrixWorldInverse,_.matrixWorld);const U=e.update(_),V=_.material;if(Array.isArray(V)){const W=U.groups;for(let H=0,ee=W.length;H<ee;H++){const K=W[H],te=V[K.materialIndex];if(te&&te.visible){const le=v(_,te,T,k);_.onBeforeShadow(n,_,N,M,U,le,K),n.renderBufferDirect(M,null,U,le,_,K),_.onAfterShadow(n,_,N,M,U,le,K)}}}else if(V.visible){const W=v(_,V,T,k);_.onBeforeShadow(n,_,N,M,U,W,null),n.renderBufferDirect(M,null,U,W,_,null),_.onAfterShadow(n,_,N,M,U,W,null)}}const L=_.children;for(let U=0,V=L.length;U<V;U++)b(L[U],N,M,T,k)}function w(_){_.target.removeEventListener("dispose",w);for(const M in c){const T=c[M],k=_.target.uuid;k in T&&(T[k].dispose(),delete T[k])}}}const eV={[Lb]:Ob,[Qb]:Gb,[Ub]:Vb,[Ld]:zb,[Ob]:Lb,[Gb]:Qb,[Vb]:Ub,[zb]:Ld};function tV(n,e){function t(){let de=!1;const je=new Vn;let at=null;const At=new Vn(0,0,0,0);return{setMask:function(Ge){at!==Ge&&!de&&(n.colorMask(Ge,Ge,Ge,Ge),at=Ge)},setLocked:function(Ge){de=Ge},setClear:function(Ge,Ve,ut,qt,Mn){Mn===!0&&(Ge*=qt,Ve*=qt,ut*=qt),je.set(Ge,Ve,ut,qt),At.equals(je)===!1&&(n.clearColor(Ge,Ve,ut,qt),At.copy(je))},reset:function(){de=!1,at=null,At.set(-1,0,0,0)}}}function s(){let de=!1,je=!1,at=null,At=null,Ge=null;return{setReversed:function(Ve){if(je!==Ve){const ut=e.get("EXT_clip_control");Ve?ut.clipControlEXT(ut.LOWER_LEFT_EXT,ut.ZERO_TO_ONE_EXT):ut.clipControlEXT(ut.LOWER_LEFT_EXT,ut.NEGATIVE_ONE_TO_ONE_EXT),je=Ve;const qt=Ge;Ge=null,this.setClear(qt)}},getReversed:function(){return je},setTest:function(Ve){Ve?ge(n.DEPTH_TEST):Ne(n.DEPTH_TEST)},setMask:function(Ve){at!==Ve&&!de&&(n.depthMask(Ve),at=Ve)},setFunc:function(Ve){if(je&&(Ve=eV[Ve]),At!==Ve){switch(Ve){case Lb:n.depthFunc(n.NEVER);break;case Ob:n.depthFunc(n.ALWAYS);break;case Qb:n.depthFunc(n.LESS);break;case Ld:n.depthFunc(n.LEQUAL);break;case Ub:n.depthFunc(n.EQUAL);break;case zb:n.depthFunc(n.GEQUAL);break;case Gb:n.depthFunc(n.GREATER);break;case Vb:n.depthFunc(n.NOTEQUAL);break;default:n.depthFunc(n.LEQUAL)}At=Ve}},setLocked:function(Ve){de=Ve},setClear:function(Ve){Ge!==Ve&&(je&&(Ve=1-Ve),n.clearDepth(Ve),Ge=Ve)},reset:function(){de=!1,at=null,At=null,Ge=null,je=!1}}}function r(){let de=!1,je=null,at=null,At=null,Ge=null,Ve=null,ut=null,qt=null,Mn=null;return{setTest:function(mn){de||(mn?ge(n.STENCIL_TEST):Ne(n.STENCIL_TEST))},setMask:function(mn){je!==mn&&!de&&(n.stencilMask(mn),je=mn)},setFunc:function(mn,Ds,Qr){(at!==mn||At!==Ds||Ge!==Qr)&&(n.stencilFunc(mn,Ds,Qr),at=mn,At=Ds,Ge=Qr)},setOp:function(mn,Ds,Qr){(Ve!==mn||ut!==Ds||qt!==Qr)&&(n.stencilOp(mn,Ds,Qr),Ve=mn,ut=Ds,qt=Qr)},setLocked:function(mn){de=mn},setClear:function(mn){Mn!==mn&&(n.clearStencil(mn),Mn=mn)},reset:function(){de=!1,je=null,at=null,At=null,Ge=null,Ve=null,ut=null,qt=null,Mn=null}}}const i=new t,o=new s,a=new r,l=new WeakMap,c=new WeakMap;let u={},h={},d=new WeakMap,f=[],p=null,A=!1,m=null,g=null,x=null,v=null,b=null,w=null,_=null,N=new In(0,0,0),M=0,T=!1,k=null,B=null,L=null,U=null,V=null;const W=n.getParameter(n.MAX_COMBINED_TEXTURE_IMAGE_UNITS);let H=!1,ee=0;const K=n.getParameter(n.VERSION);K.indexOf("WebGL")!==-1?(ee=parseFloat(/^WebGL (\d)/.exec(K)[1]),H=ee>=1):K.indexOf("OpenGL ES")!==-1&&(ee=parseFloat(/^OpenGL ES (\d)/.exec(K)[1]),H=ee>=2);let te=null,le={};const fe=n.getParameter(n.SCISSOR_BOX),Ie=n.getParameter(n.VIEWPORT),Se=new Vn().fromArray(fe),De=new Vn().fromArray(Ie);function Be(de,je,at,At){const Ge=new Uint8Array(4),Ve=n.createTexture();n.bindTexture(de,Ve),n.texParameteri(de,n.TEXTURE_MIN_FILTER,n.NEAREST),n.texParameteri(de,n.TEXTURE_MAG_FILTER,n.NEAREST);for(let ut=0;ut<at;ut++)de===n.TEXTURE_3D||de===n.TEXTURE_2D_ARRAY?n.texImage3D(je,0,n.RGBA,1,1,At,0,n.RGBA,n.UNSIGNED_BYTE,Ge):n.texImage2D(je+ut,0,n.RGBA,1,1,0,n.RGBA,n.UNSIGNED_BYTE,Ge);return Ve}const he={};he[n.TEXTURE_2D]=Be(n.TEXTURE_2D,n.TEXTURE_2D,1),he[n.TEXTURE_CUBE_MAP]=Be(n.TEXTURE_CUBE_MAP,n.TEXTURE_CUBE_MAP_POSITIVE_X,6),he[n.TEXTURE_2D_ARRAY]=Be(n.TEXTURE_2D_ARRAY,n.TEXTURE_2D_ARRAY,1,1),he[n.TEXTURE_3D]=Be(n.TEXTURE_3D,n.TEXTURE_3D,1,1),i.setClear(0,0,0,1),o.setClear(1),a.setClear(0),ge(n.DEPTH_TEST),o.setFunc(Ld),tt(!1),Ke(LS),ge(n.CULL_FACE),ht(Yl);function ge(de){u[de]!==!0&&(n.enable(de),u[de]=!0)}function Ne(de){u[de]!==!1&&(n.disable(de),u[de]=!1)}function Oe(de,je){return h[de]!==je?(n.bindFramebuffer(de,je),h[de]=je,de===n.DRAW_FRAMEBUFFER&&(h[n.FRAMEBUFFER]=je),de===n.FRAMEBUFFER&&(h[n.DRAW_FRAMEBUFFER]=je),!0):!1}function Qe(de,je){let at=f,At=!1;if(de){at=d.get(je),at===void 0&&(at=[],d.set(je,at));const Ge=de.textures;if(at.length!==Ge.length||at[0]!==n.COLOR_ATTACHMENT0){for(let Ve=0,ut=Ge.length;Ve<ut;Ve++)at[Ve]=n.COLOR_ATTACHMENT0+Ve;at.length=Ge.length,At=!0}}else at[0]!==n.BACK&&(at[0]=n.BACK,At=!0);At&&n.drawBuffers(at)}function Ye(de){return p!==de?(n.useProgram(de),p=de,!0):!1}const _t={[jc]:n.FUNC_ADD,[zL]:n.FUNC_SUBTRACT,[GL]:n.FUNC_REVERSE_SUBTRACT};_t[VL]=n.MIN,_t[WL]=n.MAX;const J={[HL]:n.ZERO,[qL]:n.ONE,[YL]:n.SRC_COLOR,[$b]:n.SRC_ALPHA,[e4]:n.SRC_ALPHA_SATURATE,[JL]:n.DST_COLOR,[XL]:n.DST_ALPHA,[jL]:n.ONE_MINUS_SRC_COLOR,[Pb]:n.ONE_MINUS_SRC_ALPHA,[ZL]:n.ONE_MINUS_DST_COLOR,[KL]:n.ONE_MINUS_DST_ALPHA,[t4]:n.CONSTANT_COLOR,[n4]:n.ONE_MINUS_CONSTANT_COLOR,[s4]:n.CONSTANT_ALPHA,[r4]:n.ONE_MINUS_CONSTANT_ALPHA};function ht(de,je,at,At,Ge,Ve,ut,qt,Mn,mn){if(de===Yl){A===!0&&(Ne(n.BLEND),A=!1);return}if(A===!1&&(ge(n.BLEND),A=!0),de!==UL){if(de!==m||mn!==T){if((g!==jc||b!==jc)&&(n.blendEquation(n.FUNC_ADD),g=jc,b=jc),mn)switch(de){case Nd:n.blendFuncSeparate(n.ONE,n.ONE_MINUS_SRC_ALPHA,n.ONE,n.ONE_MINUS_SRC_ALPHA);break;case OS:n.blendFunc(n.ONE,n.ONE);break;case QS:n.blendFuncSeparate(n.ZERO,n.ONE_MINUS_SRC_COLOR,n.ZERO,n.ONE);break;case US:n.blendFuncSeparate(n.DST_COLOR,n.ONE_MINUS_SRC_ALPHA,n.ZERO,n.ONE);break;default:console.error("THREE.WebGLState: Invalid blending: ",de);break}else switch(de){case Nd:n.blendFuncSeparate(n.SRC_ALPHA,n.ONE_MINUS_SRC_ALPHA,n.ONE,n.ONE_MINUS_SRC_ALPHA);break;case OS:n.blendFuncSeparate(n.SRC_ALPHA,n.ONE,n.ONE,n.ONE);break;case QS:console.error("THREE.WebGLState: SubtractiveBlending requires material.premultipliedAlpha = true");break;case US:console.error("THREE.WebGLState: MultiplyBlending requires material.premultipliedAlpha = true");break;default:console.error("THREE.WebGLState: Invalid blending: ",de);break}x=null,v=null,w=null,_=null,N.set(0,0,0),M=0,m=de,T=mn}return}Ge=Ge||je,Ve=Ve||at,ut=ut||At,(je!==g||Ge!==b)&&(n.blendEquationSeparate(_t[je],_t[Ge]),g=je,b=Ge),(at!==x||At!==v||Ve!==w||ut!==_)&&(n.blendFuncSeparate(J[at],J[At],J[Ve],J[ut]),x=at,v=At,w=Ve,_=ut),(qt.equals(N)===!1||Mn!==M)&&(n.blendColor(qt.r,qt.g,qt.b,Mn),N.copy(qt),M=Mn),m=de,T=!1}function dt(de,je){de.side===zo?Ne(n.CULL_FACE):ge(n.CULL_FACE);let at=de.side===Li;je&&(at=!at),tt(at),de.blending===Nd&&de.transparent===!1?ht(Yl):ht(de.blending,de.blendEquation,de.blendSrc,de.blendDst,de.blendEquationAlpha,de.blendSrcAlpha,de.blendDstAlpha,de.blendColor,de.blendAlpha,de.premultipliedAlpha),o.setFunc(de.depthFunc),o.setTest(de.depthTest),o.setMask(de.depthWrite),i.setMask(de.colorWrite);const At=de.stencilWrite;a.setTest(At),At&&(a.setMask(de.stencilWriteMask),a.setFunc(de.stencilFunc,de.stencilRef,de.stencilFuncMask),a.setOp(de.stencilFail,de.stencilZFail,de.stencilZPass)),Xe(de.polygonOffset,de.polygonOffsetFactor,de.polygonOffsetUnits),de.alphaToCoverage===!0?ge(n.SAMPLE_ALPHA_TO_COVERAGE):Ne(n.SAMPLE_ALPHA_TO_COVERAGE)}function tt(de){k!==de&&(de?n.frontFace(n.CW):n.frontFace(n.CCW),k=de)}function Ke(de){de!==LL?(ge(n.CULL_FACE),de!==B&&(de===LS?n.cullFace(n.BACK):de===OL?n.cullFace(n.FRONT):n.cullFace(n.FRONT_AND_BACK))):Ne(n.CULL_FACE),B=de}function kt(de){de!==L&&(H&&n.lineWidth(de),L=de)}function Xe(de,je,at){de?(ge(n.POLYGON_OFFSET_FILL),(U!==je||V!==at)&&(n.polygonOffset(je,at),U=je,V=at)):Ne(n.POLYGON_OFFSET_FILL)}function ot(de){de?ge(n.SCISSOR_TEST):Ne(n.SCISSOR_TEST)}function wn(de){de===void 0&&(de=n.TEXTURE0+W-1),te!==de&&(n.activeTexture(de),te=de)}function sn(de,je,at){at===void 0&&(te===null?at=n.TEXTURE0+W-1:at=te);let At=le[at];At===void 0&&(At={type:void 0,texture:void 0},le[at]=At),(At.type!==de||At.texture!==je)&&(te!==at&&(n.activeTexture(at),te=at),n.bindTexture(de,je||he[de]),At.type=de,At.texture=je)}function Z(){const de=le[te];de!==void 0&&de.type!==void 0&&(n.bindTexture(de.type,null),de.type=void 0,de.texture=void 0)}function G(){try{n.compressedTexImage2D(...arguments)}catch(de){console.error("THREE.WebGLState:",de)}}function we(){try{n.compressedTexImage3D(...arguments)}catch(de){console.error("THREE.WebGLState:",de)}}function ke(){try{n.texSubImage2D(...arguments)}catch(de){console.error("THREE.WebGLState:",de)}}function Ue(){try{n.texSubImage3D(...arguments)}catch(de){console.error("THREE.WebGLState:",de)}}function Re(){try{n.compressedTexSubImage2D(...arguments)}catch(de){console.error("THREE.WebGLState:",de)}}function bt(){try{n.compressedTexSubImage3D(...arguments)}catch(de){console.error("THREE.WebGLState:",de)}}function et(){try{n.texStorage2D(...arguments)}catch(de){console.error("THREE.WebGLState:",de)}}function St(){try{n.texStorage3D(...arguments)}catch(de){console.error("THREE.WebGLState:",de)}}function Tt(){try{n.texImage2D(...arguments)}catch(de){console.error("THREE.WebGLState:",de)}}function We(){try{n.texImage3D(...arguments)}catch(de){console.error("THREE.WebGLState:",de)}}function ct(de){Se.equals(de)===!1&&(n.scissor(de.x,de.y,de.z,de.w),Se.copy(de))}function Ut(de){De.equals(de)===!1&&(n.viewport(de.x,de.y,de.z,de.w),De.copy(de))}function Dt(de,je){let at=c.get(je);at===void 0&&(at=new WeakMap,c.set(je,at));let At=at.get(de);At===void 0&&(At=n.getUniformBlockIndex(je,de.name),at.set(de,At))}function mt(de,je){const At=c.get(je).get(de);l.get(je)!==At&&(n.uniformBlockBinding(je,At,de.__bindingPointIndex),l.set(je,At))}function Yt(){n.disable(n.BLEND),n.disable(n.CULL_FACE),n.disable(n.DEPTH_TEST),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SCISSOR_TEST),n.disable(n.STENCIL_TEST),n.disable(n.SAMPLE_ALPHA_TO_COVERAGE),n.blendEquation(n.FUNC_ADD),n.blendFunc(n.ONE,n.ZERO),n.blendFuncSeparate(n.ONE,n.ZERO,n.ONE,n.ZERO),n.blendColor(0,0,0,0),n.colorMask(!0,!0,!0,!0),n.clearColor(0,0,0,0),n.depthMask(!0),n.depthFunc(n.LESS),o.setReversed(!1),n.clearDepth(1),n.stencilMask(4294967295),n.stencilFunc(n.ALWAYS,0,4294967295),n.stencilOp(n.KEEP,n.KEEP,n.KEEP),n.clearStencil(0),n.cullFace(n.BACK),n.frontFace(n.CCW),n.polygonOffset(0,0),n.activeTexture(n.TEXTURE0),n.bindFramebuffer(n.FRAMEBUFFER,null),n.bindFramebuffer(n.DRAW_FRAMEBUFFER,null),n.bindFramebuffer(n.READ_FRAMEBUFFER,null),n.useProgram(null),n.lineWidth(1),n.scissor(0,0,n.canvas.width,n.canvas.height),n.viewport(0,0,n.canvas.width,n.canvas.height),u={},te=null,le={},h={},d=new WeakMap,f=[],p=null,A=!1,m=null,g=null,x=null,v=null,b=null,w=null,_=null,N=new In(0,0,0),M=0,T=!1,k=null,B=null,L=null,U=null,V=null,Se.set(0,0,n.canvas.width,n.canvas.height),De.set(0,0,n.canvas.width,n.canvas.height),i.reset(),o.reset(),a.reset()}return{buffers:{color:i,depth:o,stencil:a},enable:ge,disable:Ne,bindFramebuffer:Oe,drawBuffers:Qe,useProgram:Ye,setBlending:ht,setMaterial:dt,setFlipSided:tt,setCullFace:Ke,setLineWidth:kt,setPolygonOffset:Xe,setScissorTest:ot,activeTexture:wn,bindTexture:sn,unbindTexture:Z,compressedTexImage2D:G,compressedTexImage3D:we,texImage2D:Tt,texImage3D:We,updateUBOMapping:Dt,uniformBlockBinding:mt,texStorage2D:et,texStorage3D:St,texSubImage2D:ke,texSubImage3D:Ue,compressedTexSubImage2D:Re,compressedTexSubImage3D:bt,scissor:ct,viewport:Ut,reset:Yt}}function nV(n,e,t,s,r,i,o){const a=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):null,l=typeof navigator>"u"?!1:/OculusBrowser/g.test(navigator.userAgent),c=new En,u=new WeakMap;let h;const d=new WeakMap;let f=!1;try{f=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function p(Z,G){return f?new OffscreenCanvas(Z,G):A0("canvas")}function A(Z,G,we){let ke=1;const Ue=sn(Z);if((Ue.width>we||Ue.height>we)&&(ke=we/Math.max(Ue.width,Ue.height)),ke<1)if(typeof HTMLImageElement<"u"&&Z instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&Z instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&Z instanceof ImageBitmap||typeof VideoFrame<"u"&&Z instanceof VideoFrame){const Re=Math.floor(ke*Ue.width),bt=Math.floor(ke*Ue.height);h===void 0&&(h=p(Re,bt));const et=G?p(Re,bt):h;return et.width=Re,et.height=bt,et.getContext("2d").drawImage(Z,0,0,Re,bt),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+Ue.width+"x"+Ue.height+") to ("+Re+"x"+bt+")."),et}else return"data"in Z&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+Ue.width+"x"+Ue.height+")."),Z;return Z}function m(Z){return Z.generateMipmaps}function g(Z){n.generateMipmap(Z)}function x(Z){return Z.isWebGLCubeRenderTarget?n.TEXTURE_CUBE_MAP:Z.isWebGL3DRenderTarget?n.TEXTURE_3D:Z.isWebGLArrayRenderTarget||Z.isCompressedArrayTexture?n.TEXTURE_2D_ARRAY:n.TEXTURE_2D}function v(Z,G,we,ke,Ue=!1){if(Z!==null){if(n[Z]!==void 0)return n[Z];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+Z+"'")}let Re=G;if(G===n.RED&&(we===n.FLOAT&&(Re=n.R32F),we===n.HALF_FLOAT&&(Re=n.R16F),we===n.UNSIGNED_BYTE&&(Re=n.R8)),G===n.RED_INTEGER&&(we===n.UNSIGNED_BYTE&&(Re=n.R8UI),we===n.UNSIGNED_SHORT&&(Re=n.R16UI),we===n.UNSIGNED_INT&&(Re=n.R32UI),we===n.BYTE&&(Re=n.R8I),we===n.SHORT&&(Re=n.R16I),we===n.INT&&(Re=n.R32I)),G===n.RG&&(we===n.FLOAT&&(Re=n.RG32F),we===n.HALF_FLOAT&&(Re=n.RG16F),we===n.UNSIGNED_BYTE&&(Re=n.RG8)),G===n.RG_INTEGER&&(we===n.UNSIGNED_BYTE&&(Re=n.RG8UI),we===n.UNSIGNED_SHORT&&(Re=n.RG16UI),we===n.UNSIGNED_INT&&(Re=n.RG32UI),we===n.BYTE&&(Re=n.RG8I),we===n.SHORT&&(Re=n.RG16I),we===n.INT&&(Re=n.RG32I)),G===n.RGB_INTEGER&&(we===n.UNSIGNED_BYTE&&(Re=n.RGB8UI),we===n.UNSIGNED_SHORT&&(Re=n.RGB16UI),we===n.UNSIGNED_INT&&(Re=n.RGB32UI),we===n.BYTE&&(Re=n.RGB8I),we===n.SHORT&&(Re=n.RGB16I),we===n.INT&&(Re=n.RGB32I)),G===n.RGBA_INTEGER&&(we===n.UNSIGNED_BYTE&&(Re=n.RGBA8UI),we===n.UNSIGNED_SHORT&&(Re=n.RGBA16UI),we===n.UNSIGNED_INT&&(Re=n.RGBA32UI),we===n.BYTE&&(Re=n.RGBA8I),we===n.SHORT&&(Re=n.RGBA16I),we===n.INT&&(Re=n.RGBA32I)),G===n.RGB&&(we===n.UNSIGNED_INT_5_9_9_9_REV&&(Re=n.RGB9_E5),we===n.UNSIGNED_INT_10F_11F_11F_REV&&(Re=n.R11F_G11F_B10F)),G===n.RGBA){const bt=Ue?p0:Gn.getTransfer(ke);we===n.FLOAT&&(Re=n.RGBA32F),we===n.HALF_FLOAT&&(Re=n.RGBA16F),we===n.UNSIGNED_BYTE&&(Re=bt===rs?n.SRGB8_ALPHA8:n.RGBA8),we===n.UNSIGNED_SHORT_4_4_4_4&&(Re=n.RGBA4),we===n.UNSIGNED_SHORT_5_5_5_1&&(Re=n.RGB5_A1)}return(Re===n.R16F||Re===n.R32F||Re===n.RG16F||Re===n.RG32F||Re===n.RGBA16F||Re===n.RGBA32F)&&e.get("EXT_color_buffer_float"),Re}function b(Z,G){let we;return Z?G===null||G===Oi||G===Im?we=n.DEPTH24_STENCIL8:G===ol?we=n.DEPTH32F_STENCIL8:G===Cm&&(we=n.DEPTH24_STENCIL8,console.warn("DepthTexture: 16 bit depth attachment is not supported with stencil. Using 24-bit attachment.")):G===null||G===Oi||G===Im?we=n.DEPTH_COMPONENT24:G===ol?we=n.DEPTH_COMPONENT32F:G===Cm&&(we=n.DEPTH_COMPONENT16),we}function w(Z,G){return m(Z)===!0||Z.isFramebufferTexture&&Z.minFilter!==Dr&&Z.minFilter!==Pi?Math.log2(Math.max(G.width,G.height))+1:Z.mipmaps!==void 0&&Z.mipmaps.length>0?Z.mipmaps.length:Z.isCompressedTexture&&Array.isArray(Z.image)?G.mipmaps.length:1}function _(Z){const G=Z.target;G.removeEventListener("dispose",_),M(G),G.isVideoTexture&&u.delete(G)}function N(Z){const G=Z.target;G.removeEventListener("dispose",N),k(G)}function M(Z){const G=s.get(Z);if(G.__webglInit===void 0)return;const we=Z.source,ke=d.get(we);if(ke){const Ue=ke[G.__cacheKey];Ue.usedTimes--,Ue.usedTimes===0&&T(Z),Object.keys(ke).length===0&&d.delete(we)}s.remove(Z)}function T(Z){const G=s.get(Z);n.deleteTexture(G.__webglTexture);const we=Z.source,ke=d.get(we);delete ke[G.__cacheKey],o.memory.textures--}function k(Z){const G=s.get(Z);if(Z.depthTexture&&(Z.depthTexture.dispose(),s.remove(Z.depthTexture)),Z.isWebGLCubeRenderTarget)for(let ke=0;ke<6;ke++){if(Array.isArray(G.__webglFramebuffer[ke]))for(let Ue=0;Ue<G.__webglFramebuffer[ke].length;Ue++)n.deleteFramebuffer(G.__webglFramebuffer[ke][Ue]);else n.deleteFramebuffer(G.__webglFramebuffer[ke]);G.__webglDepthbuffer&&n.deleteRenderbuffer(G.__webglDepthbuffer[ke])}else{if(Array.isArray(G.__webglFramebuffer))for(let ke=0;ke<G.__webglFramebuffer.length;ke++)n.deleteFramebuffer(G.__webglFramebuffer[ke]);else n.deleteFramebuffer(G.__webglFramebuffer);if(G.__webglDepthbuffer&&n.deleteRenderbuffer(G.__webglDepthbuffer),G.__webglMultisampledFramebuffer&&n.deleteFramebuffer(G.__webglMultisampledFramebuffer),G.__webglColorRenderbuffer)for(let ke=0;ke<G.__webglColorRenderbuffer.length;ke++)G.__webglColorRenderbuffer[ke]&&n.deleteRenderbuffer(G.__webglColorRenderbuffer[ke]);G.__webglDepthRenderbuffer&&n.deleteRenderbuffer(G.__webglDepthRenderbuffer)}const we=Z.textures;for(let ke=0,Ue=we.length;ke<Ue;ke++){const Re=s.get(we[ke]);Re.__webglTexture&&(n.deleteTexture(Re.__webglTexture),o.memory.textures--),s.remove(we[ke])}s.remove(Z)}let B=0;function L(){B=0}function U(){const Z=B;return Z>=r.maxTextures&&console.warn("THREE.WebGLTextures: Trying to use "+Z+" texture units while this GPU supports only "+r.maxTextures),B+=1,Z}function V(Z){const G=[];return G.push(Z.wrapS),G.push(Z.wrapT),G.push(Z.wrapR||0),G.push(Z.magFilter),G.push(Z.minFilter),G.push(Z.anisotropy),G.push(Z.internalFormat),G.push(Z.format),G.push(Z.type),G.push(Z.generateMipmaps),G.push(Z.premultiplyAlpha),G.push(Z.flipY),G.push(Z.unpackAlignment),G.push(Z.colorSpace),G.join()}function W(Z,G){const we=s.get(Z);if(Z.isVideoTexture&&ot(Z),Z.isRenderTargetTexture===!1&&Z.isExternalTexture!==!0&&Z.version>0&&we.__version!==Z.version){const ke=Z.image;if(ke===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(ke.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{he(we,Z,G);return}}else Z.isExternalTexture&&(we.__webglTexture=Z.sourceTexture?Z.sourceTexture:null);t.bindTexture(n.TEXTURE_2D,we.__webglTexture,n.TEXTURE0+G)}function H(Z,G){const we=s.get(Z);if(Z.isRenderTargetTexture===!1&&Z.version>0&&we.__version!==Z.version){he(we,Z,G);return}t.bindTexture(n.TEXTURE_2D_ARRAY,we.__webglTexture,n.TEXTURE0+G)}function ee(Z,G){const we=s.get(Z);if(Z.isRenderTargetTexture===!1&&Z.version>0&&we.__version!==Z.version){he(we,Z,G);return}t.bindTexture(n.TEXTURE_3D,we.__webglTexture,n.TEXTURE0+G)}function K(Z,G){const we=s.get(Z);if(Z.version>0&&we.__version!==Z.version){ge(we,Z,G);return}t.bindTexture(n.TEXTURE_CUBE_MAP,we.__webglTexture,n.TEXTURE0+G)}const te={[qb]:n.REPEAT,[ru]:n.CLAMP_TO_EDGE,[Yb]:n.MIRRORED_REPEAT},le={[Dr]:n.NEAREST,[p4]:n.NEAREST_MIPMAP_NEAREST,[jA]:n.NEAREST_MIPMAP_LINEAR,[Pi]:n.LINEAR,[r2]:n.LINEAR_MIPMAP_NEAREST,[iu]:n.LINEAR_MIPMAP_LINEAR},fe={[x4]:n.NEVER,[S4]:n.ALWAYS,[b4]:n.LESS,[pB]:n.LEQUAL,[v4]:n.EQUAL,[w4]:n.GEQUAL,[C4]:n.GREATER,[I4]:n.NOTEQUAL};function Ie(Z,G){if(G.type===ol&&e.has("OES_texture_float_linear")===!1&&(G.magFilter===Pi||G.magFilter===r2||G.magFilter===jA||G.magFilter===iu||G.minFilter===Pi||G.minFilter===r2||G.minFilter===jA||G.minFilter===iu)&&console.warn("THREE.WebGLRenderer: Unable to use linear filtering with floating point textures. OES_texture_float_linear not supported on this device."),n.texParameteri(Z,n.TEXTURE_WRAP_S,te[G.wrapS]),n.texParameteri(Z,n.TEXTURE_WRAP_T,te[G.wrapT]),(Z===n.TEXTURE_3D||Z===n.TEXTURE_2D_ARRAY)&&n.texParameteri(Z,n.TEXTURE_WRAP_R,te[G.wrapR]),n.texParameteri(Z,n.TEXTURE_MAG_FILTER,le[G.magFilter]),n.texParameteri(Z,n.TEXTURE_MIN_FILTER,le[G.minFilter]),G.compareFunction&&(n.texParameteri(Z,n.TEXTURE_COMPARE_MODE,n.COMPARE_REF_TO_TEXTURE),n.texParameteri(Z,n.TEXTURE_COMPARE_FUNC,fe[G.compareFunction])),e.has("EXT_texture_filter_anisotropic")===!0){if(G.magFilter===Dr||G.minFilter!==jA&&G.minFilter!==iu||G.type===ol&&e.has("OES_texture_float_linear")===!1)return;if(G.anisotropy>1||s.get(G).__currentAnisotropy){const we=e.get("EXT_texture_filter_anisotropic");n.texParameterf(Z,we.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(G.anisotropy,r.getMaxAnisotropy())),s.get(G).__currentAnisotropy=G.anisotropy}}}function Se(Z,G){let we=!1;Z.__webglInit===void 0&&(Z.__webglInit=!0,G.addEventListener("dispose",_));const ke=G.source;let Ue=d.get(ke);Ue===void 0&&(Ue={},d.set(ke,Ue));const Re=V(G);if(Re!==Z.__cacheKey){Ue[Re]===void 0&&(Ue[Re]={texture:n.createTexture(),usedTimes:0},o.memory.textures++,we=!0),Ue[Re].usedTimes++;const bt=Ue[Z.__cacheKey];bt!==void 0&&(Ue[Z.__cacheKey].usedTimes--,bt.usedTimes===0&&T(G)),Z.__cacheKey=Re,Z.__webglTexture=Ue[Re].texture}return we}function De(Z,G,we){return Math.floor(Math.floor(Z/we)/G)}function Be(Z,G,we,ke){const Re=Z.updateRanges;if(Re.length===0)t.texSubImage2D(n.TEXTURE_2D,0,0,0,G.width,G.height,we,ke,G.data);else{Re.sort((We,ct)=>We.start-ct.start);let bt=0;for(let We=1;We<Re.length;We++){const ct=Re[bt],Ut=Re[We],Dt=ct.start+ct.count,mt=De(Ut.start,G.width,4),Yt=De(ct.start,G.width,4);Ut.start<=Dt+1&&mt===Yt&&De(Ut.start+Ut.count-1,G.width,4)===mt?ct.count=Math.max(ct.count,Ut.start+Ut.count-ct.start):(++bt,Re[bt]=Ut)}Re.length=bt+1;const et=n.getParameter(n.UNPACK_ROW_LENGTH),St=n.getParameter(n.UNPACK_SKIP_PIXELS),Tt=n.getParameter(n.UNPACK_SKIP_ROWS);n.pixelStorei(n.UNPACK_ROW_LENGTH,G.width);for(let We=0,ct=Re.length;We<ct;We++){const Ut=Re[We],Dt=Math.floor(Ut.start/4),mt=Math.ceil(Ut.count/4),Yt=Dt%G.width,de=Math.floor(Dt/G.width),je=mt,at=1;n.pixelStorei(n.UNPACK_SKIP_PIXELS,Yt),n.pixelStorei(n.UNPACK_SKIP_ROWS,de),t.texSubImage2D(n.TEXTURE_2D,0,Yt,de,je,at,we,ke,G.data)}Z.clearUpdateRanges(),n.pixelStorei(n.UNPACK_ROW_LENGTH,et),n.pixelStorei(n.UNPACK_SKIP_PIXELS,St),n.pixelStorei(n.UNPACK_SKIP_ROWS,Tt)}}function he(Z,G,we){let ke=n.TEXTURE_2D;(G.isDataArrayTexture||G.isCompressedArrayTexture)&&(ke=n.TEXTURE_2D_ARRAY),G.isData3DTexture&&(ke=n.TEXTURE_3D);const Ue=Se(Z,G),Re=G.source;t.bindTexture(ke,Z.__webglTexture,n.TEXTURE0+we);const bt=s.get(Re);if(Re.version!==bt.__version||Ue===!0){t.activeTexture(n.TEXTURE0+we);const et=Gn.getPrimaries(Gn.workingColorSpace),St=G.colorSpace===Gl?null:Gn.getPrimaries(G.colorSpace),Tt=G.colorSpace===Gl||et===St?n.NONE:n.BROWSER_DEFAULT_WEBGL;n.pixelStorei(n.UNPACK_FLIP_Y_WEBGL,G.flipY),n.pixelStorei(n.UNPACK_PREMULTIPLY_ALPHA_WEBGL,G.premultiplyAlpha),n.pixelStorei(n.UNPACK_ALIGNMENT,G.unpackAlignment),n.pixelStorei(n.UNPACK_COLORSPACE_CONVERSION_WEBGL,Tt);let We=A(G.image,!1,r.maxTextureSize);We=wn(G,We);const ct=i.convert(G.format,G.colorSpace),Ut=i.convert(G.type);let Dt=v(G.internalFormat,ct,Ut,G.colorSpace,G.isVideoTexture);Ie(ke,G);let mt;const Yt=G.mipmaps,de=G.isVideoTexture!==!0,je=bt.__version===void 0||Ue===!0,at=Re.dataReady,At=w(G,We);if(G.isDepthTexture)Dt=b(G.format===Sm,G.type),je&&(de?t.texStorage2D(n.TEXTURE_2D,1,Dt,We.width,We.height):t.texImage2D(n.TEXTURE_2D,0,Dt,We.width,We.height,0,ct,Ut,null));else if(G.isDataTexture)if(Yt.length>0){de&&je&&t.texStorage2D(n.TEXTURE_2D,At,Dt,Yt[0].width,Yt[0].height);for(let Ge=0,Ve=Yt.length;Ge<Ve;Ge++)mt=Yt[Ge],de?at&&t.texSubImage2D(n.TEXTURE_2D,Ge,0,0,mt.width,mt.height,ct,Ut,mt.data):t.texImage2D(n.TEXTURE_2D,Ge,Dt,mt.width,mt.height,0,ct,Ut,mt.data);G.generateMipmaps=!1}else de?(je&&t.texStorage2D(n.TEXTURE_2D,At,Dt,We.width,We.height),at&&Be(G,We,ct,Ut)):t.texImage2D(n.TEXTURE_2D,0,Dt,We.width,We.height,0,ct,Ut,We.data);else if(G.isCompressedTexture)if(G.isCompressedArrayTexture){de&&je&&t.texStorage3D(n.TEXTURE_2D_ARRAY,At,Dt,Yt[0].width,Yt[0].height,We.depth);for(let Ge=0,Ve=Yt.length;Ge<Ve;Ge++)if(mt=Yt[Ge],G.format!==Er)if(ct!==null)if(de){if(at)if(G.layerUpdates.size>0){const ut=cE(mt.width,mt.height,G.format,G.type);for(const qt of G.layerUpdates){const Mn=mt.data.subarray(qt*ut/mt.data.BYTES_PER_ELEMENT,(qt+1)*ut/mt.data.BYTES_PER_ELEMENT);t.compressedTexSubImage3D(n.TEXTURE_2D_ARRAY,Ge,0,0,qt,mt.width,mt.height,1,ct,Mn)}G.clearLayerUpdates()}else t.compressedTexSubImage3D(n.TEXTURE_2D_ARRAY,Ge,0,0,0,mt.width,mt.height,We.depth,ct,mt.data)}else t.compressedTexImage3D(n.TEXTURE_2D_ARRAY,Ge,Dt,mt.width,mt.height,We.depth,0,mt.data,0,0);else console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()");else de?at&&t.texSubImage3D(n.TEXTURE_2D_ARRAY,Ge,0,0,0,mt.width,mt.height,We.depth,ct,Ut,mt.data):t.texImage3D(n.TEXTURE_2D_ARRAY,Ge,Dt,mt.width,mt.height,We.depth,0,ct,Ut,mt.data)}else{de&&je&&t.texStorage2D(n.TEXTURE_2D,At,Dt,Yt[0].width,Yt[0].height);for(let Ge=0,Ve=Yt.length;Ge<Ve;Ge++)mt=Yt[Ge],G.format!==Er?ct!==null?de?at&&t.compressedTexSubImage2D(n.TEXTURE_2D,Ge,0,0,mt.width,mt.height,ct,mt.data):t.compressedTexImage2D(n.TEXTURE_2D,Ge,Dt,mt.width,mt.height,0,mt.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):de?at&&t.texSubImage2D(n.TEXTURE_2D,Ge,0,0,mt.width,mt.height,ct,Ut,mt.data):t.texImage2D(n.TEXTURE_2D,Ge,Dt,mt.width,mt.height,0,ct,Ut,mt.data)}else if(G.isDataArrayTexture)if(de){if(je&&t.texStorage3D(n.TEXTURE_2D_ARRAY,At,Dt,We.width,We.height,We.depth),at)if(G.layerUpdates.size>0){const Ge=cE(We.width,We.height,G.format,G.type);for(const Ve of G.layerUpdates){const ut=We.data.subarray(Ve*Ge/We.data.BYTES_PER_ELEMENT,(Ve+1)*Ge/We.data.BYTES_PER_ELEMENT);t.texSubImage3D(n.TEXTURE_2D_ARRAY,0,0,0,Ve,We.width,We.height,1,ct,Ut,ut)}G.clearLayerUpdates()}else t.texSubImage3D(n.TEXTURE_2D_ARRAY,0,0,0,0,We.width,We.height,We.depth,ct,Ut,We.data)}else t.texImage3D(n.TEXTURE_2D_ARRAY,0,Dt,We.width,We.height,We.depth,0,ct,Ut,We.data);else if(G.isData3DTexture)de?(je&&t.texStorage3D(n.TEXTURE_3D,At,Dt,We.width,We.height,We.depth),at&&t.texSubImage3D(n.TEXTURE_3D,0,0,0,0,We.width,We.height,We.depth,ct,Ut,We.data)):t.texImage3D(n.TEXTURE_3D,0,Dt,We.width,We.height,We.depth,0,ct,Ut,We.data);else if(G.isFramebufferTexture){if(je)if(de)t.texStorage2D(n.TEXTURE_2D,At,Dt,We.width,We.height);else{let Ge=We.width,Ve=We.height;for(let ut=0;ut<At;ut++)t.texImage2D(n.TEXTURE_2D,ut,Dt,Ge,Ve,0,ct,Ut,null),Ge>>=1,Ve>>=1}}else if(Yt.length>0){if(de&&je){const Ge=sn(Yt[0]);t.texStorage2D(n.TEXTURE_2D,At,Dt,Ge.width,Ge.height)}for(let Ge=0,Ve=Yt.length;Ge<Ve;Ge++)mt=Yt[Ge],de?at&&t.texSubImage2D(n.TEXTURE_2D,Ge,0,0,ct,Ut,mt):t.texImage2D(n.TEXTURE_2D,Ge,Dt,ct,Ut,mt);G.generateMipmaps=!1}else if(de){if(je){const Ge=sn(We);t.texStorage2D(n.TEXTURE_2D,At,Dt,Ge.width,Ge.height)}at&&t.texSubImage2D(n.TEXTURE_2D,0,0,0,ct,Ut,We)}else t.texImage2D(n.TEXTURE_2D,0,Dt,ct,Ut,We);m(G)&&g(ke),bt.__version=Re.version,G.onUpdate&&G.onUpdate(G)}Z.__version=G.version}function ge(Z,G,we){if(G.image.length!==6)return;const ke=Se(Z,G),Ue=G.source;t.bindTexture(n.TEXTURE_CUBE_MAP,Z.__webglTexture,n.TEXTURE0+we);const Re=s.get(Ue);if(Ue.version!==Re.__version||ke===!0){t.activeTexture(n.TEXTURE0+we);const bt=Gn.getPrimaries(Gn.workingColorSpace),et=G.colorSpace===Gl?null:Gn.getPrimaries(G.colorSpace),St=G.colorSpace===Gl||bt===et?n.NONE:n.BROWSER_DEFAULT_WEBGL;n.pixelStorei(n.UNPACK_FLIP_Y_WEBGL,G.flipY),n.pixelStorei(n.UNPACK_PREMULTIPLY_ALPHA_WEBGL,G.premultiplyAlpha),n.pixelStorei(n.UNPACK_ALIGNMENT,G.unpackAlignment),n.pixelStorei(n.UNPACK_COLORSPACE_CONVERSION_WEBGL,St);const Tt=G.isCompressedTexture||G.image[0].isCompressedTexture,We=G.image[0]&&G.image[0].isDataTexture,ct=[];for(let Ve=0;Ve<6;Ve++)!Tt&&!We?ct[Ve]=A(G.image[Ve],!0,r.maxCubemapSize):ct[Ve]=We?G.image[Ve].image:G.image[Ve],ct[Ve]=wn(G,ct[Ve]);const Ut=ct[0],Dt=i.convert(G.format,G.colorSpace),mt=i.convert(G.type),Yt=v(G.internalFormat,Dt,mt,G.colorSpace),de=G.isVideoTexture!==!0,je=Re.__version===void 0||ke===!0,at=Ue.dataReady;let At=w(G,Ut);Ie(n.TEXTURE_CUBE_MAP,G);let Ge;if(Tt){de&&je&&t.texStorage2D(n.TEXTURE_CUBE_MAP,At,Yt,Ut.width,Ut.height);for(let Ve=0;Ve<6;Ve++){Ge=ct[Ve].mipmaps;for(let ut=0;ut<Ge.length;ut++){const qt=Ge[ut];G.format!==Er?Dt!==null?de?at&&t.compressedTexSubImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+Ve,ut,0,0,qt.width,qt.height,Dt,qt.data):t.compressedTexImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+Ve,ut,Yt,qt.width,qt.height,0,qt.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):de?at&&t.texSubImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+Ve,ut,0,0,qt.width,qt.height,Dt,mt,qt.data):t.texImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+Ve,ut,Yt,qt.width,qt.height,0,Dt,mt,qt.data)}}}else{if(Ge=G.mipmaps,de&&je){Ge.length>0&&At++;const Ve=sn(ct[0]);t.texStorage2D(n.TEXTURE_CUBE_MAP,At,Yt,Ve.width,Ve.height)}for(let Ve=0;Ve<6;Ve++)if(We){de?at&&t.texSubImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+Ve,0,0,0,ct[Ve].width,ct[Ve].height,Dt,mt,ct[Ve].data):t.texImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+Ve,0,Yt,ct[Ve].width,ct[Ve].height,0,Dt,mt,ct[Ve].data);for(let ut=0;ut<Ge.length;ut++){const Mn=Ge[ut].image[Ve].image;de?at&&t.texSubImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+Ve,ut+1,0,0,Mn.width,Mn.height,Dt,mt,Mn.data):t.texImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+Ve,ut+1,Yt,Mn.width,Mn.height,0,Dt,mt,Mn.data)}}else{de?at&&t.texSubImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+Ve,0,0,0,Dt,mt,ct[Ve]):t.texImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+Ve,0,Yt,Dt,mt,ct[Ve]);for(let ut=0;ut<Ge.length;ut++){const qt=Ge[ut];de?at&&t.texSubImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+Ve,ut+1,0,0,Dt,mt,qt.image[Ve]):t.texImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+Ve,ut+1,Yt,Dt,mt,qt.image[Ve])}}}m(G)&&g(n.TEXTURE_CUBE_MAP),Re.__version=Ue.version,G.onUpdate&&G.onUpdate(G)}Z.__version=G.version}function Ne(Z,G,we,ke,Ue,Re){const bt=i.convert(we.format,we.colorSpace),et=i.convert(we.type),St=v(we.internalFormat,bt,et,we.colorSpace),Tt=s.get(G),We=s.get(we);if(We.__renderTarget=G,!Tt.__hasExternalTextures){const ct=Math.max(1,G.width>>Re),Ut=Math.max(1,G.height>>Re);Ue===n.TEXTURE_3D||Ue===n.TEXTURE_2D_ARRAY?t.texImage3D(Ue,Re,St,ct,Ut,G.depth,0,bt,et,null):t.texImage2D(Ue,Re,St,ct,Ut,0,bt,et,null)}t.bindFramebuffer(n.FRAMEBUFFER,Z),Xe(G)?a.framebufferTexture2DMultisampleEXT(n.FRAMEBUFFER,ke,Ue,We.__webglTexture,0,kt(G)):(Ue===n.TEXTURE_2D||Ue>=n.TEXTURE_CUBE_MAP_POSITIVE_X&&Ue<=n.TEXTURE_CUBE_MAP_NEGATIVE_Z)&&n.framebufferTexture2D(n.FRAMEBUFFER,ke,Ue,We.__webglTexture,Re),t.bindFramebuffer(n.FRAMEBUFFER,null)}function Oe(Z,G,we){if(n.bindRenderbuffer(n.RENDERBUFFER,Z),G.depthBuffer){const ke=G.depthTexture,Ue=ke&&ke.isDepthTexture?ke.type:null,Re=b(G.stencilBuffer,Ue),bt=G.stencilBuffer?n.DEPTH_STENCIL_ATTACHMENT:n.DEPTH_ATTACHMENT,et=kt(G);Xe(G)?a.renderbufferStorageMultisampleEXT(n.RENDERBUFFER,et,Re,G.width,G.height):we?n.renderbufferStorageMultisample(n.RENDERBUFFER,et,Re,G.width,G.height):n.renderbufferStorage(n.RENDERBUFFER,Re,G.width,G.height),n.framebufferRenderbuffer(n.FRAMEBUFFER,bt,n.RENDERBUFFER,Z)}else{const ke=G.textures;for(let Ue=0;Ue<ke.length;Ue++){const Re=ke[Ue],bt=i.convert(Re.format,Re.colorSpace),et=i.convert(Re.type),St=v(Re.internalFormat,bt,et,Re.colorSpace),Tt=kt(G);we&&Xe(G)===!1?n.renderbufferStorageMultisample(n.RENDERBUFFER,Tt,St,G.width,G.height):Xe(G)?a.renderbufferStorageMultisampleEXT(n.RENDERBUFFER,Tt,St,G.width,G.height):n.renderbufferStorage(n.RENDERBUFFER,St,G.width,G.height)}}n.bindRenderbuffer(n.RENDERBUFFER,null)}function Qe(Z,G){if(G&&G.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(t.bindFramebuffer(n.FRAMEBUFFER,Z),!(G.depthTexture&&G.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");const ke=s.get(G.depthTexture);ke.__renderTarget=G,(!ke.__webglTexture||G.depthTexture.image.width!==G.width||G.depthTexture.image.height!==G.height)&&(G.depthTexture.image.width=G.width,G.depthTexture.image.height=G.height,G.depthTexture.needsUpdate=!0),W(G.depthTexture,0);const Ue=ke.__webglTexture,Re=kt(G);if(G.depthTexture.format===wm)Xe(G)?a.framebufferTexture2DMultisampleEXT(n.FRAMEBUFFER,n.DEPTH_ATTACHMENT,n.TEXTURE_2D,Ue,0,Re):n.framebufferTexture2D(n.FRAMEBUFFER,n.DEPTH_ATTACHMENT,n.TEXTURE_2D,Ue,0);else if(G.depthTexture.format===Sm)Xe(G)?a.framebufferTexture2DMultisampleEXT(n.FRAMEBUFFER,n.DEPTH_STENCIL_ATTACHMENT,n.TEXTURE_2D,Ue,0,Re):n.framebufferTexture2D(n.FRAMEBUFFER,n.DEPTH_STENCIL_ATTACHMENT,n.TEXTURE_2D,Ue,0);else throw new Error("Unknown depthTexture format")}function Ye(Z){const G=s.get(Z),we=Z.isWebGLCubeRenderTarget===!0;if(G.__boundDepthTexture!==Z.depthTexture){const ke=Z.depthTexture;if(G.__depthDisposeCallback&&G.__depthDisposeCallback(),ke){const Ue=()=>{delete G.__boundDepthTexture,delete G.__depthDisposeCallback,ke.removeEventListener("dispose",Ue)};ke.addEventListener("dispose",Ue),G.__depthDisposeCallback=Ue}G.__boundDepthTexture=ke}if(Z.depthTexture&&!G.__autoAllocateDepthBuffer){if(we)throw new Error("target.depthTexture not supported in Cube render targets");const ke=Z.texture.mipmaps;ke&&ke.length>0?Qe(G.__webglFramebuffer[0],Z):Qe(G.__webglFramebuffer,Z)}else if(we){G.__webglDepthbuffer=[];for(let ke=0;ke<6;ke++)if(t.bindFramebuffer(n.FRAMEBUFFER,G.__webglFramebuffer[ke]),G.__webglDepthbuffer[ke]===void 0)G.__webglDepthbuffer[ke]=n.createRenderbuffer(),Oe(G.__webglDepthbuffer[ke],Z,!1);else{const Ue=Z.stencilBuffer?n.DEPTH_STENCIL_ATTACHMENT:n.DEPTH_ATTACHMENT,Re=G.__webglDepthbuffer[ke];n.bindRenderbuffer(n.RENDERBUFFER,Re),n.framebufferRenderbuffer(n.FRAMEBUFFER,Ue,n.RENDERBUFFER,Re)}}else{const ke=Z.texture.mipmaps;if(ke&&ke.length>0?t.bindFramebuffer(n.FRAMEBUFFER,G.__webglFramebuffer[0]):t.bindFramebuffer(n.FRAMEBUFFER,G.__webglFramebuffer),G.__webglDepthbuffer===void 0)G.__webglDepthbuffer=n.createRenderbuffer(),Oe(G.__webglDepthbuffer,Z,!1);else{const Ue=Z.stencilBuffer?n.DEPTH_STENCIL_ATTACHMENT:n.DEPTH_ATTACHMENT,Re=G.__webglDepthbuffer;n.bindRenderbuffer(n.RENDERBUFFER,Re),n.framebufferRenderbuffer(n.FRAMEBUFFER,Ue,n.RENDERBUFFER,Re)}}t.bindFramebuffer(n.FRAMEBUFFER,null)}function _t(Z,G,we){const ke=s.get(Z);G!==void 0&&Ne(ke.__webglFramebuffer,Z,Z.texture,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,0),we!==void 0&&Ye(Z)}function J(Z){const G=Z.texture,we=s.get(Z),ke=s.get(G);Z.addEventListener("dispose",N);const Ue=Z.textures,Re=Z.isWebGLCubeRenderTarget===!0,bt=Ue.length>1;if(bt||(ke.__webglTexture===void 0&&(ke.__webglTexture=n.createTexture()),ke.__version=G.version,o.memory.textures++),Re){we.__webglFramebuffer=[];for(let et=0;et<6;et++)if(G.mipmaps&&G.mipmaps.length>0){we.__webglFramebuffer[et]=[];for(let St=0;St<G.mipmaps.length;St++)we.__webglFramebuffer[et][St]=n.createFramebuffer()}else we.__webglFramebuffer[et]=n.createFramebuffer()}else{if(G.mipmaps&&G.mipmaps.length>0){we.__webglFramebuffer=[];for(let et=0;et<G.mipmaps.length;et++)we.__webglFramebuffer[et]=n.createFramebuffer()}else we.__webglFramebuffer=n.createFramebuffer();if(bt)for(let et=0,St=Ue.length;et<St;et++){const Tt=s.get(Ue[et]);Tt.__webglTexture===void 0&&(Tt.__webglTexture=n.createTexture(),o.memory.textures++)}if(Z.samples>0&&Xe(Z)===!1){we.__webglMultisampledFramebuffer=n.createFramebuffer(),we.__webglColorRenderbuffer=[],t.bindFramebuffer(n.FRAMEBUFFER,we.__webglMultisampledFramebuffer);for(let et=0;et<Ue.length;et++){const St=Ue[et];we.__webglColorRenderbuffer[et]=n.createRenderbuffer(),n.bindRenderbuffer(n.RENDERBUFFER,we.__webglColorRenderbuffer[et]);const Tt=i.convert(St.format,St.colorSpace),We=i.convert(St.type),ct=v(St.internalFormat,Tt,We,St.colorSpace,Z.isXRRenderTarget===!0),Ut=kt(Z);n.renderbufferStorageMultisample(n.RENDERBUFFER,Ut,ct,Z.width,Z.height),n.framebufferRenderbuffer(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0+et,n.RENDERBUFFER,we.__webglColorRenderbuffer[et])}n.bindRenderbuffer(n.RENDERBUFFER,null),Z.depthBuffer&&(we.__webglDepthRenderbuffer=n.createRenderbuffer(),Oe(we.__webglDepthRenderbuffer,Z,!0)),t.bindFramebuffer(n.FRAMEBUFFER,null)}}if(Re){t.bindTexture(n.TEXTURE_CUBE_MAP,ke.__webglTexture),Ie(n.TEXTURE_CUBE_MAP,G);for(let et=0;et<6;et++)if(G.mipmaps&&G.mipmaps.length>0)for(let St=0;St<G.mipmaps.length;St++)Ne(we.__webglFramebuffer[et][St],Z,G,n.COLOR_ATTACHMENT0,n.TEXTURE_CUBE_MAP_POSITIVE_X+et,St);else Ne(we.__webglFramebuffer[et],Z,G,n.COLOR_ATTACHMENT0,n.TEXTURE_CUBE_MAP_POSITIVE_X+et,0);m(G)&&g(n.TEXTURE_CUBE_MAP),t.unbindTexture()}else if(bt){for(let et=0,St=Ue.length;et<St;et++){const Tt=Ue[et],We=s.get(Tt);let ct=n.TEXTURE_2D;(Z.isWebGL3DRenderTarget||Z.isWebGLArrayRenderTarget)&&(ct=Z.isWebGL3DRenderTarget?n.TEXTURE_3D:n.TEXTURE_2D_ARRAY),t.bindTexture(ct,We.__webglTexture),Ie(ct,Tt),Ne(we.__webglFramebuffer,Z,Tt,n.COLOR_ATTACHMENT0+et,ct,0),m(Tt)&&g(ct)}t.unbindTexture()}else{let et=n.TEXTURE_2D;if((Z.isWebGL3DRenderTarget||Z.isWebGLArrayRenderTarget)&&(et=Z.isWebGL3DRenderTarget?n.TEXTURE_3D:n.TEXTURE_2D_ARRAY),t.bindTexture(et,ke.__webglTexture),Ie(et,G),G.mipmaps&&G.mipmaps.length>0)for(let St=0;St<G.mipmaps.length;St++)Ne(we.__webglFramebuffer[St],Z,G,n.COLOR_ATTACHMENT0,et,St);else Ne(we.__webglFramebuffer,Z,G,n.COLOR_ATTACHMENT0,et,0);m(G)&&g(et),t.unbindTexture()}Z.depthBuffer&&Ye(Z)}function ht(Z){const G=Z.textures;for(let we=0,ke=G.length;we<ke;we++){const Ue=G[we];if(m(Ue)){const Re=x(Z),bt=s.get(Ue).__webglTexture;t.bindTexture(Re,bt),g(Re),t.unbindTexture()}}}const dt=[],tt=[];function Ke(Z){if(Z.samples>0){if(Xe(Z)===!1){const G=Z.textures,we=Z.width,ke=Z.height;let Ue=n.COLOR_BUFFER_BIT;const Re=Z.stencilBuffer?n.DEPTH_STENCIL_ATTACHMENT:n.DEPTH_ATTACHMENT,bt=s.get(Z),et=G.length>1;if(et)for(let Tt=0;Tt<G.length;Tt++)t.bindFramebuffer(n.FRAMEBUFFER,bt.__webglMultisampledFramebuffer),n.framebufferRenderbuffer(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0+Tt,n.RENDERBUFFER,null),t.bindFramebuffer(n.FRAMEBUFFER,bt.__webglFramebuffer),n.framebufferTexture2D(n.DRAW_FRAMEBUFFER,n.COLOR_ATTACHMENT0+Tt,n.TEXTURE_2D,null,0);t.bindFramebuffer(n.READ_FRAMEBUFFER,bt.__webglMultisampledFramebuffer);const St=Z.texture.mipmaps;St&&St.length>0?t.bindFramebuffer(n.DRAW_FRAMEBUFFER,bt.__webglFramebuffer[0]):t.bindFramebuffer(n.DRAW_FRAMEBUFFER,bt.__webglFramebuffer);for(let Tt=0;Tt<G.length;Tt++){if(Z.resolveDepthBuffer&&(Z.depthBuffer&&(Ue|=n.DEPTH_BUFFER_BIT),Z.stencilBuffer&&Z.resolveStencilBuffer&&(Ue|=n.STENCIL_BUFFER_BIT)),et){n.framebufferRenderbuffer(n.READ_FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.RENDERBUFFER,bt.__webglColorRenderbuffer[Tt]);const We=s.get(G[Tt]).__webglTexture;n.framebufferTexture2D(n.DRAW_FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,We,0)}n.blitFramebuffer(0,0,we,ke,0,0,we,ke,Ue,n.NEAREST),l===!0&&(dt.length=0,tt.length=0,dt.push(n.COLOR_ATTACHMENT0+Tt),Z.depthBuffer&&Z.resolveDepthBuffer===!1&&(dt.push(Re),tt.push(Re),n.invalidateFramebuffer(n.DRAW_FRAMEBUFFER,tt)),n.invalidateFramebuffer(n.READ_FRAMEBUFFER,dt))}if(t.bindFramebuffer(n.READ_FRAMEBUFFER,null),t.bindFramebuffer(n.DRAW_FRAMEBUFFER,null),et)for(let Tt=0;Tt<G.length;Tt++){t.bindFramebuffer(n.FRAMEBUFFER,bt.__webglMultisampledFramebuffer),n.framebufferRenderbuffer(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0+Tt,n.RENDERBUFFER,bt.__webglColorRenderbuffer[Tt]);const We=s.get(G[Tt]).__webglTexture;t.bindFramebuffer(n.FRAMEBUFFER,bt.__webglFramebuffer),n.framebufferTexture2D(n.DRAW_FRAMEBUFFER,n.COLOR_ATTACHMENT0+Tt,n.TEXTURE_2D,We,0)}t.bindFramebuffer(n.DRAW_FRAMEBUFFER,bt.__webglMultisampledFramebuffer)}else if(Z.depthBuffer&&Z.resolveDepthBuffer===!1&&l){const G=Z.stencilBuffer?n.DEPTH_STENCIL_ATTACHMENT:n.DEPTH_ATTACHMENT;n.invalidateFramebuffer(n.DRAW_FRAMEBUFFER,[G])}}}function kt(Z){return Math.min(r.maxSamples,Z.samples)}function Xe(Z){const G=s.get(Z);return Z.samples>0&&e.has("WEBGL_multisampled_render_to_texture")===!0&&G.__useRenderToTexture!==!1}function ot(Z){const G=o.render.frame;u.get(Z)!==G&&(u.set(Z,G),Z.update())}function wn(Z,G){const we=Z.colorSpace,ke=Z.format,Ue=Z.type;return Z.isCompressedTexture===!0||Z.isVideoTexture===!0||we!==Ud&&we!==Gl&&(Gn.getTransfer(we)===rs?(ke!==Er||Ue!==Ui)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture color space:",we)),G}function sn(Z){return typeof HTMLImageElement<"u"&&Z instanceof HTMLImageElement?(c.width=Z.naturalWidth||Z.width,c.height=Z.naturalHeight||Z.height):typeof VideoFrame<"u"&&Z instanceof VideoFrame?(c.width=Z.displayWidth,c.height=Z.displayHeight):(c.width=Z.width,c.height=Z.height),c}this.allocateTextureUnit=U,this.resetTextureUnits=L,this.setTexture2D=W,this.setTexture2DArray=H,this.setTexture3D=ee,this.setTextureCube=K,this.rebindTextures=_t,this.setupRenderTarget=J,this.updateRenderTargetMipmap=ht,this.updateMultisampleRenderTarget=Ke,this.setupDepthRenderbuffer=Ye,this.setupFrameBufferTexture=Ne,this.useMultisampledRTT=Xe}function sV(n,e){function t(s,r=Gl){let i;const o=Gn.getTransfer(r);if(s===Ui)return n.UNSIGNED_BYTE;if(s===HC)return n.UNSIGNED_SHORT_4_4_4_4;if(s===qC)return n.UNSIGNED_SHORT_5_5_5_1;if(s===aB)return n.UNSIGNED_INT_5_9_9_9_REV;if(s===lB)return n.UNSIGNED_INT_10F_11F_11F_REV;if(s===iB)return n.BYTE;if(s===oB)return n.SHORT;if(s===Cm)return n.UNSIGNED_SHORT;if(s===WC)return n.INT;if(s===Oi)return n.UNSIGNED_INT;if(s===ol)return n.FLOAT;if(s===ng)return n.HALF_FLOAT;if(s===cB)return n.ALPHA;if(s===uB)return n.RGB;if(s===Er)return n.RGBA;if(s===wm)return n.DEPTH_COMPONENT;if(s===Sm)return n.DEPTH_STENCIL;if(s===hB)return n.RED;if(s===YC)return n.RED_INTEGER;if(s===dB)return n.RG;if(s===tx)return n.RG_INTEGER;if(s===ll)return n.RGBA_INTEGER;if(s===Vy||s===Wy||s===Hy||s===qy)if(o===rs)if(i=e.get("WEBGL_compressed_texture_s3tc_srgb"),i!==null){if(s===Vy)return i.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(s===Wy)return i.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(s===Hy)return i.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(s===qy)return i.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(i=e.get("WEBGL_compressed_texture_s3tc"),i!==null){if(s===Vy)return i.COMPRESSED_RGB_S3TC_DXT1_EXT;if(s===Wy)return i.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(s===Hy)return i.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(s===qy)return i.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(s===jb||s===Xb||s===Kb||s===Jb)if(i=e.get("WEBGL_compressed_texture_pvrtc"),i!==null){if(s===jb)return i.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(s===Xb)return i.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(s===Kb)return i.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(s===Jb)return i.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(s===Zb||s===ev||s===tv)if(i=e.get("WEBGL_compressed_texture_etc"),i!==null){if(s===Zb||s===ev)return o===rs?i.COMPRESSED_SRGB8_ETC2:i.COMPRESSED_RGB8_ETC2;if(s===tv)return o===rs?i.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:i.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(s===nv||s===sv||s===rv||s===iv||s===ov||s===av||s===lv||s===cv||s===uv||s===hv||s===dv||s===fv||s===pv||s===mv)if(i=e.get("WEBGL_compressed_texture_astc"),i!==null){if(s===nv)return o===rs?i.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:i.COMPRESSED_RGBA_ASTC_4x4_KHR;if(s===sv)return o===rs?i.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:i.COMPRESSED_RGBA_ASTC_5x4_KHR;if(s===rv)return o===rs?i.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:i.COMPRESSED_RGBA_ASTC_5x5_KHR;if(s===iv)return o===rs?i.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:i.COMPRESSED_RGBA_ASTC_6x5_KHR;if(s===ov)return o===rs?i.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:i.COMPRESSED_RGBA_ASTC_6x6_KHR;if(s===av)return o===rs?i.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:i.COMPRESSED_RGBA_ASTC_8x5_KHR;if(s===lv)return o===rs?i.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:i.COMPRESSED_RGBA_ASTC_8x6_KHR;if(s===cv)return o===rs?i.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:i.COMPRESSED_RGBA_ASTC_8x8_KHR;if(s===uv)return o===rs?i.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:i.COMPRESSED_RGBA_ASTC_10x5_KHR;if(s===hv)return o===rs?i.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:i.COMPRESSED_RGBA_ASTC_10x6_KHR;if(s===dv)return o===rs?i.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:i.COMPRESSED_RGBA_ASTC_10x8_KHR;if(s===fv)return o===rs?i.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:i.COMPRESSED_RGBA_ASTC_10x10_KHR;if(s===pv)return o===rs?i.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:i.COMPRESSED_RGBA_ASTC_12x10_KHR;if(s===mv)return o===rs?i.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:i.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(s===gv||s===Av||s===yv)if(i=e.get("EXT_texture_compression_bptc"),i!==null){if(s===gv)return o===rs?i.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:i.COMPRESSED_RGBA_BPTC_UNORM_EXT;if(s===Av)return i.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;if(s===yv)return i.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT}else return null;if(s===xv||s===bv||s===vv||s===Cv)if(i=e.get("EXT_texture_compression_rgtc"),i!==null){if(s===xv)return i.COMPRESSED_RED_RGTC1_EXT;if(s===bv)return i.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(s===vv)return i.COMPRESSED_RED_GREEN_RGTC2_EXT;if(s===Cv)return i.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}else return null;return s===Im?n.UNSIGNED_INT_24_8:n[s]!==void 0?n[s]:null}return{convert:t}}const rV=`
void main() {

	gl_Position = vec4( position, 1.0 );

}`,iV=`
uniform sampler2DArray depthColor;
uniform float depthWidth;
uniform float depthHeight;

void main() {

	vec2 coord = vec2( gl_FragCoord.x / depthWidth, gl_FragCoord.y / depthHeight );

	if ( coord.x >= 1.0 ) {

		gl_FragDepth = texture( depthColor, vec3( coord.x - 1.0, coord.y, 1 ) ).r;

	} else {

		gl_FragDepth = texture( depthColor, vec3( coord.x, coord.y, 0 ) ).r;

	}

}`;class oV{constructor(){this.texture=null,this.mesh=null,this.depthNear=0,this.depthFar=0}init(e,t){if(this.texture===null){const s=new BB(e.texture);(e.depthNear!==t.depthNear||e.depthFar!==t.depthFar)&&(this.depthNear=e.depthNear,this.depthFar=e.depthFar),this.texture=s}}getMesh(e){if(this.texture!==null&&this.mesh===null){const t=e.cameras[0].viewport,s=new So({vertexShader:rV,fragmentShader:iV,uniforms:{depthColor:{value:this.texture},depthWidth:{value:t.z},depthHeight:{value:t.w}}});this.mesh=new hr(new df(20,20),s)}return this.mesh}reset(){this.texture=null,this.mesh=null}getDepthTexture(){return this.texture}}class aV extends cf{constructor(e,t){super();const s=this;let r=null,i=1,o=null,a="local-floor",l=1,c=null,u=null,h=null,d=null,f=null,p=null;const A=typeof XRWebGLBinding<"u",m=new oV,g={},x=t.getContextAttributes();let v=null,b=null;const w=[],_=[],N=new En;let M=null;const T=new Fi;T.viewport=new Vn;const k=new Fi;k.viewport=new Vn;const B=[T,k],L=new TO;let U=null,V=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(he){let ge=w[he];return ge===void 0&&(ge=new S2,w[he]=ge),ge.getTargetRaySpace()},this.getControllerGrip=function(he){let ge=w[he];return ge===void 0&&(ge=new S2,w[he]=ge),ge.getGripSpace()},this.getHand=function(he){let ge=w[he];return ge===void 0&&(ge=new S2,w[he]=ge),ge.getHandSpace()};function W(he){const ge=_.indexOf(he.inputSource);if(ge===-1)return;const Ne=w[ge];Ne!==void 0&&(Ne.update(he.inputSource,he.frame,c||o),Ne.dispatchEvent({type:he.type,data:he.inputSource}))}function H(){r.removeEventListener("select",W),r.removeEventListener("selectstart",W),r.removeEventListener("selectend",W),r.removeEventListener("squeeze",W),r.removeEventListener("squeezestart",W),r.removeEventListener("squeezeend",W),r.removeEventListener("end",H),r.removeEventListener("inputsourceschange",ee);for(let he=0;he<w.length;he++){const ge=_[he];ge!==null&&(_[he]=null,w[he].disconnect(ge))}U=null,V=null,m.reset();for(const he in g)delete g[he];e.setRenderTarget(v),f=null,d=null,h=null,r=null,b=null,Be.stop(),s.isPresenting=!1,e.setPixelRatio(M),e.setSize(N.width,N.height,!1),s.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(he){i=he,s.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(he){a=he,s.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return c||o},this.setReferenceSpace=function(he){c=he},this.getBaseLayer=function(){return d!==null?d:f},this.getBinding=function(){return h===null&&A&&(h=new XRWebGLBinding(r,t)),h},this.getFrame=function(){return p},this.getSession=function(){return r},this.setSession=async function(he){if(r=he,r!==null){if(v=e.getRenderTarget(),r.addEventListener("select",W),r.addEventListener("selectstart",W),r.addEventListener("selectend",W),r.addEventListener("squeeze",W),r.addEventListener("squeezestart",W),r.addEventListener("squeezeend",W),r.addEventListener("end",H),r.addEventListener("inputsourceschange",ee),x.xrCompatible!==!0&&await t.makeXRCompatible(),M=e.getPixelRatio(),e.getSize(N),A&&"createProjectionLayer"in XRWebGLBinding.prototype){let Ne=null,Oe=null,Qe=null;x.depth&&(Qe=x.stencil?t.DEPTH24_STENCIL8:t.DEPTH_COMPONENT24,Ne=x.stencil?Sm:wm,Oe=x.stencil?Im:Oi);const Ye={colorFormat:t.RGBA8,depthFormat:Qe,scaleFactor:i};h=this.getBinding(),d=h.createProjectionLayer(Ye),r.updateRenderState({layers:[d]}),e.setPixelRatio(1),e.setSize(d.textureWidth,d.textureHeight,!1),b=new _a(d.textureWidth,d.textureHeight,{format:Er,type:Ui,depthTexture:new TB(d.textureWidth,d.textureHeight,Oe,void 0,void 0,void 0,void 0,void 0,void 0,Ne),stencilBuffer:x.stencil,colorSpace:e.outputColorSpace,samples:x.antialias?4:0,resolveDepthBuffer:d.ignoreDepthValues===!1,resolveStencilBuffer:d.ignoreDepthValues===!1})}else{const Ne={antialias:x.antialias,alpha:!0,depth:x.depth,stencil:x.stencil,framebufferScaleFactor:i};f=new XRWebGLLayer(r,t,Ne),r.updateRenderState({baseLayer:f}),e.setPixelRatio(1),e.setSize(f.framebufferWidth,f.framebufferHeight,!1),b=new _a(f.framebufferWidth,f.framebufferHeight,{format:Er,type:Ui,colorSpace:e.outputColorSpace,stencilBuffer:x.stencil,resolveDepthBuffer:f.ignoreDepthValues===!1,resolveStencilBuffer:f.ignoreDepthValues===!1})}b.isXRRenderTarget=!0,this.setFoveation(l),c=null,o=await r.requestReferenceSpace(a),Be.setContext(r),Be.start(),s.isPresenting=!0,s.dispatchEvent({type:"sessionstart"})}},this.getEnvironmentBlendMode=function(){if(r!==null)return r.environmentBlendMode},this.getDepthTexture=function(){return m.getDepthTexture()};function ee(he){for(let ge=0;ge<he.removed.length;ge++){const Ne=he.removed[ge],Oe=_.indexOf(Ne);Oe>=0&&(_[Oe]=null,w[Oe].disconnect(Ne))}for(let ge=0;ge<he.added.length;ge++){const Ne=he.added[ge];let Oe=_.indexOf(Ne);if(Oe===-1){for(let Ye=0;Ye<w.length;Ye++)if(Ye>=_.length){_.push(Ne),Oe=Ye;break}else if(_[Ye]===null){_[Ye]=Ne,Oe=Ye;break}if(Oe===-1)break}const Qe=w[Oe];Qe&&Qe.connect(Ne)}}const K=new Ae,te=new Ae;function le(he,ge,Ne){K.setFromMatrixPosition(ge.matrixWorld),te.setFromMatrixPosition(Ne.matrixWorld);const Oe=K.distanceTo(te),Qe=ge.projectionMatrix.elements,Ye=Ne.projectionMatrix.elements,_t=Qe[14]/(Qe[10]-1),J=Qe[14]/(Qe[10]+1),ht=(Qe[9]+1)/Qe[5],dt=(Qe[9]-1)/Qe[5],tt=(Qe[8]-1)/Qe[0],Ke=(Ye[8]+1)/Ye[0],kt=_t*tt,Xe=_t*Ke,ot=Oe/(-tt+Ke),wn=ot*-tt;if(ge.matrixWorld.decompose(he.position,he.quaternion,he.scale),he.translateX(wn),he.translateZ(ot),he.matrixWorld.compose(he.position,he.quaternion,he.scale),he.matrixWorldInverse.copy(he.matrixWorld).invert(),Qe[10]===-1)he.projectionMatrix.copy(ge.projectionMatrix),he.projectionMatrixInverse.copy(ge.projectionMatrixInverse);else{const sn=_t+ot,Z=J+ot,G=kt-wn,we=Xe+(Oe-wn),ke=ht*J/Z*sn,Ue=dt*J/Z*sn;he.projectionMatrix.makePerspective(G,we,ke,Ue,sn,Z),he.projectionMatrixInverse.copy(he.projectionMatrix).invert()}}function fe(he,ge){ge===null?he.matrixWorld.copy(he.matrix):he.matrixWorld.multiplyMatrices(ge.matrixWorld,he.matrix),he.matrixWorldInverse.copy(he.matrixWorld).invert()}this.updateCamera=function(he){if(r===null)return;let ge=he.near,Ne=he.far;m.texture!==null&&(m.depthNear>0&&(ge=m.depthNear),m.depthFar>0&&(Ne=m.depthFar)),L.near=k.near=T.near=ge,L.far=k.far=T.far=Ne,(U!==L.near||V!==L.far)&&(r.updateRenderState({depthNear:L.near,depthFar:L.far}),U=L.near,V=L.far),L.layers.mask=he.layers.mask|6,T.layers.mask=L.layers.mask&3,k.layers.mask=L.layers.mask&5;const Oe=he.parent,Qe=L.cameras;fe(L,Oe);for(let Ye=0;Ye<Qe.length;Ye++)fe(Qe[Ye],Oe);Qe.length===2?le(L,T,k):L.projectionMatrix.copy(T.projectionMatrix),Ie(he,L,Oe)};function Ie(he,ge,Ne){Ne===null?he.matrix.copy(ge.matrixWorld):(he.matrix.copy(Ne.matrixWorld),he.matrix.invert(),he.matrix.multiply(ge.matrixWorld)),he.matrix.decompose(he.position,he.quaternion,he.scale),he.updateMatrixWorld(!0),he.projectionMatrix.copy(ge.projectionMatrix),he.projectionMatrixInverse.copy(ge.projectionMatrixInverse),he.isPerspectiveCamera&&(he.fov=Em*2*Math.atan(1/he.projectionMatrix.elements[5]),he.zoom=1)}this.getCamera=function(){return L},this.getFoveation=function(){if(!(d===null&&f===null))return l},this.setFoveation=function(he){l=he,d!==null&&(d.fixedFoveation=he),f!==null&&f.fixedFoveation!==void 0&&(f.fixedFoveation=he)},this.hasDepthSensing=function(){return m.texture!==null},this.getDepthSensingMesh=function(){return m.getMesh(L)},this.getCameraTexture=function(he){return g[he]};let Se=null;function De(he,ge){if(u=ge.getViewerPose(c||o),p=ge,u!==null){const Ne=u.views;f!==null&&(e.setRenderTargetFramebuffer(b,f.framebuffer),e.setRenderTarget(b));let Oe=!1;Ne.length!==L.cameras.length&&(L.cameras.length=0,Oe=!0);for(let J=0;J<Ne.length;J++){const ht=Ne[J];let dt=null;if(f!==null)dt=f.getViewport(ht);else{const Ke=h.getViewSubImage(d,ht);dt=Ke.viewport,J===0&&(e.setRenderTargetTextures(b,Ke.colorTexture,Ke.depthStencilTexture),e.setRenderTarget(b))}let tt=B[J];tt===void 0&&(tt=new Fi,tt.layers.enable(J),tt.viewport=new Vn,B[J]=tt),tt.matrix.fromArray(ht.transform.matrix),tt.matrix.decompose(tt.position,tt.quaternion,tt.scale),tt.projectionMatrix.fromArray(ht.projectionMatrix),tt.projectionMatrixInverse.copy(tt.projectionMatrix).invert(),tt.viewport.set(dt.x,dt.y,dt.width,dt.height),J===0&&(L.matrix.copy(tt.matrix),L.matrix.decompose(L.position,L.quaternion,L.scale)),Oe===!0&&L.cameras.push(tt)}const Qe=r.enabledFeatures;if(Qe&&Qe.includes("depth-sensing")&&r.depthUsage=="gpu-optimized"&&A){h=s.getBinding();const J=h.getDepthInformation(Ne[0]);J&&J.isValid&&J.texture&&m.init(J,r.renderState)}if(Qe&&Qe.includes("camera-access")&&A){e.state.unbindTexture(),h=s.getBinding();for(let J=0;J<Ne.length;J++){const ht=Ne[J].camera;if(ht){let dt=g[ht];dt||(dt=new BB,g[ht]=dt);const tt=h.getCameraImage(ht);dt.sourceTexture=tt}}}}for(let Ne=0;Ne<w.length;Ne++){const Oe=_[Ne],Qe=w[Ne];Oe!==null&&Qe!==void 0&&Qe.update(Oe,ge,c||o)}Se&&Se(he,ge),ge.detectedPlanes&&s.dispatchEvent({type:"planesdetected",data:ge}),p=null}const Be=new MB;Be.setAnimationLoop(De),this.setAnimationLoop=function(he){Se=he},this.dispose=function(){}}}const Oc=new Ta,lV=new is;function cV(n,e){function t(m,g){m.matrixAutoUpdate===!0&&m.updateMatrix(),g.value.copy(m.matrix)}function s(m,g){g.color.getRGB(m.fogColor.value,CB(n)),g.isFog?(m.fogNear.value=g.near,m.fogFar.value=g.far):g.isFogExp2&&(m.fogDensity.value=g.density)}function r(m,g,x,v,b){g.isMeshBasicMaterial||g.isMeshLambertMaterial?i(m,g):g.isMeshToonMaterial?(i(m,g),h(m,g)):g.isMeshPhongMaterial?(i(m,g),u(m,g)):g.isMeshStandardMaterial?(i(m,g),d(m,g),g.isMeshPhysicalMaterial&&f(m,g,b)):g.isMeshMatcapMaterial?(i(m,g),p(m,g)):g.isMeshDepthMaterial?i(m,g):g.isMeshDistanceMaterial?(i(m,g),A(m,g)):g.isMeshNormalMaterial?i(m,g):g.isLineBasicMaterial?(o(m,g),g.isLineDashedMaterial&&a(m,g)):g.isPointsMaterial?l(m,g,x,v):g.isSpriteMaterial?c(m,g):g.isShadowMaterial?(m.color.value.copy(g.color),m.opacity.value=g.opacity):g.isShaderMaterial&&(g.uniformsNeedUpdate=!1)}function i(m,g){m.opacity.value=g.opacity,g.color&&m.diffuse.value.copy(g.color),g.emissive&&m.emissive.value.copy(g.emissive).multiplyScalar(g.emissiveIntensity),g.map&&(m.map.value=g.map,t(g.map,m.mapTransform)),g.alphaMap&&(m.alphaMap.value=g.alphaMap,t(g.alphaMap,m.alphaMapTransform)),g.bumpMap&&(m.bumpMap.value=g.bumpMap,t(g.bumpMap,m.bumpMapTransform),m.bumpScale.value=g.bumpScale,g.side===Li&&(m.bumpScale.value*=-1)),g.normalMap&&(m.normalMap.value=g.normalMap,t(g.normalMap,m.normalMapTransform),m.normalScale.value.copy(g.normalScale),g.side===Li&&m.normalScale.value.negate()),g.displacementMap&&(m.displacementMap.value=g.displacementMap,t(g.displacementMap,m.displacementMapTransform),m.displacementScale.value=g.displacementScale,m.displacementBias.value=g.displacementBias),g.emissiveMap&&(m.emissiveMap.value=g.emissiveMap,t(g.emissiveMap,m.emissiveMapTransform)),g.specularMap&&(m.specularMap.value=g.specularMap,t(g.specularMap,m.specularMapTransform)),g.alphaTest>0&&(m.alphaTest.value=g.alphaTest);const x=e.get(g),v=x.envMap,b=x.envMapRotation;v&&(m.envMap.value=v,Oc.copy(b),Oc.x*=-1,Oc.y*=-1,Oc.z*=-1,v.isCubeTexture&&v.isRenderTargetTexture===!1&&(Oc.y*=-1,Oc.z*=-1),m.envMapRotation.value.setFromMatrix4(lV.makeRotationFromEuler(Oc)),m.flipEnvMap.value=v.isCubeTexture&&v.isRenderTargetTexture===!1?-1:1,m.reflectivity.value=g.reflectivity,m.ior.value=g.ior,m.refractionRatio.value=g.refractionRatio),g.lightMap&&(m.lightMap.value=g.lightMap,m.lightMapIntensity.value=g.lightMapIntensity,t(g.lightMap,m.lightMapTransform)),g.aoMap&&(m.aoMap.value=g.aoMap,m.aoMapIntensity.value=g.aoMapIntensity,t(g.aoMap,m.aoMapTransform))}function o(m,g){m.diffuse.value.copy(g.color),m.opacity.value=g.opacity,g.map&&(m.map.value=g.map,t(g.map,m.mapTransform))}function a(m,g){m.dashSize.value=g.dashSize,m.totalSize.value=g.dashSize+g.gapSize,m.scale.value=g.scale}function l(m,g,x,v){m.diffuse.value.copy(g.color),m.opacity.value=g.opacity,m.size.value=g.size*x,m.scale.value=v*.5,g.map&&(m.map.value=g.map,t(g.map,m.uvTransform)),g.alphaMap&&(m.alphaMap.value=g.alphaMap,t(g.alphaMap,m.alphaMapTransform)),g.alphaTest>0&&(m.alphaTest.value=g.alphaTest)}function c(m,g){m.diffuse.value.copy(g.color),m.opacity.value=g.opacity,m.rotation.value=g.rotation,g.map&&(m.map.value=g.map,t(g.map,m.mapTransform)),g.alphaMap&&(m.alphaMap.value=g.alphaMap,t(g.alphaMap,m.alphaMapTransform)),g.alphaTest>0&&(m.alphaTest.value=g.alphaTest)}function u(m,g){m.specular.value.copy(g.specular),m.shininess.value=Math.max(g.shininess,1e-4)}function h(m,g){g.gradientMap&&(m.gradientMap.value=g.gradientMap)}function d(m,g){m.metalness.value=g.metalness,g.metalnessMap&&(m.metalnessMap.value=g.metalnessMap,t(g.metalnessMap,m.metalnessMapTransform)),m.roughness.value=g.roughness,g.roughnessMap&&(m.roughnessMap.value=g.roughnessMap,t(g.roughnessMap,m.roughnessMapTransform)),g.envMap&&(m.envMapIntensity.value=g.envMapIntensity)}function f(m,g,x){m.ior.value=g.ior,g.sheen>0&&(m.sheenColor.value.copy(g.sheenColor).multiplyScalar(g.sheen),m.sheenRoughness.value=g.sheenRoughness,g.sheenColorMap&&(m.sheenColorMap.value=g.sheenColorMap,t(g.sheenColorMap,m.sheenColorMapTransform)),g.sheenRoughnessMap&&(m.sheenRoughnessMap.value=g.sheenRoughnessMap,t(g.sheenRoughnessMap,m.sheenRoughnessMapTransform))),g.clearcoat>0&&(m.clearcoat.value=g.clearcoat,m.clearcoatRoughness.value=g.clearcoatRoughness,g.clearcoatMap&&(m.clearcoatMap.value=g.clearcoatMap,t(g.clearcoatMap,m.clearcoatMapTransform)),g.clearcoatRoughnessMap&&(m.clearcoatRoughnessMap.value=g.clearcoatRoughnessMap,t(g.clearcoatRoughnessMap,m.clearcoatRoughnessMapTransform)),g.clearcoatNormalMap&&(m.clearcoatNormalMap.value=g.clearcoatNormalMap,t(g.clearcoatNormalMap,m.clearcoatNormalMapTransform),m.clearcoatNormalScale.value.copy(g.clearcoatNormalScale),g.side===Li&&m.clearcoatNormalScale.value.negate())),g.dispersion>0&&(m.dispersion.value=g.dispersion),g.iridescence>0&&(m.iridescence.value=g.iridescence,m.iridescenceIOR.value=g.iridescenceIOR,m.iridescenceThicknessMinimum.value=g.iridescenceThicknessRange[0],m.iridescenceThicknessMaximum.value=g.iridescenceThicknessRange[1],g.iridescenceMap&&(m.iridescenceMap.value=g.iridescenceMap,t(g.iridescenceMap,m.iridescenceMapTransform)),g.iridescenceThicknessMap&&(m.iridescenceThicknessMap.value=g.iridescenceThicknessMap,t(g.iridescenceThicknessMap,m.iridescenceThicknessMapTransform))),g.transmission>0&&(m.transmission.value=g.transmission,m.transmissionSamplerMap.value=x.texture,m.transmissionSamplerSize.value.set(x.width,x.height),g.transmissionMap&&(m.transmissionMap.value=g.transmissionMap,t(g.transmissionMap,m.transmissionMapTransform)),m.thickness.value=g.thickness,g.thicknessMap&&(m.thicknessMap.value=g.thicknessMap,t(g.thicknessMap,m.thicknessMapTransform)),m.attenuationDistance.value=g.attenuationDistance,m.attenuationColor.value.copy(g.attenuationColor)),g.anisotropy>0&&(m.anisotropyVector.value.set(g.anisotropy*Math.cos(g.anisotropyRotation),g.anisotropy*Math.sin(g.anisotropyRotation)),g.anisotropyMap&&(m.anisotropyMap.value=g.anisotropyMap,t(g.anisotropyMap,m.anisotropyMapTransform))),m.specularIntensity.value=g.specularIntensity,m.specularColor.value.copy(g.specularColor),g.specularColorMap&&(m.specularColorMap.value=g.specularColorMap,t(g.specularColorMap,m.specularColorMapTransform)),g.specularIntensityMap&&(m.specularIntensityMap.value=g.specularIntensityMap,t(g.specularIntensityMap,m.specularIntensityMapTransform))}function p(m,g){g.matcap&&(m.matcap.value=g.matcap)}function A(m,g){const x=e.get(g).light;m.referencePosition.value.setFromMatrixPosition(x.matrixWorld),m.nearDistance.value=x.shadow.camera.near,m.farDistance.value=x.shadow.camera.far}return{refreshFogUniforms:s,refreshMaterialUniforms:r}}function uV(n,e,t,s){let r={},i={},o=[];const a=n.getParameter(n.MAX_UNIFORM_BUFFER_BINDINGS);function l(x,v){const b=v.program;s.uniformBlockBinding(x,b)}function c(x,v){let b=r[x.id];b===void 0&&(p(x),b=u(x),r[x.id]=b,x.addEventListener("dispose",m));const w=v.program;s.updateUBOMapping(x,w);const _=e.render.frame;i[x.id]!==_&&(d(x),i[x.id]=_)}function u(x){const v=h();x.__bindingPointIndex=v;const b=n.createBuffer(),w=x.__size,_=x.usage;return n.bindBuffer(n.UNIFORM_BUFFER,b),n.bufferData(n.UNIFORM_BUFFER,w,_),n.bindBuffer(n.UNIFORM_BUFFER,null),n.bindBufferBase(n.UNIFORM_BUFFER,v,b),b}function h(){for(let x=0;x<a;x++)if(o.indexOf(x)===-1)return o.push(x),x;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}function d(x){const v=r[x.id],b=x.uniforms,w=x.__cache;n.bindBuffer(n.UNIFORM_BUFFER,v);for(let _=0,N=b.length;_<N;_++){const M=Array.isArray(b[_])?b[_]:[b[_]];for(let T=0,k=M.length;T<k;T++){const B=M[T];if(f(B,_,T,w)===!0){const L=B.__offset,U=Array.isArray(B.value)?B.value:[B.value];let V=0;for(let W=0;W<U.length;W++){const H=U[W],ee=A(H);typeof H=="number"||typeof H=="boolean"?(B.__data[0]=H,n.bufferSubData(n.UNIFORM_BUFFER,L+V,B.__data)):H.isMatrix3?(B.__data[0]=H.elements[0],B.__data[1]=H.elements[1],B.__data[2]=H.elements[2],B.__data[3]=0,B.__data[4]=H.elements[3],B.__data[5]=H.elements[4],B.__data[6]=H.elements[5],B.__data[7]=0,B.__data[8]=H.elements[6],B.__data[9]=H.elements[7],B.__data[10]=H.elements[8],B.__data[11]=0):(H.toArray(B.__data,V),V+=ee.storage/Float32Array.BYTES_PER_ELEMENT)}n.bufferSubData(n.UNIFORM_BUFFER,L,B.__data)}}}n.bindBuffer(n.UNIFORM_BUFFER,null)}function f(x,v,b,w){const _=x.value,N=v+"_"+b;if(w[N]===void 0)return typeof _=="number"||typeof _=="boolean"?w[N]=_:w[N]=_.clone(),!0;{const M=w[N];if(typeof _=="number"||typeof _=="boolean"){if(M!==_)return w[N]=_,!0}else if(M.equals(_)===!1)return M.copy(_),!0}return!1}function p(x){const v=x.uniforms;let b=0;const w=16;for(let N=0,M=v.length;N<M;N++){const T=Array.isArray(v[N])?v[N]:[v[N]];for(let k=0,B=T.length;k<B;k++){const L=T[k],U=Array.isArray(L.value)?L.value:[L.value];for(let V=0,W=U.length;V<W;V++){const H=U[V],ee=A(H),K=b%w,te=K%ee.boundary,le=K+te;b+=te,le!==0&&w-le<ee.storage&&(b+=w-le),L.__data=new Float32Array(ee.storage/Float32Array.BYTES_PER_ELEMENT),L.__offset=b,b+=ee.storage}}}const _=b%w;return _>0&&(b+=w-_),x.__size=b,x.__cache={},this}function A(x){const v={boundary:0,storage:0};return typeof x=="number"||typeof x=="boolean"?(v.boundary=4,v.storage=4):x.isVector2?(v.boundary=8,v.storage=8):x.isVector3||x.isColor?(v.boundary=16,v.storage=12):x.isVector4?(v.boundary=16,v.storage=16):x.isMatrix3?(v.boundary=48,v.storage=48):x.isMatrix4?(v.boundary=64,v.storage=64):x.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",x),v}function m(x){const v=x.target;v.removeEventListener("dispose",m);const b=o.indexOf(v.__bindingPointIndex);o.splice(b,1),n.deleteBuffer(r[v.id]),delete r[v.id],delete i[v.id]}function g(){for(const x in r)n.deleteBuffer(r[x]);o=[],r={},i={}}return{bind:l,update:c,dispose:g}}class hV{constructor(e={}){const{canvas:t=G4(),context:s=null,depth:r=!0,stencil:i=!1,alpha:o=!1,antialias:a=!1,premultipliedAlpha:l=!0,preserveDrawingBuffer:c=!1,powerPreference:u="default",failIfMajorPerformanceCaveat:h=!1,reversedDepthBuffer:d=!1}=e;this.isWebGLRenderer=!0;let f;if(s!==null){if(typeof WebGLRenderingContext<"u"&&s instanceof WebGLRenderingContext)throw new Error("THREE.WebGLRenderer: WebGL 1 is not supported since r163.");f=s.getContextAttributes().alpha}else f=o;const p=new Uint32Array(4),A=new Int32Array(4);let m=null,g=null;const x=[],v=[];this.domElement=t,this.debug={checkShaderErrors:!0,onShaderError:null},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.toneMapping=jl,this.toneMappingExposure=1,this.transmissionResolutionScale=1;const b=this;let w=!1;this._outputColorSpace=jr;let _=0,N=0,M=null,T=-1,k=null;const B=new Vn,L=new Vn;let U=null;const V=new In(0);let W=0,H=t.width,ee=t.height,K=1,te=null,le=null;const fe=new Vn(0,0,H,ee),Ie=new Vn(0,0,H,ee);let Se=!1;const De=new _B;let Be=!1,he=!1;const ge=new is,Ne=new Ae,Oe=new Vn,Qe={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};let Ye=!1;function _t(){return M===null?K:1}let J=s;function ht(X,me){return t.getContext(X,me)}try{const X={alpha:!0,depth:r,stencil:i,antialias:a,premultipliedAlpha:l,preserveDrawingBuffer:c,powerPreference:u,failIfMajorPerformanceCaveat:h};if("setAttribute"in t&&t.setAttribute("data-engine",`three.js r${VC}`),t.addEventListener("webglcontextlost",at,!1),t.addEventListener("webglcontextrestored",At,!1),t.addEventListener("webglcontextcreationerror",Ge,!1),J===null){const me="webgl2";if(J=ht(me,X),J===null)throw ht(me)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}}catch(X){throw console.error("THREE.WebGLRenderer: "+X.message),X}let dt,tt,Ke,kt,Xe,ot,wn,sn,Z,G,we,ke,Ue,Re,bt,et,St,Tt,We,ct,Ut,Dt,mt,Yt;function de(){dt=new vz(J),dt.init(),Dt=new sV(J,dt),tt=new pz(J,dt,e,Dt),Ke=new tV(J,dt),tt.reversedDepthBuffer&&d&&Ke.buffers.depth.setReversed(!0),kt=new wz(J),Xe=new zG,ot=new nV(J,dt,Ke,Xe,tt,Dt,kt),wn=new gz(b),sn=new bz(b),Z=new kO(J),mt=new dz(J,Z),G=new Cz(J,Z,kt,mt),we=new Ez(J,G,Z,kt),We=new Sz(J,tt,ot),et=new mz(Xe),ke=new UG(b,wn,sn,dt,tt,mt,et),Ue=new cV(b,Xe),Re=new VG,bt=new XG(dt),Tt=new hz(b,wn,sn,Ke,we,f,l),St=new ZG(b,we,tt),Yt=new uV(J,kt,tt,Ke),ct=new fz(J,dt,kt),Ut=new Iz(J,dt,kt),kt.programs=ke.programs,b.capabilities=tt,b.extensions=dt,b.properties=Xe,b.renderLists=Re,b.shadowMap=St,b.state=Ke,b.info=kt}de();const je=new aV(b,J);this.xr=je,this.getContext=function(){return J},this.getContextAttributes=function(){return J.getContextAttributes()},this.forceContextLoss=function(){const X=dt.get("WEBGL_lose_context");X&&X.loseContext()},this.forceContextRestore=function(){const X=dt.get("WEBGL_lose_context");X&&X.restoreContext()},this.getPixelRatio=function(){return K},this.setPixelRatio=function(X){X!==void 0&&(K=X,this.setSize(H,ee,!1))},this.getSize=function(X){return X.set(H,ee)},this.setSize=function(X,me,Ee=!0){if(je.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}H=X,ee=me,t.width=Math.floor(X*K),t.height=Math.floor(me*K),Ee===!0&&(t.style.width=X+"px",t.style.height=me+"px"),this.setViewport(0,0,X,me)},this.getDrawingBufferSize=function(X){return X.set(H*K,ee*K).floor()},this.setDrawingBufferSize=function(X,me,Ee){H=X,ee=me,K=Ee,t.width=Math.floor(X*Ee),t.height=Math.floor(me*Ee),this.setViewport(0,0,X,me)},this.getCurrentViewport=function(X){return X.copy(B)},this.getViewport=function(X){return X.copy(fe)},this.setViewport=function(X,me,Ee,Te){X.isVector4?fe.set(X.x,X.y,X.z,X.w):fe.set(X,me,Ee,Te),Ke.viewport(B.copy(fe).multiplyScalar(K).round())},this.getScissor=function(X){return X.copy(Ie)},this.setScissor=function(X,me,Ee,Te){X.isVector4?Ie.set(X.x,X.y,X.z,X.w):Ie.set(X,me,Ee,Te),Ke.scissor(L.copy(Ie).multiplyScalar(K).round())},this.getScissorTest=function(){return Se},this.setScissorTest=function(X){Ke.setScissorTest(Se=X)},this.setOpaqueSort=function(X){te=X},this.setTransparentSort=function(X){le=X},this.getClearColor=function(X){return X.copy(Tt.getClearColor())},this.setClearColor=function(){Tt.setClearColor(...arguments)},this.getClearAlpha=function(){return Tt.getClearAlpha()},this.setClearAlpha=function(){Tt.setClearAlpha(...arguments)},this.clear=function(X=!0,me=!0,Ee=!0){let Te=0;if(X){let ve=!1;if(M!==null){const Je=M.texture.format;ve=Je===ll||Je===tx||Je===YC}if(ve){const Je=M.texture.type,xt=Je===Ui||Je===Oi||Je===Cm||Je===Im||Je===HC||Je===qC,Et=Tt.getClearColor(),st=Tt.getClearAlpha(),Vt=Et.r,Gt=Et.g,vt=Et.b;xt?(p[0]=Vt,p[1]=Gt,p[2]=vt,p[3]=st,J.clearBufferuiv(J.COLOR,0,p)):(A[0]=Vt,A[1]=Gt,A[2]=vt,A[3]=st,J.clearBufferiv(J.COLOR,0,A))}else Te|=J.COLOR_BUFFER_BIT}me&&(Te|=J.DEPTH_BUFFER_BIT),Ee&&(Te|=J.STENCIL_BUFFER_BIT,this.state.buffers.stencil.setMask(4294967295)),J.clear(Te)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){t.removeEventListener("webglcontextlost",at,!1),t.removeEventListener("webglcontextrestored",At,!1),t.removeEventListener("webglcontextcreationerror",Ge,!1),Tt.dispose(),Re.dispose(),bt.dispose(),Xe.dispose(),wn.dispose(),sn.dispose(),we.dispose(),mt.dispose(),Yt.dispose(),ke.dispose(),je.dispose(),je.removeEventListener("sessionstart",Qr),je.removeEventListener("sessionend",rr),wi.stop()};function at(X){X.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),w=!0}function At(){console.log("THREE.WebGLRenderer: Context Restored."),w=!1;const X=kt.autoReset,me=St.enabled,Ee=St.autoUpdate,Te=St.needsUpdate,ve=St.type;de(),kt.autoReset=X,St.enabled=me,St.autoUpdate=Ee,St.needsUpdate=Te,St.type=ve}function Ge(X){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",X.statusMessage)}function Ve(X){const me=X.target;me.removeEventListener("dispose",Ve),ut(me)}function ut(X){qt(X),Xe.remove(X)}function qt(X){const me=Xe.get(X).programs;me!==void 0&&(me.forEach(function(Ee){ke.releaseProgram(Ee)}),X.isShaderMaterial&&ke.releaseShaderCache(X))}this.renderBufferDirect=function(X,me,Ee,Te,ve,Je){me===null&&(me=Qe);const xt=ve.isMesh&&ve.matrixWorld.determinant()<0,Et=Si(X,me,Ee,Te,ve);Ke.setMaterial(Te,xt);let st=Ee.index,Vt=1;if(Te.wireframe===!0){if(st=G.getWireframeAttribute(Ee),st===void 0)return;Vt=2}const Gt=Ee.drawRange,vt=Ee.attributes.position;let on=Gt.start*Vt,Ln=(Gt.start+Gt.count)*Vt;Je!==null&&(on=Math.max(on,Je.start*Vt),Ln=Math.min(Ln,(Je.start+Je.count)*Vt)),st!==null?(on=Math.max(on,0),Ln=Math.min(Ln,st.count)):vt!=null&&(on=Math.max(on,0),Ln=Math.min(Ln,vt.count));const Wn=Ln-on;if(Wn<0||Wn===1/0)return;mt.setup(ve,Te,Et,Ee,st);let Tn,Dn=ct;if(st!==null&&(Tn=Z.get(st),Dn=Ut,Dn.setIndex(Tn)),ve.isMesh)Te.wireframe===!0?(Ke.setLineWidth(Te.wireframeLinewidth*_t()),Dn.setMode(J.LINES)):Dn.setMode(J.TRIANGLES);else if(ve.isLine){let Wt=Te.linewidth;Wt===void 0&&(Wt=1),Ke.setLineWidth(Wt*_t()),ve.isLineSegments?Dn.setMode(J.LINES):ve.isLineLoop?Dn.setMode(J.LINE_LOOP):Dn.setMode(J.LINE_STRIP)}else ve.isPoints?Dn.setMode(J.POINTS):ve.isSprite&&Dn.setMode(J.TRIANGLES);if(ve.isBatchedMesh)if(ve._multiDrawInstances!==null)_m("THREE.WebGLRenderer: renderMultiDrawInstances has been deprecated and will be removed in r184. Append to renderMultiDraw arguments and use indirection."),Dn.renderMultiDrawInstances(ve._multiDrawStarts,ve._multiDrawCounts,ve._multiDrawCount,ve._multiDrawInstances);else if(dt.get("WEBGL_multi_draw"))Dn.renderMultiDraw(ve._multiDrawStarts,ve._multiDrawCounts,ve._multiDrawCount);else{const Wt=ve._multiDrawStarts,Qn=ve._multiDrawCounts,fn=ve._multiDrawCount,Hn=st?Z.get(st).bytesPerElement:1,_i=Xe.get(Te).currentProgram.getUniforms();for(let un=0;un<fn;un++)_i.setValue(J,"_gl_DrawID",un),Dn.render(Wt[un]/Hn,Qn[un])}else if(ve.isInstancedMesh)Dn.renderInstances(on,Wn,ve.count);else if(Ee.isInstancedBufferGeometry){const Wt=Ee._maxInstanceCount!==void 0?Ee._maxInstanceCount:1/0,Qn=Math.min(Ee.instanceCount,Wt);Dn.renderInstances(on,Wn,Qn)}else Dn.render(on,Wn)};function Mn(X,me,Ee){X.transparent===!0&&X.side===zo&&X.forceSinglePass===!1?(X.side=Li,X.needsUpdate=!0,Mr(X,me,Ee),X.side=ec,X.needsUpdate=!0,Mr(X,me,Ee),X.side=zo):Mr(X,me,Ee)}this.compile=function(X,me,Ee=null){Ee===null&&(Ee=X),g=bt.get(Ee),g.init(me),v.push(g),Ee.traverseVisible(function(ve){ve.isLight&&ve.layers.test(me.layers)&&(g.pushLight(ve),ve.castShadow&&g.pushShadow(ve))}),X!==Ee&&X.traverseVisible(function(ve){ve.isLight&&ve.layers.test(me.layers)&&(g.pushLight(ve),ve.castShadow&&g.pushShadow(ve))}),g.setupLights();const Te=new Set;return X.traverse(function(ve){if(!(ve.isMesh||ve.isPoints||ve.isLine||ve.isSprite))return;const Je=ve.material;if(Je)if(Array.isArray(Je))for(let xt=0;xt<Je.length;xt++){const Et=Je[xt];Mn(Et,Ee,ve),Te.add(Et)}else Mn(Je,Ee,ve),Te.add(Je)}),g=v.pop(),Te},this.compileAsync=function(X,me,Ee=null){const Te=this.compile(X,me,Ee);return new Promise(ve=>{function Je(){if(Te.forEach(function(xt){Xe.get(xt).currentProgram.isReady()&&Te.delete(xt)}),Te.size===0){ve(X);return}setTimeout(Je,10)}dt.get("KHR_parallel_shader_compile")!==null?Je():setTimeout(Je,10)})};let mn=null;function Ds(X){mn&&mn(X)}function Qr(){wi.stop()}function rr(){wi.start()}const wi=new MB;wi.setAnimationLoop(Ds),typeof self<"u"&&wi.setContext(self),this.setAnimationLoop=function(X){mn=X,je.setAnimationLoop(X),X===null?wi.stop():wi.start()},je.addEventListener("sessionstart",Qr),je.addEventListener("sessionend",rr),this.render=function(X,me){if(me!==void 0&&me.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(w===!0)return;if(X.matrixWorldAutoUpdate===!0&&X.updateMatrixWorld(),me.parent===null&&me.matrixWorldAutoUpdate===!0&&me.updateMatrixWorld(),je.enabled===!0&&je.isPresenting===!0&&(je.cameraAutoUpdate===!0&&je.updateCamera(me),me=je.getCamera()),X.isScene===!0&&X.onBeforeRender(b,X,me,M),g=bt.get(X,v.length),g.init(me),v.push(g),ge.multiplyMatrices(me.projectionMatrix,me.matrixWorldInverse),De.setFromProjectionMatrix(ge,ba,me.reversedDepth),he=this.localClippingEnabled,Be=et.init(this.clippingPlanes,he),m=Re.get(X,x.length),m.init(),x.push(m),je.enabled===!0&&je.isPresenting===!0){const Je=b.xr.getDepthSensingMesh();Je!==null&&xs(Je,me,-1/0,b.sortObjects)}xs(X,me,0,b.sortObjects),m.finish(),b.sortObjects===!0&&m.sort(te,le),Ye=je.enabled===!1||je.isPresenting===!1||je.hasDepthSensing()===!1,Ye&&Tt.addToRenderList(m,X),this.info.render.frame++,Be===!0&&et.beginShadows();const Ee=g.state.shadowsArray;St.render(Ee,X,me),Be===!0&&et.endShadows(),this.info.autoReset===!0&&this.info.reset();const Te=m.opaque,ve=m.transmissive;if(g.setupLights(),me.isArrayCamera){const Je=me.cameras;if(ve.length>0)for(let xt=0,Et=Je.length;xt<Et;xt++){const st=Je[xt];ca(Te,ve,X,st)}Ye&&Tt.render(X);for(let xt=0,Et=Je.length;xt<Et;xt++){const st=Je[xt];Ys(m,X,st,st.viewport)}}else ve.length>0&&ca(Te,ve,X,me),Ye&&Tt.render(X),Ys(m,X,me);M!==null&&N===0&&(ot.updateMultisampleRenderTarget(M),ot.updateRenderTargetMipmap(M)),X.isScene===!0&&X.onAfterRender(b,X,me),mt.resetDefaultState(),T=-1,k=null,v.pop(),v.length>0?(g=v[v.length-1],Be===!0&&et.setGlobalState(b.clippingPlanes,g.state.camera)):g=null,x.pop(),x.length>0?m=x[x.length-1]:m=null};function xs(X,me,Ee,Te){if(X.visible===!1)return;if(X.layers.test(me.layers)){if(X.isGroup)Ee=X.renderOrder;else if(X.isLOD)X.autoUpdate===!0&&X.update(me);else if(X.isLight)g.pushLight(X),X.castShadow&&g.pushShadow(X);else if(X.isSprite){if(!X.frustumCulled||De.intersectsSprite(X)){Te&&Oe.setFromMatrixPosition(X.matrixWorld).applyMatrix4(ge);const xt=we.update(X),Et=X.material;Et.visible&&m.push(X,xt,Et,Ee,Oe.z,null)}}else if((X.isMesh||X.isLine||X.isPoints)&&(!X.frustumCulled||De.intersectsObject(X))){const xt=we.update(X),Et=X.material;if(Te&&(X.boundingSphere!==void 0?(X.boundingSphere===null&&X.computeBoundingSphere(),Oe.copy(X.boundingSphere.center)):(xt.boundingSphere===null&&xt.computeBoundingSphere(),Oe.copy(xt.boundingSphere.center)),Oe.applyMatrix4(X.matrixWorld).applyMatrix4(ge)),Array.isArray(Et)){const st=xt.groups;for(let Vt=0,Gt=st.length;Vt<Gt;Vt++){const vt=st[Vt],on=Et[vt.materialIndex];on&&on.visible&&m.push(X,xt,on,Ee,Oe.z,vt)}}else Et.visible&&m.push(X,xt,Et,Ee,Oe.z,null)}}const Je=X.children;for(let xt=0,Et=Je.length;xt<Et;xt++)xs(Je[xt],me,Ee,Te)}function Ys(X,me,Ee,Te){const ve=X.opaque,Je=X.transmissive,xt=X.transparent;g.setupLightsView(Ee),Be===!0&&et.setGlobalState(b.clippingPlanes,Ee),Te&&Ke.viewport(B.copy(Te)),ve.length>0&&Xt(ve,me,Ee),Je.length>0&&Xt(Je,me,Ee),xt.length>0&&Xt(xt,me,Ee),Ke.buffers.depth.setTest(!0),Ke.buffers.depth.setMask(!0),Ke.buffers.color.setMask(!0),Ke.setPolygonOffset(!1)}function ca(X,me,Ee,Te){if((Ee.isScene===!0?Ee.overrideMaterial:null)!==null)return;g.state.transmissionRenderTarget[Te.id]===void 0&&(g.state.transmissionRenderTarget[Te.id]=new _a(1,1,{generateMipmaps:!0,type:dt.has("EXT_color_buffer_half_float")||dt.has("EXT_color_buffer_float")?ng:Ui,minFilter:iu,samples:4,stencilBuffer:i,resolveDepthBuffer:!1,resolveStencilBuffer:!1,colorSpace:Gn.workingColorSpace}));const Je=g.state.transmissionRenderTarget[Te.id],xt=Te.viewport||B;Je.setSize(xt.z*b.transmissionResolutionScale,xt.w*b.transmissionResolutionScale);const Et=b.getRenderTarget(),st=b.getActiveCubeFace(),Vt=b.getActiveMipmapLevel();b.setRenderTarget(Je),b.getClearColor(V),W=b.getClearAlpha(),W<1&&b.setClearColor(16777215,.5),b.clear(),Ye&&Tt.render(Ee);const Gt=b.toneMapping;b.toneMapping=jl;const vt=Te.viewport;if(Te.viewport!==void 0&&(Te.viewport=void 0),g.setupLightsView(Te),Be===!0&&et.setGlobalState(b.clippingPlanes,Te),Xt(X,Ee,Te),ot.updateMultisampleRenderTarget(Je),ot.updateRenderTargetMipmap(Je),dt.has("WEBGL_multisampled_render_to_texture")===!1){let on=!1;for(let Ln=0,Wn=me.length;Ln<Wn;Ln++){const Tn=me[Ln],Dn=Tn.object,Wt=Tn.geometry,Qn=Tn.material,fn=Tn.group;if(Qn.side===zo&&Dn.layers.test(Te.layers)){const Hn=Qn.side;Qn.side=Li,Qn.needsUpdate=!0,ls(Dn,Ee,Te,Wt,Qn,fn),Qn.side=Hn,Qn.needsUpdate=!0,on=!0}}on===!0&&(ot.updateMultisampleRenderTarget(Je),ot.updateRenderTargetMipmap(Je))}b.setRenderTarget(Et,st,Vt),b.setClearColor(V,W),vt!==void 0&&(Te.viewport=vt),b.toneMapping=Gt}function Xt(X,me,Ee){const Te=me.isScene===!0?me.overrideMaterial:null;for(let ve=0,Je=X.length;ve<Je;ve++){const xt=X[ve],Et=xt.object,st=xt.geometry,Vt=xt.group;let Gt=xt.material;Gt.allowOverride===!0&&Te!==null&&(Gt=Te),Et.layers.test(Ee.layers)&&ls(Et,me,Ee,st,Gt,Vt)}}function ls(X,me,Ee,Te,ve,Je){X.onBeforeRender(b,me,Ee,Te,ve,Je),X.modelViewMatrix.multiplyMatrices(Ee.matrixWorldInverse,X.matrixWorld),X.normalMatrix.getNormalMatrix(X.modelViewMatrix),ve.onBeforeRender(b,me,Ee,Te,X,Je),ve.transparent===!0&&ve.side===zo&&ve.forceSinglePass===!1?(ve.side=Li,ve.needsUpdate=!0,b.renderBufferDirect(Ee,me,Te,ve,X,Je),ve.side=ec,ve.needsUpdate=!0,b.renderBufferDirect(Ee,me,Te,ve,X,Je),ve.side=zo):b.renderBufferDirect(Ee,me,Te,ve,X,Je),X.onAfterRender(b,me,Ee,Te,ve,Je)}function Mr(X,me,Ee){me.isScene!==!0&&(me=Qe);const Te=Xe.get(X),ve=g.state.lights,Je=g.state.shadowsArray,xt=ve.state.version,Et=ke.getParameters(X,ve.state,Je,me,Ee),st=ke.getProgramCacheKey(Et);let Vt=Te.programs;Te.environment=X.isMeshStandardMaterial?me.environment:null,Te.fog=me.fog,Te.envMap=(X.isMeshStandardMaterial?sn:wn).get(X.envMap||Te.environment),Te.envMapRotation=Te.environment!==null&&X.envMap===null?me.environmentRotation:X.envMapRotation,Vt===void 0&&(X.addEventListener("dispose",Ve),Vt=new Map,Te.programs=Vt);let Gt=Vt.get(st);if(Gt!==void 0){if(Te.currentProgram===Gt&&Te.lightsStateVersion===xt)return ai(X,Et),Gt}else Et.uniforms=ke.getUniforms(X),X.onBeforeCompile(Et,b),Gt=ke.acquireProgram(Et,st),Vt.set(st,Gt),Te.uniforms=Et.uniforms;const vt=Te.uniforms;return(!X.isShaderMaterial&&!X.isRawShaderMaterial||X.clipping===!0)&&(vt.clippingPlanes=et.uniform),ai(X,Et),Te.needsLights=Ur(X),Te.lightsStateVersion=xt,Te.needsLights&&(vt.ambientLightColor.value=ve.state.ambient,vt.lightProbe.value=ve.state.probe,vt.directionalLights.value=ve.state.directional,vt.directionalLightShadows.value=ve.state.directionalShadow,vt.spotLights.value=ve.state.spot,vt.spotLightShadows.value=ve.state.spotShadow,vt.rectAreaLights.value=ve.state.rectArea,vt.ltc_1.value=ve.state.rectAreaLTC1,vt.ltc_2.value=ve.state.rectAreaLTC2,vt.pointLights.value=ve.state.point,vt.pointLightShadows.value=ve.state.pointShadow,vt.hemisphereLights.value=ve.state.hemi,vt.directionalShadowMap.value=ve.state.directionalShadowMap,vt.directionalShadowMatrix.value=ve.state.directionalShadowMatrix,vt.spotShadowMap.value=ve.state.spotShadowMap,vt.spotLightMatrix.value=ve.state.spotLightMatrix,vt.spotLightMap.value=ve.state.spotLightMap,vt.pointShadowMap.value=ve.state.pointShadowMap,vt.pointShadowMatrix.value=ve.state.pointShadowMatrix),Te.currentProgram=Gt,Te.uniformsList=null,Gt}function za(X){if(X.uniformsList===null){const me=X.currentProgram.getUniforms();X.uniformsList=Yy.seqWithValue(me.seq,X.uniforms)}return X.uniformsList}function ai(X,me){const Ee=Xe.get(X);Ee.outputColorSpace=me.outputColorSpace,Ee.batching=me.batching,Ee.batchingColor=me.batchingColor,Ee.instancing=me.instancing,Ee.instancingColor=me.instancingColor,Ee.instancingMorph=me.instancingMorph,Ee.skinning=me.skinning,Ee.morphTargets=me.morphTargets,Ee.morphNormals=me.morphNormals,Ee.morphColors=me.morphColors,Ee.morphTargetsCount=me.morphTargetsCount,Ee.numClippingPlanes=me.numClippingPlanes,Ee.numIntersection=me.numClipIntersection,Ee.vertexAlphas=me.vertexAlphas,Ee.vertexTangents=me.vertexTangents,Ee.toneMapping=me.toneMapping}function Si(X,me,Ee,Te,ve){me.isScene!==!0&&(me=Qe),ot.resetTextureUnits();const Je=me.fog,xt=Te.isMeshStandardMaterial?me.environment:null,Et=M===null?b.outputColorSpace:M.isXRRenderTarget===!0?M.texture.colorSpace:Ud,st=(Te.isMeshStandardMaterial?sn:wn).get(Te.envMap||xt),Vt=Te.vertexColors===!0&&!!Ee.attributes.color&&Ee.attributes.color.itemSize===4,Gt=!!Ee.attributes.tangent&&(!!Te.normalMap||Te.anisotropy>0),vt=!!Ee.morphAttributes.position,on=!!Ee.morphAttributes.normal,Ln=!!Ee.morphAttributes.color;let Wn=jl;Te.toneMapped&&(M===null||M.isXRRenderTarget===!0)&&(Wn=b.toneMapping);const Tn=Ee.morphAttributes.position||Ee.morphAttributes.normal||Ee.morphAttributes.color,Dn=Tn!==void 0?Tn.length:0,Wt=Xe.get(Te),Qn=g.state.lights;if(Be===!0&&(he===!0||X!==k)){const cs=X===k&&Te.id===T;et.setState(Te,X,cs)}let fn=!1;Te.version===Wt.__version?(Wt.needsLights&&Wt.lightsStateVersion!==Qn.state.version||Wt.outputColorSpace!==Et||ve.isBatchedMesh&&Wt.batching===!1||!ve.isBatchedMesh&&Wt.batching===!0||ve.isBatchedMesh&&Wt.batchingColor===!0&&ve.colorTexture===null||ve.isBatchedMesh&&Wt.batchingColor===!1&&ve.colorTexture!==null||ve.isInstancedMesh&&Wt.instancing===!1||!ve.isInstancedMesh&&Wt.instancing===!0||ve.isSkinnedMesh&&Wt.skinning===!1||!ve.isSkinnedMesh&&Wt.skinning===!0||ve.isInstancedMesh&&Wt.instancingColor===!0&&ve.instanceColor===null||ve.isInstancedMesh&&Wt.instancingColor===!1&&ve.instanceColor!==null||ve.isInstancedMesh&&Wt.instancingMorph===!0&&ve.morphTexture===null||ve.isInstancedMesh&&Wt.instancingMorph===!1&&ve.morphTexture!==null||Wt.envMap!==st||Te.fog===!0&&Wt.fog!==Je||Wt.numClippingPlanes!==void 0&&(Wt.numClippingPlanes!==et.numPlanes||Wt.numIntersection!==et.numIntersection)||Wt.vertexAlphas!==Vt||Wt.vertexTangents!==Gt||Wt.morphTargets!==vt||Wt.morphNormals!==on||Wt.morphColors!==Ln||Wt.toneMapping!==Wn||Wt.morphTargetsCount!==Dn)&&(fn=!0):(fn=!0,Wt.__version=Te.version);let Hn=Wt.currentProgram;fn===!0&&(Hn=Mr(Te,me,ve));let _i=!1,un=!1,Ti=!1;const Un=Hn.getUniforms(),Fn=Wt.uniforms;if(Ke.useProgram(Hn.program)&&(_i=!0,un=!0,Ti=!0),Te.id!==T&&(T=Te.id,un=!0),_i||k!==X){Ke.buffers.depth.getReversed()&&X.reversedDepth!==!0&&(X._reversedDepth=!0,X.updateProjectionMatrix()),Un.setValue(J,"projectionMatrix",X.projectionMatrix),Un.setValue(J,"viewMatrix",X.matrixWorldInverse);const Qs=Un.map.cameraPosition;Qs!==void 0&&Qs.setValue(J,Ne.setFromMatrixPosition(X.matrixWorld)),tt.logarithmicDepthBuffer&&Un.setValue(J,"logDepthBufFC",2/(Math.log(X.far+1)/Math.LN2)),(Te.isMeshPhongMaterial||Te.isMeshToonMaterial||Te.isMeshLambertMaterial||Te.isMeshBasicMaterial||Te.isMeshStandardMaterial||Te.isShaderMaterial)&&Un.setValue(J,"isOrthographic",X.isOrthographicCamera===!0),k!==X&&(k=X,un=!0,Ti=!0)}if(ve.isSkinnedMesh){Un.setOptional(J,ve,"bindMatrix"),Un.setOptional(J,ve,"bindMatrixInverse");const cs=ve.skeleton;cs&&(cs.boneTexture===null&&cs.computeBoneTexture(),Un.setValue(J,"boneTexture",cs.boneTexture,ot))}ve.isBatchedMesh&&(Un.setOptional(J,ve,"batchingTexture"),Un.setValue(J,"batchingTexture",ve._matricesTexture,ot),Un.setOptional(J,ve,"batchingIdTexture"),Un.setValue(J,"batchingIdTexture",ve._indirectTexture,ot),Un.setOptional(J,ve,"batchingColorTexture"),ve._colorsTexture!==null&&Un.setValue(J,"batchingColorTexture",ve._colorsTexture,ot));const Os=Ee.morphAttributes;if((Os.position!==void 0||Os.normal!==void 0||Os.color!==void 0)&&We.update(ve,Ee,Hn),(un||Wt.receiveShadow!==ve.receiveShadow)&&(Wt.receiveShadow=ve.receiveShadow,Un.setValue(J,"receiveShadow",ve.receiveShadow)),Te.isMeshGouraudMaterial&&Te.envMap!==null&&(Fn.envMap.value=st,Fn.flipEnvMap.value=st.isCubeTexture&&st.isRenderTargetTexture===!1?-1:1),Te.isMeshStandardMaterial&&Te.envMap===null&&me.environment!==null&&(Fn.envMapIntensity.value=me.environmentIntensity),un&&(Un.setValue(J,"toneMappingExposure",b.toneMappingExposure),Wt.needsLights&&Ei(Fn,Ti),Je&&Te.fog===!0&&Ue.refreshFogUniforms(Fn,Je),Ue.refreshMaterialUniforms(Fn,Te,K,ee,g.state.transmissionRenderTarget[X.id]),Yy.upload(J,za(Wt),Fn,ot)),Te.isShaderMaterial&&Te.uniformsNeedUpdate===!0&&(Yy.upload(J,za(Wt),Fn,ot),Te.uniformsNeedUpdate=!1),Te.isSpriteMaterial&&Un.setValue(J,"center",ve.center),Un.setValue(J,"modelViewMatrix",ve.modelViewMatrix),Un.setValue(J,"normalMatrix",ve.normalMatrix),Un.setValue(J,"modelMatrix",ve.matrixWorld),Te.isShaderMaterial||Te.isRawShaderMaterial){const cs=Te.uniformsGroups;for(let Qs=0,No=cs.length;Qs<No;Qs++){const li=cs[Qs];Yt.update(li,Hn),Yt.bind(li,Hn)}}return Hn}function Ei(X,me){X.ambientLightColor.needsUpdate=me,X.lightProbe.needsUpdate=me,X.directionalLights.needsUpdate=me,X.directionalLightShadows.needsUpdate=me,X.pointLights.needsUpdate=me,X.pointLightShadows.needsUpdate=me,X.spotLights.needsUpdate=me,X.spotLightShadows.needsUpdate=me,X.rectAreaLights.needsUpdate=me,X.hemisphereLights.needsUpdate=me}function Ur(X){return X.isMeshLambertMaterial||X.isMeshToonMaterial||X.isMeshPhongMaterial||X.isMeshStandardMaterial||X.isShadowMaterial||X.isShaderMaterial&&X.lights===!0}this.getActiveCubeFace=function(){return _},this.getActiveMipmapLevel=function(){return N},this.getRenderTarget=function(){return M},this.setRenderTargetTextures=function(X,me,Ee){const Te=Xe.get(X);Te.__autoAllocateDepthBuffer=X.resolveDepthBuffer===!1,Te.__autoAllocateDepthBuffer===!1&&(Te.__useRenderToTexture=!1),Xe.get(X.texture).__webglTexture=me,Xe.get(X.depthTexture).__webglTexture=Te.__autoAllocateDepthBuffer?void 0:Ee,Te.__hasExternalTextures=!0},this.setRenderTargetFramebuffer=function(X,me){const Ee=Xe.get(X);Ee.__webglFramebuffer=me,Ee.__useDefaultFramebuffer=me===void 0};const Ga=J.createFramebuffer();this.setRenderTarget=function(X,me=0,Ee=0){M=X,_=me,N=Ee;let Te=!0,ve=null,Je=!1,xt=!1;if(X){const st=Xe.get(X);if(st.__useDefaultFramebuffer!==void 0)Ke.bindFramebuffer(J.FRAMEBUFFER,null),Te=!1;else if(st.__webglFramebuffer===void 0)ot.setupRenderTarget(X);else if(st.__hasExternalTextures)ot.rebindTextures(X,Xe.get(X.texture).__webglTexture,Xe.get(X.depthTexture).__webglTexture);else if(X.depthBuffer){const vt=X.depthTexture;if(st.__boundDepthTexture!==vt){if(vt!==null&&Xe.has(vt)&&(X.width!==vt.image.width||X.height!==vt.image.height))throw new Error("WebGLRenderTarget: Attached DepthTexture is initialized to the incorrect size.");ot.setupDepthRenderbuffer(X)}}const Vt=X.texture;(Vt.isData3DTexture||Vt.isDataArrayTexture||Vt.isCompressedArrayTexture)&&(xt=!0);const Gt=Xe.get(X).__webglFramebuffer;X.isWebGLCubeRenderTarget?(Array.isArray(Gt[me])?ve=Gt[me][Ee]:ve=Gt[me],Je=!0):X.samples>0&&ot.useMultisampledRTT(X)===!1?ve=Xe.get(X).__webglMultisampledFramebuffer:Array.isArray(Gt)?ve=Gt[Ee]:ve=Gt,B.copy(X.viewport),L.copy(X.scissor),U=X.scissorTest}else B.copy(fe).multiplyScalar(K).floor(),L.copy(Ie).multiplyScalar(K).floor(),U=Se;if(Ee!==0&&(ve=Ga),Ke.bindFramebuffer(J.FRAMEBUFFER,ve)&&Te&&Ke.drawBuffers(X,ve),Ke.viewport(B),Ke.scissor(L),Ke.setScissorTest(U),Je){const st=Xe.get(X.texture);J.framebufferTexture2D(J.FRAMEBUFFER,J.COLOR_ATTACHMENT0,J.TEXTURE_CUBE_MAP_POSITIVE_X+me,st.__webglTexture,Ee)}else if(xt){const st=me;for(let Vt=0;Vt<X.textures.length;Vt++){const Gt=Xe.get(X.textures[Vt]);J.framebufferTextureLayer(J.FRAMEBUFFER,J.COLOR_ATTACHMENT0+Vt,Gt.__webglTexture,Ee,st)}}else if(X!==null&&Ee!==0){const st=Xe.get(X.texture);J.framebufferTexture2D(J.FRAMEBUFFER,J.COLOR_ATTACHMENT0,J.TEXTURE_2D,st.__webglTexture,Ee)}T=-1},this.readRenderTargetPixels=function(X,me,Ee,Te,ve,Je,xt,Et=0){if(!(X&&X.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let st=Xe.get(X).__webglFramebuffer;if(X.isWebGLCubeRenderTarget&&xt!==void 0&&(st=st[xt]),st){Ke.bindFramebuffer(J.FRAMEBUFFER,st);try{const Vt=X.textures[Et],Gt=Vt.format,vt=Vt.type;if(!tt.textureFormatReadable(Gt)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}if(!tt.textureTypeReadable(vt)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}me>=0&&me<=X.width-Te&&Ee>=0&&Ee<=X.height-ve&&(X.textures.length>1&&J.readBuffer(J.COLOR_ATTACHMENT0+Et),J.readPixels(me,Ee,Te,ve,Dt.convert(Gt),Dt.convert(vt),Je))}finally{const Vt=M!==null?Xe.get(M).__webglFramebuffer:null;Ke.bindFramebuffer(J.FRAMEBUFFER,Vt)}}},this.readRenderTargetPixelsAsync=async function(X,me,Ee,Te,ve,Je,xt,Et=0){if(!(X&&X.isWebGLRenderTarget))throw new Error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let st=Xe.get(X).__webglFramebuffer;if(X.isWebGLCubeRenderTarget&&xt!==void 0&&(st=st[xt]),st)if(me>=0&&me<=X.width-Te&&Ee>=0&&Ee<=X.height-ve){Ke.bindFramebuffer(J.FRAMEBUFFER,st);const Vt=X.textures[Et],Gt=Vt.format,vt=Vt.type;if(!tt.textureFormatReadable(Gt))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in RGBA or implementation defined format.");if(!tt.textureTypeReadable(vt))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in UnsignedByteType or implementation defined type.");const on=J.createBuffer();J.bindBuffer(J.PIXEL_PACK_BUFFER,on),J.bufferData(J.PIXEL_PACK_BUFFER,Je.byteLength,J.STREAM_READ),X.textures.length>1&&J.readBuffer(J.COLOR_ATTACHMENT0+Et),J.readPixels(me,Ee,Te,ve,Dt.convert(Gt),Dt.convert(vt),0);const Ln=M!==null?Xe.get(M).__webglFramebuffer:null;Ke.bindFramebuffer(J.FRAMEBUFFER,Ln);const Wn=J.fenceSync(J.SYNC_GPU_COMMANDS_COMPLETE,0);return J.flush(),await V4(J,Wn,4),J.bindBuffer(J.PIXEL_PACK_BUFFER,on),J.getBufferSubData(J.PIXEL_PACK_BUFFER,0,Je),J.deleteBuffer(on),J.deleteSync(Wn),Je}else throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: requested read bounds are out of range.")},this.copyFramebufferToTexture=function(X,me=null,Ee=0){const Te=Math.pow(2,-Ee),ve=Math.floor(X.image.width*Te),Je=Math.floor(X.image.height*Te),xt=me!==null?me.x:0,Et=me!==null?me.y:0;ot.setTexture2D(X,0),J.copyTexSubImage2D(J.TEXTURE_2D,Ee,0,0,xt,Et,ve,Je),Ke.unbindTexture()};const ko=J.createFramebuffer(),go=J.createFramebuffer();this.copyTextureToTexture=function(X,me,Ee=null,Te=null,ve=0,Je=null){Je===null&&(ve!==0?(_m("WebGLRenderer: copyTextureToTexture function signature has changed to support src and dst mipmap levels."),Je=ve,ve=0):Je=0);let xt,Et,st,Vt,Gt,vt,on,Ln,Wn;const Tn=X.isCompressedTexture?X.mipmaps[Je]:X.image;if(Ee!==null)xt=Ee.max.x-Ee.min.x,Et=Ee.max.y-Ee.min.y,st=Ee.isBox3?Ee.max.z-Ee.min.z:1,Vt=Ee.min.x,Gt=Ee.min.y,vt=Ee.isBox3?Ee.min.z:0;else{const Os=Math.pow(2,-ve);xt=Math.floor(Tn.width*Os),Et=Math.floor(Tn.height*Os),X.isDataArrayTexture?st=Tn.depth:X.isData3DTexture?st=Math.floor(Tn.depth*Os):st=1,Vt=0,Gt=0,vt=0}Te!==null?(on=Te.x,Ln=Te.y,Wn=Te.z):(on=0,Ln=0,Wn=0);const Dn=Dt.convert(me.format),Wt=Dt.convert(me.type);let Qn;me.isData3DTexture?(ot.setTexture3D(me,0),Qn=J.TEXTURE_3D):me.isDataArrayTexture||me.isCompressedArrayTexture?(ot.setTexture2DArray(me,0),Qn=J.TEXTURE_2D_ARRAY):(ot.setTexture2D(me,0),Qn=J.TEXTURE_2D),J.pixelStorei(J.UNPACK_FLIP_Y_WEBGL,me.flipY),J.pixelStorei(J.UNPACK_PREMULTIPLY_ALPHA_WEBGL,me.premultiplyAlpha),J.pixelStorei(J.UNPACK_ALIGNMENT,me.unpackAlignment);const fn=J.getParameter(J.UNPACK_ROW_LENGTH),Hn=J.getParameter(J.UNPACK_IMAGE_HEIGHT),_i=J.getParameter(J.UNPACK_SKIP_PIXELS),un=J.getParameter(J.UNPACK_SKIP_ROWS),Ti=J.getParameter(J.UNPACK_SKIP_IMAGES);J.pixelStorei(J.UNPACK_ROW_LENGTH,Tn.width),J.pixelStorei(J.UNPACK_IMAGE_HEIGHT,Tn.height),J.pixelStorei(J.UNPACK_SKIP_PIXELS,Vt),J.pixelStorei(J.UNPACK_SKIP_ROWS,Gt),J.pixelStorei(J.UNPACK_SKIP_IMAGES,vt);const Un=X.isDataArrayTexture||X.isData3DTexture,Fn=me.isDataArrayTexture||me.isData3DTexture;if(X.isDepthTexture){const Os=Xe.get(X),cs=Xe.get(me),Qs=Xe.get(Os.__renderTarget),No=Xe.get(cs.__renderTarget);Ke.bindFramebuffer(J.READ_FRAMEBUFFER,Qs.__webglFramebuffer),Ke.bindFramebuffer(J.DRAW_FRAMEBUFFER,No.__webglFramebuffer);for(let li=0;li<st;li++)Un&&(J.framebufferTextureLayer(J.READ_FRAMEBUFFER,J.COLOR_ATTACHMENT0,Xe.get(X).__webglTexture,ve,vt+li),J.framebufferTextureLayer(J.DRAW_FRAMEBUFFER,J.COLOR_ATTACHMENT0,Xe.get(me).__webglTexture,Je,Wn+li)),J.blitFramebuffer(Vt,Gt,xt,Et,on,Ln,xt,Et,J.DEPTH_BUFFER_BIT,J.NEAREST);Ke.bindFramebuffer(J.READ_FRAMEBUFFER,null),Ke.bindFramebuffer(J.DRAW_FRAMEBUFFER,null)}else if(ve!==0||X.isRenderTargetTexture||Xe.has(X)){const Os=Xe.get(X),cs=Xe.get(me);Ke.bindFramebuffer(J.READ_FRAMEBUFFER,ko),Ke.bindFramebuffer(J.DRAW_FRAMEBUFFER,go);for(let Qs=0;Qs<st;Qs++)Un?J.framebufferTextureLayer(J.READ_FRAMEBUFFER,J.COLOR_ATTACHMENT0,Os.__webglTexture,ve,vt+Qs):J.framebufferTexture2D(J.READ_FRAMEBUFFER,J.COLOR_ATTACHMENT0,J.TEXTURE_2D,Os.__webglTexture,ve),Fn?J.framebufferTextureLayer(J.DRAW_FRAMEBUFFER,J.COLOR_ATTACHMENT0,cs.__webglTexture,Je,Wn+Qs):J.framebufferTexture2D(J.DRAW_FRAMEBUFFER,J.COLOR_ATTACHMENT0,J.TEXTURE_2D,cs.__webglTexture,Je),ve!==0?J.blitFramebuffer(Vt,Gt,xt,Et,on,Ln,xt,Et,J.COLOR_BUFFER_BIT,J.NEAREST):Fn?J.copyTexSubImage3D(Qn,Je,on,Ln,Wn+Qs,Vt,Gt,xt,Et):J.copyTexSubImage2D(Qn,Je,on,Ln,Vt,Gt,xt,Et);Ke.bindFramebuffer(J.READ_FRAMEBUFFER,null),Ke.bindFramebuffer(J.DRAW_FRAMEBUFFER,null)}else Fn?X.isDataTexture||X.isData3DTexture?J.texSubImage3D(Qn,Je,on,Ln,Wn,xt,Et,st,Dn,Wt,Tn.data):me.isCompressedArrayTexture?J.compressedTexSubImage3D(Qn,Je,on,Ln,Wn,xt,Et,st,Dn,Tn.data):J.texSubImage3D(Qn,Je,on,Ln,Wn,xt,Et,st,Dn,Wt,Tn):X.isDataTexture?J.texSubImage2D(J.TEXTURE_2D,Je,on,Ln,xt,Et,Dn,Wt,Tn.data):X.isCompressedTexture?J.compressedTexSubImage2D(J.TEXTURE_2D,Je,on,Ln,Tn.width,Tn.height,Dn,Tn.data):J.texSubImage2D(J.TEXTURE_2D,Je,on,Ln,xt,Et,Dn,Wt,Tn);J.pixelStorei(J.UNPACK_ROW_LENGTH,fn),J.pixelStorei(J.UNPACK_IMAGE_HEIGHT,Hn),J.pixelStorei(J.UNPACK_SKIP_PIXELS,_i),J.pixelStorei(J.UNPACK_SKIP_ROWS,un),J.pixelStorei(J.UNPACK_SKIP_IMAGES,Ti),Je===0&&me.generateMipmaps&&J.generateMipmap(Qn),Ke.unbindTexture()},this.initRenderTarget=function(X){Xe.get(X).__webglFramebuffer===void 0&&ot.setupRenderTarget(X)},this.initTexture=function(X){X.isCubeTexture?ot.setTextureCube(X,0):X.isData3DTexture?ot.setTexture3D(X,0):X.isDataArrayTexture||X.isCompressedArrayTexture?ot.setTexture2DArray(X,0):ot.setTexture2D(X,0),Ke.unbindTexture()},this.resetState=function(){_=0,N=0,M=null,Ke.reset(),mt.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}get coordinateSystem(){return ba}get outputColorSpace(){return this._outputColorSpace}set outputColorSpace(e){this._outputColorSpace=e;const t=this.getContext();t.drawingBufferColorSpace=Gn._getDrawingBufferColorSpace(e),t.unpackColorSpace=Gn._getUnpackColorSpace()}}function dV({video:n,container:e,videoPlaneDepth:t=-10,debug:s}){const r=e.getBoundingClientRect(),i=new hV({alpha:!0,antialias:!0});i.setPixelRatio(window.devicePixelRatio),i.setSize(r.width,r.height),i.setClearColor(0,0),e.appendChild(i.domElement);const o=new fO,a=r.width/r.height,l=new Fi(65,a,.01,100);l.position.set(0,0,0),o.add(new EO(16777215,1));const c=new xO(n);c.flipY=!1;const u=new df(1,1);u.scale(1,-1,1);const h=new nx({map:c,side:zo,depthTest:!1}),d=new hr(u,h),f=XC.degToRad(l.fov),p=Math.abs(2*Math.tan(f/2)*t),A=p*a;return d.scale.set(A,p,1),d.position.z=t,d.renderOrder=0,o.add(d),{renderer:i,scene:o,camera:l,videoPlane:d,containerEl:e}}function fV(n){n?.material?.map&&(n.material.map.needsUpdate=!0)}function pV(n,e){n&&(n.dispose(),n.domElement&&e?.contains(n.domElement)&&e.removeChild(n.domElement))}const Ni=new In;class mV extends sx{constructor(e){super(e),this.propertyNameMapping={},this.customPropertyMapping={}}load(e,t,s,r){const i=this,o=new kB(this.manager);o.setPath(this.path),o.setResponseType("arraybuffer"),o.setRequestHeader(this.requestHeader),o.setWithCredentials(this.withCredentials),o.load(e,function(a){try{t(i.parse(a))}catch(l){r?r(l):console.error(l),i.manager.itemError(e)}},s,r)}setPropertyNameMapping(e){this.propertyNameMapping=e}setCustomPropertyNameMapping(e){this.customPropertyMapping=e}parse(e){function t(m,g=0){const x=/^ply([\s\S]*)end_header(\r\n|\r|\n)/;let v="";const b=x.exec(m);b!==null&&(v=b[1]);const w={comments:[],elements:[],headerLength:g,objInfo:""},_=v.split(/\r\n|\r|\n/);let N;function M(T,k){const B={type:T[0]};return B.type==="list"?(B.name=T[3],B.countType=T[1],B.itemType=T[2]):B.name=T[1],B.name in k&&(B.name=k[B.name]),B}for(let T=0;T<_.length;T++){let k=_[T];if(k=k.trim(),k==="")continue;const B=k.split(/\s+/),L=B.shift();switch(k=B.join(" "),L){case"format":w.format=B[0],w.version=B[1];break;case"comment":w.comments.push(k);break;case"element":N!==void 0&&w.elements.push(N),N={},N.name=B[0],N.count=parseInt(B[1]),N.properties=[];break;case"property":N.properties.push(M(B,A.propertyNameMapping));break;case"obj_info":w.objInfo=k;break;default:console.log("unhandled",L,B)}}return N!==void 0&&w.elements.push(N),w}function s(m,g){switch(g){case"char":case"uchar":case"short":case"ushort":case"int":case"uint":case"int8":case"uint8":case"int16":case"uint16":case"int32":case"uint32":return parseInt(m);case"float":case"double":case"float32":case"float64":return parseFloat(m)}}function r(m,g){const x={};for(let v=0;v<m.length;v++){if(g.empty())return null;if(m[v].type==="list"){const b=[],w=s(g.next(),m[v].countType);for(let _=0;_<w;_++){if(g.empty())return null;b.push(s(g.next(),m[v].itemType))}x[m[v].name]=b}else x[m[v].name]=s(g.next(),m[v].type)}return x}function i(){const m={indices:[],vertices:[],normals:[],uvs:[],faceVertexUvs:[],colors:[],faceVertexColors:[]};for(const g of Object.keys(A.customPropertyMapping))m[g]=[];return m}function o(m){const g=m.map(v=>v.name);function x(v){for(let b=0,w=v.length;b<w;b++){const _=v[b];if(g.includes(_))return _}return null}return{attrX:x(["x","px","posx"])||"x",attrY:x(["y","py","posy"])||"y",attrZ:x(["z","pz","posz"])||"z",attrNX:x(["nx","normalx"]),attrNY:x(["ny","normaly"]),attrNZ:x(["nz","normalz"]),attrS:x(["s","u","texture_u","tx"]),attrT:x(["t","v","texture_v","ty"]),attrR:x(["red","diffuse_red","r","diffuse_r"]),attrG:x(["green","diffuse_green","g","diffuse_g"]),attrB:x(["blue","diffuse_blue","b","diffuse_b"])}}function a(m,g){const x=i(),v=/end_header\s+(\S[\s\S]*\S|\S)\s*$/;let b,w;(w=v.exec(m))!==null?b=w[1].split(/\s+/):b=[];const _=new gV(b);e:for(let N=0;N<g.elements.length;N++){const M=g.elements[N],T=o(M.properties);for(let k=0;k<M.count;k++){const B=r(M.properties,_);if(!B)break e;c(x,M.name,B,T)}}return l(x)}function l(m){let g=new sa;m.indices.length>0&&g.setIndex(m.indices),g.setAttribute("position",new Xr(m.vertices,3)),m.normals.length>0&&g.setAttribute("normal",new Xr(m.normals,3)),m.uvs.length>0&&g.setAttribute("uv",new Xr(m.uvs,2)),m.colors.length>0&&g.setAttribute("color",new Xr(m.colors,3)),(m.faceVertexUvs.length>0||m.faceVertexColors.length>0)&&(g=g.toNonIndexed(),m.faceVertexUvs.length>0&&g.setAttribute("uv",new Xr(m.faceVertexUvs,2)),m.faceVertexColors.length>0&&g.setAttribute("color",new Xr(m.faceVertexColors,3)));for(const x of Object.keys(A.customPropertyMapping))m[x].length>0&&g.setAttribute(x,new Xr(m[x],A.customPropertyMapping[x].length));return g.computeBoundingSphere(),g}function c(m,g,x,v){if(g==="vertex"){m.vertices.push(x[v.attrX],x[v.attrY],x[v.attrZ]),v.attrNX!==null&&v.attrNY!==null&&v.attrNZ!==null&&m.normals.push(x[v.attrNX],x[v.attrNY],x[v.attrNZ]),v.attrS!==null&&v.attrT!==null&&m.uvs.push(x[v.attrS],x[v.attrT]),v.attrR!==null&&v.attrG!==null&&v.attrB!==null&&(Ni.setRGB(x[v.attrR]/255,x[v.attrG]/255,x[v.attrB]/255,jr),m.colors.push(Ni.r,Ni.g,Ni.b));for(const b of Object.keys(A.customPropertyMapping))for(const w of A.customPropertyMapping[b])m[b].push(x[w])}else if(g==="face"){const b=x.vertex_indices||x.vertex_index,w=x.texcoord;b.length===3?(m.indices.push(b[0],b[1],b[2]),w&&w.length===6&&(m.faceVertexUvs.push(w[0],w[1]),m.faceVertexUvs.push(w[2],w[3]),m.faceVertexUvs.push(w[4],w[5]))):b.length===4&&(m.indices.push(b[0],b[1],b[3]),m.indices.push(b[1],b[2],b[3])),v.attrR!==null&&v.attrG!==null&&v.attrB!==null&&(Ni.setRGB(x[v.attrR]/255,x[v.attrG]/255,x[v.attrB]/255,jr),m.faceVertexColors.push(Ni.r,Ni.g,Ni.b),m.faceVertexColors.push(Ni.r,Ni.g,Ni.b),m.faceVertexColors.push(Ni.r,Ni.g,Ni.b))}}function u(m,g){const x={};let v=0;for(let b=0;b<g.length;b++){const w=g[b],_=w.valueReader;if(w.type==="list"){const N=[],M=w.countReader.read(m+v);v+=w.countReader.size;for(let T=0;T<M;T++)N.push(_.read(m+v)),v+=_.size;x[w.name]=N}else x[w.name]=_.read(m+v),v+=_.size}return[x,v]}function h(m,g,x){function v(b,w,_){switch(w){case"int8":case"char":return{read:N=>b.getInt8(N),size:1};case"uint8":case"uchar":return{read:N=>b.getUint8(N),size:1};case"int16":case"short":return{read:N=>b.getInt16(N,_),size:2};case"uint16":case"ushort":return{read:N=>b.getUint16(N,_),size:2};case"int32":case"int":return{read:N=>b.getInt32(N,_),size:4};case"uint32":case"uint":return{read:N=>b.getUint32(N,_),size:4};case"float32":case"float":return{read:N=>b.getFloat32(N,_),size:4};case"float64":case"double":return{read:N=>b.getFloat64(N,_),size:8}}}for(let b=0,w=m.length;b<w;b++){const _=m[b];_.type==="list"?(_.countReader=v(g,_.countType,x),_.valueReader=v(g,_.itemType,x)):_.valueReader=v(g,_.type,x)}}function d(m,g){const x=i(),v=g.format==="binary_little_endian",b=new DataView(m,g.headerLength);let w,_=0;for(let N=0;N<g.elements.length;N++){const M=g.elements[N],T=M.properties,k=o(T);h(T,b,v);for(let B=0;B<M.count;B++){w=u(_,T),_+=w[1];const L=w[0];c(x,M.name,L,k)}}return l(x)}function f(m){let g=0,x=!0,v="";const b=[],w=new TextDecoder().decode(m.subarray(0,5)),_=/^ply\r\n/.test(w);do{const N=String.fromCharCode(m[g++]);N!==`
`&&N!=="\r"?v+=N:(v==="end_header"&&(x=!1),v!==""&&(b.push(v),v=""))}while(x&&g<m.length);return _===!0&&g++,{headerText:b.join("\r")+"\r",headerLength:g}}let p;const A=this;if(e instanceof ArrayBuffer){const m=new Uint8Array(e),{headerText:g,headerLength:x}=f(m),v=t(g,x);if(v.format==="ascii"){const b=new TextDecoder().decode(m);p=a(b,v)}else p=d(e,v)}else p=a(e,t(e));return p}}class gV{constructor(e){this.arr=e,this.i=0}empty(){return this.i>=this.arr.length}next(){return this.arr[this.i++]}}const AV=new NB(-1,1,1,-1,0,1);class yV extends sa{constructor(){super(),this.setAttribute("position",new Xr([-1,3,0,-1,-1,0,3,-1,0],3)),this.setAttribute("uv",new Xr([0,2,0,0,2,0],2))}}const xV=new yV;class LB{constructor(e){this._mesh=new hr(xV,e)}dispose(){this._mesh.geometry.dispose()}render(e){e.render(this._mesh,AV)}get material(){return this._mesh.material}set material(e){this._mesh.material=e}}var Ir=Uint8Array,pm=Uint16Array,bV=Int32Array,OB=new Ir([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0]),QB=new Ir([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0]),vV=new Ir([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),UB=function(n,e){for(var t=new pm(31),s=0;s<31;++s)t[s]=e+=1<<n[s-1];for(var r=new bV(t[30]),s=1;s<30;++s)for(var i=t[s];i<t[s+1];++i)r[i]=i-t[s]<<5|s;return{b:t,r}},zB=UB(OB,2),GB=zB.b,CV=zB.r;GB[28]=258,CV[258]=28;var IV=UB(QB,0),wV=IV.b,VB=new pm(32768);for(var Cs=0;Cs<32768;++Cs){var Ql=(Cs&43690)>>1|(Cs&21845)<<1;Ql=(Ql&52428)>>2|(Ql&13107)<<2,Ql=(Ql&61680)>>4|(Ql&3855)<<4,VB[Cs]=((Ql&65280)>>8|(Ql&255)<<8)>>1}var mm=function(n,e,t){for(var s=n.length,r=0,i=new pm(e);r<s;++r)n[r]&&++i[n[r]-1];var o=new pm(e);for(r=1;r<e;++r)o[r]=o[r-1]+i[r-1]<<1;var a;{a=new pm(1<<e);var l=15-e;for(r=0;r<s;++r)if(n[r])for(var c=r<<4|n[r],u=e-n[r],h=o[n[r]-1]++<<u,d=h|(1<<u)-1;h<=d;++h)a[VB[h]>>l]=c}return a},rg=new Ir(288);for(var Cs=0;Cs<144;++Cs)rg[Cs]=8;for(var Cs=144;Cs<256;++Cs)rg[Cs]=9;for(var Cs=256;Cs<280;++Cs)rg[Cs]=7;for(var Cs=280;Cs<288;++Cs)rg[Cs]=8;var WB=new Ir(32);for(var Cs=0;Cs<32;++Cs)WB[Cs]=5;var SV=mm(rg,9),EV=mm(WB,5),M2=function(n){for(var e=n[0],t=1;t<n.length;++t)n[t]>e&&(e=n[t]);return e},Fo=function(n,e,t){var s=e/8|0;return(n[s]|n[s+1]<<8)>>(e&7)&t},D2=function(n,e){var t=e/8|0;return(n[t]|n[t+1]<<8|n[t+2]<<16)>>(e&7)},HB=function(n){return(n+7)/8|0},Md=function(n,e,t){return(e==null||e<0)&&(e=0),(t==null||t>n.length)&&(t=n.length),new Ir(n.subarray(e,t))},_V=["unexpected EOF","invalid block type","invalid length/literal","invalid distance","stream finished","no stream handler",,"no callback","invalid UTF-8 data","extra field too long","date not in range 1980-2099","filename too long","stream finishing","invalid zip data"],pi=function(n,e,t){var s=new Error(e||_V[n]);if(s.code=n,Error.captureStackTrace&&Error.captureStackTrace(s,pi),!t)throw s;return s},qB=function(n,e,t,s){var r=n.length,i=s?s.length:0;if(!r||e.f&&!e.l)return t||new Ir(0);var o=!t,a=o||e.i!=2,l=e.i;o&&(t=new Ir(r*3));var c=function(Ye){var _t=t.length;if(Ye>_t){var J=new Ir(Math.max(_t*2,Ye));J.set(t),t=J}},u=e.f||0,h=e.p||0,d=e.b||0,f=e.l,p=e.d,A=e.m,m=e.n,g=r*8;do{if(!f){u=Fo(n,h,1);var x=Fo(n,h+1,3);if(h+=3,x)if(x==1)f=SV,p=EV,A=9,m=5;else if(x==2){var _=Fo(n,h,31)+257,N=Fo(n,h+10,15)+4,M=_+Fo(n,h+5,31)+1;h+=14;for(var T=new Ir(M),k=new Ir(19),B=0;B<N;++B)k[vV[B]]=Fo(n,h+B*3,7);h+=N*3;for(var L=M2(k),U=(1<<L)-1,V=mm(k,L),B=0;B<M;){var W=V[Fo(n,h,U)];h+=W&15;var v=W>>4;if(v<16)T[B++]=v;else{var H=0,ee=0;for(v==16?(ee=3+Fo(n,h,3),h+=2,H=T[B-1]):v==17?(ee=3+Fo(n,h,7),h+=3):v==18&&(ee=11+Fo(n,h,127),h+=7);ee--;)T[B++]=H}}var K=T.subarray(0,_),te=T.subarray(_);A=M2(K),m=M2(te),f=mm(K,A),p=mm(te,m)}else pi(1);else{var v=HB(h)+4,b=n[v-4]|n[v-3]<<8,w=v+b;if(w>r){l&&pi(0);break}a&&c(d+b),t.set(n.subarray(v,w),d),e.b=d+=b,e.p=h=w*8,e.f=u;continue}if(h>g){l&&pi(0);break}}a&&c(d+131072);for(var le=(1<<A)-1,fe=(1<<m)-1,Ie=h;;Ie=h){var H=f[D2(n,h)&le],Se=H>>4;if(h+=H&15,h>g){l&&pi(0);break}if(H||pi(2),Se<256)t[d++]=Se;else if(Se==256){Ie=h,f=null;break}else{var De=Se-254;if(Se>264){var B=Se-257,Be=OB[B];De=Fo(n,h,(1<<Be)-1)+GB[B],h+=Be}var he=p[D2(n,h)&fe],ge=he>>4;he||pi(3),h+=he&15;var te=wV[ge];if(ge>3){var Be=QB[ge];te+=D2(n,h)&(1<<Be)-1,h+=Be}if(h>g){l&&pi(0);break}a&&c(d+131072);var Ne=d+De;if(d<te){var Oe=i-te,Qe=Math.min(te,Ne);for(Oe+d<0&&pi(3);d<Qe;++d)t[d]=s[Oe+d]}for(;d<Ne;++d)t[d]=t[d-te]}}e.l=f,e.p=Ie,e.b=d,e.f=u,f&&(u=1,e.m=A,e.d=p,e.n=m)}while(!u);return d!=t.length&&o?Md(t,0,d):t.subarray(0,d)},TV=new Ir(0),xa=function(n,e){return n[e]|n[e+1]<<8},Lo=function(n,e){return(n[e]|n[e+1]<<8|n[e+2]<<16|n[e+3]<<24)>>>0},F2=function(n,e){return Lo(n,e)+Lo(n,e+4)*4294967296},BV=function(n){(n[0]!=31||n[1]!=139||n[2]!=8)&&pi(6,"invalid gzip data");var e=n[3],t=10;e&4&&(t+=(n[10]|n[11]<<8)+2);for(var s=(e>>3&1)+(e>>4&1);s>0;s-=!n[t++]);return t+(e&2)},$2=(function(){function n(e,t){typeof e=="function"&&(t=e,e={}),this.ondata=t;var s=e&&e.dictionary&&e.dictionary.subarray(-32768);this.s={i:0,b:s?s.length:0},this.o=new Ir(32768),this.p=new Ir(0),s&&this.o.set(s)}return n.prototype.e=function(e){if(this.ondata||pi(5),this.d&&pi(4),!this.p.length)this.p=e;else if(e.length){var t=new Ir(this.p.length+e.length);t.set(this.p),t.set(e,this.p.length),this.p=t}},n.prototype.c=function(e){this.s.i=+(this.d=e||!1);var t=this.s.b,s=qB(this.p,this.s,this.o);this.ondata(Md(s,t,this.s.b),this.d),this.o=Md(s,this.s.b-32768),this.s.b=this.o.length,this.p=Md(this.p,this.s.p/8|0),this.s.p&=7},n.prototype.push=function(e,t){this.e(e),this.c(t)},n})();function kV(n,e){return qB(n,{i:2},e&&e.out,e&&e.dictionary)}var NV=(function(){function n(e,t){this.v=1,this.r=0,$2.call(this,e,t)}return n.prototype.push=function(e,t){if($2.prototype.e.call(this,e),this.r+=e.length,this.v){var s=this.p.subarray(this.v-1),r=s.length>3?BV(s):4;if(r>s.length){if(!t)return}else this.v>1&&this.onmember&&this.onmember(this.r-s.length);this.p=s.subarray(r),this.v=0}$2.prototype.c.call(this,t),this.s.f&&!this.s.l&&!t&&(this.v=HB(this.s.p)+9,this.s={i:0},this.o=new Ir(0),this.push(new Ir(0),t))},n})(),Ev=typeof TextDecoder<"u"&&new TextDecoder,RV=0;try{Ev.decode(TV,{stream:!0}),RV=1}catch{}var MV=function(n){for(var e="",t=0;;){var s=n[t++],r=(s>127)+(s>223)+(s>239);if(t+r>n.length)return{s:e,r:Md(n,t-1)};r?r==3?(s=((s&15)<<18|(n[t++]&63)<<12|(n[t++]&63)<<6|n[t++]&63)-65536,e+=String.fromCharCode(55296|s>>10,56320|s&1023)):r&1?e+=String.fromCharCode((s&31)<<6|n[t++]&63):e+=String.fromCharCode((s&15)<<12|(n[t++]&63)<<6|n[t++]&63):e+=String.fromCharCode(s)}};function DV(n,e){if(e){for(var t="",s=0;s<n.length;s+=16384)t+=String.fromCharCode.apply(null,n.subarray(s,s+16384));return t}else{if(Ev)return Ev.decode(n);var r=MV(n),i=r.s,t=r.r;return t.length&&pi(8),i}}var FV=function(n,e){return e+30+xa(n,e+26)+xa(n,e+28)},$V=function(n,e,t){var s=xa(n,e+28),r=DV(n.subarray(e+46,e+46+s),!(xa(n,e+8)&2048)),i=e+46+s,o=Lo(n,e+20),a=t&&o==4294967295?PV(n,i):[o,Lo(n,e+24),Lo(n,e+42)],l=a[0],c=a[1],u=a[2];return[xa(n,e+10),l,c,r,i+xa(n,e+30)+xa(n,e+32),u]},PV=function(n,e){for(;xa(n,e)!=1;e+=4+xa(n,e+2));return[F2(n,e+12),F2(n,e+4),F2(n,e+20)]};function LV(n,e){for(var t={},s=n.length-22;Lo(n,s)!=101010256;--s)(!s||n.length-s>65558)&&pi(13);var r=xa(n,s+8);if(!r)return{};var i=Lo(n,s+16),o=i==4294967295||r==65535;if(o){var a=Lo(n,s-12);o=Lo(n,a)==101075792,o&&(r=Lo(n,a+32),i=Lo(n,a+48))}for(var l=e&&e.filter,c=0;c<r;++c){var u=$V(n,i,o),h=u[0],d=u[1],f=u[2],p=u[3],A=u[4],m=u[5],g=FV(n,m);i=A,(!l||l({name:p,size:d,originalSize:f,compression:h}))&&(h?h==8?t[p]=kV(n.subarray(g,g+d),{out:new Ir(f)}):pi(14,"unknown compression type "+h):t[p]=Md(n,g,g+d))}return t}let ul;const YB=typeof TextDecoder<"u"?new TextDecoder("utf-8",{ignoreBOM:!0,fatal:!0}):{decode:()=>{throw Error("TextDecoder not available")}};typeof TextDecoder<"u"&&YB.decode();let em=null;function OV(){return(em===null||em.byteLength===0)&&(em=new Uint8Array(ul.memory.buffer)),em}function QV(n,e){return n=n>>>0,YB.decode(OV().subarray(n,n+e))}function UV(n,e,t,s,r,i,o,a,l,c,u,h,d){return ul.raycast_splats(n,e,t,s,r,i,o,a,l,c,u,h,d)}async function zV(n,e){if(typeof Response=="function"&&n instanceof Response){if(typeof WebAssembly.instantiateStreaming=="function")try{return await WebAssembly.instantiateStreaming(n,e)}catch(s){if(n.headers.get("Content-Type")!="application/wasm")console.warn("`WebAssembly.instantiateStreaming` failed because your server does not serve Wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\n",s);else throw s}const t=await n.arrayBuffer();return await WebAssembly.instantiate(t,e)}else{const t=await WebAssembly.instantiate(n,e);return t instanceof WebAssembly.Instance?{instance:t,module:n}:t}}function GV(){const n={};return n.wbg={},n.wbg.__wbg_buffer_609cc3eee51ed158=function(e){return e.buffer},n.wbg.__wbg_length_3b4f022188ae8db6=function(e){return e.length},n.wbg.__wbg_length_6ca527665d89694d=function(e){return e.length},n.wbg.__wbg_length_8cfd2c6409af88ad=function(e){return e.length},n.wbg.__wbg_new_9fee97a409b32b68=function(e){return new Uint16Array(e)},n.wbg.__wbg_new_e3b321dcfef89fc7=function(e){return new Uint32Array(e)},n.wbg.__wbg_newwithbyteoffsetandlength_e6b7e69acd4c7354=function(e,t,s){return new Float32Array(e,t>>>0,s>>>0)},n.wbg.__wbg_newwithbyteoffsetandlength_f1dead44d1fc7212=function(e,t,s){return new Uint32Array(e,t>>>0,s>>>0)},n.wbg.__wbg_newwithlength_5a5efe313cfd59f1=function(e){return new Float32Array(e>>>0)},n.wbg.__wbg_set_10bad9bee0e9c58b=function(e,t,s){e.set(t,s>>>0)},n.wbg.__wbg_set_d23661d19148b229=function(e,t,s){e.set(t,s>>>0)},n.wbg.__wbg_set_f4f1f0daa30696fc=function(e,t,s){e.set(t,s>>>0)},n.wbg.__wbg_subarray_3aaeec89bb2544f0=function(e,t,s){return e.subarray(t>>>0,s>>>0)},n.wbg.__wbg_subarray_769e1e0f81bb259b=function(e,t,s){return e.subarray(t>>>0,s>>>0)},n.wbg.__wbindgen_init_externref_table=function(){const e=ul.__wbindgen_export_0,t=e.grow(4);e.set(0,void 0),e.set(t+0,void 0),e.set(t+1,null),e.set(t+2,!0),e.set(t+3,!1)},n.wbg.__wbindgen_memory=function(){return ul.memory},n.wbg.__wbindgen_throw=function(e,t){throw new Error(QV(e,t))},n}function VV(n,e){return ul=n.exports,jB.__wbindgen_wasm_module=e,em=null,ul.__wbindgen_start(),ul}async function jB(n){if(ul!==void 0)return ul;typeof n<"u"&&(Object.getPrototypeOf(n)===Object.prototype?{module_or_path:n}=n:console.warn("using deprecated parameters for the initialization function; pass a single object instead")),typeof n>"u"&&(n=new URL("data:application/wasm;base64,",import.meta.url));const e=GV();(typeof n=="string"||typeof Request=="function"&&n instanceof Request||typeof URL=="function"&&n instanceof URL)&&(n=fetch(n));const{instance:t,module:s}=await zV(await n,e);return VV(t,s)}const fl=-12,pl=9,WV=-30,P2=Math.exp(WV),HV=11,qV=11,hs=1<<HV,ou=1<<qV,YV=1;function jV(n){return n==="bool"||n==="bvec2"||n==="bvec3"||n==="bvec4"}function au(n){return n==="int"||n==="ivec2"||n==="ivec3"||n==="ivec4"}function lu(n){return n==="uint"||n==="uvec2"||n==="uvec3"||n==="uvec4"}function XV(n){return n==="float"||n==="vec2"||n==="vec3"||n==="vec4"}function KV(n){return n==="mat2"||n==="mat2x2"||n==="mat2x3"||n==="mat2x4"||n==="mat3"||n==="mat3x2"||n==="mat3x3"||n==="mat3x4"||n==="mat4"||n==="mat4x2"||n==="mat4x3"||n==="mat4x4"}function Tm(n){return XV(n)||KV(n)}function md(n){return n==="mat2"||n==="mat2x2"}function gd(n){return n==="mat3"||n==="mat3x3"}function Ad(n){return n==="mat4"||n==="mat4x4"}function JV(n){switch(n){case"vec2":return"float";case"vec3":return"float";case"vec4":return"float";case"ivec2":return"int";case"ivec3":return"int";case"ivec4":return"int";case"uvec2":return"uint";case"uvec3":return"uint";case"uvec4":return"uint";default:throw new Error(`Invalid vector type: ${n}`)}}function ZV(n){switch(n){case"vec2":case"ivec2":case"uvec2":return 2;case"vec3":case"ivec3":case"uvec3":return 3;case"vec4":case"ivec4":case"uvec4":return 4;default:throw new Error(`Invalid vector type: ${n}`)}}function or(n){return Math.trunc(n).toString()}function ar(n){return`${Math.max(0,Math.trunc(n)).toString()}u`}function zn(n){return n===Number.POSITIVE_INFINITY?"INFINITY":n===Number.NEGATIVE_INFINITY?"-INFINITY":Number.isInteger(n)?n.toFixed(1):n.toString()}function al(n){return n instanceof cu?n.type:n.dynoOut().type}class cu{constructor(e){this.__isDynoValue=!0,this.type=e}}class Qi extends cu{constructor(e,t){super(e.outTypes[t]),this.dyno=e,this.key=t}}class jy extends cu{constructor(e,t){super(e),this.literal=t}getLiteral(){return this.literal}}class e5 extends jy{constructor(e,t){super(e,""),this.value=t}getLiteral(){const{type:e,value:t}=this;switch(e){case"bool":return t?"true":"false";case"uint":return ar(t);case"int":return or(t);case"float":return zn(t);case"bvec2":{const s=t;return`bvec2(${s[0]}, ${s[1]})`}case"uvec2":{if(t instanceof En)return`uvec2(${ar(t.x)}, ${ar(t.y)})`;const s=t;return`uvec2(${ar(s[0])}, ${ar(s[1])})`}case"ivec2":{if(t instanceof En)return`ivec2(${or(t.x)}, ${or(t.y)})`;const s=t;return`ivec2(${or(s[0])}, ${or(s[1])})`}case"vec2":{if(t instanceof En)return`vec2(${zn(t.x)}, ${zn(t.y)})`;const s=t;return`vec2(${zn(s[0])}, ${zn(s[1])})`}case"bvec3":{const s=t;return`bvec3(${s[0]}, ${s[1]}, ${s[2]})`}case"uvec3":{if(t instanceof Ae)return`uvec3(${ar(t.x)}, ${ar(t.y)}, ${ar(t.z)})`;const s=t;return`uvec3(${ar(s[0])}, ${ar(s[1])}, ${ar(s[2])})`}case"ivec3":{if(t instanceof Ae)return`ivec3(${or(t.x)}, ${or(t.y)}, ${or(t.z)})`;const s=t;return`ivec3(${or(s[0])}, ${or(s[1])}, ${or(s[2])})`}case"vec3":{if(t instanceof Ae)return`vec3(${zn(t.x)}, ${zn(t.y)}, ${zn(t.z)})`;const s=t;return`vec3(${zn(s[0])}, ${zn(s[1])}, ${zn(s[2])})`}case"bvec4":{const s=t;return`bvec4(${s[0]}, ${s[1]}, ${s[2]}, ${s[3]})`}case"uvec4":{if(t instanceof Vn)return`uvec4(${ar(t.x)}, ${ar(t.y)}, ${ar(t.z)}, ${ar(t.w)})`;const s=t;return`uvec4(${ar(s[0])}, ${ar(s[1])}, ${ar(s[2])}, ${ar(s[3])})`}case"ivec4":{if(t instanceof Vn)return`ivec4(${or(t.x)}, ${or(t.y)}, ${or(t.z)}, ${or(t.w)})`;const s=t;return`ivec4(${or(s[0])}, ${or(s[1])}, ${or(s[2])}, ${or(s[3])})`}case"vec4":{if(t instanceof Vn)return`vec4(${zn(t.x)}, ${zn(t.y)}, ${zn(t.z)}, ${zn(t.w)})`;if(t instanceof fr)return`vec4(${zn(t.x)}, ${zn(t.y)}, ${zn(t.z)}, ${zn(t.w)})`;const s=t;return`vec4(${zn(s[0])}, ${zn(s[1])}, ${zn(s[2])}, ${zn(s[3])})`}case"mat2":case"mat2x2":{const s=t,r=s instanceof rx?s.elements:t,i=new Array(4).fill(0).map((o,a)=>zn(r[a]));return`${e}(${i.join(", ")})`}case"mat2x3":{const s=t,r=new Array(6).fill(0).map((i,o)=>zn(s[o]));return`${e}(${r.join(", ")})`}case"mat2x4":{const s=t,r=new Array(8).fill(0).map((i,o)=>zn(s[o]));return`${e}(${r.join(", ")})`}case"mat3":case"mat3x3":{const s=t,r=s instanceof gn?s.elements:t,i=new Array(9).fill(0).map((o,a)=>zn(r[a]));return`${e}(${i.join(", ")})`}case"mat3x2":{const s=t,r=new Array(6).fill(0).map((i,o)=>zn(s[o]));return`${e}(${r.join(", ")})`}case"mat3x4":{const s=t,r=new Array(12).fill(0).map((i,o)=>zn(s[o]));return`${e}(${r.join(", ")})`}case"mat4":case"mat4x4":{const s=t,r=s instanceof is?s.elements:t,i=new Array(16).fill(0).map((o,a)=>zn(r[a]));return`${e}(${i.join(", ")})`}case"mat4x2":{const s=t,r=new Array(8).fill(0).map((i,o)=>zn(s[o]));return`${e}(${r.join(", ")})`}case"mat4x3":{const s=t,r=new Array(12).fill(0).map((i,o)=>zn(s[o]));return`${e}(${r.join(", ")})`}default:throw new Error(`Type not implemented: ${String(e)}`)}}}function gm(n,e){return new e5(n,e)}function gy(n){const e=String(n);if(jV(n))return`${e}(false)`;if(Tm(n))return`${e}(0.0)`;if(au(n))return`${e}(0)`;if(lu(n))return`${e}(0u)`;throw new Error(`Type not implemented: ${e}`)}const ME="    ";class t5{constructor({indent:e}={}){this.globals=new Set,this.statements=[],this.uniforms={},this.declares=new Set,this.updaters=[],this.sequence=0,this.indent=ME,this.indent=e??ME}nextSequence(){return this.sequence++}}class kr{constructor({inTypes:e,outTypes:t,inputs:s,update:r,globals:i,statements:o,generate:a}){this.inTypes=e??{},this.outTypes=t??{},this.inputs=s??{},this.update=r,this.globals=i,this.statements=o,this.generate=a??(({inputs:l,outputs:c,compile:u})=>{var h,d;return{globals:(h=this.globals)==null?void 0:h.call(this,{inputs:l,outputs:c,compile:u}),statements:(d=this.statements)==null?void 0:d.call(this,{inputs:l,outputs:c,compile:u})}})}get outputs(){const e={};for(const t in this.outTypes)e[t]=new Qi(this,t);return e}apply(e){return Object.assign(this.inputs,e),this.outputs}compile({inputs:e,outputs:t,compile:s}){const r=[`// ${this.constructor.name}(${Object.values(e).join(", ")}) => (${Object.values(t).join(", ")})`],i=[];for(const c in t){const u=t[c];u&&!s.declares.has(u)&&(s.declares.add(u),i.push(c))}const{globals:o,statements:a,uniforms:l}=this.generate({inputs:e,outputs:t,compile:s});for(const c of o??[])s.globals.add(c);for(const c in l)s.uniforms[c]=l[c];this.update&&s.updaters.push(this.update);for(const c of i){const u=t[c];u&&(s.uniforms[u]||r.push(`${XB(u,this.outTypes[c])};`))}return a?.length&&(r.push("{"),r.push(...a.map(c=>s.indent+c)),r.push("}")),r}}class n5 extends kr{constructor({inTypes:e,outTypes:t,inputs:s,update:r,globals:i,construct:o}){super({inTypes:e,outTypes:t,inputs:s,update:r,globals:i,generate:a=>this.generateBlock(a)}),this.construct=o}generateBlock({inputs:e,outputs:t,compile:s}){var r,i;const o={},a={};for(const m in e)e[m]!=null&&(o[m]=new jy(this.inTypes[m],e[m]));for(const m in t)t[m]!=null&&(a[m]=new cu(this.outTypes[m]));const l={roots:[]},c=this.construct(o,a,l);for(const m of((r=this.globals)==null?void 0:r.call(this,{inputs:e,outputs:t,compile:s}))??[])s.globals.add(m);const u=[],h=new Map;function d(m,g,x){let v=h.get(m);if(!v){v={sequence:s.nextSequence(),outNames:new Map,newOuts:new Set},h.set(m,v);for(const b in m.inputs){let w=m.inputs[b];for(;w;){if(w instanceof cu){w instanceof Qi&&d(w.dyno,w.key);break}w=w.dynoOut()}}u.push(m)}g&&(x||v.newOuts.add(g),v.outNames.set(g,x??`${g}_${v.sequence}`))}for(const m of l.roots)d(m);for(const m in a){let g=c?.[m]??a[m];for(;g;){if(g instanceof cu){g instanceof Qi&&d(g.dyno,g.key,t[m]);break}g=g.dynoOut()}a[m]=g}const f=[];for(const m of u){const g={},x={};for(const w in m.inputs){let _=m.inputs[w];for(;_;){if(_ instanceof cu){if(_ instanceof jy)g[w]=_.getLiteral();else if(_ instanceof Qi){const N=(i=h.get(_.dyno))==null?void 0:i.outNames.get(_.key);if(!N)throw new Error(`Source not found for ${_.dyno.constructor.name}.${_.key}`);g[w]=N}break}_=_.dynoOut()}}const v=h.get(m)??{outNames:new Map};for(const[w,_]of v.outNames.entries())x[w]=_;const b=m.compile({inputs:g,outputs:x,compile:s});f.push(b)}const p=[];for(const m in t)a[m]instanceof jy&&p.push(`${t[m]} = ${a[m].getLiteral()};`);return p.length>0&&f.push(p),{statements:f.flatMap((m,g)=>g===0?m:["",...m])}}}function ml(n,e,t,{update:s,globals:r}={}){return new n5({inTypes:n,outTypes:e,construct:t,update:s,globals:r})}function ox({inTypes:n,outTypes:e,inputs:t,update:s,globals:r,statements:i,generate:o}){return new kr({inTypes:n,outTypes:e,inputs:t,update:s,globals:r,statements:i,generate:o})}function XB(n,e,t){const s=typeof e=="string"?e:e.type;if(!s)throw new Error(`Invalid DynoType: ${String(e)}`);return`${s} ${n}${t!=null?`[${t}]`:""}`}function Pa(n){var e;let t=!1;const s=n.split(`
`).map(o=>{const a=o.trimEnd();return t?a:a.length>0?(t=!0,a):null}).filter(o=>o!=null);for(;s.length>0&&s[s.length-1].length===0;)s.pop();if(s.length===0)return[];const r=(e=s[0].match(/^\s*/))==null?void 0:e[0];if(!r)return s;const i=new RegExp(`^${r}`);return s.map(o=>o.replace(i,""))}function Yi(n){return Pa(n).join(`
`)}class ax extends kr{constructor({a:e,outKey:t,outTypeFunc:s}){const r={a:al(e)},i=s(al(e)),o={[t]:i};super({inTypes:r,outTypes:o,inputs:{a:e}}),this.outKey=t}dynoOut(){return new Qi(this,this.outKey)}}class lx extends kr{constructor({a:e,b:t,outKey:s,outTypeFunc:r}){const i={a:al(e),b:al(t)},o=r(al(e),al(t)),a={[s]:o};super({inTypes:i,outTypes:a,inputs:{a:e,b:t}}),this.outKey=s}dynoOut(){return new Qi(this,this.outKey)}}const gr={type:"Gsplat"},cx={type:"PackedSplats"},Am=(n,e)=>new r5({packedSplats:n,index:e}),s5=(n,e,t,s)=>new i5({packedSplats:n,index:e,base:t,count:s}),Xy=n=>new o5({gsplat:n}),L2=({gsplat:n,flags:e,index:t,center:s,scales:r,quaternion:i,rgba:o,rgb:a,opacity:l,x:c,y:u,z:h,r:d,g:f,b:p})=>new a5({gsplat:n,flags:e,index:t,center:s,scales:r,quaternion:i,rgba:o,rgb:a,opacity:l,x:c,y:u,z:h,r:d,g:f,b:p}),KB=(n,{scale:e,rotate:t,translate:s,recolor:r})=>new l5({gsplat:n,scale:e,rotate:t,translate:s,recolor:r}),La=Yi(`
  struct Gsplat {
    vec3 center;
    uint flags;
    vec3 scales;
    int index;
    vec4 quaternion;
    vec4 rgba;
  };
  const uint GSPLAT_FLAG_ACTIVE = 1u << 0u;

  bool isGsplatActive(uint flags) {
    return (flags & GSPLAT_FLAG_ACTIVE) != 0u;
  }
`),tI=Yi(`
  struct PackedSplats {
    usampler2DArray texture;
    int numSplats;
    vec4 rgbMinMaxLnScaleMinMax;
  };
`),JB=Yi(`
  bool readPackedSplat(usampler2DArray texture, int numSplats, vec4 rgbMinMaxLnScaleMinMax, int index, out Gsplat gsplat) {
    if ((index >= 0) && (index < numSplats)) {
      uvec4 packed = texelFetch(texture, splatTexCoord(index), 0);
      unpackSplatEncoding(packed, gsplat.center, gsplat.scales, gsplat.quaternion, gsplat.rgba, rgbMinMaxLnScaleMinMax);
      return true;
    } else {
      return false;
    }
  }
`);class r5 extends kr{constructor({packedSplats:e,index:t}){super({inTypes:{packedSplats:cx,index:"int"},outTypes:{gsplat:gr},inputs:{packedSplats:e,index:t},globals:()=>[La,tI,JB],statements:({inputs:s,outputs:r})=>{const{gsplat:i}=r;if(!i)return[];const{packedSplats:o,index:a}=s;let l;return o&&a?l=Pa(`
            if (readPackedSplat(${o}.texture, ${o}.numSplats, ${o}.rgbMinMaxLnScaleMinMax, ${a}, ${i})) {
              bool zeroSize = all(equal(${i}.scales, vec3(0.0, 0.0, 0.0)));
              ${i}.flags = zeroSize ? 0u : GSPLAT_FLAG_ACTIVE;
            } else {
              ${i}.flags = 0u;
            }
          `):l=[`${i}.flags = 0u;`],l.push(`${i}.index = ${a??"0"};`),l}})}dynoOut(){return new Qi(this,"gsplat")}}class i5 extends kr{constructor({packedSplats:e,index:t,base:s,count:r}){super({inTypes:{packedSplats:cx,index:"int",base:"int",count:"int"},outTypes:{gsplat:gr},inputs:{packedSplats:e,index:t,base:s,count:r},globals:()=>[La,tI,JB],statements:({inputs:i,outputs:o})=>{const{gsplat:a}=o;if(!a)return[];const{packedSplats:l,index:c,base:u,count:h}=i;let d;return l&&c&&u&&h?d=Pa(`
            ${a}.flags = 0u;
            if ((${c} >= ${u}) && (${c} < (${u} + ${h}))) {
              if (readPackedSplat(${l}.texture, ${l}.numSplats, ${l}.rgbMinMaxLnScaleMinMax, ${c}, ${a})) {
                bool zeroSize = all(equal(${a}.scales, vec3(0.0, 0.0, 0.0)));
                ${a}.flags = zeroSize ? 0u : GSPLAT_FLAG_ACTIVE;
              }
            }
          `):d=[`${a}.flags = 0u;`],d.push(`${a}.index = ${c??"0"};`),d}})}dynoOut(){return new Qi(this,"gsplat")}}class o5 extends kr{constructor({gsplat:e}){super({inTypes:{gsplat:gr},outTypes:{flags:"uint",active:"bool",index:"int",center:"vec3",scales:"vec3",quaternion:"vec4",rgba:"vec4",rgb:"vec3",opacity:"float",x:"float",y:"float",z:"float",r:"float",g:"float",b:"float"},inputs:{gsplat:e},globals:()=>[La],statements:({inputs:t,outputs:s})=>{const{gsplat:r}=t,{flags:i,active:o,index:a,center:l,scales:c,quaternion:u,rgba:h,rgb:d,opacity:f,x:p,y:A,z:m,r:g,g:x,b:v}=s;return[i?`${i} = ${r?`${r}.flags`:"0u"};`:null,o?`${o} = isGsplatActive(${r?`${r}.flags`:"0u"});`:null,a?`${a} = ${r?`${r}.index`:"0"};`:null,l?`${l} = ${r?`${r}.center`:"vec3(0.0, 0.0, 0.0)"};`:null,c?`${c} = ${r?`${r}.scales`:"vec3(0.0, 0.0, 0.0)"};`:null,u?`${u} = ${r?`${r}.quaternion`:"vec4(0.0, 0.0, 0.0, 1.0)"};`:null,h?`${h} = ${r?`${r}.rgba`:"vec4(0.0, 0.0, 0.0, 0.0)"};`:null,d?`${d} = ${r?`${r}.rgba.rgb`:"vec3(0.0, 0.0, 0.0)"};`:null,f?`${f} = ${r?`${r}.rgba.a`:"0.0"};`:null,p?`${p} = ${r?`${r}.center.x`:"0.0"};`:null,A?`${A} = ${r?`${r}.center.y`:"0.0"};`:null,m?`${m} = ${r?`${r}.center.z`:"0.0"};`:null,g?`${g} = ${r?`${r}.rgba.r`:"0.0"};`:null,x?`${x} = ${r?`${r}.rgba.g`:"0.0"};`:null,v?`${v} = ${r?`${r}.rgba.b`:"0.0"};`:null].filter(Boolean)}})}}class a5 extends kr{constructor({gsplat:e,flags:t,index:s,center:r,scales:i,quaternion:o,rgba:a,rgb:l,opacity:c,x:u,y:h,z:d,r:f,g:p,b:A}){super({inTypes:{gsplat:gr,flags:"uint",index:"int",center:"vec3",scales:"vec3",quaternion:"vec4",rgba:"vec4",rgb:"vec3",opacity:"float",x:"float",y:"float",z:"float",r:"float",g:"float",b:"float"},outTypes:{gsplat:gr},inputs:{gsplat:e,flags:t,index:s,center:r,scales:i,quaternion:o,rgba:a,rgb:l,opacity:c,x:u,y:h,z:d,r:f,g:p,b:A},globals:()=>[La],statements:({inputs:m,outputs:g})=>{const{gsplat:x}=g;if(!x)return[];const{gsplat:v,flags:b,index:w,center:_,scales:N,quaternion:M,rgba:T,rgb:k,opacity:B,x:L,y:U,z:V,r:W,g:H,b:ee}=m;return[`${x}.flags = ${b??(v?`${v}.flags`:"0u")};`,`${x}.index = ${w??(v?`${v}.index`:"0")};`,`${x}.center = ${_??(v?`${v}.center`:"vec3(0.0, 0.0, 0.0)")};`,`${x}.scales = ${N??(v?`${v}.scales`:"vec3(0.0, 0.0, 0.0)")};`,`${x}.quaternion = ${M??(v?`${v}.quaternion`:"vec4(0.0, 0.0, 0.0, 1.0)")};`,`${x}.rgba = ${T??(v?`${v}.rgba`:"vec4(0.0, 0.0, 0.0, 0.0)")};`,k?`${x}.rgba.rgb = ${k};`:null,B?`${x}.rgba.a = ${B};`:null,L?`${x}.center.x = ${L};`:null,U?`${x}.center.y = ${U};`:null,V?`${x}.center.z = ${V};`:null,W?`${x}.rgba.r = ${W};`:null,H?`${x}.rgba.g = ${H};`:null,ee?`${x}.rgba.b = ${ee};`:null].filter(Boolean)}})}dynoOut(){return new Qi(this,"gsplat")}}Yi(`
  vec3 gsplatNormal(vec3 scales, vec4 quaternion) {
    float minScale = min(scales.x, min(scales.y, scales.z));
    vec3 normal;
    if (scales.z == minScale) {
      normal = vec3(0.0, 0.0, 1.0);
    } else if (scales.y == minScale) {
      normal = vec3(0.0, 1.0, 0.0);
    } else {
      normal = vec3(1.0, 0.0, 0.0);
    }
    return quatVec(quaternion, normal);
  }
`);class l5 extends kr{constructor({gsplat:e,scale:t,rotate:s,translate:r,recolor:i}){super({inTypes:{gsplat:gr,scale:"float",rotate:"vec4",translate:"vec3",recolor:"vec4"},outTypes:{gsplat:gr},inputs:{gsplat:e,scale:t,rotate:s,translate:r,recolor:i},globals:()=>[La],statements:({inputs:o,outputs:a,compile:l})=>{const{gsplat:c}=a;if(!c||!o.gsplat)return[];const{scale:u,rotate:h,translate:d,recolor:f}=o,p=l.indent;return[`${c} = ${o.gsplat};`,`if (isGsplatActive(${c}.flags)) {`,u?`${p}${c}.center *= ${u};`:null,h?`${p}${c}.center = quatVec(${h}, ${c}.center);`:null,d?`${p}${c}.center += ${d};`:null,u?`${p}${c}.scales *= ${u};`:null,h?`${p}${c}.quaternion = quatQuat(${h}, ${c}.quaternion);`:null,f?`${p}${c}.rgba *= ${f};`:null,"}"].filter(Boolean)}})}dynoOut(){return new Qi(this,"gsplat")}}const c5=(n,e)=>new u5({gsplat:n,rgbMinMaxLnScaleMinMax:e});class u5 extends kr{constructor({gsplat:e,rgbMinMaxLnScaleMinMax:t}){super({inTypes:{gsplat:gr,rgbMinMaxLnScaleMinMax:"vec4"},inputs:{gsplat:e,rgbMinMaxLnScaleMinMax:t},globals:()=>[La],statements:({inputs:s,outputs:r})=>{const{output:i}=r;if(!i)return[];const{gsplat:o,rgbMinMaxLnScaleMinMax:a}=s;return o?Pa(`
            if (isGsplatActive(${o}.flags)) {
              ${i} = packSplatEncoding(${o}.center, ${o}.scales, ${o}.quaternion, ${o}.rgba, ${a});
            } else {
              ${i} = uvec4(0u, 0u, 0u, 0u);
            }
          `):[`${i} = uvec4(0u, 0u, 0u, 0u);`]}})}dynoOut(){return new Qi(this,"output")}}class h5 extends kr{constructor({rgba8:e}){super({inTypes:{rgba8:"vec4"},inputs:{rgba8:e},statements:({inputs:t,outputs:s})=>[`target = ${t.rgba8??"vec4(0.0, 0.0, 0.0, 0.0)"};`]})}dynoOut(){return new Qi(this,"rgba8")}}class Xo extends kr{constructor({key:e,type:t,count:s,value:r,update:i,globals:o}){e=e??"value",super({outTypes:{[e]:t},update:()=>{if(i){const a=i(this.value);a!==void 0&&(this.value=a)}this.uniform.value=this.value},generate:({inputs:a,outputs:l})=>{const c=o?.({inputs:a,outputs:l})??[],u={},h=l[e];return h&&(c.push(`uniform ${XB(h,t,s)};`),u[h]=this.uniform),{globals:c,uniforms:u}}}),this.type=t,this.count=s,this.value=r,this.uniform={value:r},this.outKey=e}dynoOut(){return new Qi(this,this.outKey)}}class DE extends Xo{constructor({key:e,value:t,update:s}){super({key:e,type:"bool",value:t,update:s})}}class _v extends Xo{constructor({key:e,value:t,update:s}){super({key:e,type:"int",value:t,update:s})}}class Bm extends Xo{constructor({key:e,value:t,update:s}){super({key:e,type:"float",value:t,update:s})}}class O2 extends Xo{constructor({key:e,value:t,update:s}){super({key:e,type:"vec2",value:t,update:s})}}class y0 extends Xo{constructor({key:e,value:t,update:s}){super({key:e,type:"vec3",value:t,update:s})}}class ux extends Xo{constructor({key:e,value:t,update:s}){super({key:e,type:"vec4",value:t,update:s})}}class Q2 extends Xo{constructor({key:e,value:t,update:s}){super({key:e,type:"usampler2DArray",value:t,update:s})}}const nI=new Float32Array(1),ZB=new Uint32Array(nI.buffer),sI="Float16Array"in globalThis,x0=sI?new globalThis.Float16Array(1):null,ek=new Uint16Array(x0?.buffer),U2=sI?d5:f5,z2=sI?p5:m5;function d5(n){return x0[0]=n,ek[0]}function f5(n){nI[0]=n;const e=ZB[0],t=e>>31&1,s=e>>23&255,r=e&8388607,i=t<<15;if(s===255)return r!==0?i|32767:i|31744;const o=s-127+15;if(o>=31)return i|31744;if(o<=0){if(o<-10)return i;const l=(r|8388608)>>1-o+13;return i|l}const a=r>>13;return i|o<<10|a}function p5(n){return ek[0]=n,x0[0]}function m5(n){const e=n>>15&1,t=n>>10&31,s=n&1023;let r;if(t===0)if(s===0)r=e<<31;else{let i=s,o=-14;for(;(i&1024)===0;)i<<=1,o--;i&=1023;const a=o+127,l=i<<13;r=e<<31|a<<23|l}else if(t===31)s===0?r=e<<31|2139095040:r=e<<31|2143289344;else{const i=t-15+127,o=s<<13;r=e<<31|i<<23|o}return ZB[0]=r,nI[0]}function Ay(n){return Math.max(0,Math.min(255,Math.round(n*255)))}function g5(n){const e=[],t=new Set;function s(r){r&&typeof r=="object"&&!t.has(r)&&(t.add(r),r instanceof ArrayBuffer?e.push(r):ArrayBuffer.isView(r)?e.push(r.buffer):Array.isArray(r)?r.forEach(s):Object.values(r).forEach(s))}return s(n),e}class A5{constructor({allocate:e,dispose:t,valid:s}){this.items=[],this.allocate=e,this.dispose=t,this.valid=s}alloc(e){for(;;){const t=this.items.pop();if(!t)break;if(this.valid(t,e))return t;this.dispose&&this.dispose(t)}return this.allocate(e)}free(e){this.items.push(e)}disposeAll(){let e;for(e=this.items.pop();e;)this.dispose&&this.dispose(e),e=this.items.pop()}}function FE(n,e,t,s,r,i,o,a,l,c,u,h,d,f,p,A,m){const g=m?.rgbMin??0,v=(m?.rgbMax??1)-g,b=Ay((f-g)/v),w=Ay((p-g)/v),_=Ay((A-g)/v),N=Ay(d),M=k5(y5.set(l,c,u,h)),T=M&255,k=M>>>8&255,B=M>>>16&255,L=m?.lnScaleMin??fl,V=254/((m?.lnScaleMax??pl)-L),W=i<P2?0:Math.min(255,Math.max(1,Math.round((Math.log(i)-L)*V)+1)),H=o<P2?0:Math.min(255,Math.max(1,Math.round((Math.log(o)-L)*V)+1)),ee=a<P2?0:Math.min(255,Math.max(1,Math.round((Math.log(a)-L)*V)+1)),K=U2(t),te=U2(s),le=U2(r),fe=e*4;n[fe]=b|w<<8|_<<16|N<<24,n[fe+1]=K|te<<16,n[fe+2]=le|T<<16|k<<24,n[fe+3]=W|H<<8|ee<<16|B<<24}const y5=new fr,x5=new Ae,b5=new Ae,v5=new fr,C5=new In,I5={center:x5,scales:b5,quaternion:v5,color:C5,opacity:0};function $E(n,e,t){const s=I5,r=e*4,i=n[r],o=n[r+1],a=n[r+2],l=n[r+3],c=t?.rgbMin??0,h=(t?.rgbMax??1)-c;s.color.set(c+(i&255)/255*h,c+(i>>>8&255)/255*h,c+(i>>>16&255)/255*h),s.opacity=(i>>>24&255)/255,s.center.set(z2(o&65535),z2(o>>>16&65535),z2(a&65535));const d=t?.lnScaleMin??fl,p=((t?.lnScaleMax??pl)-d)/254,A=l&255;s.scales.x=A===0?0:Math.exp(d+(A-1)*p);const m=l>>>8&255;s.scales.y=m===0?0:Math.exp(d+(m-1)*p);const g=l>>>16&255;s.scales.z=g===0?0:Math.exp(d+(g-1)*p);const x=a>>>16&65535|l>>>8&16711680;return N5(x,s.quaternion),s}function Co(n){const e=hs,t=Math.max(YV,Math.min(ou,Math.ceil(n/e))),s=Math.ceil(n/(e*t)),r=e*t*s;return{width:e,height:t,depth:s,maxSplats:r}}function w5(n){const e=new RB(n.autoStart);return e.startTime=n.startTime,e.oldTime=n.oldTime,e.elapsedTime=n.elapsedTime,e.running=n.running,e}const S5=Yi(`
  precision highp float;

  in vec3 position;

  void main() {
    gl_Position = vec4(position.xy, 0.0, 1.0);
  }
`);function E5(n){const e=new Ae;for(const t of n)e.add(t);return e.divideScalar(n.length)}function _5(n){if(n.length===0)return new fr;const e=n[0].clone();for(let t=1;t<n.length;t++)n[t].dot(n[0])<0?(e.x-=n[t].x,e.y-=n[t].y,e.z-=n[t].z,e.w-=n[t].w):(e.x+=n[t].x,e.y+=n[t].y,e.z+=n[t].z,e.w+=n[t].w);return e.normalize()}function T5(n,e){const[t,s]=[new Ae,new fr],[r,i]=[new Ae,new fr];n.decompose(t,s,new Ae),e.decompose(r,i,new Ae);const o=t.distanceTo(r),a=Math.abs(s.dot(i));return{distance:o,coorient:a}}function Tv({matrix1:n,matrix2:e,maxDistance:t,minCoorient:s}){const{distance:r,coorient:i}=T5(n,e);return r<=t&&(s==null||i>=s)}const B5=new fr,Bv=new Ae;function k5(n){const e=B5.copy(n).normalize();e.w<0&&e.set(-e.x,-e.y,-e.z,-e.w);const t=2*Math.acos(e.w),s=Math.sqrt(e.x*e.x+e.y*e.y+e.z*e.z),r=s<1e-6?Bv.set(1,0,0):Bv.set(e.x,e.y,e.z).divideScalar(s),i=Math.abs(r.x)+Math.abs(r.y)+Math.abs(r.z);let o=r.x/i,a=r.y/i;if(r.z<0){const f=o;o=(1-Math.abs(a))*(o>=0?1:-1),a=(1-Math.abs(f))*(a>=0?1:-1)}const l=o*.5+.5,c=a*.5+.5,u=Math.round(l*255),h=Math.round(c*255);return Math.round(t*(255/Math.PI))<<16|h<<8|u}function N5(n,e){const t=n&255,s=n>>>8&255,r=n>>>16&255,i=t/255,o=s/255;let a=(i-.5)*2,l=(o-.5)*2;const c=1-(Math.abs(a)+Math.abs(l)),u=Math.max(-c,0);a+=a>=0?-u:u,l+=l>=0?-u:u;const h=Bv.set(a,l,c).normalize(),f=r/255*Math.PI*.5,p=Math.sin(f),A=Math.cos(f);return e.set(h.x*p,h.y*p,h.z*p,A),e}function R5(n,e){const t=[];let s=0,r=null;const i=new NV((l,c)=>{if(t.push(l),s+=l.length,c||s>=e){const u=new Uint8Array(s);let h=0;for(const d of t)u.set(d,h),h+=d.length;r=u.slice(0,e)}}),o=1024;let a=0;for(;r==null&&a<n.length;){const l=n.slice(a,a+o);i.push(l,!1),a+=o}if(r==null&&(i.push(new Uint8Array,!0),r==null))throw new Error("Failed to decompress partial gzip");return r}class tk{constructor({graph:e,inputs:t,outputs:s,template:r}){this.graph=e,this.template=r,this.inputs=t??{},this.outputs=s??{};const i=new t5({indent:this.template.indent});for(const a in this.outputs)this.outputs[a]&&i.declares.add(this.outputs[a]);const o=e.compile({inputs:this.inputs,outputs:this.outputs,compile:i});this.shader=r.generate({globals:i.globals,statements:o}),this.uniforms=i.uniforms,this.updaters=i.updaters}prepareMaterial(){return M5(this)}update(){for(const e of this.updaters)e()}}class nk{constructor(e){const t=e.match(/^([ \t]*)\{\{\s*GLOBALS\s*\}\}/m),s=e.match(/^([ \t]*)\{\{\s*STATEMENTS\s*\}\}/m);if(!t||!s)throw new Error("Template must contain {{ GLOBALS }} and {{ STATEMENTS }}");this.before=e.substring(0,t.index),this.between=e.substring(t.index+t[0].length,s.index),this.after=e.substring(s.index+s[0].length),this.indent=s[1]}generate({globals:e,statements:t}){return this.before+Array.from(e).join(`

`)+this.between+t.map(s=>this.indent+s).join(`
`)+this.after}}const PE=new Map;function M5(n){let e=PE.get(n);return e||(e=new ZC({glslVersion:m0,vertexShader:S5,fragmentShader:n.shader,uniforms:n.uniforms}),PE.set(n,e),e)}function sk(n,e,t="add"){const s=()=>{throw new Error(`Invalid ${t} types: ${n}, ${e}`)};if(n===e)return n;if(n==="int"){if(au(e))return e;s()}if(e==="int"){if(au(n))return n;s()}if(n==="uint"){if(lu(e))return e;s()}if(e==="uint"){if(lu(n))return n;s()}if(n==="float"){if(Tm(e))return e;s()}if(e==="float"){if(Tm(n))return n;s()}throw new Error(`Invalid ${t} types: ${n}, ${e}`)}function D5(n,e){return sk(n,e,"sub")}function F5(n,e){const t=()=>{throw new Error(`Invalid mul types: ${n}, ${e}`)},s=r=>r;if(n==="int"){if(au(e))return s(e);t()}if(e==="int"){if(au(n))return s(n);t()}if(n==="uint"){if(lu(e))return s(e);t()}if(e==="uint"){if(lu(n))return s(n);t()}if(n==="float"){if(Tm(e))return s(e);t()}if(e==="float"){if(Tm(n))return s(n);t()}if(au(n)||lu(n)||au(e)||lu(e)){if(n===e)return s(n);t()}if(n==="vec2"){if(e==="vec2"||md(e))return s("vec2");if(e==="mat3x2")return s("vec3");if(e==="mat4x2")return s("vec4");t()}if(n==="vec3"){if(e==="mat2x3")return s("vec2");if(e==="vec3"||gd(e))return s("vec3");if(e==="mat4x3")return s("vec4");t()}if(n==="vec4"){if(e==="mat2x4")return s("vec2");if(e==="mat3x4")return s("vec3");if(e==="vec4"||Ad(e))return s("vec4");t()}if(e==="vec2"){if(md(n))return s("vec2");if(n==="mat2x3")return s("vec3");if(n==="mat2x4")return s("vec4");t()}if(e==="vec3"){if(n==="mat3x2")return s("vec2");if(gd(n))return s("vec3");if(n==="mat3x4")return s("vec4");t()}if(e==="vec4"){if(n==="mat4x2")return s("vec2");if(n==="mat4x3")return s("vec3");if(Ad(n))return s("vec4");t()}if(md(n)){if(md(e))return s("mat2");if(e==="mat3x2")return s("mat3x2");if(e==="mat4x2")return s("mat4x2");t()}if(n==="mat2x3"){if(md(e))return s("mat2x3");if(e==="mat3x2")return s("mat3");if(e==="mat4x2")return s("mat4x3");t()}if(n==="mat2x4"){if(md(e))return s("mat2x4");if(e==="mat3x2")return s("mat3x4");if(e==="mat4x2")return s("mat4");t()}if(n==="mat3x2"){if(e==="mat2x3")return s("mat2");if(gd(e))return s("mat3x2");if(e==="mat4x3")return s("mat4x2");t()}if(gd(n)){if(e==="mat2x3")return s("mat2x3");if(gd(e))return s("mat3");if(e==="mat4x3")return s("mat4x3");t()}if(n==="mat3x4"){if(e==="mat2x3")return s("mat2x4");if(gd(e))return s("mat3x4");if(e==="mat4x3")return s("mat4");t()}if(n==="mat4x2"){if(e==="mat2x4")return s("mat2");if(e==="mat3x4")return s("mat3x2");if(Ad(e))return s("mat4x2");t()}if(n==="mat4x3"){if(e==="mat2x4")return s("mat2x3");if(e==="mat3x4")return s("mat3");if(Ad(e))return s("mat4x3");t()}if(Ad(n)){if(e==="mat2x4")return s("mat2x4");if(e==="mat3x4")return s("mat3x4");if(Ad(e))return s("mat4");t()}throw new Error(`Invalid mul types: ${n}, ${e}`)}const Kc=(n,e)=>new $5({a:n,b:e}),LE=(n,e)=>new P5({a:n,b:e}),tm=(n,e)=>new L5({a:n,b:e});let $5=class extends lx{constructor({a:e,b:t}){super({a:e,b:t,outKey:"sum",outTypeFunc:sk}),this.statements=({inputs:s,outputs:r})=>[`${r.sum} = ${s.a} + ${s.b};`]}},P5=class extends lx{constructor({a:e,b:t}){super({a:e,b:t,outKey:"difference",outTypeFunc:D5}),this.statements=({inputs:s,outputs:r})=>[`${r.difference} = ${s.a} - ${s.b};`]}};class L5 extends lx{constructor({a:e,b:t}){super({a:e,b:t,outKey:"product",outTypeFunc:F5}),this.statements=({inputs:s,outputs:r})=>[`${r.product} = ${s.a} * ${s.b};`]}}const O5=n=>new U5({value:n}),Q5=n=>new z5({value:n}),OE=n=>new G5({value:n});class U5 extends ax{constructor({value:e}){super({a:e,outKey:"uint",outTypeFunc:()=>"uint"}),this.statements=({inputs:t,outputs:s})=>[`${s.uint} = floatBitsToUint(${t.a});`]}}class z5 extends ax{constructor({value:e}){super({a:e,outKey:"uint",outTypeFunc:()=>"uint"}),this.statements=({inputs:t,outputs:s})=>[`${s.uint} = packHalf2x16(${t.a});`]}}class G5 extends ax{constructor({value:e}){super({a:e,outKey:"rgba8",outTypeFunc:()=>"vec4"}),this.statements=({inputs:t,outputs:s})=>[`uvec4 uRgba = uvec4(${t.a} & 0xffu, (${t.a} >> 8u) & 0xffu, (${t.a} >> 16u) & 0xffu, (${t.a} >> 24u) & 0xffu);`,`${s.rgba8} = vec4(uRgba) / 255.0;`]}}const V5=n=>new Y5({a:n}),W5=n=>new J5({vector:n}),H5=({vector:n,vectorType:e,x:t,y:s,z:r,w:i,r:o,g:a,b:l,a:c})=>new Z5({vector:n,vectorType:e,x:t,y:s,z:r,w:i,r:o,g:a,b:l,a:c}),q5=(n,e)=>new X5({a:n,b:e});class Y5 extends ax{constructor({a:e}){super({a:e,outTypeFunc:t=>t,outKey:"normalize"}),this.statements=({inputs:t,outputs:s})=>[`${s.normalize} = normalize(${t.a});`]}}function j5(n){if(n==="float")return"vec2";if(n==="vec2")return"vec3";if(n==="vec3")return"vec4";throw new Error("Invalid type")}class X5 extends lx{constructor({a:e,b:t}){const s=al(e),r=j5(s);super({a:e,b:t,outKey:"extend",outTypeFunc:()=>r}),this.statements=({inputs:i,outputs:o})=>[`${o.extend} = ${r}(${i.a}, ${i.b});`]}}function K5(n){const e=t=>t;switch(n){case"vec2":return e({x:"float",y:"float",r:"float",g:"float"});case"vec3":return e({x:"float",y:"float",z:"float",r:"float",g:"float",b:"float"});case"vec4":return e({x:"float",y:"float",z:"float",w:"float",r:"float",g:"float",b:"float",a:"float"});case"ivec2":return e({x:"int",y:"int",r:"int",g:"int"});case"ivec3":return e({x:"int",y:"int",z:"int",r:"int",g:"int",b:"int"});case"ivec4":return e({x:"int",y:"int",z:"int",w:"int",r:"int",g:"int",b:"int",a:"int"});case"uvec2":return e({x:"uint",y:"uint",r:"uint",g:"uint"});case"uvec3":return e({x:"uint",y:"uint",z:"uint",r:"uint",g:"uint",b:"uint"});case"uvec4":return e({x:"uint",y:"uint",z:"uint",w:"uint",r:"uint",g:"uint",b:"uint",a:"uint"});default:throw new Error(`Invalid vector type: ${n}`)}}class J5 extends kr{constructor({vector:e}){const s={vector:al(e)},r=K5(s.vector);super({inTypes:s,outTypes:r,inputs:{vector:e}}),this.statements=({inputs:i,outputs:o})=>{const{x:a,y:l,z:c,w:u,r:h,g:d,b:f,a:p}=o,{vector:A}=i;return[a?`${a} = ${A}.x;`:null,l?`${l} = ${A}.y;`:null,c?`${c} = ${A}.z;`:null,u?`${u} = ${A}.w;`:null,h?`${h} = ${A}.r;`:null,d?`${d} = ${A}.g;`:null,f?`${f} = ${A}.b;`:null,p?`${p} = ${A}.a;`:null].filter(Boolean)}}}class Z5 extends kr{constructor({vector:e,vectorType:t,x:s,y:r,z:i,w:o,r:a,g:l,b:c,a:u}){if(!e&&!t)throw new Error("Either vector or vectorType must be provided");const h=t??al(e),d=JV(h),f=ZV(h),p={vector:h,x:d,y:d,r:d,g:d},A={vector:e,x:s,y:r,r:a,g:l};f>=3&&(Object.assign(p,{z:d,b:d}),Object.assign(A,{z:i,b:c})),f>=4&&(Object.assign(p,{w:d,a:d}),Object.assign(A,{w:o,a:u})),super({inTypes:p,outTypes:{vector:h},inputs:A}),this.statements=({inputs:m,outputs:g})=>{const{vector:x}=g,{vector:v,x:b,y:w,z:_,w:N,r:M,g:T,b:k,a:B}=m,L=[`${x}.x = ${b??M??(v?`${v}.x`:gy(d))};`,`${x}.y = ${w??T??(v?`${v}.y`:gy(d))};`];return f>=3&&L.push(`${x}.z = ${_??k??(v?`${v}.z`:gy(d))};`),f>=4&&L.push(`${x}.w = ${N??B??(v?`${v}.w`:gy(d))};`),L}}dynoOut(){return new Qi(this,"vector")}}const eW=(n,{scale:e,scales:t,rotate:s,translate:r})=>new nW({position:n,scale:e,scales:t,rotate:s,translate:r}).outputs.position,tW=(n,{scale:e,scales:t,rotate:s})=>new sW({dir:n,scale:e,scales:t,rotate:s}).outputs.dir;class nW extends kr{constructor({position:e,scale:t,scales:s,rotate:r,translate:i}){super({inTypes:{position:"vec3",scale:"float",scales:"vec3",rotate:"vec4",translate:"vec3"},outTypes:{position:"vec3"},inputs:{position:e,scale:t,scales:s,rotate:r,translate:i},statements:({inputs:o,outputs:a})=>{const{position:l}=a;if(!l)return[];const{scale:c,scales:u,rotate:h,translate:d}=o;return[`${l} = ${o.position??"vec3(0.0, 0.0, 0.0)"};`,c?`${l} *= ${c};`:null,u?`${l} *= ${u};`:null,h?`${l} = quatVec(${h}, ${l});`:null,d?`${l} += ${d};`:null].filter(Boolean)}})}}class sW extends kr{constructor({dir:e,scale:t,scales:s,rotate:r}){super({inTypes:{dir:"vec3",scale:"float",scales:"vec3",rotate:"vec4"},outTypes:{dir:"vec3"},inputs:{dir:e,scale:t,scales:s,rotate:r},statements:({inputs:i,outputs:o})=>{const{dir:a}=o;if(!a)return[];const{scale:l,scales:c,rotate:u}=i;return[`${a} = ${i.dir??"vec3(0.0, 0.0, 0.0)"};`,l?`${a} *= ${l};`:null,c?`${a} *= ${c};`:null,u?`${a} = quatVec(${u}, ${a});`:null].filter(Boolean)}})}}var rW=`precision highp float;
precision highp int;
precision highp sampler2D;
precision highp usampler2D;
precision highp isampler2D;
precision highp sampler2DArray;
precision highp usampler2DArray;
precision highp isampler2DArray;
precision highp sampler3D;
precision highp usampler3D;
precision highp isampler3D;

#include <splatDefines>

uniform uint targetLayer;
uniform int targetBase;
uniform int targetCount;

out vec4 target;

{{ GLOBALS }}

void computeReadback(int index) {
    {{ STATEMENTS }}
}

void main() {
    int targetIndex = int(targetLayer << SPLAT_TEX_LAYER_BITS) + int(uint(gl_FragCoord.y) << SPLAT_TEX_WIDTH_BITS) + int(gl_FragCoord.x);
    int index = targetIndex - targetBase;

    if ((index >= 0) && (index < targetCount)) {
        computeReadback(index);
    } else {
        target = vec4(0.0, 0.0, 0.0, 0.0);
    }
}`;const hx=class Ul{constructor({renderer:e}={}){this.renderer=e,this.capacity=0,this.count=0}dispose(){this.target&&(this.target.dispose(),this.target=void 0)}ensureBuffer(e,t){const r=Math.ceil(Math.max(1,e)/hs)*hs*4;if(t.byteLength>=r)return t;const i=new ArrayBuffer(r);if(t instanceof ArrayBuffer)return i;const o=t.constructor;return new o(i)}ensureCapacity(e){const{width:t,height:s,depth:r,maxSplats:i}=Co(e);(!this.target||i>this.capacity)&&(this.dispose(),this.capacity=i,this.target=new gB(t,s,r,{depthBuffer:!1,stencilBuffer:!1,generateMipmaps:!1,magFilter:Dr,minFilter:Dr}),this.target.texture.format=Er,this.target.texture.type=Ui,this.target.texture.internalFormat="RGBA8",this.target.scissorTest=!0)}prepareProgramMaterial(e){let t=Ul.readbackProgram.get(e);if(!t){const r=ml({index:"int"},{rgba8:"vec4"},({index:i})=>(e.inputs.index=i,{rgba8:new h5({rgba8:e.outputs.rgba8})}));Ul.programTemplate||(Ul.programTemplate=new nk(rW)),t=new tk({graph:r,inputs:{index:"index"},outputs:{rgba8:"target"},template:Ul.programTemplate}),Object.assign(t.uniforms,{targetLayer:{value:0},targetBase:{value:0},targetCount:{value:0}}),Ul.readbackProgram.set(e,t)}const s=t.prepareMaterial();return Ul.fullScreenQuad.material=s,{program:t,material:s}}saveRenderState(e){return{xrEnabled:e.xr.enabled,autoClear:e.autoClear}}resetRenderState(e,t){e.setRenderTarget(null),e.xr.enabled=t.xrEnabled,e.autoClear=t.autoClear}process({count:e,material:t}){const s=this.renderer;if(!s)throw new Error("No renderer");if(!this.target)throw new Error("No target");const r=hs*ou;t.uniforms.targetBase.value=0,t.uniforms.targetCount.value=e;let i=0;for(;i<e;){const o=Math.floor(i/r),a=o*r,l=Math.min(ou,Math.ceil((e-a)/hs));t.uniforms.targetLayer.value=o,this.target.scissor.set(0,0,hs,l),s.setRenderTarget(this.target,o),s.xr.enabled=!1,s.autoClear=!1,Ul.fullScreenQuad.render(s),i+=hs*l}this.count=e}async read({readback:e}){const t=this.renderer;if(!t)throw new Error("No renderer");if(!this.target)throw new Error("No target");const s=Math.ceil(this.count/hs)*hs;if(e.byteLength<s*4)throw new Error(`Readback buffer too small: ${e.byteLength} < ${s*4}`);const r=new Uint8Array(e instanceof ArrayBuffer?e:e.buffer),i=hs*ou;let o=0;const a=[];for(;o<this.count;){const l=Math.floor(o/i),c=l*i,u=Math.min(ou,Math.ceil((this.count-c)/hs));t.setRenderTarget(this.target,l);const h=hs*u*4,d=r.subarray(c*4,c*4+h),f=t?.readRenderTargetPixelsAsync(this.target,0,0,hs,u,d);a.push(f),o+=hs*u}return Promise.all(a).then(()=>e)}render({reader:e,count:t,renderer:s}){if(this.renderer=s||this.renderer,!this.renderer)throw new Error("No renderer");this.ensureCapacity(t);const{program:r,material:i}=this.prepareProgramMaterial(e);r.update();const o=this.saveRenderState(this.renderer);this.process({count:t,material:i}),this.resetRenderState(this.renderer,o)}async readback({readback:e}){if(!this.renderer)throw new Error("No renderer");const t=this.saveRenderState(this.renderer),s=this.read({readback:e});return this.resetRenderState(this.renderer,t),s}async renderReadback({reader:e,count:t,renderer:s,readback:r}){if(this.renderer=s||this.renderer,!this.renderer)throw new Error("No renderer");this.ensureCapacity(t);const{program:i,material:o}=this.prepareProgramMaterial(e);i.update();const a=this.saveRenderState(this.renderer);this.process({count:t,material:o});const l=this.read({readback:r});return this.resetRenderState(this.renderer,a),l}getTexture(){var e;return(e=this.target)==null?void 0:e.texture}};hx.programTemplate=null;hx.readbackProgram=new Map;hx.fullScreenQuad=new LB(new ZC({visible:!1}));let rk=hx;const rI=class di{constructor(e={}){this.capacity=0,this.count=0,this.array=null,this.readback=null,this.source=null,this.needsUpdate=!0,this.dyno=new Xo({key:"rgbaArray",type:ik,globals:()=>[ok],value:{texture:di.getEmpty(),count:0},update:t=>{var s;return t.texture=((s=this.readback)==null?void 0:s.getTexture())??this.source??di.getEmpty(),t.count=this.count,t}}),e.array?(this.array=e.array,this.capacity=Math.floor(this.array.length/4),this.capacity=Math.floor(this.capacity/hs)*hs,this.count=Math.min(this.capacity,e.count??Number.POSITIVE_INFINITY)):(this.capacity=e.capacity??0,this.count=0)}dispose(){this.readback&&(this.readback.dispose(),this.readback=null),this.source&&(this.source.dispose(),this.source=null)}ensureCapacity(e){var t;if(!this.array||e>(((t=this.array)==null?void 0:t.length)??0)/4){this.capacity=Co(e).maxSplats;const s=new Uint8Array(this.capacity*4);this.array&&s.set(this.array),this.array=s}return this.array}getTexture(){var e;let t=(e=this.readback)==null?void 0:e.getTexture();return(this.source||this.array)&&(t=this.maybeUpdateSource()),t??di.getEmpty()}maybeUpdateSource(){if(!this.array)throw new Error("No array");if(this.needsUpdate||!this.source){if(this.needsUpdate=!1,this.source){const{width:e,height:t,depth:s}=this.source.image;this.capacity!==e*t*s&&(this.source.dispose(),this.source=null)}if(this.source)this.array.buffer!==this.source.image.data.buffer&&(this.source.image.data=new Uint8Array(this.array.buffer));else{const{width:e,height:t,depth:s}=Co(this.capacity);this.source=new Ca(this.array,e,t,s),this.source.format=Er,this.source.type=Ui,this.source.internalFormat="RGBA8",this.source.needsUpdate=!0}this.source.needsUpdate=!0}return this.source}render({reader:e,count:t,renderer:s}){this.readback||(this.readback=new rk({renderer:s})),this.readback.render({reader:e,count:t,renderer:s}),this.capacity=this.readback.capacity,this.count=this.readback.count}fromPackedSplats({packedSplats:e,base:t,count:s,renderer:r}){const{dynoSplats:i,dynoBase:o,dynoCount:a,reader:l}=di.makeDynos();return i.packedSplats=e,o.value=t,a.value=s,this.render({reader:l,count:s,renderer:r}),this}async read(){if(!this.readback)throw new Error("No readback");return(!this.array||this.array.length<this.count*4)&&(this.array=new Uint8Array(this.capacity*4)),(await this.readback.readback({readback:this.array})).subarray(0,this.count*4)}static getEmpty(){if(!di.emptySource){const e=new Uint8Array(4);di.emptySource=new Ca(e,1,1,1),di.emptySource.format=Er,di.emptySource.type=Ui,di.emptySource.internalFormat="RGBA8",di.emptySource.needsUpdate=!0}return di.emptySource}static makeDynos(){if(!di.dynos){const e=new oI,t=new _v({value:0}),s=new _v({value:0}),r=ml({index:"int"},{rgba8:"vec4"},({index:i})=>{if(!i)throw new Error("index is undefined");i=Kc(i,t);const o=s5(e,i,t,s);return{rgba8:Xy(o).outputs.rgba}});di.dynos={dynoSplats:e,dynoBase:t,dynoCount:s,reader:r}}return di.dynos}};rI.emptySource=null;rI.dynos=null;let iW=rI;const ik={type:"RgbaArray"},ok=Yi(`
  struct RgbaArray {
    sampler2DArray texture;
    int count;
  };
`);function oW(n,e){return new kr({inTypes:{rgba:ik,index:"int"},outTypes:{rgba:"vec4"},inputs:{rgba:n,index:e},globals:()=>[ok],statements:({inputs:s,outputs:r})=>Pa(`
        if ((index >= 0) && (index < ${s.rgba}.count)) {
          ${r.rgba} = texelFetch(${s.rgba}.texture, splatTexCoord(index), 0);
        } else {
          ${r.rgba} = vec4(0.0, 0.0, 0.0, 0.0);
        }
      `)}).outputs.rgba}function aW(n){switch(n){case"all":return 0;case"plane":return 1;case"sphere":return 2;case"box":return 3;case"ellipsoid":return 4;case"cylinder":return 5;case"capsule":return 6;case"infinite_cone":return 7;default:throw new Error(`Unknown SDF type: ${n}`)}}function lW(n){switch(n){case"multiply":return 0;case"set_rgb":return 1;case"add_rgba":return 2;default:throw new Error(`Unknown blend mode: ${n}`)}}class cW extends Fr{constructor(e={}){super();const{type:t,invert:s,opacity:r,color:i,displace:o,radius:a}=e;this.type=t??"sphere",this.invert=s??!1,this.opacity=r??1,this.color=i??new In(1,1,1),this.displace=o??new Ae(0,0,0),this.radius=a??0}}const ak=class lk extends Fr{constructor(e={}){const{name:t,rgbaBlendMode:s="multiply",sdfSmooth:r=0,softEdge:i=0,invert:o=!1,sdfs:a=null}=e;super(),this.rgbaBlendMode=s,this.sdfSmooth=r,this.softEdge=i,this.invert=o,this.sdfs=a,this.ordering=lk.nextOrdering++,this.name=t??`Edit ${this.ordering}`}addSdf(e){this.sdfs==null&&(this.sdfs=[]),this.sdfs.includes(e)||this.sdfs.push(e)}removeSdf(e){this.sdfs!=null&&(this.sdfs=this.sdfs.filter(t=>t!==e))}};ak.nextOrdering=1;let ck=ak;class uW{constructor({maxSdfs:e,maxEdits:t}){this.maxSdfs=Math.max(16,e??0),this.numSdfs=0,this.sdfData=new Uint32Array(this.maxSdfs*8*4),this.sdfFloatData=new Float32Array(this.sdfData.buffer),this.sdfTexture=this.newSdfTexture(this.sdfData,this.maxSdfs),this.dynoSdfArray=new Xo({key:"sdfArray",type:uk,globals:()=>[hk],value:{numSdfs:0,sdfTexture:this.sdfTexture},update:s=>(s.numSdfs=this.numSdfs,s.sdfTexture=this.sdfTexture,s)}),this.maxEdits=Math.max(16,t??0),this.numEdits=0,this.editData=new Uint32Array(this.maxEdits*4),this.editFloatData=new Float32Array(this.editData.buffer),this.dynoNumEdits=new _v({value:0}),this.dynoEdits=this.newEdits(this.editData,this.maxEdits)}newSdfTexture(e,t){const s=new pO(e,8,t,ll,Oi);return s.internalFormat="RGBA32UI",s.needsUpdate=!0,s}newEdits(e,t){return new Xo({key:"edits",type:"uvec4",count:t,globals:()=>[dk],value:e})}ensureCapacity({maxSdfs:e,maxEdits:t}){let s=!1;return e>this.sdfTexture.image.height&&(this.sdfTexture.dispose(),this.maxSdfs=Math.max(this.maxSdfs*2,e),this.sdfData=new Uint32Array(this.maxSdfs*8*4),this.sdfFloatData=new Float32Array(this.sdfData.buffer),this.sdfTexture=this.newSdfTexture(this.sdfData,this.maxSdfs)),t>(this.dynoEdits.count??0)&&(this.maxEdits=Math.max(this.maxEdits*2,t),this.editData=new Uint32Array(this.maxEdits*4),this.editFloatData=new Float32Array(this.editData.buffer),this.dynoEdits=this.newEdits(this.editData,this.maxEdits),s=!0),s}updateEditData(e,t){const s=this.editData[e]!==t;return this.editData[e]=t,s}updateEditFloatData(e,t){yd[0]=t;const s=this.editFloatData[e]!==yd[0];return s&&(this.editFloatData[e]=yd[0]),s}encodeEdit(e,{sdfFirst:t,sdfCount:s,invert:r,rgbaBlendMode:i,softEdge:o,sdfSmooth:a}){const l=e*4;let c=!1;return c=this.updateEditData(l+0,i|(r?256:0))||c,c=this.updateEditData(l+1,t|s<<16)||c,c=this.updateEditFloatData(l+2,o)||c,c=this.updateEditFloatData(l+3,a)||c,c}updateSdfData(e,t){const s=this.sdfData[e]!==t;return this.sdfData[e]=t,s}updateSdfFloatData(e,t){yd[0]=t;const s=this.sdfFloatData[e]!==yd[0];return s&&(this.sdfFloatData[e]=yd[0]),s}encodeSdf(e,{sdfType:t,invert:s,center:r,quaternion:i,scale:o,sizes:a},l){const c=e*32,u=t|(s?256:0);let h=!1;h=this.updateSdfFloatData(c+0,r?.x??0)||h,h=this.updateSdfFloatData(c+1,r?.y??0)||h,h=this.updateSdfFloatData(c+2,r?.z??0)||h,h=this.updateSdfData(c+3,u)||h,h=this.updateSdfFloatData(c+4,i?.x??0)||h,h=this.updateSdfFloatData(c+5,i?.y??0)||h,h=this.updateSdfFloatData(c+6,i?.z??0)||h,h=this.updateSdfFloatData(c+7,i?.w??0)||h,h=this.updateSdfFloatData(c+8,o?.x??0)||h,h=this.updateSdfFloatData(c+9,o?.y??0)||h,h=this.updateSdfFloatData(c+10,o?.z??0)||h,h=this.updateSdfData(c+11,0)||h,h=this.updateSdfFloatData(c+12,a?.x??0)||h,h=this.updateSdfFloatData(c+13,a?.y??0)||h,h=this.updateSdfFloatData(c+14,a?.z??0)||h,h=this.updateSdfFloatData(c+15,a?.w??0)||h;const d=Math.min(4,l.length);for(let f=0;f<d;++f){const p=c+16+f*4;h=this.updateSdfFloatData(p+0,l[f].x)||h,h=this.updateSdfFloatData(p+1,l[f].y)||h,h=this.updateSdfFloatData(p+2,l[f].z)||h,h=this.updateSdfFloatData(p+3,l[f].w)||h}return h}update(e){const t=e.reduce((h,{sdfs:d})=>h+d.length,0),s=this.ensureCapacity({maxEdits:e.length,maxSdfs:t}),r=[new Vn,new Vn],i=new Ae,o=new fr,a=new Ae,l=new Vn;let c=0,u=s;e.length!==this.dynoNumEdits.value&&(this.dynoNumEdits.value=e.length,this.numEdits=e.length,u=!0);for(const[h,{edit:d,sdfs:f}]of e.entries()){u=this.encodeEdit(h,{sdfFirst:c,sdfCount:f.length,invert:d.invert,rgbaBlendMode:lW(d.rgbaBlendMode),softEdge:d.softEdge,sdfSmooth:d.sdfSmooth})||u;let p=!1;for(const A of f)l.set(A.scale.x,A.scale.y,A.scale.z,A.radius),A.scale.setScalar(1),A.updateMatrixWorld(),A.matrixWorld.clone().invert().decompose(i,o,a),A.scale.set(l.x,l.y,l.z),A.updateMatrixWorld(),r[0].set(A.color.r,A.color.g,A.color.b,A.opacity),r[1].set(A.displace.x,A.displace.y,A.displace.z,1),p=this.encodeSdf(c,{sdfType:aW(A.type),invert:A.invert,center:i,quaternion:o,scale:a,sizes:l},r)||p,c+=1;this.numSdfs=c,p&&(this.sdfTexture.needsUpdate=!0),u||(u=p)}return{updated:u,dynoUpdated:s}}modify(e){return hW(e,this.dynoSdfArray,this.dynoNumEdits,this.dynoEdits)}}const uk={type:"SdfArray"},hk=Yi(`
  struct SdfArray {
    int numSdfs;
    usampler2D sdfTexture;
  };

  void unpackSdfArray(
    usampler2D sdfTexture, int sdfIndex, out uint flags,
    out vec3 center, out vec4 quaternion, out vec3 scale, out vec4 sizes,
    int numValues, out vec4 values[4]
  ) {
    uvec4 temp = texelFetch(sdfTexture, ivec2(0, sdfIndex), 0);
    flags = temp.w;
    center = vec3(uintBitsToFloat(temp.x), uintBitsToFloat(temp.y), uintBitsToFloat(temp.z));

    temp = texelFetch(sdfTexture, ivec2(1, sdfIndex), 0);
    quaternion = vec4(uintBitsToFloat(temp.x), uintBitsToFloat(temp.y), uintBitsToFloat(temp.z), uintBitsToFloat(temp.w));

    temp = texelFetch(sdfTexture, ivec2(2, sdfIndex), 0);
    scale = vec3(uintBitsToFloat(temp.x), uintBitsToFloat(temp.y), uintBitsToFloat(temp.z));

    temp = texelFetch(sdfTexture, ivec2(3, sdfIndex), 0);
    sizes = vec4(uintBitsToFloat(temp.x), uintBitsToFloat(temp.y), uintBitsToFloat(temp.z), uintBitsToFloat(temp.w));

    for (int i = 0; i < numValues; ++i) {
      temp = texelFetch(sdfTexture, ivec2(4 + i, sdfIndex), 0);
      values[i] = vec4(uintBitsToFloat(temp.x), uintBitsToFloat(temp.y), uintBitsToFloat(temp.z), uintBitsToFloat(temp.w));
    }
  }

  const uint SDF_FLAG_TYPE = 0xFFu;
  const uint SDF_FLAG_INVERT = 1u << 8u;

  const uint SDF_TYPE_ALL = 0u;
  const uint SDF_TYPE_PLANE = 1u;
  const uint SDF_TYPE_SPHERE = 2u;
  const uint SDF_TYPE_BOX = 3u;
  const uint SDF_TYPE_ELLIPSOID = 4u;
  const uint SDF_TYPE_CYLINDER = 5u;
  const uint SDF_TYPE_CAPSULE = 6u;
  const uint SDF_TYPE_INFINITE_CONE = 7u;

  float evaluateSdfArray(
    usampler2D sdfTexture, int numSdfs, int sdfFirst, int sdfCount, vec3 pos,
    float smoothK, int numValues, out vec4 outValues[4]
  ) {
    float distanceAccum = (smoothK == 0.0) ? 1.0 / 0.0 : 0.0;
    float maxExp = -1.0 / 0.0;
    for (int i = 0; i < numValues; ++i) {
        outValues[i] = vec4(0.0);
    }

    uint flags;
    vec3 center, scale;
    vec4 quaternion, sizes;
    vec4 values[4];

    int sdfLast = min(sdfFirst + sdfCount, numSdfs);
    for (int index = sdfFirst; index < sdfLast; ++index) {
      unpackSdfArray(sdfTexture, index, flags, center, quaternion, scale, sizes, numValues, values);
      uint sdfType = flags & SDF_FLAG_TYPE;
      vec3 sdfPos = quatVec(quaternion, pos * scale) + center;

      float distance;
      switch (sdfType) {
        case SDF_TYPE_ALL:
          distance = -1.0 / 0.0;
          break;
        case SDF_TYPE_PLANE: {
          distance = sdfPos.z;
          break;
        }
        case SDF_TYPE_SPHERE: {
          distance = length(sdfPos) - sizes.w;
          break;
        }
        case SDF_TYPE_BOX: {
          vec3 q = abs(sdfPos) - sizes.xyz + sizes.w;
          distance = length(max(q, 0.0)) + min(max(q.x, max(q.y, q.z)), 0.0) - sizes.w;
          break;
        }
        case SDF_TYPE_ELLIPSOID: {
          vec3 sizes = sizes.xyz;
          float k0 = length(sdfPos / sizes);
          float k1 = length(sdfPos / dot(sizes, sizes));
          distance = k0 * (k0 - 1.0) / k1;
          break;
        }
        case SDF_TYPE_CYLINDER: {
          vec2 d = abs(vec2(length(sdfPos.xz), sdfPos.y)) - sizes.wy;
          distance = min(max(d.x, d.y), 0.0) + length(max(d, 0.0));
          break;
        }
        case SDF_TYPE_CAPSULE: {
          sdfPos.y -= clamp(sdfPos.y, -0.5 * sizes.y, 0.5 * sizes.y);
          distance = length(sdfPos) - sizes.w;
          break;
        }
        case SDF_TYPE_INFINITE_CONE: {
          float angle = 0.25 * PI * sizes.w;
          vec2 c = vec2(sin(angle), cos(angle));
          vec2 q = vec2(length(sdfPos.xy), -sdfPos.z);
          float d = length(q - c * max(dot(q, c), 0.0));
          distance = d * (((q.x * c.y - q.y * c.x) < 0.0) ? -1.0 : 1.0);
          break;
        }
      }

      if ((flags & SDF_FLAG_INVERT) != 0u) {
        distance = -distance;
      }

      if (smoothK == 0.0) {
        if (distance < distanceAccum) {
          distanceAccum = distance;
          for (int i = 0; i < numValues; ++i) {
            outValues[i] = values[i];
          }
        }
      } else {
        float scaledDistance = -distance / smoothK;
        if (scaledDistance > maxExp) {
          float scale = exp(maxExp - scaledDistance);
          distanceAccum *= scale;
          for (int i = 0; i < numValues; ++i) {
            outValues[i] *= scale;
          }
          maxExp = scaledDistance;
        }

        float weight = exp(scaledDistance - maxExp);
        distanceAccum += weight;
        for (int i = 0; i < numValues; ++i) {
          outValues[i] += weight * values[i];
        }
      }
    }

    if (smoothK == 0.0) {
      return distanceAccum;
    } else {
      // Very distant SDFs may result in 0 accumulation
      if (distanceAccum == 0.0) {
        return 1.0 / 0.0;
      }
      for (int i = 0; i < numValues; ++i) {
        outValues[i] /= distanceAccum;
      }
      return (-log(distanceAccum) - maxExp) * smoothK;
    }
  }

  float modulateSdfArray(
    usampler2D sdfTexture, int numSdfs, int sdfFirst, int sdfCount, vec3 pos,
    float smoothK, int numValues, out vec4 values[4],
    float softEdge, bool invert
  ) {
    float distance = evaluateSdfArray(sdfTexture, numSdfs, sdfFirst, sdfCount, pos, smoothK, numValues, values);
    if (invert) {
      distance = -distance;
    }

    return (softEdge == 0.0) ? ((distance < 0.0) ? 1.0 : 0.0)
      : clamp(-distance / softEdge + 0.5, 0.0, 1.0);
  }
`),dk=Yi(`
  const uint EDIT_FLAG_BLEND = 0xFFu;
  const uint EDIT_BLEND_MULTIPLY = 0u;
  const uint EDIT_BLEND_SET_RGB = 1u;
  const uint EDIT_BLEND_ADD_RGBA = 2u;
  const uint EDIT_FLAG_INVERT = 0x100u;

  void decodeEdit(
    uvec4 packedEdit, out int sdfFirst, out int sdfCount,
    out bool invert, out uint rgbaBlendMode, out float softEdge, out float sdfSmooth
  ) {
    rgbaBlendMode = packedEdit.x & EDIT_FLAG_BLEND;
    invert = (packedEdit.x & EDIT_FLAG_INVERT) != 0u;

    sdfFirst = int(packedEdit.y & 0xFFFFu);
    sdfCount = int(packedEdit.y >> 16u);

    softEdge = uintBitsToFloat(packedEdit.z);
    sdfSmooth = uintBitsToFloat(packedEdit.w);
  }

  void applyRgbaDisplaceEdit(
    usampler2D sdfTexture, int numSdfs, int sdfFirst, int sdfCount, inout vec3 pos,
    float smoothK, float softEdge, bool invert, uint rgbaBlendMode, inout vec4 rgba
  ) {
    vec4 values[4];
    float modulate = modulateSdfArray(sdfTexture, numSdfs, sdfFirst, sdfCount, pos, smoothK, 2, values, softEdge, invert);
    // On Android, moving values[0] is necessary to work around a compiler bug.
    vec4 sdfRgba = values[0];
    vec4 sdfDisplaceScale = values[1];

    vec4 target;
    switch (rgbaBlendMode) {
      case EDIT_BLEND_MULTIPLY:
        target = rgba * sdfRgba;
        break;
      case EDIT_BLEND_SET_RGB:
        target = vec4(sdfRgba.rgb, rgba.a * sdfRgba.a);
        break;
      case EDIT_BLEND_ADD_RGBA:
        target = rgba + sdfRgba;
        break;
      default:
        // Debug output if blend mode not set
        target = vec4(fract(pos), 1.0);
    }
    rgba = mix(rgba, target, modulate);
    pos += sdfDisplaceScale.xyz * modulate;
  }

  void applyPackedRgbaDisplaceEdit(uvec4 packedEdit, usampler2D sdfTexture, int numSdfs, inout vec3 pos, inout vec4 rgba) {
    int sdfFirst, sdfCount;
    bool invert;
    uint rgbaBlendMode;
    float softEdge, sdfSmooth;
    decodeEdit(packedEdit, sdfFirst, sdfCount, invert, rgbaBlendMode, softEdge, sdfSmooth);
    applyRgbaDisplaceEdit(sdfTexture, numSdfs, sdfFirst, sdfCount, pos, sdfSmooth, softEdge, invert, rgbaBlendMode, rgba);
  }
`);function hW(n,e,t,s){return new kr({inTypes:{gsplat:gr,sdfArray:uk,numEdits:"int",rgbaDisplaceEdits:"uvec4"},outTypes:{gsplat:gr},globals:()=>[hk,dk],inputs:{gsplat:n,sdfArray:e,numEdits:t,rgbaDisplaceEdits:s},statements:({inputs:i,outputs:o})=>{const{sdfArray:a,numEdits:l,rgbaDisplaceEdits:c}=i,{gsplat:u}=o;return Pa(`
        ${u} = ${i.gsplat};
        if (isGsplatActive(${u}.flags)) {
          for (int editIndex = 0; editIndex < ${l}; ++editIndex) {
            applyPackedRgbaDisplaceEdit(
              ${c}[editIndex], ${a}.sdfTexture, ${a}.numSdfs,
              ${u}.center, ${u}.rgba
            );
          }
        }
      `)}}).outputs.gsplat}const yd=new Float32Array(1);class dW{constructor(e){this.modifier=e,this.cache=new Map}apply(e){let t=this.cache.get(e);return t||(t=ml({index:"int"},{gsplat:gr},({index:s})=>{const{gsplat:r}=e.apply({index:s});return this.modifier.apply({gsplat:r})}),this.cache.set(e,t)),t}}class yy{constructor(){this.scale=new Bm({value:Number.NEGATIVE_INFINITY}),this.rotate=new ux({value:new fr(Number.POSITIVE_INFINITY,Number.POSITIVE_INFINITY,Number.POSITIVE_INFINITY,Number.POSITIVE_INFINITY)}),this.translate=new y0({value:new Ae(Number.POSITIVE_INFINITY,Number.POSITIVE_INFINITY,Number.POSITIVE_INFINITY)})}apply(e){return eW(e,{scale:this.scale,rotate:this.rotate,translate:this.translate})}applyDir(e){return tW(e,{rotate:this.rotate})}applyGsplat(e){return KB(e,{scale:this.scale,rotate:this.rotate,translate:this.translate})}updateFromMatrix(e){const t=new Ae,s=new fr,r=new Ae;e.decompose(r,s,t);const i=(t.x+t.y+t.z)/3;let o=!1;return i!==this.scale.value&&(this.scale.value=i,o=!0),r.equals(this.translate.value)||(this.translate.value.copy(r),o=!0),s.equals(this.rotate.value)||(this.rotate.value.copy(s),o=!0),o}update(e){return e.updateMatrixWorld(),this.updateFromMatrix(e.matrixWorld)}}class kv extends Fr{constructor({numSplats:e,generator:t,construct:s,update:r}){if(super(),this.numSplats=e??0,this.generator=t,this.frameUpdate=r,this.version=0,s){const i=s(this);Object.assign(this,i)}}updateVersion(){this.version+=1}set needsUpdate(e){e&&this.updateVersion()}}const km=class Nv extends kv{constructor(e={}){const t=new yy,s=new yy,r=new yy,i=new yy,o=new ux({value:new Vn(Number.NEGATIVE_INFINITY,Number.NEGATIVE_INFINITY,Number.NEGATIVE_INFINITY,Number.NEGATIVE_INFINITY)}),a=new Bm({value:0}),l=new Bm({value:0}),c={transform:t,viewToWorld:s,worldToView:r,viewToObject:i,recolor:o,time:a,deltaTime:l};if(super({update:({time:u,deltaTime:h,viewToWorld:d,globalEdits:f})=>this.update({time:u,deltaTime:h,viewToWorld:d,globalEdits:f})}),this.isInitialized=!1,this.recolor=new In(1,1,1),this.opacity=1,this.enableViewToObject=!1,this.enableViewToWorld=!1,this.enableWorldToView=!1,this.skinning=null,this.edits=null,this.rgbaDisplaceEdits=null,this.splatRgba=null,this.maxSh=3,this.packedSplats=e.packedSplats??new xu,this.packedSplats.splatEncoding=e.splatEncoding??{...dx},this.numSplats=this.packedSplats.numSplats,this.editable=e.editable??!0,this.onFrame=e.onFrame,this.context=c,this.objectModifier=e.objectModifier,this.worldModifier=e.worldModifier,this.updateGenerator(),e.url||e.fileBytes||e.constructSplats||e.packedSplats&&!e.packedSplats.isInitialized)this.initialized=this.asyncInitialize(e).then(async()=>{if(this.updateGenerator(),this.isInitialized=!0,e.onLoad){const u=e.onLoad(this);u instanceof Promise&&await u}return this});else if(this.isInitialized=!0,this.initialized=Promise.resolve(this),e.onLoad){const u=e.onLoad(this);u instanceof Promise&&(this.initialized=u.then(()=>this))}this.add(vW())}async asyncInitialize(e){const{url:t,fileBytes:s,fileType:r,fileName:i,maxSplats:o,constructSplats:a,splatEncoding:l}=e;if(t||s||a){const c={url:t,fileBytes:s,fileType:r,fileName:i,maxSplats:o,construct:a,splatEncoding:l};this.packedSplats.reinitialize(c)}this.packedSplats&&(await this.packedSplats.initialized,this.numSplats=this.packedSplats.numSplats,this.updateGenerator())}static async staticInitialize(){await jB(),Nv.isStaticInitialized=!0}pushSplat(e,t,s,r,i){this.packedSplats.pushSplat(e,t,s,r,i)}forEachSplat(e){this.packedSplats.forEachSplat(e)}dispose(){this.packedSplats.dispose()}getBoundingBox(e=!0){if(!this.initialized)throw new Error("Cannot get bounding box before SplatMesh is initialized");const t=new Ae(Number.POSITIVE_INFINITY,Number.POSITIVE_INFINITY,Number.POSITIVE_INFINITY),s=new Ae(Number.NEGATIVE_INFINITY,Number.NEGATIVE_INFINITY,Number.NEGATIVE_INFINITY),r=new Ae,i=[-1,1];return this.packedSplats.forEachSplat((a,l,c,u,h,d)=>{if(e)t.min(l),s.max(l);else for(const f of i)for(const p of i)for(const A of i)r.set(f*c.x,p*c.y,A*c.z),r.applyQuaternion(u),r.add(l),t.min(r),s.max(r)}),new fc(t,s)}constructGenerator(e){const{transform:t,viewToObject:s,recolor:r}=e,i=ml({index:"int"},{gsplat:gr},({index:o})=>{if(!o)throw new Error("index is undefined");let a=Am(this.packedSplats.dyno,o);if(this.maxSh>=1){const{sh1Texture:c,sh2Texture:u,sh3Texture:h}=this.ensureShTextures();if(c){let d=function(v,b){const{x:w,y:_}=W5(b).outputs,N=tm(Kc(w,_),gm("float",.5)),M=tm(LE(_,w),gm("float",.5));return Kc(N,tm(v,M))};const f=s.translate,{center:p}=Xy(a).outputs,A=V5(LE(p,f)),m=gW(a,c,A);let g=d(m,this.packedSplats.dynoSh1MinMax);if(this.maxSh>=2&&u){const v=AW(a,u,A);g=Kc(g,d(v,this.packedSplats.dynoSh2MinMax))}if(this.maxSh>=3&&h){const v=yW(a,h,A);g=Kc(g,d(v,this.packedSplats.dynoSh3MinMax))}let{rgba:x}=Xy(a).outputs;x=Kc(x,q5(g,gm("float",0))),a=L2({gsplat:a,rgba:x})}}if(this.splatRgba){const c=oW(this.splatRgba.dyno,o);a=L2({gsplat:a,rgba:c})}this.skinning&&(a=this.skinning.modify(a)),this.objectModifier&&(a=this.objectModifier.apply({gsplat:a}).gsplat),a=t.applyGsplat(a);const l=tm(r,Xy(a).outputs.rgba);return a=L2({gsplat:a,rgba:l}),this.rgbaDisplaceEdits&&(a=this.rgbaDisplaceEdits.modify(a)),this.worldModifier&&(a=this.worldModifier.apply({gsplat:a}).gsplat),{gsplat:a}});this.generator=i}updateGenerator(){this.constructGenerator(this.context)}update({time:e,viewToWorld:t,deltaTime:s,globalEdits:r}){var i;this.numSplats=this.packedSplats.numSplats,this.context.time.value=e,this.context.deltaTime.value=s,Nv.dynoTime.value=e;const{transform:o,viewToObject:a,recolor:l}=this.context;let c=o.update(this);this.context.viewToWorld.updateFromMatrix(t)&&this.enableViewToWorld&&(c=!0);const u=t.clone().invert();this.context.worldToView.updateFromMatrix(u)&&this.enableWorldToView&&(c=!0);const f=new is().compose(o.translate.value,o.rotate.value,new Ae().setScalar(o.scale.value)).invert().multiply(t);a.updateFromMatrix(f)&&(this.enableViewToObject||this.packedSplats.extra.sh1)&&(c=!0);const p=new Vn(this.recolor.r,this.recolor.g,this.recolor.b,this.opacity);p.equals(l.value)||(l.value.copy(p),c=!0);const A=this.editable?(this.edits??[]).concat(r):[];this.editable&&!this.edits&&this.traverseVisible(g=>{g instanceof ck&&A.push(g)}),A.sort((g,x)=>g.ordering-x.ordering);const m=A.map(g=>{if(g.sdfs!=null)return{edit:g,sdfs:g.sdfs};const x=[];return g.traverseVisible(v=>{v instanceof cW&&x.push(v)}),{edit:g,sdfs:x}});if(m.length>0&&!this.rgbaDisplaceEdits){const g=m.length,x=m.reduce((v,b)=>v+b.sdfs.length,0);this.rgbaDisplaceEdits=new uW({maxEdits:g,maxSdfs:x}),this.updateGenerator()}if(this.rgbaDisplaceEdits){const g=this.rgbaDisplaceEdits.update(m);c||(c=g.updated),g.dynoUpdated&&this.updateGenerator()}c&&this.updateVersion(),(i=this.onFrame)==null||i.call(this,{mesh:this,time:e,deltaTime:s})}raycast(e,t){var s,r;if(!this.packedSplats.packedArray||!this.packedSplats.numSplats)return;const{near:i,far:o,ray:a}=e,l=this.matrixWorld.clone().invert(),c=new gn().setFromMatrix4(l),u=a.origin.clone().applyMatrix4(l),h=a.direction.clone().applyMatrix3(c),d=new Ae;l.decompose(new Ae,new fr,d),(d.x*d.y*d.z)**(1/3);const p=UV(u.x,u.y,u.z,h.x,h.y,h.z,i,o,this.packedSplats.numSplats,this.packedSplats.packedArray,!0,((s=this.packedSplats.splatEncoding)==null?void 0:s.lnScaleMin)??fl,((r=this.packedSplats.splatEncoding)==null?void 0:r.lnScaleMax)??pl);for(const A of p){const m=a.direction.clone().multiplyScalar(A).add(a.origin);t.push({distance:A,point:m,object:this})}}ensureShTextures(){if(!this.packedSplats.extra.sh1)return{};let e=this.packedSplats.extra.sh1Texture;if(!e){let r=this.packedSplats.extra.sh1;const{width:i,height:o,depth:a,maxSplats:l}=Co(r.length/2);if(r.length<l*2){const u=new Uint32Array(l*2);u.set(r),this.packedSplats.extra.sh1=u,r=u}const c=new Ca(r,i,o,a);c.format=tx,c.type=Oi,c.internalFormat="RG32UI",c.needsUpdate=!0,e=new Q2({value:c,key:"sh1"}),this.packedSplats.extra.sh1Texture=e}if(!this.packedSplats.extra.sh2)return{sh1Texture:e};let t=this.packedSplats.extra.sh2Texture;if(!t){let r=this.packedSplats.extra.sh2;const{width:i,height:o,depth:a,maxSplats:l}=Co(r.length/4);if(r.length<l*4){const u=new Uint32Array(l*4);u.set(r),this.packedSplats.extra.sh2=u,r=u}const c=new Ca(r,i,o,a);c.format=ll,c.type=Oi,c.internalFormat="RGBA32UI",c.needsUpdate=!0,t=new Q2({value:c,key:"sh2"}),this.packedSplats.extra.sh2Texture=t}if(!this.packedSplats.extra.sh3)return{sh1Texture:e,sh2Texture:t};let s=this.packedSplats.extra.sh3Texture;if(!s){let r=this.packedSplats.extra.sh3;const{width:i,height:o,depth:a,maxSplats:l}=Co(r.length/4);if(r.length<l*4){const u=new Uint32Array(l*4);u.set(r),this.packedSplats.extra.sh3=u,r=u}const c=new Ca(r,i,o,a);c.format=ll,c.type=Oi,c.internalFormat="RGBA32UI",c.needsUpdate=!0,s=new Q2({value:c,key:"sh3"}),this.packedSplats.extra.sh3Texture=s}return{sh1Texture:e,sh2Texture:t,sh3Texture:s}}};km.staticInitialized=km.staticInitialize();km.isStaticInitialized=!1;km.dynoTime=new Bm({value:0});let b0=km;const fW=Yi(`
  vec3 evaluateSH1(Gsplat gsplat, usampler2DArray sh1, vec3 viewDir) {
    // Extract sint7 values packed into 2 x uint32
    uvec2 packed = texelFetch(sh1, splatTexCoord(gsplat.index), 0).rg;
    vec3 sh1_0 = vec3(ivec3(
      int(packed.x << 25u) >> 25,
      int(packed.x << 18u) >> 25,
      int(packed.x << 11u) >> 25
    )) / 63.0;
    vec3 sh1_1 = vec3(ivec3(
      int(packed.x << 4u) >> 25,
      int((packed.x >> 3u) | (packed.y << 29u)) >> 25,
      int(packed.y << 22u) >> 25
    )) / 63.0;
    vec3 sh1_2 = vec3(ivec3(
      int(packed.y << 15u) >> 25,
      int(packed.y << 8u) >> 25,
      int(packed.y << 1u) >> 25
    )) / 63.0;

    return sh1_0 * (-0.4886025 * viewDir.y)
      + sh1_1 * (0.4886025 * viewDir.z)
      + sh1_2 * (-0.4886025 * viewDir.x);
  }
`),pW=Yi(`
  vec3 evaluateSH2(Gsplat gsplat, usampler2DArray sh2, vec3 viewDir) {
    // Extract sint8 values packed into 4 x uint32
    uvec4 packed = texelFetch(sh2, splatTexCoord(gsplat.index), 0);
    vec3 sh2_0 = vec3(ivec3(
      int(packed.x << 24u) >> 24,
      int(packed.x << 16u) >> 24,
      int(packed.x << 8u) >> 24
    )) / 127.0;
    vec3 sh2_1 = vec3(ivec3(
      int(packed.x) >> 24,
      int(packed.y << 24u) >> 24,
      int(packed.y << 16u) >> 24
    )) / 127.0;
    vec3 sh2_2 = vec3(ivec3(
      int(packed.y << 8u) >> 24,
      int(packed.y) >> 24,
      int(packed.z << 24u) >> 24
    )) / 127.0;
    vec3 sh2_3 = vec3(ivec3(
      int(packed.z << 16u) >> 24,
      int(packed.z << 8u) >> 24,
      int(packed.z) >> 24
    )) / 127.0;
    vec3 sh2_4 = vec3(ivec3(
      int(packed.w << 24u) >> 24,
      int(packed.w << 16u) >> 24,
      int(packed.w << 8u) >> 24
    )) / 127.0;

    return sh2_0 * (1.0925484 * viewDir.x * viewDir.y)
      + sh2_1 * (-1.0925484 * viewDir.y * viewDir.z)
      + sh2_2 * (0.3153915 * (2.0 * viewDir.z * viewDir.z - viewDir.x * viewDir.x - viewDir.y * viewDir.y))
      + sh2_3 * (-1.0925484 * viewDir.x * viewDir.z)
      + sh2_4 * (0.5462742 * (viewDir.x * viewDir.x - viewDir.y * viewDir.y));
  }
`),mW=Yi(`
  vec3 evaluateSH3(Gsplat gsplat, usampler2DArray sh3, vec3 viewDir) {
    // Extract sint6 values packed into 4 x uint32
    uvec4 packed = texelFetch(sh3, splatTexCoord(gsplat.index), 0);
    vec3 sh3_0 = vec3(ivec3(
      int(packed.x << 26u) >> 26,
      int(packed.x << 20u) >> 26,
      int(packed.x << 14u) >> 26
    )) / 31.0;
    vec3 sh3_1 = vec3(ivec3(
      int(packed.x << 8u) >> 26,
      int(packed.x << 2u) >> 26,
      int((packed.x >> 4u) | (packed.y << 28u)) >> 26
    )) / 31.0;
    vec3 sh3_2 = vec3(ivec3(
      int(packed.y << 22u) >> 26,
      int(packed.y << 16u) >> 26,
      int(packed.y << 10u) >> 26
    )) / 31.0;
    vec3 sh3_3 = vec3(ivec3(
      int(packed.y << 4u) >> 26,
      int((packed.y >> 2u) | (packed.z << 30u)) >> 26,
      int(packed.z << 24u) >> 26
    )) / 31.0;
    vec3 sh3_4 = vec3(ivec3(
      int(packed.z << 18u) >> 26,
      int(packed.z << 12u) >> 26,
      int(packed.z << 6u) >> 26
    )) / 31.0;
    vec3 sh3_5 = vec3(ivec3(
      int(packed.z) >> 26,
      int(packed.w << 26u) >> 26,
      int(packed.w << 20u) >> 26
    )) / 31.0;
    vec3 sh3_6 = vec3(ivec3(
      int(packed.w << 14u) >> 26,
      int(packed.w << 8u) >> 26,
      int(packed.w << 2u) >> 26
    )) / 31.0;

    float xx = viewDir.x * viewDir.x;
    float yy = viewDir.y * viewDir.y;
    float zz = viewDir.z * viewDir.z;
    float xy = viewDir.x * viewDir.y;
    float yz = viewDir.y * viewDir.z;
    float zx = viewDir.z * viewDir.x;

    return sh3_0 * (-0.5900436 * viewDir.y * (3.0 * xx - yy))
      + sh3_1 * (2.8906114 * xy * viewDir.z) +
      + sh3_2 * (-0.4570458 * viewDir.y * (4.0 * zz - xx - yy))
      + sh3_3 * (0.3731763 * viewDir.z * (2.0 * zz - 3.0 * xx - 3.0 * yy))
      + sh3_4 * (-0.4570458 * viewDir.x * (4.0 * zz - xx - yy))
      + sh3_5 * (1.4453057 * viewDir.z * (xx - yy))
      + sh3_6 * (-0.5900436 * viewDir.x * (xx - 3.0 * yy));
  }
`);function gW(n,e,t){return ox({inTypes:{gsplat:gr,sh1:"usampler2DArray",viewDir:"vec3"},outTypes:{rgb:"vec3"},inputs:{gsplat:n,sh1:e,viewDir:t},globals:()=>[La,fW],statements:({inputs:s,outputs:r})=>Pa(`
        if (isGsplatActive(${s.gsplat}.flags)) {
          ${r.rgb} = evaluateSH1(${s.gsplat}, ${s.sh1}, ${s.viewDir});
        } else {
          ${r.rgb} = vec3(0.0);
        }
      `)}).outputs.rgb}function AW(n,e,t){return ox({inTypes:{gsplat:gr,sh2:"usampler2DArray",viewDir:"vec3"},outTypes:{rgb:"vec3"},inputs:{gsplat:n,sh2:e,viewDir:t},globals:()=>[La,pW],statements:({inputs:s,outputs:r})=>Pa(`
        if (isGsplatActive(${s.gsplat}.flags)) {
          ${r.rgb} = evaluateSH2(${s.gsplat}, ${s.sh2}, ${s.viewDir});
        } else {
          ${r.rgb} = vec3(0.0);
        }
      `)}).outputs.rgb}function yW(n,e,t){return ox({inTypes:{gsplat:gr,sh3:"usampler2DArray",viewDir:"vec3"},outTypes:{rgb:"vec3"},inputs:{gsplat:n,sh3:e,viewDir:t},globals:()=>[La,mW],statements:({inputs:s,outputs:r})=>Pa(`
        if (isGsplatActive(${s.gsplat}.flags)) {
          ${r.rgb} = evaluateSH3(${s.gsplat}, ${s.sh3}, ${s.viewDir});
        } else {
          ${r.rgb} = vec3(0.0);
        }
      `)}).outputs.rgb}const xW=new sa,bW=new So;function vW(){const n=new hr(xW,bW);return n.frustumCulled=!1,n.onBeforeRender=function(e,t){if(!t.isScene){this.removeFromParent();return}let s=!1;t.traverse(r=>{r instanceof Dv&&(s=!0)}),s||t.add(new Dv({renderer:e})),this.removeFromParent()},n}const QE=["char","uchar","short","ushort","int","uint","float","double"],fk=class Ky{constructor({fileBytes:e}){this.header="",this.littleEndian=!0,this.elements={},this.comments=[],this.data=null,this.numSplats=0,this.fileBytes=e instanceof ArrayBuffer?new Uint8Array(e):e}async parseHeader(){const t=new ReadableStream({start:o=>{o.enqueue(this.fileBytes.slice(0,65536)),o.close()}}).pipeThrough(new TextDecoderStream).getReader();this.header="";const s=`end_header
`;for(;;){const{value:o,done:a}=await t.read();if(a)throw new Error("Failed to read header");this.header+=o;const l=this.header.indexOf(s);if(l>=0){this.header=this.header.slice(0,l+s.length);break}}const r=new TextEncoder().encode(this.header).length;this.data=new DataView(this.fileBytes.buffer,r),this.elements={};let i=null;this.comments=[],this.header.trim().split(`
`).forEach((o,a)=>{const l=o.trim();if(a===0){if(l!=="ply")throw new Error("Invalid PLY header");return}if(l.length===0)return;const c=l.split(" ");switch(c[0]){case"format":if(c[1]==="binary_little_endian")this.littleEndian=!0;else if(c[1]==="binary_big_endian")this.littleEndian=!1;else throw new Error(`Unsupported PLY format: ${c[1]}`);if(c[2]!=="1.0")throw new Error(`Unsupported PLY version: ${c[2]}`);break;case"end_header":break;case"comment":this.comments.push(l.slice(8));break;case"element":{const u=c[1];i={name:u,count:Number.parseInt(c[2]),properties:{}},this.elements[u]=i;break}case"property":if(i==null)throw new Error("Property must be inside an element");c[1]==="list"?i.properties[c[4]]={isList:!0,type:c[3],countType:c[2]}:i.properties[c[2]]={isList:!1,type:c[1]};break}}),this.elements.vertex&&(this.numSplats=this.elements.vertex.count)}parseData(e){let t=0;const s=this.data;if(s==null)throw new Error("No data to parse");for(const r in this.elements){const i=this.elements[r],{count:o,properties:a}=i,l=SW(a),c=EW(a,this.littleEndian),u=e(i)??(()=>{});for(let h=0;h<o;h++)t=c(s,t,l),u(h,l)}}parseSplats(e,t){if(this.elements.vertex==null)throw new Error("No vertex element found");let s=!1;const r=[];let i=0,o=[],a=[],l=[],c,u,h;function d(){const g=wW[i];o=new Array(3).fill(null).flatMap((x,v)=>[0,1,2].map((b,w)=>v+w*g/3)),a=new Array(5).fill(null).flatMap((x,v)=>[0,1,2].map((b,w)=>3+v+w*g/3)),l=new Array(7).fill(null).flatMap((x,v)=>[0,1,2].map((b,w)=>8+v+w*g/3)),c=i>=1?new Float32Array(9):void 0,u=i>=2?new Float32Array(15):void 0,h=i>=3?new Float32Array(21):void 0}function f(g,x){if(!c)throw new Error("Missing sh1");const v=x.f_rest;for(let b=0;b<o.length;b++)c[b]=v[o[b]]*8/255-4;if(u)for(let b=0;b<a.length;b++)u[b]=v[a[b]]*8/255-4;if(h)for(let b=0;b<l.length;b++)h[b]=v[l[b]]*8/255-4;t?.(g,c,u,h)}function p(g){const{min_x:x,min_y:v,min_z:b,max_x:w,max_y:_,max_z:N,min_scale_x:M,min_scale_y:T,min_scale_z:k,max_scale_x:B,max_scale_y:L,max_scale_z:U}=g.properties;if(!x||!v||!b||!w||!_||!N||!M||!T||!k||!B||!L||!U)throw new Error("Missing PLY chunk properties");return s=!0,(V,W)=>{const{min_x:H,min_y:ee,min_z:K,max_x:te,max_y:le,max_z:fe,min_scale_x:Ie,min_scale_y:Se,min_scale_z:De,max_scale_x:Be,max_scale_y:he,max_scale_z:ge,min_r:Ne,min_g:Oe,min_b:Qe,max_r:Ye,max_g:_t,max_b:J}=W;r.push({min_x:H,min_y:ee,min_z:K,max_x:te,max_y:le,max_z:fe,min_scale_x:Ie,min_scale_y:Se,min_scale_z:De,max_scale_x:Be,max_scale_y:he,max_scale_z:ge,min_r:Ne,min_g:Oe,min_b:Qe,max_r:Ye,max_g:_t,max_b:J})}}function A(g){if(t&&g.name==="sh")return i=Rv(g.properties),d(),f;if(g.name!=="vertex")return null;const{packed_position:x,packed_rotation:v,packed_scale:b,packed_color:w}=g.properties;if(!x||!v||!b||!w)throw new Error("Missing PLY properties: packed_position, packed_rotation, packed_scale, packed_color");const _=Math.sqrt(2);return(N,M)=>{const T=r[N>>>8];if(T==null)throw new Error("Missing PLY chunk");const{min_x:k,min_y:B,min_z:L,max_x:U,max_y:V,max_z:W,min_scale_x:H,min_scale_y:ee,min_scale_z:K,max_scale_x:te,max_scale_y:le,max_scale_z:fe,min_r:Ie,min_g:Se,min_b:De,max_r:Be,max_g:he,max_b:ge}=T,{packed_position:Ne,packed_rotation:Oe,packed_scale:Qe,packed_color:Ye}=M,_t=(Ne>>>21&2047)/2047*(U-k)+k,J=(Ne>>>11&1023)/1023*(V-B)+B,ht=(Ne&2047)/2047*(W-L)+L,dt=((Oe>>>20&1023)/1023-.5)*_,tt=((Oe>>>10&1023)/1023-.5)*_,Ke=((Oe&1023)/1023-.5)*_,kt=Math.sqrt(Math.max(0,1-dt*dt-tt*tt-Ke*Ke)),Xe=Oe>>>30,ot=Xe===0?dt:Xe===1?kt:tt,wn=Xe<=1?tt:Xe===2?kt:Ke,sn=Xe<=2?Ke:kt,Z=Xe===0?kt:dt,G=Math.exp((Qe>>>21&2047)/2047*(te-H)+H),we=Math.exp((Qe>>>11&1023)/1023*(le-ee)+ee),ke=Math.exp((Qe&2047)/2047*(fe-K)+K),Ue=(Ye>>>24&255)/255*((Be??1)-(Ie??0))+(Ie??0),Re=(Ye>>>16&255)/255*((he??1)-(Se??0))+(Se??0),bt=(Ye>>>8&255)/255*((ge??1)-(De??0))+(De??0),et=(Ye&255)/255;e(N,_t,J,ht,G,we,ke,ot,wn,sn,Z,et,Ue,Re,bt)}}const m=g=>{if(g.name==="chunk")return p(g);if(s)return A(g);if(g.name!=="vertex")return null;const{x,y:v,z:b,scale_0:w,scale_1:_,scale_2:N,rot_0:M,rot_1:T,rot_2:k,rot_3:B,opacity:L,f_dc_0:U,f_dc_1:V,f_dc_2:W,red:H,green:ee,blue:K,alpha:te}=g.properties;if(!x||!v||!b)throw new Error("Missing PLY properties: x, y, z");const le=w&&_&&N,fe=M&&T&&k&&B,Ie=te!=null?by[te.type]:1,Se=H!=null?by[H.type]:1,De=ee!=null?by[ee.type]:1,Be=K!=null?by[K.type]:1;return i=Rv(g.properties),d(),(he,ge)=>{const Ne=le?Math.exp(ge.scale_0):Ky.defaultPointScale,Oe=le?Math.exp(ge.scale_1):Ky.defaultPointScale,Qe=le?Math.exp(ge.scale_2):Ky.defaultPointScale,Ye=fe?ge.rot_1:0,_t=fe?ge.rot_2:0,J=fe?ge.rot_3:0,ht=fe?ge.rot_0:1,dt=L!=null?1/(1+Math.exp(-ge.opacity)):te!=null?ge.alpha/Ie:1,tt=U!=null?ge.f_dc_0*xy+.5:H!=null?ge.red/Se:1,Ke=V!=null?ge.f_dc_1*xy+.5:ee!=null?ge.green/De:1,kt=W!=null?ge.f_dc_2*xy+.5:K!=null?ge.blue/Be:1;if(e(he,ge.x,ge.y,ge.z,Ne,Oe,Qe,Ye,_t,J,ht,dt,tt,Ke,kt),t&&c){const Xe=ge.f_rest;if(c)for(let ot=0;ot<o.length;ot++)c[ot]=Xe[o[ot]];if(u)for(let ot=0;ot<a.length;ot++)u[ot]=Xe[a[ot]];if(h)for(let ot=0;ot<l.length;ot++)h[ot]=Xe[l[ot]];t(he,c,u,h)}}};this.parseData(m)}injectRgba(e){let t=0;const s=this.data;if(s==null)throw new Error("No parsed data");if(e.length!==this.numSplats*4)throw new Error("Invalid RGBA array length");for(const r in this.elements){const i=this.elements[r],{count:o,properties:a}=i,l=[];let c=0;const u=r==="vertex";if(u){for(const h of["opacity","f_dc_0","f_dc_1","f_dc_2"])if(!a[h]||a[h].type!=="float")throw new Error(`Can't injectRgba due to property: ${h}`)}for(const[h,d]of Object.entries(a))if(d.isList)l.push(()=>{const f=kd[d.countType](s,t,this.littleEndian);t+=Vo[d.countType],t+=f*Vo[d.type]});else{if(u)if(h==="f_dc_0"||h==="f_dc_1"||h==="f_dc_2"){const f=Number.parseInt(h.slice(5));l.push(()=>{const p=(e[c+f]/255-.5)/xy;UE[d.type](s,t,this.littleEndian,p)})}else h==="opacity"&&l.push(()=>{const f=Math.max(-100,Math.min(100,-Math.log(1/(e[c+3]/255)-1)));UE[d.type](s,t,this.littleEndian,f)});l.push(()=>{t+=Vo[d.type]})}for(let h=0;h<o;h++){for(const d of l)d();u&&(c+=4)}}}};fk.defaultPointScale=.001;let CW=fk;const xy=.28209479177387814,kd={char:(n,e,t)=>n.getInt8(e),uchar:(n,e,t)=>n.getUint8(e),short:(n,e,t)=>n.getInt16(e,t),ushort:(n,e,t)=>n.getUint16(e,t),int:(n,e,t)=>n.getInt32(e,t),uint:(n,e,t)=>n.getUint32(e,t),float:(n,e,t)=>n.getFloat32(e,t),double:(n,e,t)=>n.getFloat64(e,t)},UE={char:(n,e,t,s)=>{n.setInt8(e,s)},uchar:(n,e,t,s)=>{n.setUint8(e,s)},short:(n,e,t,s)=>{n.setInt16(e,s,t)},ushort:(n,e,t,s)=>{n.setUint16(e,s,t)},int:(n,e,t,s)=>{n.setInt32(e,s,t)},uint:(n,e,t,s)=>{n.setUint32(e,s,t)},float:(n,e,t,s)=>{n.setFloat32(e,s,t)},double:(n,e,t,s)=>{n.setFloat64(e,s,t)}},Vo={char:1,uchar:1,short:2,ushort:2,int:4,uint:4,float:4,double:8},by={char:127,uchar:255,short:32767,ushort:65535,int:2147483647,uint:4294967295,float:1,double:1},IW={0:0,9:1,24:2,45:3},wW={0:0,1:9,2:24,3:45},iI=/^f_rest_([0-9]{1,2})$/;function SW(n){const e={};for(const[t,s]of Object.entries(n))iI.test(t)?e.f_rest=new Array(Rv(n)):e[t]=s.isList?[]:0;return e}function EW(n,e){return BW(n)?kW(n,e):NW(n,e)}const _W=(()=>{try{new Function("return 42;")}catch{return!1}return!0})(),TW=/^[a-zA-Z0-9_]+$/;function BW(n){if(!_W)return!1;for(const[e,t]of Object.entries(n))if(!TW.test(e)||t.isList&&!QE.includes(t.countType)||!QE.includes(t.type))return!1;return!0}function kW(n,e){const t=["let list;"];for(const[r,i]of Object.entries(n)){const o=r.match(iI);if(o){const a=+o[1];t.push(`
        item.f_rest[${a}] = PARSE_FIELD['${i.type}'](data, offset, ${e});
        offset += ${Vo[i.type]};
      `)}else i.isList?t.push(`
        list = item['${r}'];
        list.length = PARSE_FIELD['${i.countType}'](data, offset, ${e});
        offset += ${Vo[i.countType]};
        for (let i = 0; i < list.length; i++) {
          list[i] = PARSE_FIELD['${i.type}'](data, offset, ${e});
          offset += ${Vo[i.type]};
        }
      `):t.push(`
        item['${r}'] = PARSE_FIELD['${i.type}'](data, offset, ${e});
        offset += ${Vo[i.type]};
      `)}t.push("return offset;");const s=new Function("data","offset","item","PARSE_FIELD",t.join(`
`));return(r,i,o)=>s(r,i,o,kd)}function NW(n,e){const t=[];for(const[s,r]of Object.entries(n)){const i=s.match(iI);if(i){const o=+i[1];t.push((a,l,c)=>(c.f_rest[o]=kd[r.type](a,l,e),l+Vo[r.type]))}else r.isList?t.push((o,a,l)=>{const c=l[s];c.length=kd[r.countType](o,a,e);let u=a+Vo[r.countType];for(let h=0;h<c.length;h++)c[h]=kd[r.type](o,u,e),u+=Vo[r.type];return u}):t.push((o,a,l)=>(l[s]=kd[r.type](o,a,e),a+Vo[r.type]))}return(s,r,i)=>{let o=r;for(let a=0;a<t.length;a++)o=t[a](s,o,i);return o}}function Rv(n){let e=0;for(;n[`f_rest_${e}`];)e+=1;const t=IW[e];if(t==null)throw new Error(`Unsupported number of SH coefficients: ${e}`);return t}const pk=`(function() {
  "use strict";
  let wasm;
  const cachedTextDecoder = typeof TextDecoder !== "undefined" ? new TextDecoder("utf-8", { ignoreBOM: true, fatal: true }) : { decode: () => {
    throw Error("TextDecoder not available");
  } };
  if (typeof TextDecoder !== "undefined") {
    cachedTextDecoder.decode();
  }
  let cachedUint8ArrayMemory0 = null;
  function getUint8ArrayMemory0() {
    if (cachedUint8ArrayMemory0 === null || cachedUint8ArrayMemory0.byteLength === 0) {
      cachedUint8ArrayMemory0 = new Uint8Array(wasm.memory.buffer);
    }
    return cachedUint8ArrayMemory0;
  }
  function getStringFromWasm0(ptr, len) {
    ptr = ptr >>> 0;
    return cachedTextDecoder.decode(getUint8ArrayMemory0().subarray(ptr, ptr + len));
  }
  function sort_splats(num_splats, readback, ordering) {
    const ret = wasm.sort_splats(num_splats, readback, ordering);
    return ret >>> 0;
  }
  function sort32_splats(num_splats, readback, ordering) {
    const ret = wasm.sort32_splats(num_splats, readback, ordering);
    return ret >>> 0;
  }
  async function __wbg_load(module, imports) {
    if (typeof Response === "function" && module instanceof Response) {
      if (typeof WebAssembly.instantiateStreaming === "function") {
        try {
          return await WebAssembly.instantiateStreaming(module, imports);
        } catch (e) {
          if (module.headers.get("Content-Type") != "application/wasm") {
            console.warn("\`WebAssembly.instantiateStreaming\` failed because your server does not serve Wasm with \`application/wasm\` MIME type. Falling back to \`WebAssembly.instantiate\` which is slower. Original error:\\n", e);
          } else {
            throw e;
          }
        }
      }
      const bytes = await module.arrayBuffer();
      return await WebAssembly.instantiate(bytes, imports);
    } else {
      const instance = await WebAssembly.instantiate(module, imports);
      if (instance instanceof WebAssembly.Instance) {
        return { instance, module };
      } else {
        return instance;
      }
    }
  }
  function __wbg_get_imports() {
    const imports = {};
    imports.wbg = {};
    imports.wbg.__wbg_buffer_609cc3eee51ed158 = function(arg0) {
      const ret = arg0.buffer;
      return ret;
    };
    imports.wbg.__wbg_length_3b4f022188ae8db6 = function(arg0) {
      const ret = arg0.length;
      return ret;
    };
    imports.wbg.__wbg_length_6ca527665d89694d = function(arg0) {
      const ret = arg0.length;
      return ret;
    };
    imports.wbg.__wbg_length_8cfd2c6409af88ad = function(arg0) {
      const ret = arg0.length;
      return ret;
    };
    imports.wbg.__wbg_new_9fee97a409b32b68 = function(arg0) {
      const ret = new Uint16Array(arg0);
      return ret;
    };
    imports.wbg.__wbg_new_e3b321dcfef89fc7 = function(arg0) {
      const ret = new Uint32Array(arg0);
      return ret;
    };
    imports.wbg.__wbg_newwithbyteoffsetandlength_e6b7e69acd4c7354 = function(arg0, arg1, arg2) {
      const ret = new Float32Array(arg0, arg1 >>> 0, arg2 >>> 0);
      return ret;
    };
    imports.wbg.__wbg_newwithbyteoffsetandlength_f1dead44d1fc7212 = function(arg0, arg1, arg2) {
      const ret = new Uint32Array(arg0, arg1 >>> 0, arg2 >>> 0);
      return ret;
    };
    imports.wbg.__wbg_newwithlength_5a5efe313cfd59f1 = function(arg0) {
      const ret = new Float32Array(arg0 >>> 0);
      return ret;
    };
    imports.wbg.__wbg_set_10bad9bee0e9c58b = function(arg0, arg1, arg2) {
      arg0.set(arg1, arg2 >>> 0);
    };
    imports.wbg.__wbg_set_d23661d19148b229 = function(arg0, arg1, arg2) {
      arg0.set(arg1, arg2 >>> 0);
    };
    imports.wbg.__wbg_set_f4f1f0daa30696fc = function(arg0, arg1, arg2) {
      arg0.set(arg1, arg2 >>> 0);
    };
    imports.wbg.__wbg_subarray_3aaeec89bb2544f0 = function(arg0, arg1, arg2) {
      const ret = arg0.subarray(arg1 >>> 0, arg2 >>> 0);
      return ret;
    };
    imports.wbg.__wbg_subarray_769e1e0f81bb259b = function(arg0, arg1, arg2) {
      const ret = arg0.subarray(arg1 >>> 0, arg2 >>> 0);
      return ret;
    };
    imports.wbg.__wbindgen_init_externref_table = function() {
      const table = wasm.__wbindgen_export_0;
      const offset = table.grow(4);
      table.set(0, void 0);
      table.set(offset + 0, void 0);
      table.set(offset + 1, null);
      table.set(offset + 2, true);
      table.set(offset + 3, false);
    };
    imports.wbg.__wbindgen_memory = function() {
      const ret = wasm.memory;
      return ret;
    };
    imports.wbg.__wbindgen_throw = function(arg0, arg1) {
      throw new Error(getStringFromWasm0(arg0, arg1));
    };
    return imports;
  }
  function __wbg_finalize_init(instance, module) {
    wasm = instance.exports;
    __wbg_init.__wbindgen_wasm_module = module;
    cachedUint8ArrayMemory0 = null;
    wasm.__wbindgen_start();
    return wasm;
  }
  async function __wbg_init(module_or_path) {
    if (wasm !== void 0) return wasm;
    if (typeof module_or_path !== "undefined") {
      if (Object.getPrototypeOf(module_or_path) === Object.prototype) {
        ({ module_or_path } = module_or_path);
      } else {
        console.warn("using deprecated parameters for the initialization function; pass a single object instead");
      }
    }
    if (typeof module_or_path === "undefined") {
      module_or_path = new URL("data:application/wasm;base64,", self.location.href);
    }
    const imports = __wbg_get_imports();
    if (typeof module_or_path === "string" || typeof Request === "function" && module_or_path instanceof Request || typeof URL === "function" && module_or_path instanceof URL) {
      module_or_path = fetch(module_or_path);
    }
    const { instance, module } = await __wbg_load(await module_or_path, imports);
    return __wbg_finalize_init(instance, module);
  }
  var ch2 = {};
  var wk = function(c, id, msg, transfer, cb) {
    var w = new Worker(ch2[id] || (ch2[id] = URL.createObjectURL(new Blob([
      c + ';addEventListener("error",function(e){e=e.error;postMessage({$e$:[e.message,e.code,e.stack]})})'
    ], { type: "text/javascript" }))));
    w.onmessage = function(e) {
      var d = e.data, ed = d.$e$;
      if (ed) {
        var err2 = new Error(ed[0]);
        err2["code"] = ed[1];
        err2.stack = ed[2];
        cb(err2, null);
      } else
        cb(null, d);
    };
    w.postMessage(msg, transfer);
    return w;
  };
  var u8 = Uint8Array, u16 = Uint16Array, i32 = Int32Array;
  var fleb = new u8([
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    1,
    1,
    1,
    1,
    2,
    2,
    2,
    2,
    3,
    3,
    3,
    3,
    4,
    4,
    4,
    4,
    5,
    5,
    5,
    5,
    0,
    /* unused */
    0,
    0,
    /* impossible */
    0
  ]);
  var fdeb = new u8([
    0,
    0,
    0,
    0,
    1,
    1,
    2,
    2,
    3,
    3,
    4,
    4,
    5,
    5,
    6,
    6,
    7,
    7,
    8,
    8,
    9,
    9,
    10,
    10,
    11,
    11,
    12,
    12,
    13,
    13,
    /* unused */
    0,
    0
  ]);
  var clim = new u8([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]);
  var freb = function(eb, start) {
    var b = new u16(31);
    for (var i2 = 0; i2 < 31; ++i2) {
      b[i2] = start += 1 << eb[i2 - 1];
    }
    var r = new i32(b[30]);
    for (var i2 = 1; i2 < 30; ++i2) {
      for (var j = b[i2]; j < b[i2 + 1]; ++j) {
        r[j] = j - b[i2] << 5 | i2;
      }
    }
    return { b, r };
  };
  var _a = freb(fleb, 2), fl = _a.b, revfl = _a.r;
  fl[28] = 258, revfl[258] = 28;
  var _b = freb(fdeb, 0), fd = _b.b;
  var rev = new u16(32768);
  for (var i = 0; i < 32768; ++i) {
    var x = (i & 43690) >> 1 | (i & 21845) << 1;
    x = (x & 52428) >> 2 | (x & 13107) << 2;
    x = (x & 61680) >> 4 | (x & 3855) << 4;
    rev[i] = ((x & 65280) >> 8 | (x & 255) << 8) >> 1;
  }
  var hMap = function(cd, mb, r) {
    var s = cd.length;
    var i2 = 0;
    var l = new u16(mb);
    for (; i2 < s; ++i2) {
      if (cd[i2])
        ++l[cd[i2] - 1];
    }
    var le = new u16(mb);
    for (i2 = 1; i2 < mb; ++i2) {
      le[i2] = le[i2 - 1] + l[i2 - 1] << 1;
    }
    var co;
    if (r) {
      co = new u16(1 << mb);
      var rvb = 15 - mb;
      for (i2 = 0; i2 < s; ++i2) {
        if (cd[i2]) {
          var sv = i2 << 4 | cd[i2];
          var r_1 = mb - cd[i2];
          var v = le[cd[i2] - 1]++ << r_1;
          for (var m = v | (1 << r_1) - 1; v <= m; ++v) {
            co[rev[v] >> rvb] = sv;
          }
        }
      }
    } else {
      co = new u16(s);
      for (i2 = 0; i2 < s; ++i2) {
        if (cd[i2]) {
          co[i2] = rev[le[cd[i2] - 1]++] >> 15 - cd[i2];
        }
      }
    }
    return co;
  };
  var flt = new u8(288);
  for (var i = 0; i < 144; ++i)
    flt[i] = 8;
  for (var i = 144; i < 256; ++i)
    flt[i] = 9;
  for (var i = 256; i < 280; ++i)
    flt[i] = 7;
  for (var i = 280; i < 288; ++i)
    flt[i] = 8;
  var fdt = new u8(32);
  for (var i = 0; i < 32; ++i)
    fdt[i] = 5;
  var flrm = /* @__PURE__ */ hMap(flt, 9, 1);
  var fdrm = /* @__PURE__ */ hMap(fdt, 5, 1);
  var max = function(a) {
    var m = a[0];
    for (var i2 = 1; i2 < a.length; ++i2) {
      if (a[i2] > m)
        m = a[i2];
    }
    return m;
  };
  var bits = function(d, p, m) {
    var o = p / 8 | 0;
    return (d[o] | d[o + 1] << 8) >> (p & 7) & m;
  };
  var bits16 = function(d, p) {
    var o = p / 8 | 0;
    return (d[o] | d[o + 1] << 8 | d[o + 2] << 16) >> (p & 7);
  };
  var shft = function(p) {
    return (p + 7) / 8 | 0;
  };
  var slc = function(v, s, e) {
    if (s == null || s < 0)
      s = 0;
    if (e == null || e > v.length)
      e = v.length;
    return new u8(v.subarray(s, e));
  };
  var ec = [
    "unexpected EOF",
    "invalid block type",
    "invalid length/literal",
    "invalid distance",
    "stream finished",
    "no stream handler",
    ,
    "no callback",
    "invalid UTF-8 data",
    "extra field too long",
    "date not in range 1980-2099",
    "filename too long",
    "stream finishing",
    "invalid zip data"
    // determined by unknown compression method
  ];
  var err = function(ind, msg, nt) {
    var e = new Error(msg || ec[ind]);
    e.code = ind;
    if (Error.captureStackTrace)
      Error.captureStackTrace(e, err);
    if (!nt)
      throw e;
    return e;
  };
  var inflt = function(dat, st, buf, dict) {
    var sl = dat.length, dl = dict ? dict.length : 0;
    if (!sl || st.f && !st.l)
      return buf || new u8(0);
    var noBuf = !buf;
    var resize = noBuf || st.i != 2;
    var noSt = st.i;
    if (noBuf)
      buf = new u8(sl * 3);
    var cbuf = function(l2) {
      var bl = buf.length;
      if (l2 > bl) {
        var nbuf = new u8(Math.max(bl * 2, l2));
        nbuf.set(buf);
        buf = nbuf;
      }
    };
    var final = st.f || 0, pos = st.p || 0, bt = st.b || 0, lm = st.l, dm = st.d, lbt = st.m, dbt = st.n;
    var tbts = sl * 8;
    do {
      if (!lm) {
        final = bits(dat, pos, 1);
        var type = bits(dat, pos + 1, 3);
        pos += 3;
        if (!type) {
          var s = shft(pos) + 4, l = dat[s - 4] | dat[s - 3] << 8, t = s + l;
          if (t > sl) {
            if (noSt)
              err(0);
            break;
          }
          if (resize)
            cbuf(bt + l);
          buf.set(dat.subarray(s, t), bt);
          st.b = bt += l, st.p = pos = t * 8, st.f = final;
          continue;
        } else if (type == 1)
          lm = flrm, dm = fdrm, lbt = 9, dbt = 5;
        else if (type == 2) {
          var hLit = bits(dat, pos, 31) + 257, hcLen = bits(dat, pos + 10, 15) + 4;
          var tl = hLit + bits(dat, pos + 5, 31) + 1;
          pos += 14;
          var ldt = new u8(tl);
          var clt = new u8(19);
          for (var i2 = 0; i2 < hcLen; ++i2) {
            clt[clim[i2]] = bits(dat, pos + i2 * 3, 7);
          }
          pos += hcLen * 3;
          var clb = max(clt), clbmsk = (1 << clb) - 1;
          var clm = hMap(clt, clb, 1);
          for (var i2 = 0; i2 < tl; ) {
            var r = clm[bits(dat, pos, clbmsk)];
            pos += r & 15;
            var s = r >> 4;
            if (s < 16) {
              ldt[i2++] = s;
            } else {
              var c = 0, n = 0;
              if (s == 16)
                n = 3 + bits(dat, pos, 3), pos += 2, c = ldt[i2 - 1];
              else if (s == 17)
                n = 3 + bits(dat, pos, 7), pos += 3;
              else if (s == 18)
                n = 11 + bits(dat, pos, 127), pos += 7;
              while (n--)
                ldt[i2++] = c;
            }
          }
          var lt = ldt.subarray(0, hLit), dt = ldt.subarray(hLit);
          lbt = max(lt);
          dbt = max(dt);
          lm = hMap(lt, lbt, 1);
          dm = hMap(dt, dbt, 1);
        } else
          err(1);
        if (pos > tbts) {
          if (noSt)
            err(0);
          break;
        }
      }
      if (resize)
        cbuf(bt + 131072);
      var lms = (1 << lbt) - 1, dms = (1 << dbt) - 1;
      var lpos = pos;
      for (; ; lpos = pos) {
        var c = lm[bits16(dat, pos) & lms], sym = c >> 4;
        pos += c & 15;
        if (pos > tbts) {
          if (noSt)
            err(0);
          break;
        }
        if (!c)
          err(2);
        if (sym < 256)
          buf[bt++] = sym;
        else if (sym == 256) {
          lpos = pos, lm = null;
          break;
        } else {
          var add = sym - 254;
          if (sym > 264) {
            var i2 = sym - 257, b = fleb[i2];
            add = bits(dat, pos, (1 << b) - 1) + fl[i2];
            pos += b;
          }
          var d = dm[bits16(dat, pos) & dms], dsym = d >> 4;
          if (!d)
            err(3);
          pos += d & 15;
          var dt = fd[dsym];
          if (dsym > 3) {
            var b = fdeb[dsym];
            dt += bits16(dat, pos) & (1 << b) - 1, pos += b;
          }
          if (pos > tbts) {
            if (noSt)
              err(0);
            break;
          }
          if (resize)
            cbuf(bt + 131072);
          var end = bt + add;
          if (bt < dt) {
            var shift = dl - dt, dend = Math.min(dt, end);
            if (shift + bt < 0)
              err(3);
            for (; bt < dend; ++bt)
              buf[bt] = dict[shift + bt];
          }
          for (; bt < end; ++bt)
            buf[bt] = buf[bt - dt];
        }
      }
      st.l = lm, st.p = lpos, st.b = bt, st.f = final;
      if (lm)
        final = 1, st.m = lbt, st.d = dm, st.n = dbt;
    } while (!final);
    return bt != buf.length && noBuf ? slc(buf, 0, bt) : buf.subarray(0, bt);
  };
  var et = /* @__PURE__ */ new u8(0);
  var mrg = function(a, b) {
    var o = {};
    for (var k in a)
      o[k] = a[k];
    for (var k in b)
      o[k] = b[k];
    return o;
  };
  var wcln = function(fn, fnStr, td2) {
    var dt = fn();
    var st = fn.toString();
    var ks = st.slice(st.indexOf("[") + 1, st.lastIndexOf("]")).replace(/\\s+/g, "").split(",");
    for (var i2 = 0; i2 < dt.length; ++i2) {
      var v = dt[i2], k = ks[i2];
      if (typeof v == "function") {
        fnStr += ";" + k + "=";
        var st_1 = v.toString();
        if (v.prototype) {
          if (st_1.indexOf("[native code]") != -1) {
            var spInd = st_1.indexOf(" ", 8) + 1;
            fnStr += st_1.slice(spInd, st_1.indexOf("(", spInd));
          } else {
            fnStr += st_1;
            for (var t in v.prototype)
              fnStr += ";" + k + ".prototype." + t + "=" + v.prototype[t].toString();
          }
        } else
          fnStr += st_1;
      } else
        td2[k] = v;
    }
    return fnStr;
  };
  var ch = [];
  var cbfs = function(v) {
    var tl = [];
    for (var k in v) {
      if (v[k].buffer) {
        tl.push((v[k] = new v[k].constructor(v[k])).buffer);
      }
    }
    return tl;
  };
  var wrkr = function(fns, init, id, cb) {
    if (!ch[id]) {
      var fnStr = "", td_1 = {}, m = fns.length - 1;
      for (var i2 = 0; i2 < m; ++i2)
        fnStr = wcln(fns[i2], fnStr, td_1);
      ch[id] = { c: wcln(fns[m], fnStr, td_1), e: td_1 };
    }
    var td2 = mrg({}, ch[id].e);
    return wk(ch[id].c + ";onmessage=function(e){for(var k in e.data)self[k]=e.data[k];onmessage=" + init.toString() + "}", id, td2, cbfs(td2), cb);
  };
  var bInflt = function() {
    return [u8, u16, i32, fleb, fdeb, clim, fl, fd, flrm, fdrm, rev, ec, hMap, max, bits, bits16, shft, slc, err, inflt, inflateSync, pbf, gopt];
  };
  var pbf = function(msg) {
    return postMessage(msg, [msg.buffer]);
  };
  var gopt = function(o) {
    return o && {
      out: o.size && new u8(o.size),
      dictionary: o.dictionary
    };
  };
  var cbify = function(dat, opts, fns, init, id, cb) {
    var w = wrkr(fns, init, id, function(err2, dat2) {
      w.terminate();
      cb(err2, dat2);
    });
    w.postMessage([dat, opts], opts.consume ? [dat.buffer] : []);
    return function() {
      w.terminate();
    };
  };
  var b2 = function(d, b) {
    return d[b] | d[b + 1] << 8;
  };
  var b4 = function(d, b) {
    return (d[b] | d[b + 1] << 8 | d[b + 2] << 16 | d[b + 3] << 24) >>> 0;
  };
  var b8 = function(d, b) {
    return b4(d, b) + b4(d, b + 4) * 4294967296;
  };
  var gzs = function(d) {
    if (d[0] != 31 || d[1] != 139 || d[2] != 8)
      err(6, "invalid gzip data");
    var flg = d[3];
    var st = 10;
    if (flg & 4)
      st += (d[10] | d[11] << 8) + 2;
    for (var zs = (flg >> 3 & 1) + (flg >> 4 & 1); zs > 0; zs -= !d[st++])
      ;
    return st + (flg & 2);
  };
  var Inflate = /* @__PURE__ */ function() {
    function Inflate2(opts, cb) {
      if (typeof opts == "function")
        cb = opts, opts = {};
      this.ondata = cb;
      var dict = opts && opts.dictionary && opts.dictionary.subarray(-32768);
      this.s = { i: 0, b: dict ? dict.length : 0 };
      this.o = new u8(32768);
      this.p = new u8(0);
      if (dict)
        this.o.set(dict);
    }
    Inflate2.prototype.e = function(c) {
      if (!this.ondata)
        err(5);
      if (this.d)
        err(4);
      if (!this.p.length)
        this.p = c;
      else if (c.length) {
        var n = new u8(this.p.length + c.length);
        n.set(this.p), n.set(c, this.p.length), this.p = n;
      }
    };
    Inflate2.prototype.c = function(final) {
      this.s.i = +(this.d = final || false);
      var bts = this.s.b;
      var dt = inflt(this.p, this.s, this.o);
      this.ondata(slc(dt, bts, this.s.b), this.d);
      this.o = slc(dt, this.s.b - 32768), this.s.b = this.o.length;
      this.p = slc(this.p, this.s.p / 8 | 0), this.s.p &= 7;
    };
    Inflate2.prototype.push = function(chunk, final) {
      this.e(chunk), this.c(final);
    };
    return Inflate2;
  }();
  function inflate(data, opts, cb) {
    if (!cb)
      cb = opts, opts = {};
    if (typeof cb != "function")
      err(7);
    return cbify(data, opts, [
      bInflt
    ], function(ev) {
      return pbf(inflateSync(ev.data[0], gopt(ev.data[1])));
    }, 1, cb);
  }
  function inflateSync(data, opts) {
    return inflt(data, { i: 2 }, opts && opts.out, opts && opts.dictionary);
  }
  var Gunzip = /* @__PURE__ */ function() {
    function Gunzip2(opts, cb) {
      this.v = 1;
      this.r = 0;
      Inflate.call(this, opts, cb);
    }
    Gunzip2.prototype.push = function(chunk, final) {
      Inflate.prototype.e.call(this, chunk);
      this.r += chunk.length;
      if (this.v) {
        var p = this.p.subarray(this.v - 1);
        var s = p.length > 3 ? gzs(p) : 4;
        if (s > p.length) {
          if (!final)
            return;
        } else if (this.v > 1 && this.onmember) {
          this.onmember(this.r - p.length);
        }
        this.p = p.subarray(s), this.v = 0;
      }
      Inflate.prototype.c.call(this, final);
      if (this.s.f && !this.s.l && !final) {
        this.v = shft(this.s.p) + 9;
        this.s = { i: 0 };
        this.o = new u8(0);
        this.push(new u8(0), final);
      }
    };
    return Gunzip2;
  }();
  var td = typeof TextDecoder != "undefined" && /* @__PURE__ */ new TextDecoder();
  try {
    td.decode(et, { stream: true });
  } catch (e) {
  }
  var dutf8 = function(d) {
    for (var r = "", i2 = 0; ; ) {
      var c = d[i2++];
      var eb = (c > 127) + (c > 223) + (c > 239);
      if (i2 + eb > d.length)
        return { s: r, r: slc(d, i2 - 1) };
      if (!eb)
        r += String.fromCharCode(c);
      else if (eb == 3) {
        c = ((c & 15) << 18 | (d[i2++] & 63) << 12 | (d[i2++] & 63) << 6 | d[i2++] & 63) - 65536, r += String.fromCharCode(55296 | c >> 10, 56320 | c & 1023);
      } else if (eb & 1)
        r += String.fromCharCode((c & 31) << 6 | d[i2++] & 63);
      else
        r += String.fromCharCode((c & 15) << 12 | (d[i2++] & 63) << 6 | d[i2++] & 63);
    }
  };
  function strFromU8(dat, latin1) {
    if (latin1) {
      var r = "";
      for (var i2 = 0; i2 < dat.length; i2 += 16384)
        r += String.fromCharCode.apply(null, dat.subarray(i2, i2 + 16384));
      return r;
    } else if (td) {
      return td.decode(dat);
    } else {
      var _a2 = dutf8(dat), s = _a2.s, r = _a2.r;
      if (r.length)
        err(8);
      return s;
    }
  }
  var slzh = function(d, b) {
    return b + 30 + b2(d, b + 26) + b2(d, b + 28);
  };
  var zh = function(d, b, z) {
    var fnl = b2(d, b + 28), fn = strFromU8(d.subarray(b + 46, b + 46 + fnl), !(b2(d, b + 8) & 2048)), es = b + 46 + fnl, bs = b4(d, b + 20);
    var _a2 = z && bs == 4294967295 ? z64e(d, es) : [bs, b4(d, b + 24), b4(d, b + 42)], sc = _a2[0], su = _a2[1], off = _a2[2];
    return [b2(d, b + 10), sc, su, fn, es + b2(d, b + 30) + b2(d, b + 32), off];
  };
  var z64e = function(d, b) {
    for (; b2(d, b) != 1; b += 4 + b2(d, b + 2))
      ;
    return [b8(d, b + 12), b8(d, b + 4), b8(d, b + 20)];
  };
  var mt = typeof queueMicrotask == "function" ? queueMicrotask : typeof setTimeout == "function" ? setTimeout : function(fn) {
    fn();
  };
  function unzip(data, opts, cb) {
    if (!cb)
      cb = opts, opts = {};
    if (typeof cb != "function")
      err(7);
    var term = [];
    var tAll = function() {
      for (var i3 = 0; i3 < term.length; ++i3)
        term[i3]();
    };
    var files = {};
    var cbd = function(a, b) {
      mt(function() {
        cb(a, b);
      });
    };
    mt(function() {
      cbd = cb;
    });
    var e = data.length - 22;
    for (; b4(data, e) != 101010256; --e) {
      if (!e || data.length - e > 65558) {
        cbd(err(13, 0, 1), null);
        return tAll;
      }
    }
    var lft = b2(data, e + 8);
    if (lft) {
      var c = lft;
      var o = b4(data, e + 16);
      var z = o == 4294967295 || c == 65535;
      if (z) {
        var ze = b4(data, e - 12);
        z = b4(data, ze) == 101075792;
        if (z) {
          c = lft = b4(data, ze + 32);
          o = b4(data, ze + 48);
        }
      }
      var fltr = opts && opts.filter;
      var _loop_3 = function(i3) {
        var _a2 = zh(data, o, z), c_1 = _a2[0], sc = _a2[1], su = _a2[2], fn = _a2[3], no = _a2[4], off = _a2[5], b = slzh(data, off);
        o = no;
        var cbl = function(e2, d) {
          if (e2) {
            tAll();
            cbd(e2, null);
          } else {
            if (d)
              files[fn] = d;
            if (!--lft)
              cbd(null, files);
          }
        };
        if (!fltr || fltr({
          name: fn,
          size: sc,
          originalSize: su,
          compression: c_1
        })) {
          if (!c_1)
            cbl(null, slc(data, b, b + sc));
          else if (c_1 == 8) {
            var infl = data.subarray(b, b + sc);
            if (su < 524288 || sc > 0.8 * su) {
              try {
                cbl(null, inflateSync(infl, { out: new u8(su) }));
              } catch (e2) {
                cbl(e2, null);
              }
            } else
              term.push(inflate(infl, { size: su }, cbl));
          } else
            cbl(err(14, "unknown compression type " + c_1, 1), null);
        } else
          cbl(null, null);
      };
      for (var i2 = 0; i2 < c; ++i2) {
        _loop_3(i2);
      }
    } else
      cbd(null, {});
    return tAll;
  }
  function unzipSync(data, opts) {
    var files = {};
    var e = data.length - 22;
    for (; b4(data, e) != 101010256; --e) {
      if (!e || data.length - e > 65558)
        err(13);
    }
    var c = b2(data, e + 8);
    if (!c)
      return {};
    var o = b4(data, e + 16);
    var z = o == 4294967295 || c == 65535;
    if (z) {
      var ze = b4(data, e - 12);
      z = b4(data, ze) == 101075792;
      if (z) {
        c = b4(data, ze + 32);
        o = b4(data, ze + 48);
      }
    }
    var fltr = opts && opts.filter;
    for (var i2 = 0; i2 < c; ++i2) {
      var _a2 = zh(data, o, z), c_2 = _a2[0], sc = _a2[1], su = _a2[2], fn = _a2[3], no = _a2[4], off = _a2[5], b = slzh(data, off);
      o = no;
      if (!fltr || fltr({
        name: fn,
        size: sc,
        originalSize: su,
        compression: c_2
      })) {
        if (!c_2)
          files[fn] = slc(data, b, b + sc);
        else if (c_2 == 8)
          files[fn] = inflateSync(data.subarray(b, b + sc), { out: new u8(su) });
        else
          err(14, "unknown compression type " + c_2);
      }
    }
    return files;
  }
  /**
   * @license
   * Copyright 2010-2025 Three.js Authors
   * SPDX-License-Identifier: MIT
   */
  const REVISION = "178";
  const NoColorSpace = "";
  const SRGBColorSpace = "srgb";
  const LinearSRGBColorSpace = "srgb-linear";
  const LinearTransfer = "linear";
  const SRGBTransfer = "srgb";
  function clamp(value, min, max2) {
    return Math.max(min, Math.min(max2, value));
  }
  function euclideanModulo(n, m) {
    return (n % m + m) % m;
  }
  function lerp(x2, y, t) {
    return (1 - t) * x2 + t * y;
  }
  class Quaternion {
    /**
     * Constructs a new quaternion.
     *
     * @param {number} [x=0] - The x value of this quaternion.
     * @param {number} [y=0] - The y value of this quaternion.
     * @param {number} [z=0] - The z value of this quaternion.
     * @param {number} [w=1] - The w value of this quaternion.
     */
    constructor(x2 = 0, y = 0, z = 0, w = 1) {
      this.isQuaternion = true;
      this._x = x2;
      this._y = y;
      this._z = z;
      this._w = w;
    }
    /**
     * Interpolates between two quaternions via SLERP. This implementation assumes the
     * quaternion data are managed  in flat arrays.
     *
     * @param {Array<number>} dst - The destination array.
     * @param {number} dstOffset - An offset into the destination array.
     * @param {Array<number>} src0 - The source array of the first quaternion.
     * @param {number} srcOffset0 - An offset into the first source array.
     * @param {Array<number>} src1 -  The source array of the second quaternion.
     * @param {number} srcOffset1 - An offset into the second source array.
     * @param {number} t - The interpolation factor in the range \`[0,1]\`.
     * @see {@link Quaternion#slerp}
     */
    static slerpFlat(dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t) {
      let x0 = src0[srcOffset0 + 0], y0 = src0[srcOffset0 + 1], z0 = src0[srcOffset0 + 2], w0 = src0[srcOffset0 + 3];
      const x1 = src1[srcOffset1 + 0], y1 = src1[srcOffset1 + 1], z1 = src1[srcOffset1 + 2], w1 = src1[srcOffset1 + 3];
      if (t === 0) {
        dst[dstOffset + 0] = x0;
        dst[dstOffset + 1] = y0;
        dst[dstOffset + 2] = z0;
        dst[dstOffset + 3] = w0;
        return;
      }
      if (t === 1) {
        dst[dstOffset + 0] = x1;
        dst[dstOffset + 1] = y1;
        dst[dstOffset + 2] = z1;
        dst[dstOffset + 3] = w1;
        return;
      }
      if (w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1) {
        let s = 1 - t;
        const cos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1, dir = cos >= 0 ? 1 : -1, sqrSin = 1 - cos * cos;
        if (sqrSin > Number.EPSILON) {
          const sin = Math.sqrt(sqrSin), len = Math.atan2(sin, cos * dir);
          s = Math.sin(s * len) / sin;
          t = Math.sin(t * len) / sin;
        }
        const tDir = t * dir;
        x0 = x0 * s + x1 * tDir;
        y0 = y0 * s + y1 * tDir;
        z0 = z0 * s + z1 * tDir;
        w0 = w0 * s + w1 * tDir;
        if (s === 1 - t) {
          const f = 1 / Math.sqrt(x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0);
          x0 *= f;
          y0 *= f;
          z0 *= f;
          w0 *= f;
        }
      }
      dst[dstOffset] = x0;
      dst[dstOffset + 1] = y0;
      dst[dstOffset + 2] = z0;
      dst[dstOffset + 3] = w0;
    }
    /**
     * Multiplies two quaternions. This implementation assumes the quaternion data are managed
     * in flat arrays.
     *
     * @param {Array<number>} dst - The destination array.
     * @param {number} dstOffset - An offset into the destination array.
     * @param {Array<number>} src0 - The source array of the first quaternion.
     * @param {number} srcOffset0 - An offset into the first source array.
     * @param {Array<number>} src1 -  The source array of the second quaternion.
     * @param {number} srcOffset1 - An offset into the second source array.
     * @return {Array<number>} The destination array.
     * @see {@link Quaternion#multiplyQuaternions}.
     */
    static multiplyQuaternionsFlat(dst, dstOffset, src0, srcOffset0, src1, srcOffset1) {
      const x0 = src0[srcOffset0];
      const y0 = src0[srcOffset0 + 1];
      const z0 = src0[srcOffset0 + 2];
      const w0 = src0[srcOffset0 + 3];
      const x1 = src1[srcOffset1];
      const y1 = src1[srcOffset1 + 1];
      const z1 = src1[srcOffset1 + 2];
      const w1 = src1[srcOffset1 + 3];
      dst[dstOffset] = x0 * w1 + w0 * x1 + y0 * z1 - z0 * y1;
      dst[dstOffset + 1] = y0 * w1 + w0 * y1 + z0 * x1 - x0 * z1;
      dst[dstOffset + 2] = z0 * w1 + w0 * z1 + x0 * y1 - y0 * x1;
      dst[dstOffset + 3] = w0 * w1 - x0 * x1 - y0 * y1 - z0 * z1;
      return dst;
    }
    /**
     * The x value of this quaternion.
     *
     * @type {number}
     * @default 0
     */
    get x() {
      return this._x;
    }
    set x(value) {
      this._x = value;
      this._onChangeCallback();
    }
    /**
     * The y value of this quaternion.
     *
     * @type {number}
     * @default 0
     */
    get y() {
      return this._y;
    }
    set y(value) {
      this._y = value;
      this._onChangeCallback();
    }
    /**
     * The z value of this quaternion.
     *
     * @type {number}
     * @default 0
     */
    get z() {
      return this._z;
    }
    set z(value) {
      this._z = value;
      this._onChangeCallback();
    }
    /**
     * The w value of this quaternion.
     *
     * @type {number}
     * @default 1
     */
    get w() {
      return this._w;
    }
    set w(value) {
      this._w = value;
      this._onChangeCallback();
    }
    /**
     * Sets the quaternion components.
     *
     * @param {number} x - The x value of this quaternion.
     * @param {number} y - The y value of this quaternion.
     * @param {number} z - The z value of this quaternion.
     * @param {number} w - The w value of this quaternion.
     * @return {Quaternion} A reference to this quaternion.
     */
    set(x2, y, z, w) {
      this._x = x2;
      this._y = y;
      this._z = z;
      this._w = w;
      this._onChangeCallback();
      return this;
    }
    /**
     * Returns a new quaternion with copied values from this instance.
     *
     * @return {Quaternion} A clone of this instance.
     */
    clone() {
      return new this.constructor(this._x, this._y, this._z, this._w);
    }
    /**
     * Copies the values of the given quaternion to this instance.
     *
     * @param {Quaternion} quaternion - The quaternion to copy.
     * @return {Quaternion} A reference to this quaternion.
     */
    copy(quaternion) {
      this._x = quaternion.x;
      this._y = quaternion.y;
      this._z = quaternion.z;
      this._w = quaternion.w;
      this._onChangeCallback();
      return this;
    }
    /**
     * Sets this quaternion from the rotation specified by the given
     * Euler angles.
     *
     * @param {Euler} euler - The Euler angles.
     * @param {boolean} [update=true] - Whether the internal \`onChange\` callback should be executed or not.
     * @return {Quaternion} A reference to this quaternion.
     */
    setFromEuler(euler, update = true) {
      const x2 = euler._x, y = euler._y, z = euler._z, order = euler._order;
      const cos = Math.cos;
      const sin = Math.sin;
      const c1 = cos(x2 / 2);
      const c2 = cos(y / 2);
      const c3 = cos(z / 2);
      const s1 = sin(x2 / 2);
      const s2 = sin(y / 2);
      const s3 = sin(z / 2);
      switch (order) {
        case "XYZ":
          this._x = s1 * c2 * c3 + c1 * s2 * s3;
          this._y = c1 * s2 * c3 - s1 * c2 * s3;
          this._z = c1 * c2 * s3 + s1 * s2 * c3;
          this._w = c1 * c2 * c3 - s1 * s2 * s3;
          break;
        case "YXZ":
          this._x = s1 * c2 * c3 + c1 * s2 * s3;
          this._y = c1 * s2 * c3 - s1 * c2 * s3;
          this._z = c1 * c2 * s3 - s1 * s2 * c3;
          this._w = c1 * c2 * c3 + s1 * s2 * s3;
          break;
        case "ZXY":
          this._x = s1 * c2 * c3 - c1 * s2 * s3;
          this._y = c1 * s2 * c3 + s1 * c2 * s3;
          this._z = c1 * c2 * s3 + s1 * s2 * c3;
          this._w = c1 * c2 * c3 - s1 * s2 * s3;
          break;
        case "ZYX":
          this._x = s1 * c2 * c3 - c1 * s2 * s3;
          this._y = c1 * s2 * c3 + s1 * c2 * s3;
          this._z = c1 * c2 * s3 - s1 * s2 * c3;
          this._w = c1 * c2 * c3 + s1 * s2 * s3;
          break;
        case "YZX":
          this._x = s1 * c2 * c3 + c1 * s2 * s3;
          this._y = c1 * s2 * c3 + s1 * c2 * s3;
          this._z = c1 * c2 * s3 - s1 * s2 * c3;
          this._w = c1 * c2 * c3 - s1 * s2 * s3;
          break;
        case "XZY":
          this._x = s1 * c2 * c3 - c1 * s2 * s3;
          this._y = c1 * s2 * c3 - s1 * c2 * s3;
          this._z = c1 * c2 * s3 + s1 * s2 * c3;
          this._w = c1 * c2 * c3 + s1 * s2 * s3;
          break;
        default:
          console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: " + order);
      }
      if (update === true) this._onChangeCallback();
      return this;
    }
    /**
     * Sets this quaternion from the given axis and angle.
     *
     * @param {Vector3} axis - The normalized axis.
     * @param {number} angle - The angle in radians.
     * @return {Quaternion} A reference to this quaternion.
     */
    setFromAxisAngle(axis, angle) {
      const halfAngle = angle / 2, s = Math.sin(halfAngle);
      this._x = axis.x * s;
      this._y = axis.y * s;
      this._z = axis.z * s;
      this._w = Math.cos(halfAngle);
      this._onChangeCallback();
      return this;
    }
    /**
     * Sets this quaternion from the given rotation matrix.
     *
     * @param {Matrix4} m - A 4x4 matrix of which the upper 3x3 of matrix is a pure rotation matrix (i.e. unscaled).
     * @return {Quaternion} A reference to this quaternion.
     */
    setFromRotationMatrix(m) {
      const te = m.elements, m11 = te[0], m12 = te[4], m13 = te[8], m21 = te[1], m22 = te[5], m23 = te[9], m31 = te[2], m32 = te[6], m33 = te[10], trace = m11 + m22 + m33;
      if (trace > 0) {
        const s = 0.5 / Math.sqrt(trace + 1);
        this._w = 0.25 / s;
        this._x = (m32 - m23) * s;
        this._y = (m13 - m31) * s;
        this._z = (m21 - m12) * s;
      } else if (m11 > m22 && m11 > m33) {
        const s = 2 * Math.sqrt(1 + m11 - m22 - m33);
        this._w = (m32 - m23) / s;
        this._x = 0.25 * s;
        this._y = (m12 + m21) / s;
        this._z = (m13 + m31) / s;
      } else if (m22 > m33) {
        const s = 2 * Math.sqrt(1 + m22 - m11 - m33);
        this._w = (m13 - m31) / s;
        this._x = (m12 + m21) / s;
        this._y = 0.25 * s;
        this._z = (m23 + m32) / s;
      } else {
        const s = 2 * Math.sqrt(1 + m33 - m11 - m22);
        this._w = (m21 - m12) / s;
        this._x = (m13 + m31) / s;
        this._y = (m23 + m32) / s;
        this._z = 0.25 * s;
      }
      this._onChangeCallback();
      return this;
    }
    /**
     * Sets this quaternion to the rotation required to rotate the direction vector
     * \`vFrom\` to the direction vector \`vTo\`.
     *
     * @param {Vector3} vFrom - The first (normalized) direction vector.
     * @param {Vector3} vTo - The second (normalized) direction vector.
     * @return {Quaternion} A reference to this quaternion.
     */
    setFromUnitVectors(vFrom, vTo) {
      let r = vFrom.dot(vTo) + 1;
      if (r < 1e-8) {
        r = 0;
        if (Math.abs(vFrom.x) > Math.abs(vFrom.z)) {
          this._x = -vFrom.y;
          this._y = vFrom.x;
          this._z = 0;
          this._w = r;
        } else {
          this._x = 0;
          this._y = -vFrom.z;
          this._z = vFrom.y;
          this._w = r;
        }
      } else {
        this._x = vFrom.y * vTo.z - vFrom.z * vTo.y;
        this._y = vFrom.z * vTo.x - vFrom.x * vTo.z;
        this._z = vFrom.x * vTo.y - vFrom.y * vTo.x;
        this._w = r;
      }
      return this.normalize();
    }
    /**
     * Returns the angle between this quaternion and the given one in radians.
     *
     * @param {Quaternion} q - The quaternion to compute the angle with.
     * @return {number} The angle in radians.
     */
    angleTo(q) {
      return 2 * Math.acos(Math.abs(clamp(this.dot(q), -1, 1)));
    }
    /**
     * Rotates this quaternion by a given angular step to the given quaternion.
     * The method ensures that the final quaternion will not overshoot \`q\`.
     *
     * @param {Quaternion} q - The target quaternion.
     * @param {number} step - The angular step in radians.
     * @return {Quaternion} A reference to this quaternion.
     */
    rotateTowards(q, step) {
      const angle = this.angleTo(q);
      if (angle === 0) return this;
      const t = Math.min(1, step / angle);
      this.slerp(q, t);
      return this;
    }
    /**
     * Sets this quaternion to the identity quaternion; that is, to the
     * quaternion that represents "no rotation".
     *
     * @return {Quaternion} A reference to this quaternion.
     */
    identity() {
      return this.set(0, 0, 0, 1);
    }
    /**
     * Inverts this quaternion via {@link Quaternion#conjugate}. The
     * quaternion is assumed to have unit length.
     *
     * @return {Quaternion} A reference to this quaternion.
     */
    invert() {
      return this.conjugate();
    }
    /**
     * Returns the rotational conjugate of this quaternion. The conjugate of a
     * quaternion represents the same rotation in the opposite direction about
     * the rotational axis.
     *
     * @return {Quaternion} A reference to this quaternion.
     */
    conjugate() {
      this._x *= -1;
      this._y *= -1;
      this._z *= -1;
      this._onChangeCallback();
      return this;
    }
    /**
     * Calculates the dot product of this quaternion and the given one.
     *
     * @param {Quaternion} v - The quaternion to compute the dot product with.
     * @return {number} The result of the dot product.
     */
    dot(v) {
      return this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;
    }
    /**
     * Computes the squared Euclidean length (straight-line length) of this quaternion,
     * considered as a 4 dimensional vector. This can be useful if you are comparing the
     * lengths of two quaternions, as this is a slightly more efficient calculation than
     * {@link Quaternion#length}.
     *
     * @return {number} The squared Euclidean length.
     */
    lengthSq() {
      return this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;
    }
    /**
     * Computes the Euclidean length (straight-line length) of this quaternion,
     * considered as a 4 dimensional vector.
     *
     * @return {number} The Euclidean length.
     */
    length() {
      return Math.sqrt(this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w);
    }
    /**
     * Normalizes this quaternion - that is, calculated the quaternion that performs
     * the same rotation as this one, but has a length equal to \`1\`.
     *
     * @return {Quaternion} A reference to this quaternion.
     */
    normalize() {
      let l = this.length();
      if (l === 0) {
        this._x = 0;
        this._y = 0;
        this._z = 0;
        this._w = 1;
      } else {
        l = 1 / l;
        this._x = this._x * l;
        this._y = this._y * l;
        this._z = this._z * l;
        this._w = this._w * l;
      }
      this._onChangeCallback();
      return this;
    }
    /**
     * Multiplies this quaternion by the given one.
     *
     * @param {Quaternion} q - The quaternion.
     * @return {Quaternion} A reference to this quaternion.
     */
    multiply(q) {
      return this.multiplyQuaternions(this, q);
    }
    /**
     * Pre-multiplies this quaternion by the given one.
     *
     * @param {Quaternion} q - The quaternion.
     * @return {Quaternion} A reference to this quaternion.
     */
    premultiply(q) {
      return this.multiplyQuaternions(q, this);
    }
    /**
     * Multiplies the given quaternions and stores the result in this instance.
     *
     * @param {Quaternion} a - The first quaternion.
     * @param {Quaternion} b - The second quaternion.
     * @return {Quaternion} A reference to this quaternion.
     */
    multiplyQuaternions(a, b) {
      const qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;
      const qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;
      this._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;
      this._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;
      this._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;
      this._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;
      this._onChangeCallback();
      return this;
    }
    /**
     * Performs a spherical linear interpolation between quaternions.
     *
     * @param {Quaternion} qb - The target quaternion.
     * @param {number} t - The interpolation factor in the closed interval \`[0, 1]\`.
     * @return {Quaternion} A reference to this quaternion.
     */
    slerp(qb, t) {
      if (t === 0) return this;
      if (t === 1) return this.copy(qb);
      const x2 = this._x, y = this._y, z = this._z, w = this._w;
      let cosHalfTheta = w * qb._w + x2 * qb._x + y * qb._y + z * qb._z;
      if (cosHalfTheta < 0) {
        this._w = -qb._w;
        this._x = -qb._x;
        this._y = -qb._y;
        this._z = -qb._z;
        cosHalfTheta = -cosHalfTheta;
      } else {
        this.copy(qb);
      }
      if (cosHalfTheta >= 1) {
        this._w = w;
        this._x = x2;
        this._y = y;
        this._z = z;
        return this;
      }
      const sqrSinHalfTheta = 1 - cosHalfTheta * cosHalfTheta;
      if (sqrSinHalfTheta <= Number.EPSILON) {
        const s = 1 - t;
        this._w = s * w + t * this._w;
        this._x = s * x2 + t * this._x;
        this._y = s * y + t * this._y;
        this._z = s * z + t * this._z;
        this.normalize();
        return this;
      }
      const sinHalfTheta = Math.sqrt(sqrSinHalfTheta);
      const halfTheta = Math.atan2(sinHalfTheta, cosHalfTheta);
      const ratioA = Math.sin((1 - t) * halfTheta) / sinHalfTheta, ratioB = Math.sin(t * halfTheta) / sinHalfTheta;
      this._w = w * ratioA + this._w * ratioB;
      this._x = x2 * ratioA + this._x * ratioB;
      this._y = y * ratioA + this._y * ratioB;
      this._z = z * ratioA + this._z * ratioB;
      this._onChangeCallback();
      return this;
    }
    /**
     * Performs a spherical linear interpolation between the given quaternions
     * and stores the result in this quaternion.
     *
     * @param {Quaternion} qa - The source quaternion.
     * @param {Quaternion} qb - The target quaternion.
     * @param {number} t - The interpolation factor in the closed interval \`[0, 1]\`.
     * @return {Quaternion} A reference to this quaternion.
     */
    slerpQuaternions(qa, qb, t) {
      return this.copy(qa).slerp(qb, t);
    }
    /**
     * Sets this quaternion to a uniformly random, normalized quaternion.
     *
     * @return {Quaternion} A reference to this quaternion.
     */
    random() {
      const theta1 = 2 * Math.PI * Math.random();
      const theta2 = 2 * Math.PI * Math.random();
      const x0 = Math.random();
      const r1 = Math.sqrt(1 - x0);
      const r2 = Math.sqrt(x0);
      return this.set(
        r1 * Math.sin(theta1),
        r1 * Math.cos(theta1),
        r2 * Math.sin(theta2),
        r2 * Math.cos(theta2)
      );
    }
    /**
     * Returns \`true\` if this quaternion is equal with the given one.
     *
     * @param {Quaternion} quaternion - The quaternion to test for equality.
     * @return {boolean} Whether this quaternion is equal with the given one.
     */
    equals(quaternion) {
      return quaternion._x === this._x && quaternion._y === this._y && quaternion._z === this._z && quaternion._w === this._w;
    }
    /**
     * Sets this quaternion's components from the given array.
     *
     * @param {Array<number>} array - An array holding the quaternion component values.
     * @param {number} [offset=0] - The offset into the array.
     * @return {Quaternion} A reference to this quaternion.
     */
    fromArray(array, offset = 0) {
      this._x = array[offset];
      this._y = array[offset + 1];
      this._z = array[offset + 2];
      this._w = array[offset + 3];
      this._onChangeCallback();
      return this;
    }
    /**
     * Writes the components of this quaternion to the given array. If no array is provided,
     * the method returns a new instance.
     *
     * @param {Array<number>} [array=[]] - The target array holding the quaternion components.
     * @param {number} [offset=0] - Index of the first element in the array.
     * @return {Array<number>} The quaternion components.
     */
    toArray(array = [], offset = 0) {
      array[offset] = this._x;
      array[offset + 1] = this._y;
      array[offset + 2] = this._z;
      array[offset + 3] = this._w;
      return array;
    }
    /**
     * Sets the components of this quaternion from the given buffer attribute.
     *
     * @param {BufferAttribute} attribute - The buffer attribute holding quaternion data.
     * @param {number} index - The index into the attribute.
     * @return {Quaternion} A reference to this quaternion.
     */
    fromBufferAttribute(attribute, index) {
      this._x = attribute.getX(index);
      this._y = attribute.getY(index);
      this._z = attribute.getZ(index);
      this._w = attribute.getW(index);
      this._onChangeCallback();
      return this;
    }
    /**
     * This methods defines the serialization result of this class. Returns the
     * numerical elements of this quaternion in an array of format \`[x, y, z, w]\`.
     *
     * @return {Array<number>} The serialized quaternion.
     */
    toJSON() {
      return this.toArray();
    }
    _onChange(callback) {
      this._onChangeCallback = callback;
      return this;
    }
    _onChangeCallback() {
    }
    *[Symbol.iterator]() {
      yield this._x;
      yield this._y;
      yield this._z;
      yield this._w;
    }
  }
  class Vector3 {
    /**
     * Constructs a new 3D vector.
     *
     * @param {number} [x=0] - The x value of this vector.
     * @param {number} [y=0] - The y value of this vector.
     * @param {number} [z=0] - The z value of this vector.
     */
    constructor(x2 = 0, y = 0, z = 0) {
      Vector3.prototype.isVector3 = true;
      this.x = x2;
      this.y = y;
      this.z = z;
    }
    /**
     * Sets the vector components.
     *
     * @param {number} x - The value of the x component.
     * @param {number} y - The value of the y component.
     * @param {number} z - The value of the z component.
     * @return {Vector3} A reference to this vector.
     */
    set(x2, y, z) {
      if (z === void 0) z = this.z;
      this.x = x2;
      this.y = y;
      this.z = z;
      return this;
    }
    /**
     * Sets the vector components to the same value.
     *
     * @param {number} scalar - The value to set for all vector components.
     * @return {Vector3} A reference to this vector.
     */
    setScalar(scalar) {
      this.x = scalar;
      this.y = scalar;
      this.z = scalar;
      return this;
    }
    /**
     * Sets the vector's x component to the given value
     *
     * @param {number} x - The value to set.
     * @return {Vector3} A reference to this vector.
     */
    setX(x2) {
      this.x = x2;
      return this;
    }
    /**
     * Sets the vector's y component to the given value
     *
     * @param {number} y - The value to set.
     * @return {Vector3} A reference to this vector.
     */
    setY(y) {
      this.y = y;
      return this;
    }
    /**
     * Sets the vector's z component to the given value
     *
     * @param {number} z - The value to set.
     * @return {Vector3} A reference to this vector.
     */
    setZ(z) {
      this.z = z;
      return this;
    }
    /**
     * Allows to set a vector component with an index.
     *
     * @param {number} index - The component index. \`0\` equals to x, \`1\` equals to y, \`2\` equals to z.
     * @param {number} value - The value to set.
     * @return {Vector3} A reference to this vector.
     */
    setComponent(index, value) {
      switch (index) {
        case 0:
          this.x = value;
          break;
        case 1:
          this.y = value;
          break;
        case 2:
          this.z = value;
          break;
        default:
          throw new Error("index is out of range: " + index);
      }
      return this;
    }
    /**
     * Returns the value of the vector component which matches the given index.
     *
     * @param {number} index - The component index. \`0\` equals to x, \`1\` equals to y, \`2\` equals to z.
     * @return {number} A vector component value.
     */
    getComponent(index) {
      switch (index) {
        case 0:
          return this.x;
        case 1:
          return this.y;
        case 2:
          return this.z;
        default:
          throw new Error("index is out of range: " + index);
      }
    }
    /**
     * Returns a new vector with copied values from this instance.
     *
     * @return {Vector3} A clone of this instance.
     */
    clone() {
      return new this.constructor(this.x, this.y, this.z);
    }
    /**
     * Copies the values of the given vector to this instance.
     *
     * @param {Vector3} v - The vector to copy.
     * @return {Vector3} A reference to this vector.
     */
    copy(v) {
      this.x = v.x;
      this.y = v.y;
      this.z = v.z;
      return this;
    }
    /**
     * Adds the given vector to this instance.
     *
     * @param {Vector3} v - The vector to add.
     * @return {Vector3} A reference to this vector.
     */
    add(v) {
      this.x += v.x;
      this.y += v.y;
      this.z += v.z;
      return this;
    }
    /**
     * Adds the given scalar value to all components of this instance.
     *
     * @param {number} s - The scalar to add.
     * @return {Vector3} A reference to this vector.
     */
    addScalar(s) {
      this.x += s;
      this.y += s;
      this.z += s;
      return this;
    }
    /**
     * Adds the given vectors and stores the result in this instance.
     *
     * @param {Vector3} a - The first vector.
     * @param {Vector3} b - The second vector.
     * @return {Vector3} A reference to this vector.
     */
    addVectors(a, b) {
      this.x = a.x + b.x;
      this.y = a.y + b.y;
      this.z = a.z + b.z;
      return this;
    }
    /**
     * Adds the given vector scaled by the given factor to this instance.
     *
     * @param {Vector3|Vector4} v - The vector.
     * @param {number} s - The factor that scales \`v\`.
     * @return {Vector3} A reference to this vector.
     */
    addScaledVector(v, s) {
      this.x += v.x * s;
      this.y += v.y * s;
      this.z += v.z * s;
      return this;
    }
    /**
     * Subtracts the given vector from this instance.
     *
     * @param {Vector3} v - The vector to subtract.
     * @return {Vector3} A reference to this vector.
     */
    sub(v) {
      this.x -= v.x;
      this.y -= v.y;
      this.z -= v.z;
      return this;
    }
    /**
     * Subtracts the given scalar value from all components of this instance.
     *
     * @param {number} s - The scalar to subtract.
     * @return {Vector3} A reference to this vector.
     */
    subScalar(s) {
      this.x -= s;
      this.y -= s;
      this.z -= s;
      return this;
    }
    /**
     * Subtracts the given vectors and stores the result in this instance.
     *
     * @param {Vector3} a - The first vector.
     * @param {Vector3} b - The second vector.
     * @return {Vector3} A reference to this vector.
     */
    subVectors(a, b) {
      this.x = a.x - b.x;
      this.y = a.y - b.y;
      this.z = a.z - b.z;
      return this;
    }
    /**
     * Multiplies the given vector with this instance.
     *
     * @param {Vector3} v - The vector to multiply.
     * @return {Vector3} A reference to this vector.
     */
    multiply(v) {
      this.x *= v.x;
      this.y *= v.y;
      this.z *= v.z;
      return this;
    }
    /**
     * Multiplies the given scalar value with all components of this instance.
     *
     * @param {number} scalar - The scalar to multiply.
     * @return {Vector3} A reference to this vector.
     */
    multiplyScalar(scalar) {
      this.x *= scalar;
      this.y *= scalar;
      this.z *= scalar;
      return this;
    }
    /**
     * Multiplies the given vectors and stores the result in this instance.
     *
     * @param {Vector3} a - The first vector.
     * @param {Vector3} b - The second vector.
     * @return {Vector3} A reference to this vector.
     */
    multiplyVectors(a, b) {
      this.x = a.x * b.x;
      this.y = a.y * b.y;
      this.z = a.z * b.z;
      return this;
    }
    /**
     * Applies the given Euler rotation to this vector.
     *
     * @param {Euler} euler - The Euler angles.
     * @return {Vector3} A reference to this vector.
     */
    applyEuler(euler) {
      return this.applyQuaternion(_quaternion$4.setFromEuler(euler));
    }
    /**
     * Applies a rotation specified by an axis and an angle to this vector.
     *
     * @param {Vector3} axis - A normalized vector representing the rotation axis.
     * @param {number} angle - The angle in radians.
     * @return {Vector3} A reference to this vector.
     */
    applyAxisAngle(axis, angle) {
      return this.applyQuaternion(_quaternion$4.setFromAxisAngle(axis, angle));
    }
    /**
     * Multiplies this vector with the given 3x3 matrix.
     *
     * @param {Matrix3} m - The 3x3 matrix.
     * @return {Vector3} A reference to this vector.
     */
    applyMatrix3(m) {
      const x2 = this.x, y = this.y, z = this.z;
      const e = m.elements;
      this.x = e[0] * x2 + e[3] * y + e[6] * z;
      this.y = e[1] * x2 + e[4] * y + e[7] * z;
      this.z = e[2] * x2 + e[5] * y + e[8] * z;
      return this;
    }
    /**
     * Multiplies this vector by the given normal matrix and normalizes
     * the result.
     *
     * @param {Matrix3} m - The normal matrix.
     * @return {Vector3} A reference to this vector.
     */
    applyNormalMatrix(m) {
      return this.applyMatrix3(m).normalize();
    }
    /**
     * Multiplies this vector (with an implicit 1 in the 4th dimension) by m, and
     * divides by perspective.
     *
     * @param {Matrix4} m - The matrix to apply.
     * @return {Vector3} A reference to this vector.
     */
    applyMatrix4(m) {
      const x2 = this.x, y = this.y, z = this.z;
      const e = m.elements;
      const w = 1 / (e[3] * x2 + e[7] * y + e[11] * z + e[15]);
      this.x = (e[0] * x2 + e[4] * y + e[8] * z + e[12]) * w;
      this.y = (e[1] * x2 + e[5] * y + e[9] * z + e[13]) * w;
      this.z = (e[2] * x2 + e[6] * y + e[10] * z + e[14]) * w;
      return this;
    }
    /**
     * Applies the given Quaternion to this vector.
     *
     * @param {Quaternion} q - The Quaternion.
     * @return {Vector3} A reference to this vector.
     */
    applyQuaternion(q) {
      const vx = this.x, vy = this.y, vz = this.z;
      const qx = q.x, qy = q.y, qz = q.z, qw = q.w;
      const tx = 2 * (qy * vz - qz * vy);
      const ty = 2 * (qz * vx - qx * vz);
      const tz = 2 * (qx * vy - qy * vx);
      this.x = vx + qw * tx + qy * tz - qz * ty;
      this.y = vy + qw * ty + qz * tx - qx * tz;
      this.z = vz + qw * tz + qx * ty - qy * tx;
      return this;
    }
    /**
     * Projects this vector from world space into the camera's normalized
     * device coordinate (NDC) space.
     *
     * @param {Camera} camera - The camera.
     * @return {Vector3} A reference to this vector.
     */
    project(camera) {
      return this.applyMatrix4(camera.matrixWorldInverse).applyMatrix4(camera.projectionMatrix);
    }
    /**
     * Unprojects this vector from the camera's normalized device coordinate (NDC)
     * space into world space.
     *
     * @param {Camera} camera - The camera.
     * @return {Vector3} A reference to this vector.
     */
    unproject(camera) {
      return this.applyMatrix4(camera.projectionMatrixInverse).applyMatrix4(camera.matrixWorld);
    }
    /**
     * Transforms the direction of this vector by a matrix (the upper left 3 x 3
     * subset of the given 4x4 matrix and then normalizes the result.
     *
     * @param {Matrix4} m - The matrix.
     * @return {Vector3} A reference to this vector.
     */
    transformDirection(m) {
      const x2 = this.x, y = this.y, z = this.z;
      const e = m.elements;
      this.x = e[0] * x2 + e[4] * y + e[8] * z;
      this.y = e[1] * x2 + e[5] * y + e[9] * z;
      this.z = e[2] * x2 + e[6] * y + e[10] * z;
      return this.normalize();
    }
    /**
     * Divides this instance by the given vector.
     *
     * @param {Vector3} v - The vector to divide.
     * @return {Vector3} A reference to this vector.
     */
    divide(v) {
      this.x /= v.x;
      this.y /= v.y;
      this.z /= v.z;
      return this;
    }
    /**
     * Divides this vector by the given scalar.
     *
     * @param {number} scalar - The scalar to divide.
     * @return {Vector3} A reference to this vector.
     */
    divideScalar(scalar) {
      return this.multiplyScalar(1 / scalar);
    }
    /**
     * If this vector's x, y or z value is greater than the given vector's x, y or z
     * value, replace that value with the corresponding min value.
     *
     * @param {Vector3} v - The vector.
     * @return {Vector3} A reference to this vector.
     */
    min(v) {
      this.x = Math.min(this.x, v.x);
      this.y = Math.min(this.y, v.y);
      this.z = Math.min(this.z, v.z);
      return this;
    }
    /**
     * If this vector's x, y or z value is less than the given vector's x, y or z
     * value, replace that value with the corresponding max value.
     *
     * @param {Vector3} v - The vector.
     * @return {Vector3} A reference to this vector.
     */
    max(v) {
      this.x = Math.max(this.x, v.x);
      this.y = Math.max(this.y, v.y);
      this.z = Math.max(this.z, v.z);
      return this;
    }
    /**
     * If this vector's x, y or z value is greater than the max vector's x, y or z
     * value, it is replaced by the corresponding value.
     * If this vector's x, y or z value is less than the min vector's x, y or z value,
     * it is replaced by the corresponding value.
     *
     * @param {Vector3} min - The minimum x, y and z values.
     * @param {Vector3} max - The maximum x, y and z values in the desired range.
     * @return {Vector3} A reference to this vector.
     */
    clamp(min, max2) {
      this.x = clamp(this.x, min.x, max2.x);
      this.y = clamp(this.y, min.y, max2.y);
      this.z = clamp(this.z, min.z, max2.z);
      return this;
    }
    /**
     * If this vector's x, y or z values are greater than the max value, they are
     * replaced by the max value.
     * If this vector's x, y or z values are less than the min value, they are
     * replaced by the min value.
     *
     * @param {number} minVal - The minimum value the components will be clamped to.
     * @param {number} maxVal - The maximum value the components will be clamped to.
     * @return {Vector3} A reference to this vector.
     */
    clampScalar(minVal, maxVal) {
      this.x = clamp(this.x, minVal, maxVal);
      this.y = clamp(this.y, minVal, maxVal);
      this.z = clamp(this.z, minVal, maxVal);
      return this;
    }
    /**
     * If this vector's length is greater than the max value, it is replaced by
     * the max value.
     * If this vector's length is less than the min value, it is replaced by the
     * min value.
     *
     * @param {number} min - The minimum value the vector length will be clamped to.
     * @param {number} max - The maximum value the vector length will be clamped to.
     * @return {Vector3} A reference to this vector.
     */
    clampLength(min, max2) {
      const length = this.length();
      return this.divideScalar(length || 1).multiplyScalar(clamp(length, min, max2));
    }
    /**
     * The components of this vector are rounded down to the nearest integer value.
     *
     * @return {Vector3} A reference to this vector.
     */
    floor() {
      this.x = Math.floor(this.x);
      this.y = Math.floor(this.y);
      this.z = Math.floor(this.z);
      return this;
    }
    /**
     * The components of this vector are rounded up to the nearest integer value.
     *
     * @return {Vector3} A reference to this vector.
     */
    ceil() {
      this.x = Math.ceil(this.x);
      this.y = Math.ceil(this.y);
      this.z = Math.ceil(this.z);
      return this;
    }
    /**
     * The components of this vector are rounded to the nearest integer value
     *
     * @return {Vector3} A reference to this vector.
     */
    round() {
      this.x = Math.round(this.x);
      this.y = Math.round(this.y);
      this.z = Math.round(this.z);
      return this;
    }
    /**
     * The components of this vector are rounded towards zero (up if negative,
     * down if positive) to an integer value.
     *
     * @return {Vector3} A reference to this vector.
     */
    roundToZero() {
      this.x = Math.trunc(this.x);
      this.y = Math.trunc(this.y);
      this.z = Math.trunc(this.z);
      return this;
    }
    /**
     * Inverts this vector - i.e. sets x = -x, y = -y and z = -z.
     *
     * @return {Vector3} A reference to this vector.
     */
    negate() {
      this.x = -this.x;
      this.y = -this.y;
      this.z = -this.z;
      return this;
    }
    /**
     * Calculates the dot product of the given vector with this instance.
     *
     * @param {Vector3} v - The vector to compute the dot product with.
     * @return {number} The result of the dot product.
     */
    dot(v) {
      return this.x * v.x + this.y * v.y + this.z * v.z;
    }
    // TODO lengthSquared?
    /**
     * Computes the square of the Euclidean length (straight-line length) from
     * (0, 0, 0) to (x, y, z). If you are comparing the lengths of vectors, you should
     * compare the length squared instead as it is slightly more efficient to calculate.
     *
     * @return {number} The square length of this vector.
     */
    lengthSq() {
      return this.x * this.x + this.y * this.y + this.z * this.z;
    }
    /**
     * Computes the  Euclidean length (straight-line length) from (0, 0, 0) to (x, y, z).
     *
     * @return {number} The length of this vector.
     */
    length() {
      return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);
    }
    /**
     * Computes the Manhattan length of this vector.
     *
     * @return {number} The length of this vector.
     */
    manhattanLength() {
      return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z);
    }
    /**
     * Converts this vector to a unit vector - that is, sets it equal to a vector
     * with the same direction as this one, but with a vector length of \`1\`.
     *
     * @return {Vector3} A reference to this vector.
     */
    normalize() {
      return this.divideScalar(this.length() || 1);
    }
    /**
     * Sets this vector to a vector with the same direction as this one, but
     * with the specified length.
     *
     * @param {number} length - The new length of this vector.
     * @return {Vector3} A reference to this vector.
     */
    setLength(length) {
      return this.normalize().multiplyScalar(length);
    }
    /**
     * Linearly interpolates between the given vector and this instance, where
     * alpha is the percent distance along the line - alpha = 0 will be this
     * vector, and alpha = 1 will be the given one.
     *
     * @param {Vector3} v - The vector to interpolate towards.
     * @param {number} alpha - The interpolation factor, typically in the closed interval \`[0, 1]\`.
     * @return {Vector3} A reference to this vector.
     */
    lerp(v, alpha) {
      this.x += (v.x - this.x) * alpha;
      this.y += (v.y - this.y) * alpha;
      this.z += (v.z - this.z) * alpha;
      return this;
    }
    /**
     * Linearly interpolates between the given vectors, where alpha is the percent
     * distance along the line - alpha = 0 will be first vector, and alpha = 1 will
     * be the second one. The result is stored in this instance.
     *
     * @param {Vector3} v1 - The first vector.
     * @param {Vector3} v2 - The second vector.
     * @param {number} alpha - The interpolation factor, typically in the closed interval \`[0, 1]\`.
     * @return {Vector3} A reference to this vector.
     */
    lerpVectors(v1, v2, alpha) {
      this.x = v1.x + (v2.x - v1.x) * alpha;
      this.y = v1.y + (v2.y - v1.y) * alpha;
      this.z = v1.z + (v2.z - v1.z) * alpha;
      return this;
    }
    /**
     * Calculates the cross product of the given vector with this instance.
     *
     * @param {Vector3} v - The vector to compute the cross product with.
     * @return {Vector3} The result of the cross product.
     */
    cross(v) {
      return this.crossVectors(this, v);
    }
    /**
     * Calculates the cross product of the given vectors and stores the result
     * in this instance.
     *
     * @param {Vector3} a - The first vector.
     * @param {Vector3} b - The second vector.
     * @return {Vector3} A reference to this vector.
     */
    crossVectors(a, b) {
      const ax = a.x, ay = a.y, az = a.z;
      const bx = b.x, by = b.y, bz = b.z;
      this.x = ay * bz - az * by;
      this.y = az * bx - ax * bz;
      this.z = ax * by - ay * bx;
      return this;
    }
    /**
     * Projects this vector onto the given one.
     *
     * @param {Vector3} v - The vector to project to.
     * @return {Vector3} A reference to this vector.
     */
    projectOnVector(v) {
      const denominator = v.lengthSq();
      if (denominator === 0) return this.set(0, 0, 0);
      const scalar = v.dot(this) / denominator;
      return this.copy(v).multiplyScalar(scalar);
    }
    /**
     * Projects this vector onto a plane by subtracting this
     * vector projected onto the plane's normal from this vector.
     *
     * @param {Vector3} planeNormal - The plane normal.
     * @return {Vector3} A reference to this vector.
     */
    projectOnPlane(planeNormal) {
      _vector$c.copy(this).projectOnVector(planeNormal);
      return this.sub(_vector$c);
    }
    /**
     * Reflects this vector off a plane orthogonal to the given normal vector.
     *
     * @param {Vector3} normal - The (normalized) normal vector.
     * @return {Vector3} A reference to this vector.
     */
    reflect(normal) {
      return this.sub(_vector$c.copy(normal).multiplyScalar(2 * this.dot(normal)));
    }
    /**
     * Returns the angle between the given vector and this instance in radians.
     *
     * @param {Vector3} v - The vector to compute the angle with.
     * @return {number} The angle in radians.
     */
    angleTo(v) {
      const denominator = Math.sqrt(this.lengthSq() * v.lengthSq());
      if (denominator === 0) return Math.PI / 2;
      const theta = this.dot(v) / denominator;
      return Math.acos(clamp(theta, -1, 1));
    }
    /**
     * Computes the distance from the given vector to this instance.
     *
     * @param {Vector3} v - The vector to compute the distance to.
     * @return {number} The distance.
     */
    distanceTo(v) {
      return Math.sqrt(this.distanceToSquared(v));
    }
    /**
     * Computes the squared distance from the given vector to this instance.
     * If you are just comparing the distance with another distance, you should compare
     * the distance squared instead as it is slightly more efficient to calculate.
     *
     * @param {Vector3} v - The vector to compute the squared distance to.
     * @return {number} The squared distance.
     */
    distanceToSquared(v) {
      const dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z;
      return dx * dx + dy * dy + dz * dz;
    }
    /**
     * Computes the Manhattan distance from the given vector to this instance.
     *
     * @param {Vector3} v - The vector to compute the Manhattan distance to.
     * @return {number} The Manhattan distance.
     */
    manhattanDistanceTo(v) {
      return Math.abs(this.x - v.x) + Math.abs(this.y - v.y) + Math.abs(this.z - v.z);
    }
    /**
     * Sets the vector components from the given spherical coordinates.
     *
     * @param {Spherical} s - The spherical coordinates.
     * @return {Vector3} A reference to this vector.
     */
    setFromSpherical(s) {
      return this.setFromSphericalCoords(s.radius, s.phi, s.theta);
    }
    /**
     * Sets the vector components from the given spherical coordinates.
     *
     * @param {number} radius - The radius.
     * @param {number} phi - The phi angle in radians.
     * @param {number} theta - The theta angle in radians.
     * @return {Vector3} A reference to this vector.
     */
    setFromSphericalCoords(radius, phi, theta) {
      const sinPhiRadius = Math.sin(phi) * radius;
      this.x = sinPhiRadius * Math.sin(theta);
      this.y = Math.cos(phi) * radius;
      this.z = sinPhiRadius * Math.cos(theta);
      return this;
    }
    /**
     * Sets the vector components from the given cylindrical coordinates.
     *
     * @param {Cylindrical} c - The cylindrical coordinates.
     * @return {Vector3} A reference to this vector.
     */
    setFromCylindrical(c) {
      return this.setFromCylindricalCoords(c.radius, c.theta, c.y);
    }
    /**
     * Sets the vector components from the given cylindrical coordinates.
     *
     * @param {number} radius - The radius.
     * @param {number} theta - The theta angle in radians.
     * @param {number} y - The y value.
     * @return {Vector3} A reference to this vector.
     */
    setFromCylindricalCoords(radius, theta, y) {
      this.x = radius * Math.sin(theta);
      this.y = y;
      this.z = radius * Math.cos(theta);
      return this;
    }
    /**
     * Sets the vector components to the position elements of the
     * given transformation matrix.
     *
     * @param {Matrix4} m - The 4x4 matrix.
     * @return {Vector3} A reference to this vector.
     */
    setFromMatrixPosition(m) {
      const e = m.elements;
      this.x = e[12];
      this.y = e[13];
      this.z = e[14];
      return this;
    }
    /**
     * Sets the vector components to the scale elements of the
     * given transformation matrix.
     *
     * @param {Matrix4} m - The 4x4 matrix.
     * @return {Vector3} A reference to this vector.
     */
    setFromMatrixScale(m) {
      const sx = this.setFromMatrixColumn(m, 0).length();
      const sy = this.setFromMatrixColumn(m, 1).length();
      const sz = this.setFromMatrixColumn(m, 2).length();
      this.x = sx;
      this.y = sy;
      this.z = sz;
      return this;
    }
    /**
     * Sets the vector components from the specified matrix column.
     *
     * @param {Matrix4} m - The 4x4 matrix.
     * @param {number} index - The column index.
     * @return {Vector3} A reference to this vector.
     */
    setFromMatrixColumn(m, index) {
      return this.fromArray(m.elements, index * 4);
    }
    /**
     * Sets the vector components from the specified matrix column.
     *
     * @param {Matrix3} m - The 3x3 matrix.
     * @param {number} index - The column index.
     * @return {Vector3} A reference to this vector.
     */
    setFromMatrix3Column(m, index) {
      return this.fromArray(m.elements, index * 3);
    }
    /**
     * Sets the vector components from the given Euler angles.
     *
     * @param {Euler} e - The Euler angles to set.
     * @return {Vector3} A reference to this vector.
     */
    setFromEuler(e) {
      this.x = e._x;
      this.y = e._y;
      this.z = e._z;
      return this;
    }
    /**
     * Sets the vector components from the RGB components of the
     * given color.
     *
     * @param {Color} c - The color to set.
     * @return {Vector3} A reference to this vector.
     */
    setFromColor(c) {
      this.x = c.r;
      this.y = c.g;
      this.z = c.b;
      return this;
    }
    /**
     * Returns \`true\` if this vector is equal with the given one.
     *
     * @param {Vector3} v - The vector to test for equality.
     * @return {boolean} Whether this vector is equal with the given one.
     */
    equals(v) {
      return v.x === this.x && v.y === this.y && v.z === this.z;
    }
    /**
     * Sets this vector's x value to be \`array[ offset ]\`, y value to be \`array[ offset + 1 ]\`
     * and z value to be \`array[ offset + 2 ]\`.
     *
     * @param {Array<number>} array - An array holding the vector component values.
     * @param {number} [offset=0] - The offset into the array.
     * @return {Vector3} A reference to this vector.
     */
    fromArray(array, offset = 0) {
      this.x = array[offset];
      this.y = array[offset + 1];
      this.z = array[offset + 2];
      return this;
    }
    /**
     * Writes the components of this vector to the given array. If no array is provided,
     * the method returns a new instance.
     *
     * @param {Array<number>} [array=[]] - The target array holding the vector components.
     * @param {number} [offset=0] - Index of the first element in the array.
     * @return {Array<number>} The vector components.
     */
    toArray(array = [], offset = 0) {
      array[offset] = this.x;
      array[offset + 1] = this.y;
      array[offset + 2] = this.z;
      return array;
    }
    /**
     * Sets the components of this vector from the given buffer attribute.
     *
     * @param {BufferAttribute} attribute - The buffer attribute holding vector data.
     * @param {number} index - The index into the attribute.
     * @return {Vector3} A reference to this vector.
     */
    fromBufferAttribute(attribute, index) {
      this.x = attribute.getX(index);
      this.y = attribute.getY(index);
      this.z = attribute.getZ(index);
      return this;
    }
    /**
     * Sets each component of this vector to a pseudo-random value between \`0\` and
     * \`1\`, excluding \`1\`.
     *
     * @return {Vector3} A reference to this vector.
     */
    random() {
      this.x = Math.random();
      this.y = Math.random();
      this.z = Math.random();
      return this;
    }
    /**
     * Sets this vector to a uniformly random point on a unit sphere.
     *
     * @return {Vector3} A reference to this vector.
     */
    randomDirection() {
      const theta = Math.random() * Math.PI * 2;
      const u = Math.random() * 2 - 1;
      const c = Math.sqrt(1 - u * u);
      this.x = c * Math.cos(theta);
      this.y = u;
      this.z = c * Math.sin(theta);
      return this;
    }
    *[Symbol.iterator]() {
      yield this.x;
      yield this.y;
      yield this.z;
    }
  }
  const _vector$c = /* @__PURE__ */ new Vector3();
  const _quaternion$4 = /* @__PURE__ */ new Quaternion();
  class Matrix3 {
    /**
     * Constructs a new 3x3 matrix. The arguments are supposed to be
     * in row-major order. If no arguments are provided, the constructor
     * initializes the matrix as an identity matrix.
     *
     * @param {number} [n11] - 1-1 matrix element.
     * @param {number} [n12] - 1-2 matrix element.
     * @param {number} [n13] - 1-3 matrix element.
     * @param {number} [n21] - 2-1 matrix element.
     * @param {number} [n22] - 2-2 matrix element.
     * @param {number} [n23] - 2-3 matrix element.
     * @param {number} [n31] - 3-1 matrix element.
     * @param {number} [n32] - 3-2 matrix element.
     * @param {number} [n33] - 3-3 matrix element.
     */
    constructor(n11, n12, n13, n21, n22, n23, n31, n32, n33) {
      Matrix3.prototype.isMatrix3 = true;
      this.elements = [
        1,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        1
      ];
      if (n11 !== void 0) {
        this.set(n11, n12, n13, n21, n22, n23, n31, n32, n33);
      }
    }
    /**
     * Sets the elements of the matrix.The arguments are supposed to be
     * in row-major order.
     *
     * @param {number} [n11] - 1-1 matrix element.
     * @param {number} [n12] - 1-2 matrix element.
     * @param {number} [n13] - 1-3 matrix element.
     * @param {number} [n21] - 2-1 matrix element.
     * @param {number} [n22] - 2-2 matrix element.
     * @param {number} [n23] - 2-3 matrix element.
     * @param {number} [n31] - 3-1 matrix element.
     * @param {number} [n32] - 3-2 matrix element.
     * @param {number} [n33] - 3-3 matrix element.
     * @return {Matrix3} A reference to this matrix.
     */
    set(n11, n12, n13, n21, n22, n23, n31, n32, n33) {
      const te = this.elements;
      te[0] = n11;
      te[1] = n21;
      te[2] = n31;
      te[3] = n12;
      te[4] = n22;
      te[5] = n32;
      te[6] = n13;
      te[7] = n23;
      te[8] = n33;
      return this;
    }
    /**
     * Sets this matrix to the 3x3 identity matrix.
     *
     * @return {Matrix3} A reference to this matrix.
     */
    identity() {
      this.set(
        1,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        1
      );
      return this;
    }
    /**
     * Copies the values of the given matrix to this instance.
     *
     * @param {Matrix3} m - The matrix to copy.
     * @return {Matrix3} A reference to this matrix.
     */
    copy(m) {
      const te = this.elements;
      const me = m.elements;
      te[0] = me[0];
      te[1] = me[1];
      te[2] = me[2];
      te[3] = me[3];
      te[4] = me[4];
      te[5] = me[5];
      te[6] = me[6];
      te[7] = me[7];
      te[8] = me[8];
      return this;
    }
    /**
     * Extracts the basis of this matrix into the three axis vectors provided.
     *
     * @param {Vector3} xAxis - The basis's x axis.
     * @param {Vector3} yAxis - The basis's y axis.
     * @param {Vector3} zAxis - The basis's z axis.
     * @return {Matrix3} A reference to this matrix.
     */
    extractBasis(xAxis, yAxis, zAxis) {
      xAxis.setFromMatrix3Column(this, 0);
      yAxis.setFromMatrix3Column(this, 1);
      zAxis.setFromMatrix3Column(this, 2);
      return this;
    }
    /**
     * Set this matrix to the upper 3x3 matrix of the given 4x4 matrix.
     *
     * @param {Matrix4} m - The 4x4 matrix.
     * @return {Matrix3} A reference to this matrix.
     */
    setFromMatrix4(m) {
      const me = m.elements;
      this.set(
        me[0],
        me[4],
        me[8],
        me[1],
        me[5],
        me[9],
        me[2],
        me[6],
        me[10]
      );
      return this;
    }
    /**
     * Post-multiplies this matrix by the given 3x3 matrix.
     *
     * @param {Matrix3} m - The matrix to multiply with.
     * @return {Matrix3} A reference to this matrix.
     */
    multiply(m) {
      return this.multiplyMatrices(this, m);
    }
    /**
     * Pre-multiplies this matrix by the given 3x3 matrix.
     *
     * @param {Matrix3} m - The matrix to multiply with.
     * @return {Matrix3} A reference to this matrix.
     */
    premultiply(m) {
      return this.multiplyMatrices(m, this);
    }
    /**
     * Multiples the given 3x3 matrices and stores the result
     * in this matrix.
     *
     * @param {Matrix3} a - The first matrix.
     * @param {Matrix3} b - The second matrix.
     * @return {Matrix3} A reference to this matrix.
     */
    multiplyMatrices(a, b) {
      const ae = a.elements;
      const be = b.elements;
      const te = this.elements;
      const a11 = ae[0], a12 = ae[3], a13 = ae[6];
      const a21 = ae[1], a22 = ae[4], a23 = ae[7];
      const a31 = ae[2], a32 = ae[5], a33 = ae[8];
      const b11 = be[0], b12 = be[3], b13 = be[6];
      const b21 = be[1], b22 = be[4], b23 = be[7];
      const b31 = be[2], b32 = be[5], b33 = be[8];
      te[0] = a11 * b11 + a12 * b21 + a13 * b31;
      te[3] = a11 * b12 + a12 * b22 + a13 * b32;
      te[6] = a11 * b13 + a12 * b23 + a13 * b33;
      te[1] = a21 * b11 + a22 * b21 + a23 * b31;
      te[4] = a21 * b12 + a22 * b22 + a23 * b32;
      te[7] = a21 * b13 + a22 * b23 + a23 * b33;
      te[2] = a31 * b11 + a32 * b21 + a33 * b31;
      te[5] = a31 * b12 + a32 * b22 + a33 * b32;
      te[8] = a31 * b13 + a32 * b23 + a33 * b33;
      return this;
    }
    /**
     * Multiplies every component of the matrix by the given scalar.
     *
     * @param {number} s - The scalar.
     * @return {Matrix3} A reference to this matrix.
     */
    multiplyScalar(s) {
      const te = this.elements;
      te[0] *= s;
      te[3] *= s;
      te[6] *= s;
      te[1] *= s;
      te[4] *= s;
      te[7] *= s;
      te[2] *= s;
      te[5] *= s;
      te[8] *= s;
      return this;
    }
    /**
     * Computes and returns the determinant of this matrix.
     *
     * @return {number} The determinant.
     */
    determinant() {
      const te = this.elements;
      const a = te[0], b = te[1], c = te[2], d = te[3], e = te[4], f = te[5], g = te[6], h = te[7], i2 = te[8];
      return a * e * i2 - a * f * h - b * d * i2 + b * f * g + c * d * h - c * e * g;
    }
    /**
     * Inverts this matrix, using the [analytic method]{@link https://en.wikipedia.org/wiki/Invertible_matrix#Analytic_solution}.
     * You can not invert with a determinant of zero. If you attempt this, the method produces
     * a zero matrix instead.
     *
     * @return {Matrix3} A reference to this matrix.
     */
    invert() {
      const te = this.elements, n11 = te[0], n21 = te[1], n31 = te[2], n12 = te[3], n22 = te[4], n32 = te[5], n13 = te[6], n23 = te[7], n33 = te[8], t11 = n33 * n22 - n32 * n23, t12 = n32 * n13 - n33 * n12, t13 = n23 * n12 - n22 * n13, det = n11 * t11 + n21 * t12 + n31 * t13;
      if (det === 0) return this.set(0, 0, 0, 0, 0, 0, 0, 0, 0);
      const detInv = 1 / det;
      te[0] = t11 * detInv;
      te[1] = (n31 * n23 - n33 * n21) * detInv;
      te[2] = (n32 * n21 - n31 * n22) * detInv;
      te[3] = t12 * detInv;
      te[4] = (n33 * n11 - n31 * n13) * detInv;
      te[5] = (n31 * n12 - n32 * n11) * detInv;
      te[6] = t13 * detInv;
      te[7] = (n21 * n13 - n23 * n11) * detInv;
      te[8] = (n22 * n11 - n21 * n12) * detInv;
      return this;
    }
    /**
     * Transposes this matrix in place.
     *
     * @return {Matrix3} A reference to this matrix.
     */
    transpose() {
      let tmp;
      const m = this.elements;
      tmp = m[1];
      m[1] = m[3];
      m[3] = tmp;
      tmp = m[2];
      m[2] = m[6];
      m[6] = tmp;
      tmp = m[5];
      m[5] = m[7];
      m[7] = tmp;
      return this;
    }
    /**
     * Computes the normal matrix which is the inverse transpose of the upper
     * left 3x3 portion of the given 4x4 matrix.
     *
     * @param {Matrix4} matrix4 - The 4x4 matrix.
     * @return {Matrix3} A reference to this matrix.
     */
    getNormalMatrix(matrix4) {
      return this.setFromMatrix4(matrix4).invert().transpose();
    }
    /**
     * Transposes this matrix into the supplied array, and returns itself unchanged.
     *
     * @param {Array<number>} r - An array to store the transposed matrix elements.
     * @return {Matrix3} A reference to this matrix.
     */
    transposeIntoArray(r) {
      const m = this.elements;
      r[0] = m[0];
      r[1] = m[3];
      r[2] = m[6];
      r[3] = m[1];
      r[4] = m[4];
      r[5] = m[7];
      r[6] = m[2];
      r[7] = m[5];
      r[8] = m[8];
      return this;
    }
    /**
     * Sets the UV transform matrix from offset, repeat, rotation, and center.
     *
     * @param {number} tx - Offset x.
     * @param {number} ty - Offset y.
     * @param {number} sx - Repeat x.
     * @param {number} sy - Repeat y.
     * @param {number} rotation - Rotation, in radians. Positive values rotate counterclockwise.
     * @param {number} cx - Center x of rotation.
     * @param {number} cy - Center y of rotation
     * @return {Matrix3} A reference to this matrix.
     */
    setUvTransform(tx, ty, sx, sy, rotation, cx, cy) {
      const c = Math.cos(rotation);
      const s = Math.sin(rotation);
      this.set(
        sx * c,
        sx * s,
        -sx * (c * cx + s * cy) + cx + tx,
        -sy * s,
        sy * c,
        -sy * (-s * cx + c * cy) + cy + ty,
        0,
        0,
        1
      );
      return this;
    }
    /**
     * Scales this matrix with the given scalar values.
     *
     * @param {number} sx - The amount to scale in the X axis.
     * @param {number} sy - The amount to scale in the Y axis.
     * @return {Matrix3} A reference to this matrix.
     */
    scale(sx, sy) {
      this.premultiply(_m3.makeScale(sx, sy));
      return this;
    }
    /**
     * Rotates this matrix by the given angle.
     *
     * @param {number} theta - The rotation in radians.
     * @return {Matrix3} A reference to this matrix.
     */
    rotate(theta) {
      this.premultiply(_m3.makeRotation(-theta));
      return this;
    }
    /**
     * Translates this matrix by the given scalar values.
     *
     * @param {number} tx - The amount to translate in the X axis.
     * @param {number} ty - The amount to translate in the Y axis.
     * @return {Matrix3} A reference to this matrix.
     */
    translate(tx, ty) {
      this.premultiply(_m3.makeTranslation(tx, ty));
      return this;
    }
    // for 2D Transforms
    /**
     * Sets this matrix as a 2D translation transform.
     *
     * @param {number|Vector2} x - The amount to translate in the X axis or alternatively a translation vector.
     * @param {number} y - The amount to translate in the Y axis.
     * @return {Matrix3} A reference to this matrix.
     */
    makeTranslation(x2, y) {
      if (x2.isVector2) {
        this.set(
          1,
          0,
          x2.x,
          0,
          1,
          x2.y,
          0,
          0,
          1
        );
      } else {
        this.set(
          1,
          0,
          x2,
          0,
          1,
          y,
          0,
          0,
          1
        );
      }
      return this;
    }
    /**
     * Sets this matrix as a 2D rotational transformation.
     *
     * @param {number} theta - The rotation in radians.
     * @return {Matrix3} A reference to this matrix.
     */
    makeRotation(theta) {
      const c = Math.cos(theta);
      const s = Math.sin(theta);
      this.set(
        c,
        -s,
        0,
        s,
        c,
        0,
        0,
        0,
        1
      );
      return this;
    }
    /**
     * Sets this matrix as a 2D scale transform.
     *
     * @param {number} x - The amount to scale in the X axis.
     * @param {number} y - The amount to scale in the Y axis.
     * @return {Matrix3} A reference to this matrix.
     */
    makeScale(x2, y) {
      this.set(
        x2,
        0,
        0,
        0,
        y,
        0,
        0,
        0,
        1
      );
      return this;
    }
    /**
     * Returns \`true\` if this matrix is equal with the given one.
     *
     * @param {Matrix3} matrix - The matrix to test for equality.
     * @return {boolean} Whether this matrix is equal with the given one.
     */
    equals(matrix) {
      const te = this.elements;
      const me = matrix.elements;
      for (let i2 = 0; i2 < 9; i2++) {
        if (te[i2] !== me[i2]) return false;
      }
      return true;
    }
    /**
     * Sets the elements of the matrix from the given array.
     *
     * @param {Array<number>} array - The matrix elements in column-major order.
     * @param {number} [offset=0] - Index of the first element in the array.
     * @return {Matrix3} A reference to this matrix.
     */
    fromArray(array, offset = 0) {
      for (let i2 = 0; i2 < 9; i2++) {
        this.elements[i2] = array[i2 + offset];
      }
      return this;
    }
    /**
     * Writes the elements of this matrix to the given array. If no array is provided,
     * the method returns a new instance.
     *
     * @param {Array<number>} [array=[]] - The target array holding the matrix elements in column-major order.
     * @param {number} [offset=0] - Index of the first element in the array.
     * @return {Array<number>} The matrix elements in column-major order.
     */
    toArray(array = [], offset = 0) {
      const te = this.elements;
      array[offset] = te[0];
      array[offset + 1] = te[1];
      array[offset + 2] = te[2];
      array[offset + 3] = te[3];
      array[offset + 4] = te[4];
      array[offset + 5] = te[5];
      array[offset + 6] = te[6];
      array[offset + 7] = te[7];
      array[offset + 8] = te[8];
      return array;
    }
    /**
     * Returns a matrix with copied values from this instance.
     *
     * @return {Matrix3} A clone of this instance.
     */
    clone() {
      return new this.constructor().fromArray(this.elements);
    }
  }
  const _m3 = /* @__PURE__ */ new Matrix3();
  const _cache = {};
  function warnOnce(message) {
    if (message in _cache) return;
    _cache[message] = true;
    console.warn(message);
  }
  const LINEAR_REC709_TO_XYZ = /* @__PURE__ */ new Matrix3().set(
    0.4123908,
    0.3575843,
    0.1804808,
    0.212639,
    0.7151687,
    0.0721923,
    0.0193308,
    0.1191948,
    0.9505322
  );
  const XYZ_TO_LINEAR_REC709 = /* @__PURE__ */ new Matrix3().set(
    3.2409699,
    -1.5373832,
    -0.4986108,
    -0.9692436,
    1.8759675,
    0.0415551,
    0.0556301,
    -0.203977,
    1.0569715
  );
  function createColorManagement() {
    const ColorManagement2 = {
      enabled: true,
      workingColorSpace: LinearSRGBColorSpace,
      /**
       * Implementations of supported color spaces.
       *
       * Required:
       *	- primaries: chromaticity coordinates [ rx ry gx gy bx by ]
       *	- whitePoint: reference white [ x y ]
       *	- transfer: transfer function (pre-defined)
       *	- toXYZ: Matrix3 RGB to XYZ transform
       *	- fromXYZ: Matrix3 XYZ to RGB transform
       *	- luminanceCoefficients: RGB luminance coefficients
       *
       * Optional:
       *  - outputColorSpaceConfig: { drawingBufferColorSpace: ColorSpace }
       *  - workingColorSpaceConfig: { unpackColorSpace: ColorSpace }
       *
       * Reference:
       * - https://www.russellcottrell.com/photo/matrixCalculator.htm
       */
      spaces: {},
      convert: function(color, sourceColorSpace, targetColorSpace) {
        if (this.enabled === false || sourceColorSpace === targetColorSpace || !sourceColorSpace || !targetColorSpace) {
          return color;
        }
        if (this.spaces[sourceColorSpace].transfer === SRGBTransfer) {
          color.r = SRGBToLinear(color.r);
          color.g = SRGBToLinear(color.g);
          color.b = SRGBToLinear(color.b);
        }
        if (this.spaces[sourceColorSpace].primaries !== this.spaces[targetColorSpace].primaries) {
          color.applyMatrix3(this.spaces[sourceColorSpace].toXYZ);
          color.applyMatrix3(this.spaces[targetColorSpace].fromXYZ);
        }
        if (this.spaces[targetColorSpace].transfer === SRGBTransfer) {
          color.r = LinearToSRGB(color.r);
          color.g = LinearToSRGB(color.g);
          color.b = LinearToSRGB(color.b);
        }
        return color;
      },
      workingToColorSpace: function(color, targetColorSpace) {
        return this.convert(color, this.workingColorSpace, targetColorSpace);
      },
      colorSpaceToWorking: function(color, sourceColorSpace) {
        return this.convert(color, sourceColorSpace, this.workingColorSpace);
      },
      getPrimaries: function(colorSpace) {
        return this.spaces[colorSpace].primaries;
      },
      getTransfer: function(colorSpace) {
        if (colorSpace === NoColorSpace) return LinearTransfer;
        return this.spaces[colorSpace].transfer;
      },
      getLuminanceCoefficients: function(target, colorSpace = this.workingColorSpace) {
        return target.fromArray(this.spaces[colorSpace].luminanceCoefficients);
      },
      define: function(colorSpaces) {
        Object.assign(this.spaces, colorSpaces);
      },
      // Internal APIs
      _getMatrix: function(targetMatrix, sourceColorSpace, targetColorSpace) {
        return targetMatrix.copy(this.spaces[sourceColorSpace].toXYZ).multiply(this.spaces[targetColorSpace].fromXYZ);
      },
      _getDrawingBufferColorSpace: function(colorSpace) {
        return this.spaces[colorSpace].outputColorSpaceConfig.drawingBufferColorSpace;
      },
      _getUnpackColorSpace: function(colorSpace = this.workingColorSpace) {
        return this.spaces[colorSpace].workingColorSpaceConfig.unpackColorSpace;
      },
      // Deprecated
      fromWorkingColorSpace: function(color, targetColorSpace) {
        warnOnce("THREE.ColorManagement: .fromWorkingColorSpace() has been renamed to .workingToColorSpace().");
        return ColorManagement2.workingToColorSpace(color, targetColorSpace);
      },
      toWorkingColorSpace: function(color, sourceColorSpace) {
        warnOnce("THREE.ColorManagement: .toWorkingColorSpace() has been renamed to .colorSpaceToWorking().");
        return ColorManagement2.colorSpaceToWorking(color, sourceColorSpace);
      }
    };
    const REC709_PRIMARIES = [0.64, 0.33, 0.3, 0.6, 0.15, 0.06];
    const REC709_LUMINANCE_COEFFICIENTS = [0.2126, 0.7152, 0.0722];
    const D65 = [0.3127, 0.329];
    ColorManagement2.define({
      [LinearSRGBColorSpace]: {
        primaries: REC709_PRIMARIES,
        whitePoint: D65,
        transfer: LinearTransfer,
        toXYZ: LINEAR_REC709_TO_XYZ,
        fromXYZ: XYZ_TO_LINEAR_REC709,
        luminanceCoefficients: REC709_LUMINANCE_COEFFICIENTS,
        workingColorSpaceConfig: { unpackColorSpace: SRGBColorSpace },
        outputColorSpaceConfig: { drawingBufferColorSpace: SRGBColorSpace }
      },
      [SRGBColorSpace]: {
        primaries: REC709_PRIMARIES,
        whitePoint: D65,
        transfer: SRGBTransfer,
        toXYZ: LINEAR_REC709_TO_XYZ,
        fromXYZ: XYZ_TO_LINEAR_REC709,
        luminanceCoefficients: REC709_LUMINANCE_COEFFICIENTS,
        outputColorSpaceConfig: { drawingBufferColorSpace: SRGBColorSpace }
      }
    });
    return ColorManagement2;
  }
  const ColorManagement = /* @__PURE__ */ createColorManagement();
  function SRGBToLinear(c) {
    return c < 0.04045 ? c * 0.0773993808 : Math.pow(c * 0.9478672986 + 0.0521327014, 2.4);
  }
  function LinearToSRGB(c) {
    return c < 31308e-7 ? c * 12.92 : 1.055 * Math.pow(c, 0.41666) - 0.055;
  }
  class Box3 {
    /**
     * Constructs a new bounding box.
     *
     * @param {Vector3} [min=(Infinity,Infinity,Infinity)] - A vector representing the lower boundary of the box.
     * @param {Vector3} [max=(-Infinity,-Infinity,-Infinity)] - A vector representing the upper boundary of the box.
     */
    constructor(min = new Vector3(Infinity, Infinity, Infinity), max2 = new Vector3(-Infinity, -Infinity, -Infinity)) {
      this.isBox3 = true;
      this.min = min;
      this.max = max2;
    }
    /**
     * Sets the lower and upper boundaries of this box.
     * Please note that this method only copies the values from the given objects.
     *
     * @param {Vector3} min - The lower boundary of the box.
     * @param {Vector3} max - The upper boundary of the box.
     * @return {Box3} A reference to this bounding box.
     */
    set(min, max2) {
      this.min.copy(min);
      this.max.copy(max2);
      return this;
    }
    /**
     * Sets the upper and lower bounds of this box so it encloses the position data
     * in the given array.
     *
     * @param {Array<number>} array - An array holding 3D position data.
     * @return {Box3} A reference to this bounding box.
     */
    setFromArray(array) {
      this.makeEmpty();
      for (let i2 = 0, il = array.length; i2 < il; i2 += 3) {
        this.expandByPoint(_vector$b.fromArray(array, i2));
      }
      return this;
    }
    /**
     * Sets the upper and lower bounds of this box so it encloses the position data
     * in the given buffer attribute.
     *
     * @param {BufferAttribute} attribute - A buffer attribute holding 3D position data.
     * @return {Box3} A reference to this bounding box.
     */
    setFromBufferAttribute(attribute) {
      this.makeEmpty();
      for (let i2 = 0, il = attribute.count; i2 < il; i2++) {
        this.expandByPoint(_vector$b.fromBufferAttribute(attribute, i2));
      }
      return this;
    }
    /**
     * Sets the upper and lower bounds of this box so it encloses the position data
     * in the given array.
     *
     * @param {Array<Vector3>} points - An array holding 3D position data as instances of {@link Vector3}.
     * @return {Box3} A reference to this bounding box.
     */
    setFromPoints(points) {
      this.makeEmpty();
      for (let i2 = 0, il = points.length; i2 < il; i2++) {
        this.expandByPoint(points[i2]);
      }
      return this;
    }
    /**
     * Centers this box on the given center vector and sets this box's width, height and
     * depth to the given size values.
     *
     * @param {Vector3} center - The center of the box.
     * @param {Vector3} size - The x, y and z dimensions of the box.
     * @return {Box3} A reference to this bounding box.
     */
    setFromCenterAndSize(center, size) {
      const halfSize = _vector$b.copy(size).multiplyScalar(0.5);
      this.min.copy(center).sub(halfSize);
      this.max.copy(center).add(halfSize);
      return this;
    }
    /**
     * Computes the world-axis-aligned bounding box for the given 3D object
     * (including its children), accounting for the object's, and children's,
     * world transforms. The function may result in a larger box than strictly necessary.
     *
     * @param {Object3D} object - The 3D object to compute the bounding box for.
     * @param {boolean} [precise=false] - If set to \`true\`, the method computes the smallest
     * world-axis-aligned bounding box at the expense of more computation.
     * @return {Box3} A reference to this bounding box.
     */
    setFromObject(object, precise = false) {
      this.makeEmpty();
      return this.expandByObject(object, precise);
    }
    /**
     * Returns a new box with copied values from this instance.
     *
     * @return {Box3} A clone of this instance.
     */
    clone() {
      return new this.constructor().copy(this);
    }
    /**
     * Copies the values of the given box to this instance.
     *
     * @param {Box3} box - The box to copy.
     * @return {Box3} A reference to this bounding box.
     */
    copy(box) {
      this.min.copy(box.min);
      this.max.copy(box.max);
      return this;
    }
    /**
     * Makes this box empty which means in encloses a zero space in 3D.
     *
     * @return {Box3} A reference to this bounding box.
     */
    makeEmpty() {
      this.min.x = this.min.y = this.min.z = Infinity;
      this.max.x = this.max.y = this.max.z = -Infinity;
      return this;
    }
    /**
     * Returns true if this box includes zero points within its bounds.
     * Note that a box with equal lower and upper bounds still includes one
     * point, the one both bounds share.
     *
     * @return {boolean} Whether this box is empty or not.
     */
    isEmpty() {
      return this.max.x < this.min.x || this.max.y < this.min.y || this.max.z < this.min.z;
    }
    /**
     * Returns the center point of this box.
     *
     * @param {Vector3} target - The target vector that is used to store the method's result.
     * @return {Vector3} The center point.
     */
    getCenter(target) {
      return this.isEmpty() ? target.set(0, 0, 0) : target.addVectors(this.min, this.max).multiplyScalar(0.5);
    }
    /**
     * Returns the dimensions of this box.
     *
     * @param {Vector3} target - The target vector that is used to store the method's result.
     * @return {Vector3} The size.
     */
    getSize(target) {
      return this.isEmpty() ? target.set(0, 0, 0) : target.subVectors(this.max, this.min);
    }
    /**
     * Expands the boundaries of this box to include the given point.
     *
     * @param {Vector3} point - The point that should be included by the bounding box.
     * @return {Box3} A reference to this bounding box.
     */
    expandByPoint(point) {
      this.min.min(point);
      this.max.max(point);
      return this;
    }
    /**
     * Expands this box equilaterally by the given vector. The width of this
     * box will be expanded by the x component of the vector in both
     * directions. The height of this box will be expanded by the y component of
     * the vector in both directions. The depth of this box will be
     * expanded by the z component of the vector in both directions.
     *
     * @param {Vector3} vector - The vector that should expand the bounding box.
     * @return {Box3} A reference to this bounding box.
     */
    expandByVector(vector) {
      this.min.sub(vector);
      this.max.add(vector);
      return this;
    }
    /**
     * Expands each dimension of the box by the given scalar. If negative, the
     * dimensions of the box will be contracted.
     *
     * @param {number} scalar - The scalar value that should expand the bounding box.
     * @return {Box3} A reference to this bounding box.
     */
    expandByScalar(scalar) {
      this.min.addScalar(-scalar);
      this.max.addScalar(scalar);
      return this;
    }
    /**
     * Expands the boundaries of this box to include the given 3D object and
     * its children, accounting for the object's, and children's, world
     * transforms. The function may result in a larger box than strictly
     * necessary (unless the precise parameter is set to true).
     *
     * @param {Object3D} object - The 3D object that should expand the bounding box.
     * @param {boolean} precise - If set to \`true\`, the method expands the bounding box
     * as little as necessary at the expense of more computation.
     * @return {Box3} A reference to this bounding box.
     */
    expandByObject(object, precise = false) {
      object.updateWorldMatrix(false, false);
      const geometry = object.geometry;
      if (geometry !== void 0) {
        const positionAttribute = geometry.getAttribute("position");
        if (precise === true && positionAttribute !== void 0 && object.isInstancedMesh !== true) {
          for (let i2 = 0, l = positionAttribute.count; i2 < l; i2++) {
            if (object.isMesh === true) {
              object.getVertexPosition(i2, _vector$b);
            } else {
              _vector$b.fromBufferAttribute(positionAttribute, i2);
            }
            _vector$b.applyMatrix4(object.matrixWorld);
            this.expandByPoint(_vector$b);
          }
        } else {
          if (object.boundingBox !== void 0) {
            if (object.boundingBox === null) {
              object.computeBoundingBox();
            }
            _box$4.copy(object.boundingBox);
          } else {
            if (geometry.boundingBox === null) {
              geometry.computeBoundingBox();
            }
            _box$4.copy(geometry.boundingBox);
          }
          _box$4.applyMatrix4(object.matrixWorld);
          this.union(_box$4);
        }
      }
      const children = object.children;
      for (let i2 = 0, l = children.length; i2 < l; i2++) {
        this.expandByObject(children[i2], precise);
      }
      return this;
    }
    /**
     * Returns \`true\` if the given point lies within or on the boundaries of this box.
     *
     * @param {Vector3} point - The point to test.
     * @return {boolean} Whether the bounding box contains the given point or not.
     */
    containsPoint(point) {
      return point.x >= this.min.x && point.x <= this.max.x && point.y >= this.min.y && point.y <= this.max.y && point.z >= this.min.z && point.z <= this.max.z;
    }
    /**
     * Returns \`true\` if this bounding box includes the entirety of the given bounding box.
     * If this box and the given one are identical, this function also returns \`true\`.
     *
     * @param {Box3} box - The bounding box to test.
     * @return {boolean} Whether the bounding box contains the given bounding box or not.
     */
    containsBox(box) {
      return this.min.x <= box.min.x && box.max.x <= this.max.x && this.min.y <= box.min.y && box.max.y <= this.max.y && this.min.z <= box.min.z && box.max.z <= this.max.z;
    }
    /**
     * Returns a point as a proportion of this box's width, height and depth.
     *
     * @param {Vector3} point - A point in 3D space.
     * @param {Vector3} target - The target vector that is used to store the method's result.
     * @return {Vector3} A point as a proportion of this box's width, height and depth.
     */
    getParameter(point, target) {
      return target.set(
        (point.x - this.min.x) / (this.max.x - this.min.x),
        (point.y - this.min.y) / (this.max.y - this.min.y),
        (point.z - this.min.z) / (this.max.z - this.min.z)
      );
    }
    /**
     * Returns \`true\` if the given bounding box intersects with this bounding box.
     *
     * @param {Box3} box - The bounding box to test.
     * @return {boolean} Whether the given bounding box intersects with this bounding box.
     */
    intersectsBox(box) {
      return box.max.x >= this.min.x && box.min.x <= this.max.x && box.max.y >= this.min.y && box.min.y <= this.max.y && box.max.z >= this.min.z && box.min.z <= this.max.z;
    }
    /**
     * Returns \`true\` if the given bounding sphere intersects with this bounding box.
     *
     * @param {Sphere} sphere - The bounding sphere to test.
     * @return {boolean} Whether the given bounding sphere intersects with this bounding box.
     */
    intersectsSphere(sphere) {
      this.clampPoint(sphere.center, _vector$b);
      return _vector$b.distanceToSquared(sphere.center) <= sphere.radius * sphere.radius;
    }
    /**
     * Returns \`true\` if the given plane intersects with this bounding box.
     *
     * @param {Plane} plane - The plane to test.
     * @return {boolean} Whether the given plane intersects with this bounding box.
     */
    intersectsPlane(plane) {
      let min, max2;
      if (plane.normal.x > 0) {
        min = plane.normal.x * this.min.x;
        max2 = plane.normal.x * this.max.x;
      } else {
        min = plane.normal.x * this.max.x;
        max2 = plane.normal.x * this.min.x;
      }
      if (plane.normal.y > 0) {
        min += plane.normal.y * this.min.y;
        max2 += plane.normal.y * this.max.y;
      } else {
        min += plane.normal.y * this.max.y;
        max2 += plane.normal.y * this.min.y;
      }
      if (plane.normal.z > 0) {
        min += plane.normal.z * this.min.z;
        max2 += plane.normal.z * this.max.z;
      } else {
        min += plane.normal.z * this.max.z;
        max2 += plane.normal.z * this.min.z;
      }
      return min <= -plane.constant && max2 >= -plane.constant;
    }
    /**
     * Returns \`true\` if the given triangle intersects with this bounding box.
     *
     * @param {Triangle} triangle - The triangle to test.
     * @return {boolean} Whether the given triangle intersects with this bounding box.
     */
    intersectsTriangle(triangle) {
      if (this.isEmpty()) {
        return false;
      }
      this.getCenter(_center);
      _extents.subVectors(this.max, _center);
      _v0$2.subVectors(triangle.a, _center);
      _v1$7.subVectors(triangle.b, _center);
      _v2$4.subVectors(triangle.c, _center);
      _f0.subVectors(_v1$7, _v0$2);
      _f1.subVectors(_v2$4, _v1$7);
      _f2.subVectors(_v0$2, _v2$4);
      let axes = [
        0,
        -_f0.z,
        _f0.y,
        0,
        -_f1.z,
        _f1.y,
        0,
        -_f2.z,
        _f2.y,
        _f0.z,
        0,
        -_f0.x,
        _f1.z,
        0,
        -_f1.x,
        _f2.z,
        0,
        -_f2.x,
        -_f0.y,
        _f0.x,
        0,
        -_f1.y,
        _f1.x,
        0,
        -_f2.y,
        _f2.x,
        0
      ];
      if (!satForAxes(axes, _v0$2, _v1$7, _v2$4, _extents)) {
        return false;
      }
      axes = [1, 0, 0, 0, 1, 0, 0, 0, 1];
      if (!satForAxes(axes, _v0$2, _v1$7, _v2$4, _extents)) {
        return false;
      }
      _triangleNormal.crossVectors(_f0, _f1);
      axes = [_triangleNormal.x, _triangleNormal.y, _triangleNormal.z];
      return satForAxes(axes, _v0$2, _v1$7, _v2$4, _extents);
    }
    /**
     * Clamps the given point within the bounds of this box.
     *
     * @param {Vector3} point - The point to clamp.
     * @param {Vector3} target - The target vector that is used to store the method's result.
     * @return {Vector3} The clamped point.
     */
    clampPoint(point, target) {
      return target.copy(point).clamp(this.min, this.max);
    }
    /**
     * Returns the euclidean distance from any edge of this box to the specified point. If
     * the given point lies inside of this box, the distance will be \`0\`.
     *
     * @param {Vector3} point - The point to compute the distance to.
     * @return {number} The euclidean distance.
     */
    distanceToPoint(point) {
      return this.clampPoint(point, _vector$b).distanceTo(point);
    }
    /**
     * Returns a bounding sphere that encloses this bounding box.
     *
     * @param {Sphere} target - The target sphere that is used to store the method's result.
     * @return {Sphere} The bounding sphere that encloses this bounding box.
     */
    getBoundingSphere(target) {
      if (this.isEmpty()) {
        target.makeEmpty();
      } else {
        this.getCenter(target.center);
        target.radius = this.getSize(_vector$b).length() * 0.5;
      }
      return target;
    }
    /**
     * Computes the intersection of this bounding box and the given one, setting the upper
     * bound of this box to the lesser of the two boxes' upper bounds and the
     * lower bound of this box to the greater of the two boxes' lower bounds. If
     * there's no overlap, makes this box empty.
     *
     * @param {Box3} box - The bounding box to intersect with.
     * @return {Box3} A reference to this bounding box.
     */
    intersect(box) {
      this.min.max(box.min);
      this.max.min(box.max);
      if (this.isEmpty()) this.makeEmpty();
      return this;
    }
    /**
     * Computes the union of this box and another and the given one, setting the upper
     * bound of this box to the greater of the two boxes' upper bounds and the
     * lower bound of this box to the lesser of the two boxes' lower bounds.
     *
     * @param {Box3} box - The bounding box that will be unioned with this instance.
     * @return {Box3} A reference to this bounding box.
     */
    union(box) {
      this.min.min(box.min);
      this.max.max(box.max);
      return this;
    }
    /**
     * Transforms this bounding box by the given 4x4 transformation matrix.
     *
     * @param {Matrix4} matrix - The transformation matrix.
     * @return {Box3} A reference to this bounding box.
     */
    applyMatrix4(matrix) {
      if (this.isEmpty()) return this;
      _points[0].set(this.min.x, this.min.y, this.min.z).applyMatrix4(matrix);
      _points[1].set(this.min.x, this.min.y, this.max.z).applyMatrix4(matrix);
      _points[2].set(this.min.x, this.max.y, this.min.z).applyMatrix4(matrix);
      _points[3].set(this.min.x, this.max.y, this.max.z).applyMatrix4(matrix);
      _points[4].set(this.max.x, this.min.y, this.min.z).applyMatrix4(matrix);
      _points[5].set(this.max.x, this.min.y, this.max.z).applyMatrix4(matrix);
      _points[6].set(this.max.x, this.max.y, this.min.z).applyMatrix4(matrix);
      _points[7].set(this.max.x, this.max.y, this.max.z).applyMatrix4(matrix);
      this.setFromPoints(_points);
      return this;
    }
    /**
     * Adds the given offset to both the upper and lower bounds of this bounding box,
     * effectively moving it in 3D space.
     *
     * @param {Vector3} offset - The offset that should be used to translate the bounding box.
     * @return {Box3} A reference to this bounding box.
     */
    translate(offset) {
      this.min.add(offset);
      this.max.add(offset);
      return this;
    }
    /**
     * Returns \`true\` if this bounding box is equal with the given one.
     *
     * @param {Box3} box - The box to test for equality.
     * @return {boolean} Whether this bounding box is equal with the given one.
     */
    equals(box) {
      return box.min.equals(this.min) && box.max.equals(this.max);
    }
    /**
     * Returns a serialized structure of the bounding box.
     *
     * @return {Object} Serialized structure with fields representing the object state.
     */
    toJSON() {
      return {
        min: this.min.toArray(),
        max: this.max.toArray()
      };
    }
    /**
     * Returns a serialized structure of the bounding box.
     *
     * @param {Object} json - The serialized json to set the box from.
     * @return {Box3} A reference to this bounding box.
     */
    fromJSON(json) {
      this.min.fromArray(json.min);
      this.max.fromArray(json.max);
      return this;
    }
  }
  const _points = [
    /* @__PURE__ */ new Vector3(),
    /* @__PURE__ */ new Vector3(),
    /* @__PURE__ */ new Vector3(),
    /* @__PURE__ */ new Vector3(),
    /* @__PURE__ */ new Vector3(),
    /* @__PURE__ */ new Vector3(),
    /* @__PURE__ */ new Vector3(),
    /* @__PURE__ */ new Vector3()
  ];
  const _vector$b = /* @__PURE__ */ new Vector3();
  const _box$4 = /* @__PURE__ */ new Box3();
  const _v0$2 = /* @__PURE__ */ new Vector3();
  const _v1$7 = /* @__PURE__ */ new Vector3();
  const _v2$4 = /* @__PURE__ */ new Vector3();
  const _f0 = /* @__PURE__ */ new Vector3();
  const _f1 = /* @__PURE__ */ new Vector3();
  const _f2 = /* @__PURE__ */ new Vector3();
  const _center = /* @__PURE__ */ new Vector3();
  const _extents = /* @__PURE__ */ new Vector3();
  const _triangleNormal = /* @__PURE__ */ new Vector3();
  const _testAxis = /* @__PURE__ */ new Vector3();
  function satForAxes(axes, v0, v1, v2, extents) {
    for (let i2 = 0, j = axes.length - 3; i2 <= j; i2 += 3) {
      _testAxis.fromArray(axes, i2);
      const r = extents.x * Math.abs(_testAxis.x) + extents.y * Math.abs(_testAxis.y) + extents.z * Math.abs(_testAxis.z);
      const p0 = v0.dot(_testAxis);
      const p1 = v1.dot(_testAxis);
      const p2 = v2.dot(_testAxis);
      if (Math.max(-Math.max(p0, p1, p2), Math.min(p0, p1, p2)) > r) {
        return false;
      }
    }
    return true;
  }
  const _colorKeywords = {
    "aliceblue": 15792383,
    "antiquewhite": 16444375,
    "aqua": 65535,
    "aquamarine": 8388564,
    "azure": 15794175,
    "beige": 16119260,
    "bisque": 16770244,
    "black": 0,
    "blanchedalmond": 16772045,
    "blue": 255,
    "blueviolet": 9055202,
    "brown": 10824234,
    "burlywood": 14596231,
    "cadetblue": 6266528,
    "chartreuse": 8388352,
    "chocolate": 13789470,
    "coral": 16744272,
    "cornflowerblue": 6591981,
    "cornsilk": 16775388,
    "crimson": 14423100,
    "cyan": 65535,
    "darkblue": 139,
    "darkcyan": 35723,
    "darkgoldenrod": 12092939,
    "darkgray": 11119017,
    "darkgreen": 25600,
    "darkgrey": 11119017,
    "darkkhaki": 12433259,
    "darkmagenta": 9109643,
    "darkolivegreen": 5597999,
    "darkorange": 16747520,
    "darkorchid": 10040012,
    "darkred": 9109504,
    "darksalmon": 15308410,
    "darkseagreen": 9419919,
    "darkslateblue": 4734347,
    "darkslategray": 3100495,
    "darkslategrey": 3100495,
    "darkturquoise": 52945,
    "darkviolet": 9699539,
    "deeppink": 16716947,
    "deepskyblue": 49151,
    "dimgray": 6908265,
    "dimgrey": 6908265,
    "dodgerblue": 2003199,
    "firebrick": 11674146,
    "floralwhite": 16775920,
    "forestgreen": 2263842,
    "fuchsia": 16711935,
    "gainsboro": 14474460,
    "ghostwhite": 16316671,
    "gold": 16766720,
    "goldenrod": 14329120,
    "gray": 8421504,
    "green": 32768,
    "greenyellow": 11403055,
    "grey": 8421504,
    "honeydew": 15794160,
    "hotpink": 16738740,
    "indianred": 13458524,
    "indigo": 4915330,
    "ivory": 16777200,
    "khaki": 15787660,
    "lavender": 15132410,
    "lavenderblush": 16773365,
    "lawngreen": 8190976,
    "lemonchiffon": 16775885,
    "lightblue": 11393254,
    "lightcoral": 15761536,
    "lightcyan": 14745599,
    "lightgoldenrodyellow": 16448210,
    "lightgray": 13882323,
    "lightgreen": 9498256,
    "lightgrey": 13882323,
    "lightpink": 16758465,
    "lightsalmon": 16752762,
    "lightseagreen": 2142890,
    "lightskyblue": 8900346,
    "lightslategray": 7833753,
    "lightslategrey": 7833753,
    "lightsteelblue": 11584734,
    "lightyellow": 16777184,
    "lime": 65280,
    "limegreen": 3329330,
    "linen": 16445670,
    "magenta": 16711935,
    "maroon": 8388608,
    "mediumaquamarine": 6737322,
    "mediumblue": 205,
    "mediumorchid": 12211667,
    "mediumpurple": 9662683,
    "mediumseagreen": 3978097,
    "mediumslateblue": 8087790,
    "mediumspringgreen": 64154,
    "mediumturquoise": 4772300,
    "mediumvioletred": 13047173,
    "midnightblue": 1644912,
    "mintcream": 16121850,
    "mistyrose": 16770273,
    "moccasin": 16770229,
    "navajowhite": 16768685,
    "navy": 128,
    "oldlace": 16643558,
    "olive": 8421376,
    "olivedrab": 7048739,
    "orange": 16753920,
    "orangered": 16729344,
    "orchid": 14315734,
    "palegoldenrod": 15657130,
    "palegreen": 10025880,
    "paleturquoise": 11529966,
    "palevioletred": 14381203,
    "papayawhip": 16773077,
    "peachpuff": 16767673,
    "peru": 13468991,
    "pink": 16761035,
    "plum": 14524637,
    "powderblue": 11591910,
    "purple": 8388736,
    "rebeccapurple": 6697881,
    "red": 16711680,
    "rosybrown": 12357519,
    "royalblue": 4286945,
    "saddlebrown": 9127187,
    "salmon": 16416882,
    "sandybrown": 16032864,
    "seagreen": 3050327,
    "seashell": 16774638,
    "sienna": 10506797,
    "silver": 12632256,
    "skyblue": 8900331,
    "slateblue": 6970061,
    "slategray": 7372944,
    "slategrey": 7372944,
    "snow": 16775930,
    "springgreen": 65407,
    "steelblue": 4620980,
    "tan": 13808780,
    "teal": 32896,
    "thistle": 14204888,
    "tomato": 16737095,
    "turquoise": 4251856,
    "violet": 15631086,
    "wheat": 16113331,
    "white": 16777215,
    "whitesmoke": 16119285,
    "yellow": 16776960,
    "yellowgreen": 10145074
  };
  const _hslA = { h: 0, s: 0, l: 0 };
  const _hslB = { h: 0, s: 0, l: 0 };
  function hue2rgb(p, q, t) {
    if (t < 0) t += 1;
    if (t > 1) t -= 1;
    if (t < 1 / 6) return p + (q - p) * 6 * t;
    if (t < 1 / 2) return q;
    if (t < 2 / 3) return p + (q - p) * 6 * (2 / 3 - t);
    return p;
  }
  class Color {
    /**
     * Constructs a new color.
     *
     * Note that standard method of specifying color in three.js is with a hexadecimal triplet,
     * and that method is used throughout the rest of the documentation.
     *
     * @param {(number|string|Color)} [r] - The red component of the color. If \`g\` and \`b\` are
     * not provided, it can be hexadecimal triplet, a CSS-style string or another \`Color\` instance.
     * @param {number} [g] - The green component.
     * @param {number} [b] - The blue component.
     */
    constructor(r, g, b) {
      this.isColor = true;
      this.r = 1;
      this.g = 1;
      this.b = 1;
      return this.set(r, g, b);
    }
    /**
     * Sets the colors's components from the given values.
     *
     * @param {(number|string|Color)} [r] - The red component of the color. If \`g\` and \`b\` are
     * not provided, it can be hexadecimal triplet, a CSS-style string or another \`Color\` instance.
     * @param {number} [g] - The green component.
     * @param {number} [b] - The blue component.
     * @return {Color} A reference to this color.
     */
    set(r, g, b) {
      if (g === void 0 && b === void 0) {
        const value = r;
        if (value && value.isColor) {
          this.copy(value);
        } else if (typeof value === "number") {
          this.setHex(value);
        } else if (typeof value === "string") {
          this.setStyle(value);
        }
      } else {
        this.setRGB(r, g, b);
      }
      return this;
    }
    /**
     * Sets the colors's components to the given scalar value.
     *
     * @param {number} scalar - The scalar value.
     * @return {Color} A reference to this color.
     */
    setScalar(scalar) {
      this.r = scalar;
      this.g = scalar;
      this.b = scalar;
      return this;
    }
    /**
     * Sets this color from a hexadecimal value.
     *
     * @param {number} hex - The hexadecimal value.
     * @param {string} [colorSpace=SRGBColorSpace] - The color space.
     * @return {Color} A reference to this color.
     */
    setHex(hex, colorSpace = SRGBColorSpace) {
      hex = Math.floor(hex);
      this.r = (hex >> 16 & 255) / 255;
      this.g = (hex >> 8 & 255) / 255;
      this.b = (hex & 255) / 255;
      ColorManagement.colorSpaceToWorking(this, colorSpace);
      return this;
    }
    /**
     * Sets this color from RGB values.
     *
     * @param {number} r - Red channel value between \`0.0\` and \`1.0\`.
     * @param {number} g - Green channel value between \`0.0\` and \`1.0\`.
     * @param {number} b - Blue channel value between \`0.0\` and \`1.0\`.
     * @param {string} [colorSpace=ColorManagement.workingColorSpace] - The color space.
     * @return {Color} A reference to this color.
     */
    setRGB(r, g, b, colorSpace = ColorManagement.workingColorSpace) {
      this.r = r;
      this.g = g;
      this.b = b;
      ColorManagement.colorSpaceToWorking(this, colorSpace);
      return this;
    }
    /**
     * Sets this color from RGB values.
     *
     * @param {number} h - Hue value between \`0.0\` and \`1.0\`.
     * @param {number} s - Saturation value between \`0.0\` and \`1.0\`.
     * @param {number} l - Lightness value between \`0.0\` and \`1.0\`.
     * @param {string} [colorSpace=ColorManagement.workingColorSpace] - The color space.
     * @return {Color} A reference to this color.
     */
    setHSL(h, s, l, colorSpace = ColorManagement.workingColorSpace) {
      h = euclideanModulo(h, 1);
      s = clamp(s, 0, 1);
      l = clamp(l, 0, 1);
      if (s === 0) {
        this.r = this.g = this.b = l;
      } else {
        const p = l <= 0.5 ? l * (1 + s) : l + s - l * s;
        const q = 2 * l - p;
        this.r = hue2rgb(q, p, h + 1 / 3);
        this.g = hue2rgb(q, p, h);
        this.b = hue2rgb(q, p, h - 1 / 3);
      }
      ColorManagement.colorSpaceToWorking(this, colorSpace);
      return this;
    }
    /**
     * Sets this color from a CSS-style string. For example, \`rgb(250, 0,0)\`,
     * \`rgb(100%, 0%, 0%)\`, \`hsl(0, 100%, 50%)\`, \`#ff0000\`, \`#f00\`, or \`red\` ( or
     * any [X11 color name]{@link https://en.wikipedia.org/wiki/X11_color_names#Color_name_chart} -
     * all 140 color names are supported).
     *
     * @param {string} style - Color as a CSS-style string.
     * @param {string} [colorSpace=SRGBColorSpace] - The color space.
     * @return {Color} A reference to this color.
     */
    setStyle(style, colorSpace = SRGBColorSpace) {
      function handleAlpha(string) {
        if (string === void 0) return;
        if (parseFloat(string) < 1) {
          console.warn("THREE.Color: Alpha component of " + style + " will be ignored.");
        }
      }
      let m;
      if (m = /^(\\w+)\\(([^\\)]*)\\)/.exec(style)) {
        let color;
        const name = m[1];
        const components = m[2];
        switch (name) {
          case "rgb":
          case "rgba":
            if (color = /^\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec(components)) {
              handleAlpha(color[4]);
              return this.setRGB(
                Math.min(255, parseInt(color[1], 10)) / 255,
                Math.min(255, parseInt(color[2], 10)) / 255,
                Math.min(255, parseInt(color[3], 10)) / 255,
                colorSpace
              );
            }
            if (color = /^\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec(components)) {
              handleAlpha(color[4]);
              return this.setRGB(
                Math.min(100, parseInt(color[1], 10)) / 100,
                Math.min(100, parseInt(color[2], 10)) / 100,
                Math.min(100, parseInt(color[3], 10)) / 100,
                colorSpace
              );
            }
            break;
          case "hsl":
          case "hsla":
            if (color = /^\\s*(\\d*\\.?\\d+)\\s*,\\s*(\\d*\\.?\\d+)\\%\\s*,\\s*(\\d*\\.?\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec(components)) {
              handleAlpha(color[4]);
              return this.setHSL(
                parseFloat(color[1]) / 360,
                parseFloat(color[2]) / 100,
                parseFloat(color[3]) / 100,
                colorSpace
              );
            }
            break;
          default:
            console.warn("THREE.Color: Unknown color model " + style);
        }
      } else if (m = /^\\#([A-Fa-f\\d]+)$/.exec(style)) {
        const hex = m[1];
        const size = hex.length;
        if (size === 3) {
          return this.setRGB(
            parseInt(hex.charAt(0), 16) / 15,
            parseInt(hex.charAt(1), 16) / 15,
            parseInt(hex.charAt(2), 16) / 15,
            colorSpace
          );
        } else if (size === 6) {
          return this.setHex(parseInt(hex, 16), colorSpace);
        } else {
          console.warn("THREE.Color: Invalid hex color " + style);
        }
      } else if (style && style.length > 0) {
        return this.setColorName(style, colorSpace);
      }
      return this;
    }
    /**
     * Sets this color from a color name. Faster than {@link Color#setStyle} if
     * you don't need the other CSS-style formats.
     *
     * For convenience, the list of names is exposed in \`Color.NAMES\` as a hash.
     * \`\`\`js
     * Color.NAMES.aliceblue // returns 0xF0F8FF
     * \`\`\`
     *
     * @param {string} style - The color name.
     * @param {string} [colorSpace=SRGBColorSpace] - The color space.
     * @return {Color} A reference to this color.
     */
    setColorName(style, colorSpace = SRGBColorSpace) {
      const hex = _colorKeywords[style.toLowerCase()];
      if (hex !== void 0) {
        this.setHex(hex, colorSpace);
      } else {
        console.warn("THREE.Color: Unknown color " + style);
      }
      return this;
    }
    /**
     * Returns a new color with copied values from this instance.
     *
     * @return {Color} A clone of this instance.
     */
    clone() {
      return new this.constructor(this.r, this.g, this.b);
    }
    /**
     * Copies the values of the given color to this instance.
     *
     * @param {Color} color - The color to copy.
     * @return {Color} A reference to this color.
     */
    copy(color) {
      this.r = color.r;
      this.g = color.g;
      this.b = color.b;
      return this;
    }
    /**
     * Copies the given color into this color, and then converts this color from
     * \`SRGBColorSpace\` to \`LinearSRGBColorSpace\`.
     *
     * @param {Color} color - The color to copy/convert.
     * @return {Color} A reference to this color.
     */
    copySRGBToLinear(color) {
      this.r = SRGBToLinear(color.r);
      this.g = SRGBToLinear(color.g);
      this.b = SRGBToLinear(color.b);
      return this;
    }
    /**
     * Copies the given color into this color, and then converts this color from
     * \`LinearSRGBColorSpace\` to \`SRGBColorSpace\`.
     *
     * @param {Color} color - The color to copy/convert.
     * @return {Color} A reference to this color.
     */
    copyLinearToSRGB(color) {
      this.r = LinearToSRGB(color.r);
      this.g = LinearToSRGB(color.g);
      this.b = LinearToSRGB(color.b);
      return this;
    }
    /**
     * Converts this color from \`SRGBColorSpace\` to \`LinearSRGBColorSpace\`.
     *
     * @return {Color} A reference to this color.
     */
    convertSRGBToLinear() {
      this.copySRGBToLinear(this);
      return this;
    }
    /**
     * Converts this color from \`LinearSRGBColorSpace\` to \`SRGBColorSpace\`.
     *
     * @return {Color} A reference to this color.
     */
    convertLinearToSRGB() {
      this.copyLinearToSRGB(this);
      return this;
    }
    /**
     * Returns the hexadecimal value of this color.
     *
     * @param {string} [colorSpace=SRGBColorSpace] - The color space.
     * @return {number} The hexadecimal value.
     */
    getHex(colorSpace = SRGBColorSpace) {
      ColorManagement.workingToColorSpace(_color.copy(this), colorSpace);
      return Math.round(clamp(_color.r * 255, 0, 255)) * 65536 + Math.round(clamp(_color.g * 255, 0, 255)) * 256 + Math.round(clamp(_color.b * 255, 0, 255));
    }
    /**
     * Returns the hexadecimal value of this color as a string (for example, 'FFFFFF').
     *
     * @param {string} [colorSpace=SRGBColorSpace] - The color space.
     * @return {string} The hexadecimal value as a string.
     */
    getHexString(colorSpace = SRGBColorSpace) {
      return ("000000" + this.getHex(colorSpace).toString(16)).slice(-6);
    }
    /**
     * Converts the colors RGB values into the HSL format and stores them into the
     * given target object.
     *
     * @param {{h:number,s:number,l:number}} target - The target object that is used to store the method's result.
     * @param {string} [colorSpace=ColorManagement.workingColorSpace] - The color space.
     * @return {{h:number,s:number,l:number}} The HSL representation of this color.
     */
    getHSL(target, colorSpace = ColorManagement.workingColorSpace) {
      ColorManagement.workingToColorSpace(_color.copy(this), colorSpace);
      const r = _color.r, g = _color.g, b = _color.b;
      const max2 = Math.max(r, g, b);
      const min = Math.min(r, g, b);
      let hue, saturation;
      const lightness = (min + max2) / 2;
      if (min === max2) {
        hue = 0;
        saturation = 0;
      } else {
        const delta = max2 - min;
        saturation = lightness <= 0.5 ? delta / (max2 + min) : delta / (2 - max2 - min);
        switch (max2) {
          case r:
            hue = (g - b) / delta + (g < b ? 6 : 0);
            break;
          case g:
            hue = (b - r) / delta + 2;
            break;
          case b:
            hue = (r - g) / delta + 4;
            break;
        }
        hue /= 6;
      }
      target.h = hue;
      target.s = saturation;
      target.l = lightness;
      return target;
    }
    /**
     * Returns the RGB values of this color and stores them into the given target object.
     *
     * @param {Color} target - The target color that is used to store the method's result.
     * @param {string} [colorSpace=ColorManagement.workingColorSpace] - The color space.
     * @return {Color} The RGB representation of this color.
     */
    getRGB(target, colorSpace = ColorManagement.workingColorSpace) {
      ColorManagement.workingToColorSpace(_color.copy(this), colorSpace);
      target.r = _color.r;
      target.g = _color.g;
      target.b = _color.b;
      return target;
    }
    /**
     * Returns the value of this color as a CSS style string. Example: \`rgb(255,0,0)\`.
     *
     * @param {string} [colorSpace=SRGBColorSpace] - The color space.
     * @return {string} The CSS representation of this color.
     */
    getStyle(colorSpace = SRGBColorSpace) {
      ColorManagement.workingToColorSpace(_color.copy(this), colorSpace);
      const r = _color.r, g = _color.g, b = _color.b;
      if (colorSpace !== SRGBColorSpace) {
        return \`color(\${colorSpace} \${r.toFixed(3)} \${g.toFixed(3)} \${b.toFixed(3)})\`;
      }
      return \`rgb(\${Math.round(r * 255)},\${Math.round(g * 255)},\${Math.round(b * 255)})\`;
    }
    /**
     * Adds the given HSL values to this color's values.
     * Internally, this converts the color's RGB values to HSL, adds HSL
     * and then converts the color back to RGB.
     *
     * @param {number} h - Hue value between \`0.0\` and \`1.0\`.
     * @param {number} s - Saturation value between \`0.0\` and \`1.0\`.
     * @param {number} l - Lightness value between \`0.0\` and \`1.0\`.
     * @return {Color} A reference to this color.
     */
    offsetHSL(h, s, l) {
      this.getHSL(_hslA);
      return this.setHSL(_hslA.h + h, _hslA.s + s, _hslA.l + l);
    }
    /**
     * Adds the RGB values of the given color to the RGB values of this color.
     *
     * @param {Color} color - The color to add.
     * @return {Color} A reference to this color.
     */
    add(color) {
      this.r += color.r;
      this.g += color.g;
      this.b += color.b;
      return this;
    }
    /**
     * Adds the RGB values of the given colors and stores the result in this instance.
     *
     * @param {Color} color1 - The first color.
     * @param {Color} color2 - The second color.
     * @return {Color} A reference to this color.
     */
    addColors(color1, color2) {
      this.r = color1.r + color2.r;
      this.g = color1.g + color2.g;
      this.b = color1.b + color2.b;
      return this;
    }
    /**
     * Adds the given scalar value to the RGB values of this color.
     *
     * @param {number} s - The scalar to add.
     * @return {Color} A reference to this color.
     */
    addScalar(s) {
      this.r += s;
      this.g += s;
      this.b += s;
      return this;
    }
    /**
     * Subtracts the RGB values of the given color from the RGB values of this color.
     *
     * @param {Color} color - The color to subtract.
     * @return {Color} A reference to this color.
     */
    sub(color) {
      this.r = Math.max(0, this.r - color.r);
      this.g = Math.max(0, this.g - color.g);
      this.b = Math.max(0, this.b - color.b);
      return this;
    }
    /**
     * Multiplies the RGB values of the given color with the RGB values of this color.
     *
     * @param {Color} color - The color to multiply.
     * @return {Color} A reference to this color.
     */
    multiply(color) {
      this.r *= color.r;
      this.g *= color.g;
      this.b *= color.b;
      return this;
    }
    /**
     * Multiplies the given scalar value with the RGB values of this color.
     *
     * @param {number} s - The scalar to multiply.
     * @return {Color} A reference to this color.
     */
    multiplyScalar(s) {
      this.r *= s;
      this.g *= s;
      this.b *= s;
      return this;
    }
    /**
     * Linearly interpolates this color's RGB values toward the RGB values of the
     * given color. The alpha argument can be thought of as the ratio between
     * the two colors, where \`0.0\` is this color and \`1.0\` is the first argument.
     *
     * @param {Color} color - The color to converge on.
     * @param {number} alpha - The interpolation factor in the closed interval \`[0,1]\`.
     * @return {Color} A reference to this color.
     */
    lerp(color, alpha) {
      this.r += (color.r - this.r) * alpha;
      this.g += (color.g - this.g) * alpha;
      this.b += (color.b - this.b) * alpha;
      return this;
    }
    /**
     * Linearly interpolates between the given colors and stores the result in this instance.
     * The alpha argument can be thought of as the ratio between the two colors, where \`0.0\`
     * is the first and \`1.0\` is the second color.
     *
     * @param {Color} color1 - The first color.
     * @param {Color} color2 - The second color.
     * @param {number} alpha - The interpolation factor in the closed interval \`[0,1]\`.
     * @return {Color} A reference to this color.
     */
    lerpColors(color1, color2, alpha) {
      this.r = color1.r + (color2.r - color1.r) * alpha;
      this.g = color1.g + (color2.g - color1.g) * alpha;
      this.b = color1.b + (color2.b - color1.b) * alpha;
      return this;
    }
    /**
     * Linearly interpolates this color's HSL values toward the HSL values of the
     * given color. It differs from {@link Color#lerp} by not interpolating straight
     * from one color to the other, but instead going through all the hues in between
     * those two colors. The alpha argument can be thought of as the ratio between
     * the two colors, where 0.0 is this color and 1.0 is the first argument.
     *
     * @param {Color} color - The color to converge on.
     * @param {number} alpha - The interpolation factor in the closed interval \`[0,1]\`.
     * @return {Color} A reference to this color.
     */
    lerpHSL(color, alpha) {
      this.getHSL(_hslA);
      color.getHSL(_hslB);
      const h = lerp(_hslA.h, _hslB.h, alpha);
      const s = lerp(_hslA.s, _hslB.s, alpha);
      const l = lerp(_hslA.l, _hslB.l, alpha);
      this.setHSL(h, s, l);
      return this;
    }
    /**
     * Sets the color's RGB components from the given 3D vector.
     *
     * @param {Vector3} v - The vector to set.
     * @return {Color} A reference to this color.
     */
    setFromVector3(v) {
      this.r = v.x;
      this.g = v.y;
      this.b = v.z;
      return this;
    }
    /**
     * Transforms this color with the given 3x3 matrix.
     *
     * @param {Matrix3} m - The matrix.
     * @return {Color} A reference to this color.
     */
    applyMatrix3(m) {
      const r = this.r, g = this.g, b = this.b;
      const e = m.elements;
      this.r = e[0] * r + e[3] * g + e[6] * b;
      this.g = e[1] * r + e[4] * g + e[7] * b;
      this.b = e[2] * r + e[5] * g + e[8] * b;
      return this;
    }
    /**
     * Returns \`true\` if this color is equal with the given one.
     *
     * @param {Color} c - The color to test for equality.
     * @return {boolean} Whether this bounding color is equal with the given one.
     */
    equals(c) {
      return c.r === this.r && c.g === this.g && c.b === this.b;
    }
    /**
     * Sets this color's RGB components from the given array.
     *
     * @param {Array<number>} array - An array holding the RGB values.
     * @param {number} [offset=0] - The offset into the array.
     * @return {Color} A reference to this color.
     */
    fromArray(array, offset = 0) {
      this.r = array[offset];
      this.g = array[offset + 1];
      this.b = array[offset + 2];
      return this;
    }
    /**
     * Writes the RGB components of this color to the given array. If no array is provided,
     * the method returns a new instance.
     *
     * @param {Array<number>} [array=[]] - The target array holding the color components.
     * @param {number} [offset=0] - Index of the first element in the array.
     * @return {Array<number>} The color components.
     */
    toArray(array = [], offset = 0) {
      array[offset] = this.r;
      array[offset + 1] = this.g;
      array[offset + 2] = this.b;
      return array;
    }
    /**
     * Sets the components of this color from the given buffer attribute.
     *
     * @param {BufferAttribute} attribute - The buffer attribute holding color data.
     * @param {number} index - The index into the attribute.
     * @return {Color} A reference to this color.
     */
    fromBufferAttribute(attribute, index) {
      this.r = attribute.getX(index);
      this.g = attribute.getY(index);
      this.b = attribute.getZ(index);
      return this;
    }
    /**
     * This methods defines the serialization result of this class. Returns the color
     * as a hexadecimal value.
     *
     * @return {number} The hexadecimal value.
     */
    toJSON() {
      return this.getHex();
    }
    *[Symbol.iterator]() {
      yield this.r;
      yield this.g;
      yield this.b;
    }
  }
  const _color = /* @__PURE__ */ new Color();
  Color.NAMES = _colorKeywords;
  if (typeof __THREE_DEVTOOLS__ !== "undefined") {
    __THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register", { detail: {
      revision: REVISION
    } }));
  }
  if (typeof window !== "undefined") {
    if (window.__THREE__) {
      console.warn("WARNING: Multiple instances of Three.js being imported.");
    } else {
      window.__THREE__ = REVISION;
    }
  }
  const LN_SCALE_MIN = -12;
  const LN_SCALE_MAX = 9;
  const LN_SCALE_ZERO = -30;
  const SCALE_ZERO = Math.exp(LN_SCALE_ZERO);
  const SPLAT_TEX_WIDTH_BITS = 11;
  const SPLAT_TEX_HEIGHT_BITS = 11;
  const SPLAT_TEX_WIDTH = 1 << SPLAT_TEX_WIDTH_BITS;
  const SPLAT_TEX_HEIGHT = 1 << SPLAT_TEX_HEIGHT_BITS;
  const SPLAT_TEX_MIN_HEIGHT = 1;
  function unindentLines(s) {
    var _a2;
    let seenNonEmpty = false;
    const lines = s.split("\\n").map((line) => {
      const trimmedLine = line.trimEnd();
      if (seenNonEmpty) {
        return trimmedLine;
      }
      if (trimmedLine.length > 0) {
        seenNonEmpty = true;
        return trimmedLine;
      }
      return null;
    }).filter((line) => line != null);
    while (lines.length > 0 && lines[lines.length - 1].length === 0) {
      lines.pop();
    }
    if (lines.length === 0) {
      return [];
    }
    const indent = (_a2 = lines[0].match(/^\\s*/)) == null ? void 0 : _a2[0];
    if (!indent) {
      return lines;
    }
    const regex = new RegExp(\`^\${indent}\`);
    return lines.map((line) => line.replace(regex, ""));
  }
  function unindent(s) {
    return unindentLines(s).join("\\n");
  }
  const f32buffer = new Float32Array(1);
  const u32buffer = new Uint32Array(f32buffer.buffer);
  const supportsFloat16Array = "Float16Array" in globalThis;
  const f16buffer = supportsFloat16Array ? new globalThis["Float16Array"](1) : null;
  const u16buffer = new Uint16Array(f16buffer == null ? void 0 : f16buffer.buffer);
  function normalize(vec) {
    const norm = Math.sqrt(vec.reduce((acc, v) => acc + v * v, 0));
    return vec.map((v) => v / norm);
  }
  const toHalf = supportsFloat16Array ? toHalfNative : toHalfJS;
  const fromHalf = supportsFloat16Array ? fromHalfNative : fromHalfJS;
  function toHalfNative(f) {
    f16buffer[0] = f;
    return u16buffer[0];
  }
  function toHalfJS(f) {
    f32buffer[0] = f;
    const bits2 = u32buffer[0];
    const sign = bits2 >> 31 & 1;
    const exp = bits2 >> 23 & 255;
    const frac = bits2 & 8388607;
    const halfSign = sign << 15;
    if (exp === 255) {
      if (frac !== 0) {
        return halfSign | 32767;
      }
      return halfSign | 31744;
    }
    const newExp = exp - 127 + 15;
    if (newExp >= 31) {
      return halfSign | 31744;
    }
    if (newExp <= 0) {
      if (newExp < -10) {
        return halfSign;
      }
      const subFrac = (frac | 8388608) >> 1 - newExp + 13;
      return halfSign | subFrac;
    }
    const halfFrac = frac >> 13;
    return halfSign | newExp << 10 | halfFrac;
  }
  function fromHalfNative(u) {
    u16buffer[0] = u;
    return f16buffer[0];
  }
  function fromHalfJS(h) {
    const sign = h >> 15 & 1;
    const exp = h >> 10 & 31;
    const frac = h & 1023;
    let f32bits;
    if (exp === 0) {
      if (frac === 0) {
        f32bits = sign << 31;
      } else {
        let mant = frac;
        let e = -14;
        while ((mant & 1024) === 0) {
          mant <<= 1;
          e--;
        }
        mant &= 1023;
        const newExp = e + 127;
        const newFrac = mant << 13;
        f32bits = sign << 31 | newExp << 23 | newFrac;
      }
    } else if (exp === 31) {
      if (frac === 0) {
        f32bits = sign << 31 | 2139095040;
      } else {
        f32bits = sign << 31 | 2143289344;
      }
    } else {
      const newExp = exp - 15 + 127;
      const newFrac = frac << 13;
      f32bits = sign << 31 | newExp << 23 | newFrac;
    }
    u32buffer[0] = f32bits;
    return f32buffer[0];
  }
  function floatToUint8(v) {
    return Math.max(0, Math.min(255, Math.round(v * 255)));
  }
  function getArrayBuffers(ctx) {
    const buffers = [];
    const seen = /* @__PURE__ */ new Set();
    function traverse(obj) {
      if (obj && typeof obj === "object" && !seen.has(obj)) {
        seen.add(obj);
        if (obj instanceof ArrayBuffer) {
          buffers.push(obj);
        } else if (ArrayBuffer.isView(obj)) {
          buffers.push(obj.buffer);
        } else if (Array.isArray(obj)) {
          obj.forEach(traverse);
        } else {
          Object.values(obj).forEach(traverse);
        }
      }
    }
    traverse(ctx);
    return buffers;
  }
  function setPackedSplat(packedSplats, index, x2, y, z, scaleX, scaleY, scaleZ, quatX, quatY, quatZ, quatW, opacity, r, g, b, encoding) {
    const rgbMin = (encoding == null ? void 0 : encoding.rgbMin) ?? 0;
    const rgbMax = (encoding == null ? void 0 : encoding.rgbMax) ?? 1;
    const rgbRange = rgbMax - rgbMin;
    const uR = floatToUint8((r - rgbMin) / rgbRange);
    const uG = floatToUint8((g - rgbMin) / rgbRange);
    const uB = floatToUint8((b - rgbMin) / rgbRange);
    const uA = floatToUint8(opacity);
    const uQuat = encodeQuatOctXy88R8(
      tempQuaternion.set(quatX, quatY, quatZ, quatW)
    );
    const uQuatX = uQuat & 255;
    const uQuatY = uQuat >>> 8 & 255;
    const uQuatZ = uQuat >>> 16 & 255;
    const lnScaleMin = (encoding == null ? void 0 : encoding.lnScaleMin) ?? LN_SCALE_MIN;
    const lnScaleMax = (encoding == null ? void 0 : encoding.lnScaleMax) ?? LN_SCALE_MAX;
    const lnScaleScale = 254 / (lnScaleMax - lnScaleMin);
    const uScaleX = scaleX < SCALE_ZERO ? 0 : Math.min(
      255,
      Math.max(
        1,
        Math.round((Math.log(scaleX) - lnScaleMin) * lnScaleScale) + 1
      )
    );
    const uScaleY = scaleY < SCALE_ZERO ? 0 : Math.min(
      255,
      Math.max(
        1,
        Math.round((Math.log(scaleY) - lnScaleMin) * lnScaleScale) + 1
      )
    );
    const uScaleZ = scaleZ < SCALE_ZERO ? 0 : Math.min(
      255,
      Math.max(
        1,
        Math.round((Math.log(scaleZ) - lnScaleMin) * lnScaleScale) + 1
      )
    );
    const uCenterX = toHalf(x2);
    const uCenterY = toHalf(y);
    const uCenterZ = toHalf(z);
    const i4 = index * 4;
    packedSplats[i4] = uR | uG << 8 | uB << 16 | uA << 24;
    packedSplats[i4 + 1] = uCenterX | uCenterY << 16;
    packedSplats[i4 + 2] = uCenterZ | uQuatX << 16 | uQuatY << 24;
    packedSplats[i4 + 3] = uScaleX | uScaleY << 8 | uScaleZ << 16 | uQuatZ << 24;
  }
  function setPackedSplatCenter(packedSplats, index, x2, y, z) {
    const uCenterX = toHalf(x2);
    const uCenterY = toHalf(y);
    const uCenterZ = toHalf(z);
    const i4 = index * 4;
    packedSplats[i4 + 1] = uCenterX | uCenterY << 16;
    packedSplats[i4 + 2] = uCenterZ | packedSplats[i4 + 2] & 4294901760;
  }
  function setPackedSplatScales(packedSplats, index, scaleX, scaleY, scaleZ, encoding) {
    const lnScaleMin = (encoding == null ? void 0 : encoding.lnScaleMin) ?? LN_SCALE_MIN;
    const lnScaleMax = (encoding == null ? void 0 : encoding.lnScaleMax) ?? LN_SCALE_MAX;
    const lnScaleScale = 254 / (lnScaleMax - lnScaleMin);
    const uScaleX = scaleX < SCALE_ZERO ? 0 : Math.min(
      255,
      Math.max(
        1,
        Math.round((Math.log(scaleX) - lnScaleMin) * lnScaleScale) + 1
      )
    );
    const uScaleY = scaleY < SCALE_ZERO ? 0 : Math.min(
      255,
      Math.max(
        1,
        Math.round((Math.log(scaleY) - lnScaleMin) * lnScaleScale) + 1
      )
    );
    const uScaleZ = scaleZ < SCALE_ZERO ? 0 : Math.min(
      255,
      Math.max(
        1,
        Math.round((Math.log(scaleZ) - lnScaleMin) * lnScaleScale) + 1
      )
    );
    const i4 = index * 4;
    packedSplats[i4 + 3] = uScaleX | uScaleY << 8 | uScaleZ << 16 | packedSplats[i4 + 3] & 4278190080;
  }
  const tempQuaternion = new Quaternion();
  function setPackedSplatQuat(packedSplats, index, quatX, quatY, quatZ, quatW) {
    const uQuat = encodeQuatOctXy88R8(
      tempQuaternion.set(quatX, quatY, quatZ, quatW)
    );
    const uQuatX = uQuat & 255;
    const uQuatY = uQuat >>> 8 & 255;
    const uQuatZ = uQuat >>> 16 & 255;
    const i4 = index * 4;
    packedSplats[i4 + 2] = packedSplats[i4 + 2] & 65535 | uQuatX << 16 | uQuatY << 24;
    packedSplats[i4 + 3] = packedSplats[i4 + 3] & 16777215 | uQuatZ << 24;
  }
  function setPackedSplatRgba(packedSplats, index, r, g, b, a, encoding) {
    const rgbMin = (encoding == null ? void 0 : encoding.rgbMin) ?? 0;
    const rgbMax = (encoding == null ? void 0 : encoding.rgbMax) ?? 1;
    const rgbRange = rgbMax - rgbMin;
    const uR = floatToUint8((r - rgbMin) / rgbRange);
    const uG = floatToUint8((g - rgbMin) / rgbRange);
    const uB = floatToUint8((b - rgbMin) / rgbRange);
    const uA = floatToUint8(a);
    const i4 = index * 4;
    packedSplats[i4] = uR | uG << 8 | uB << 16 | uA << 24;
  }
  function setPackedSplatRgb(packedSplats, index, r, g, b, encoding) {
    const rgbMin = (encoding == null ? void 0 : encoding.rgbMin) ?? 0;
    const rgbMax = (encoding == null ? void 0 : encoding.rgbMax) ?? 1;
    const rgbRange = rgbMax - rgbMin;
    const uR = floatToUint8((r - rgbMin) / rgbRange);
    const uG = floatToUint8((g - rgbMin) / rgbRange);
    const uB = floatToUint8((b - rgbMin) / rgbRange);
    const i4 = index * 4;
    packedSplats[i4] = uR | uG << 8 | uB << 16 | packedSplats[i4] & 4278190080;
  }
  function setPackedSplatOpacity(packedSplats, index, opacity) {
    const uA = floatToUint8(opacity);
    const i4 = index * 4;
    packedSplats[i4] = packedSplats[i4] & 16777215 | uA << 24;
  }
  new Vector3();
  new Vector3();
  new Color();
  function getTextureSize(numSplats) {
    const width = SPLAT_TEX_WIDTH;
    const height = Math.max(
      SPLAT_TEX_MIN_HEIGHT,
      Math.min(SPLAT_TEX_HEIGHT, Math.ceil(numSplats / width))
    );
    const depth = Math.ceil(numSplats / (width * height));
    const maxSplats = width * height * depth;
    return { width, height, depth, maxSplats };
  }
  function computeMaxSplats(numSplats) {
    const width = SPLAT_TEX_WIDTH;
    const height = Math.max(
      SPLAT_TEX_MIN_HEIGHT,
      Math.min(SPLAT_TEX_HEIGHT, Math.ceil(numSplats / width))
    );
    const depth = Math.ceil(numSplats / (width * height));
    return width * height * depth;
  }
  unindent(\`
  precision highp float;

  in vec3 position;

  void main() {
    gl_Position = vec4(position.xy, 0.0, 1.0);
  }
\`);
  const tempNormalizedQuaternion = new Quaternion();
  const tempAxis = new Vector3();
  function encodeQuatOctXy88R8(q) {
    const qnorm = tempNormalizedQuaternion.copy(q).normalize();
    if (qnorm.w < 0) {
      qnorm.set(-qnorm.x, -qnorm.y, -qnorm.z, -qnorm.w);
    }
    const theta = 2 * Math.acos(qnorm.w);
    const xyz_norm = Math.sqrt(
      qnorm.x * qnorm.x + qnorm.y * qnorm.y + qnorm.z * qnorm.z
    );
    const axis = xyz_norm < 1e-6 ? tempAxis.set(1, 0, 0) : tempAxis.set(qnorm.x, qnorm.y, qnorm.z).divideScalar(xyz_norm);
    const sum = Math.abs(axis.x) + Math.abs(axis.y) + Math.abs(axis.z);
    let p_x = axis.x / sum;
    let p_y = axis.y / sum;
    if (axis.z < 0) {
      const tmp = p_x;
      p_x = (1 - Math.abs(p_y)) * (p_x >= 0 ? 1 : -1);
      p_y = (1 - Math.abs(tmp)) * (p_y >= 0 ? 1 : -1);
    }
    const u_f = p_x * 0.5 + 0.5;
    const v_f = p_y * 0.5 + 0.5;
    const quantU = Math.round(u_f * 255);
    const quantV = Math.round(v_f * 255);
    const angleInt = Math.round(theta * (255 / Math.PI));
    return angleInt << 16 | quantV << 8 | quantU;
  }
  function packSint8Bytes(b0, b1, b22, b3) {
    const clampedB0 = Math.max(-127, Math.min(127, b0 * 127));
    const clampedB1 = Math.max(-127, Math.min(127, b1 * 127));
    const clampedB2 = Math.max(-127, Math.min(127, b22 * 127));
    const clampedB3 = Math.max(-127, Math.min(127, b3 * 127));
    return clampedB0 & 255 | (clampedB1 & 255) << 8 | (clampedB2 & 255) << 16 | (clampedB3 & 255) << 24;
  }
  function encodeSh1Rgb(sh1Array, index, sh1Rgb, encoding) {
    const sh1Min = (encoding == null ? void 0 : encoding.sh1Min) ?? -1;
    const sh1Max = (encoding == null ? void 0 : encoding.sh1Max) ?? 1;
    const sh1Mid = 0.5 * (sh1Min + sh1Max);
    const sh1Scale = 126 / (sh1Max - sh1Min);
    const base = index * 2;
    for (let i2 = 0; i2 < 9; ++i2) {
      const s = (sh1Rgb[i2] - sh1Mid) * sh1Scale;
      const value = Math.round(Math.max(-63, Math.min(63, s))) & 127;
      const bitStart = i2 * 7;
      const bitEnd = bitStart + 7;
      const wordStart = Math.floor(bitStart / 32);
      const bitOffset = bitStart - wordStart * 32;
      const firstWord = value << bitOffset & 4294967295;
      sh1Array[base + wordStart] |= firstWord;
      if (bitEnd > wordStart * 32 + 32) {
        const secondWord = value >>> 32 - bitOffset & 4294967295;
        sh1Array[base + wordStart + 1] |= secondWord;
      }
    }
  }
  function encodeSh2Rgb(sh2Array, index, sh2Rgb, encoding) {
    const sh2Min = (encoding == null ? void 0 : encoding.sh2Min) ?? -1;
    const sh2Max = (encoding == null ? void 0 : encoding.sh2Max) ?? 1;
    const sh2Mid = 0.5 * (sh2Min + sh2Max);
    const sh2Scale = 2 / (sh2Max - sh2Min);
    sh2Array[index * 4 + 0] = packSint8Bytes(
      (sh2Rgb[0] - sh2Mid) * sh2Scale,
      (sh2Rgb[1] - sh2Mid) * sh2Scale,
      (sh2Rgb[2] - sh2Mid) * sh2Scale,
      (sh2Rgb[3] - sh2Mid) * sh2Scale
    );
    sh2Array[index * 4 + 1] = packSint8Bytes(
      (sh2Rgb[4] - sh2Mid) * sh2Scale,
      (sh2Rgb[5] - sh2Mid) * sh2Scale,
      (sh2Rgb[6] - sh2Mid) * sh2Scale,
      (sh2Rgb[7] - sh2Mid) * sh2Scale
    );
    sh2Array[index * 4 + 2] = packSint8Bytes(
      (sh2Rgb[8] - sh2Mid) * sh2Scale,
      (sh2Rgb[9] - sh2Mid) * sh2Scale,
      (sh2Rgb[10] - sh2Mid) * sh2Scale,
      (sh2Rgb[11] - sh2Mid) * sh2Scale
    );
    sh2Array[index * 4 + 3] = packSint8Bytes(
      (sh2Rgb[12] - sh2Mid) * sh2Scale,
      (sh2Rgb[13] - sh2Mid) * sh2Scale,
      (sh2Rgb[14] - sh2Mid) * sh2Scale,
      0
    );
  }
  function encodeSh3Rgb(sh3Array, index, sh3Rgb, encoding) {
    const sh3Min = (encoding == null ? void 0 : encoding.sh3Min) ?? -1;
    const sh3Max = (encoding == null ? void 0 : encoding.sh3Max) ?? 1;
    const sh3Mid = 0.5 * (sh3Min + sh3Max);
    const sh3Scale = 62 / (sh3Max - sh3Min);
    const base = index * 4;
    for (let i2 = 0; i2 < 21; ++i2) {
      const s = (sh3Rgb[i2] - sh3Mid) * sh3Scale;
      const value = Math.round(Math.max(-31, Math.min(31, s))) & 63;
      const bitStart = i2 * 6;
      const bitEnd = bitStart + 6;
      const wordStart = Math.floor(bitStart / 32);
      const bitOffset = bitStart - wordStart * 32;
      const firstWord = value << bitOffset & 4294967295;
      sh3Array[base + wordStart] |= firstWord;
      if (bitEnd > wordStart * 32 + 32) {
        const secondWord = value >>> 32 - bitOffset & 4294967295;
        sh3Array[base + wordStart + 1] |= secondWord;
      }
    }
  }
  function decompressPartialGzip(fileBytes, numBytes) {
    const chunks = [];
    let totalBytes = 0;
    let result = null;
    const gunzip = new Gunzip((data, final) => {
      chunks.push(data);
      totalBytes += data.length;
      if (final || totalBytes >= numBytes) {
        const allBytes = new Uint8Array(totalBytes);
        let offset2 = 0;
        for (const chunk of chunks) {
          allBytes.set(chunk, offset2);
          offset2 += chunk.length;
        }
        result = allBytes.slice(0, numBytes);
      }
    });
    const CHUNK_SIZE = 1024;
    let offset = 0;
    while (result == null && offset < fileBytes.length) {
      const chunk = fileBytes.slice(offset, offset + CHUNK_SIZE);
      gunzip.push(chunk, false);
      offset += CHUNK_SIZE;
    }
    if (result == null) {
      gunzip.push(new Uint8Array(), true);
      if (result == null) {
        throw new Error("Failed to decompress partial gzip");
      }
    }
    return result;
  }
  class GunzipReader {
    constructor({
      fileBytes,
      chunkBytes = 64 * 1024
    }) {
      this.fileBytes = fileBytes;
      this.chunkBytes = chunkBytes;
      this.offset = 0;
      this.chunks = [];
      this.totalBytes = 0;
      this.gunzip = new Gunzip((chunk, _final) => {
        this.chunks.push(chunk);
        this.totalBytes += chunk.length;
      });
    }
    read(numBytes) {
      while (this.totalBytes < numBytes && this.offset < this.fileBytes.length) {
        const end = Math.min(
          this.offset + this.chunkBytes,
          this.fileBytes.length
        );
        this.gunzip.push(this.fileBytes.subarray(this.offset, end), false);
        this.offset = end;
      }
      if (this.totalBytes < numBytes && this.offset >= this.fileBytes.length) {
        this.gunzip.push(new Uint8Array(0), true);
      }
      if (this.totalBytes < numBytes) {
        throw new Error(
          \`Unexpected EOF: needed \${numBytes}, got \${this.totalBytes}\`
        );
      }
      const allBytes = new Uint8Array(this.totalBytes);
      let outOffset = 0;
      for (const chunk of this.chunks) {
        allBytes.set(chunk, outOffset);
        outOffset += chunk.length;
      }
      const result = allBytes.subarray(0, numBytes);
      this.chunks = [allBytes.subarray(numBytes)];
      this.totalBytes -= numBytes;
      return result;
    }
  }
  function decodeAntiSplat(fileBytes, initNumSplats, splatCallback) {
    const numSplats = Math.floor(fileBytes.length / 32);
    if (numSplats * 32 !== fileBytes.length) {
      throw new Error("Invalid .splat file size");
    }
    initNumSplats(numSplats);
    const f32 = new Float32Array(fileBytes.buffer);
    for (let i2 = 0; i2 < numSplats; ++i2) {
      const i322 = i2 * 32;
      const i8 = i2 * 8;
      const x2 = f32[i8 + 0];
      const y = f32[i8 + 1];
      const z = f32[i8 + 2];
      const scaleX = f32[i8 + 3];
      const scaleY = f32[i8 + 4];
      const scaleZ = f32[i8 + 5];
      const r = fileBytes[i322 + 24] / 255;
      const g = fileBytes[i322 + 25] / 255;
      const b = fileBytes[i322 + 26] / 255;
      const opacity = fileBytes[i322 + 27] / 255;
      const quatW = (fileBytes[i322 + 28] - 128) / 128;
      const quatX = (fileBytes[i322 + 29] - 128) / 128;
      const quatY = (fileBytes[i322 + 30] - 128) / 128;
      const quatZ = (fileBytes[i322 + 31] - 128) / 128;
      splatCallback(
        i2,
        x2,
        y,
        z,
        scaleX,
        scaleY,
        scaleZ,
        quatX,
        quatY,
        quatZ,
        quatW,
        opacity,
        r,
        g,
        b
      );
    }
  }
  function unpackAntiSplat(fileBytes, splatEncoding) {
    let numSplats = 0;
    let maxSplats = 0;
    let packedArray = new Uint32Array(0);
    decodeAntiSplat(
      fileBytes,
      (cbNumSplats) => {
        numSplats = cbNumSplats;
        maxSplats = computeMaxSplats(numSplats);
        packedArray = new Uint32Array(maxSplats * 4);
      },
      (index, x2, y, z, scaleX, scaleY, scaleZ, quatX, quatY, quatZ, quatW, opacity, r, g, b) => {
        setPackedSplat(
          packedArray,
          index,
          x2,
          y,
          z,
          scaleX,
          scaleY,
          scaleZ,
          quatX,
          quatY,
          quatZ,
          quatW,
          opacity,
          r,
          g,
          b,
          splatEncoding
        );
      }
    );
    return { packedArray, numSplats };
  }
  const KSPLAT_COMPRESSION = {
    0: {
      bytesPerCenter: 12,
      bytesPerScale: 12,
      bytesPerRotation: 16,
      bytesPerColor: 4,
      bytesPerSphericalHarmonicsComponent: 4,
      scaleOffsetBytes: 12,
      rotationOffsetBytes: 24,
      colorOffsetBytes: 40,
      sphericalHarmonicsOffsetBytes: 44,
      scaleRange: 1
    },
    1: {
      bytesPerCenter: 6,
      bytesPerScale: 6,
      bytesPerRotation: 8,
      bytesPerColor: 4,
      bytesPerSphericalHarmonicsComponent: 2,
      scaleOffsetBytes: 6,
      rotationOffsetBytes: 12,
      colorOffsetBytes: 20,
      sphericalHarmonicsOffsetBytes: 24,
      scaleRange: 32767
    },
    2: {
      bytesPerCenter: 6,
      bytesPerScale: 6,
      bytesPerRotation: 8,
      bytesPerColor: 4,
      bytesPerSphericalHarmonicsComponent: 1,
      scaleOffsetBytes: 6,
      rotationOffsetBytes: 12,
      colorOffsetBytes: 20,
      sphericalHarmonicsOffsetBytes: 24,
      scaleRange: 32767
    }
  };
  const KSPLAT_SH_DEGREE_TO_COMPONENTS = {
    0: 0,
    1: 9,
    2: 24,
    3: 45
  };
  function decodeKsplat(fileBytes, initNumSplats, splatCallback, shCallback) {
    var _a2;
    const HEADER_BYTES = 4096;
    const SECTION_BYTES = 1024;
    let headerOffset = 0;
    const header = new DataView(fileBytes.buffer, headerOffset, HEADER_BYTES);
    headerOffset += HEADER_BYTES;
    const versionMajor = header.getUint8(0);
    const versionMinor = header.getUint8(1);
    if (versionMajor !== 0 || versionMinor < 1) {
      throw new Error(
        \`Unsupported .ksplat version: \${versionMajor}.\${versionMinor}\`
      );
    }
    const maxSectionCount = header.getUint32(4, true);
    header.getUint32(16, true);
    const compressionLevel = header.getUint16(20, true);
    if (compressionLevel < 0 || compressionLevel > 2) {
      throw new Error(\`Invalid .ksplat compression level: \${compressionLevel}\`);
    }
    const minSphericalHarmonicsCoeff = header.getFloat32(36, true) || -1.5;
    const maxSphericalHarmonicsCoeff = header.getFloat32(40, true) || 1.5;
    let sectionBase = HEADER_BYTES + maxSectionCount * SECTION_BYTES;
    for (let section = 0; section < maxSectionCount; ++section) {
      let getSh = function(splatOffset, component) {
        if (compressionLevel === 0) {
          return data.getFloat32(
            splatOffset + sphericalHarmonicsOffsetBytes + component * 4,
            true
          );
        }
        if (compressionLevel === 1) {
          return fromHalf(
            data.getUint16(
              splatOffset + sphericalHarmonicsOffsetBytes + component * 2,
              true
            )
          );
        }
        const t = data.getUint8(splatOffset + sphericalHarmonicsOffsetBytes + component) / 255;
        return minSphericalHarmonicsCoeff + t * (maxSphericalHarmonicsCoeff - minSphericalHarmonicsCoeff);
      };
      const section2 = new DataView(fileBytes.buffer, headerOffset, SECTION_BYTES);
      headerOffset += SECTION_BYTES;
      const sectionSplatCount = section2.getUint32(0, true);
      const sectionMaxSplatCount = section2.getUint32(4, true);
      const bucketSize = section2.getUint32(8, true);
      const bucketCount = section2.getUint32(12, true);
      const bucketBlockSize = section2.getFloat32(16, true);
      const bucketStorageSizeBytes = section2.getUint16(20, true);
      const compressionScaleRange = (section2.getUint32(24, true) || ((_a2 = KSPLAT_COMPRESSION[compressionLevel]) == null ? void 0 : _a2.scaleRange)) ?? 1;
      const fullBucketCount = section2.getUint32(32, true);
      const fullBucketSplats = fullBucketCount * bucketSize;
      const partiallyFilledBucketCount = section2.getUint32(36, true);
      const bucketsMetaDataSizeBytes = partiallyFilledBucketCount * 4;
      const bucketsStorageSizeBytes = bucketStorageSizeBytes * bucketCount + bucketsMetaDataSizeBytes;
      const sphericalHarmonicsDegree = section2.getUint16(40, true);
      const shComponents = KSPLAT_SH_DEGREE_TO_COMPONENTS[sphericalHarmonicsDegree];
      const {
        bytesPerCenter,
        bytesPerScale,
        bytesPerRotation,
        bytesPerColor,
        bytesPerSphericalHarmonicsComponent,
        scaleOffsetBytes,
        rotationOffsetBytes,
        colorOffsetBytes,
        sphericalHarmonicsOffsetBytes
      } = KSPLAT_COMPRESSION[compressionLevel];
      const bytesPerSplat = bytesPerCenter + bytesPerScale + bytesPerRotation + bytesPerColor + shComponents * bytesPerSphericalHarmonicsComponent;
      const splatDataStorageSizeBytes = bytesPerSplat * sectionMaxSplatCount;
      const storageSizeBytes = splatDataStorageSizeBytes + bucketsStorageSizeBytes;
      const sh1Index = [0, 3, 6, 1, 4, 7, 2, 5, 8];
      const sh2Index = [
        9,
        14,
        19,
        10,
        15,
        20,
        11,
        16,
        21,
        12,
        17,
        22,
        13,
        18,
        23
      ];
      const sh3Index = [
        24,
        31,
        38,
        25,
        32,
        39,
        26,
        33,
        40,
        27,
        34,
        41,
        28,
        35,
        42,
        29,
        36,
        43,
        30,
        37,
        44
      ];
      const sh1 = sphericalHarmonicsDegree >= 1 ? new Float32Array(3 * 3) : void 0;
      const sh2 = sphericalHarmonicsDegree >= 2 ? new Float32Array(5 * 3) : void 0;
      const sh3 = sphericalHarmonicsDegree >= 3 ? new Float32Array(7 * 3) : void 0;
      const compressionScaleFactor = bucketBlockSize / 2 / compressionScaleRange;
      const bucketsBase = sectionBase + bucketsMetaDataSizeBytes;
      const dataBase = sectionBase + bucketsStorageSizeBytes;
      const data = new DataView(
        fileBytes.buffer,
        dataBase,
        splatDataStorageSizeBytes
      );
      const bucketArray = new Float32Array(
        fileBytes.buffer,
        bucketsBase,
        bucketCount * 3
      );
      const partiallyFilledBucketLengths = new Uint32Array(
        fileBytes.buffer,
        sectionBase,
        partiallyFilledBucketCount
      );
      let partialBucketIndex = fullBucketCount;
      let partialBucketBase = fullBucketSplats;
      for (let i2 = 0; i2 < sectionSplatCount; ++i2) {
        const splatOffset = i2 * bytesPerSplat;
        let bucketIndex;
        if (i2 < fullBucketSplats) {
          bucketIndex = Math.floor(i2 / bucketSize);
        } else {
          const bucketLength = partiallyFilledBucketLengths[partialBucketIndex - fullBucketCount];
          if (i2 >= partialBucketBase + bucketLength) {
            partialBucketIndex += 1;
            partialBucketBase += bucketLength;
          }
          bucketIndex = partialBucketIndex;
        }
        const x2 = compressionLevel === 0 ? data.getFloat32(splatOffset + 0, true) : (data.getUint16(splatOffset + 0, true) - compressionScaleRange) * compressionScaleFactor + bucketArray[3 * bucketIndex + 0];
        const y = compressionLevel === 0 ? data.getFloat32(splatOffset + 4, true) : (data.getUint16(splatOffset + 2, true) - compressionScaleRange) * compressionScaleFactor + bucketArray[3 * bucketIndex + 1];
        const z = compressionLevel === 0 ? data.getFloat32(splatOffset + 8, true) : (data.getUint16(splatOffset + 4, true) - compressionScaleRange) * compressionScaleFactor + bucketArray[3 * bucketIndex + 2];
        const scaleX = compressionLevel === 0 ? data.getFloat32(splatOffset + scaleOffsetBytes + 0, true) : fromHalf(data.getUint16(splatOffset + scaleOffsetBytes + 0, true));
        const scaleY = compressionLevel === 0 ? data.getFloat32(splatOffset + scaleOffsetBytes + 4, true) : fromHalf(data.getUint16(splatOffset + scaleOffsetBytes + 2, true));
        const scaleZ = compressionLevel === 0 ? data.getFloat32(splatOffset + scaleOffsetBytes + 8, true) : fromHalf(data.getUint16(splatOffset + scaleOffsetBytes + 4, true));
        const quatW = compressionLevel === 0 ? data.getFloat32(splatOffset + rotationOffsetBytes + 0, true) : fromHalf(
          data.getUint16(splatOffset + rotationOffsetBytes + 0, true)
        );
        const quatX = compressionLevel === 0 ? data.getFloat32(splatOffset + rotationOffsetBytes + 4, true) : fromHalf(
          data.getUint16(splatOffset + rotationOffsetBytes + 2, true)
        );
        const quatY = compressionLevel === 0 ? data.getFloat32(splatOffset + rotationOffsetBytes + 8, true) : fromHalf(
          data.getUint16(splatOffset + rotationOffsetBytes + 4, true)
        );
        const quatZ = compressionLevel === 0 ? data.getFloat32(splatOffset + rotationOffsetBytes + 12, true) : fromHalf(
          data.getUint16(splatOffset + rotationOffsetBytes + 6, true)
        );
        const r = data.getUint8(splatOffset + colorOffsetBytes + 0) / 255;
        const g = data.getUint8(splatOffset + colorOffsetBytes + 1) / 255;
        const b = data.getUint8(splatOffset + colorOffsetBytes + 2) / 255;
        const opacity = data.getUint8(splatOffset + colorOffsetBytes + 3) / 255;
        splatCallback(
          i2,
          x2,
          y,
          z,
          scaleX,
          scaleY,
          scaleZ,
          quatX,
          quatY,
          quatZ,
          quatW,
          opacity,
          r,
          g,
          b
        );
        if (sphericalHarmonicsDegree >= 1 && sh1) {
          for (const [i22, key] of sh1Index.entries()) {
            sh1[i22] = getSh(splatOffset, key);
          }
          if (sh2) {
            for (const [i22, key] of sh2Index.entries()) {
              sh2[i22] = getSh(splatOffset, key);
            }
          }
          if (sh3) {
            for (const [i22, key] of sh3Index.entries()) {
              sh3[i22] = getSh(splatOffset, key);
            }
          }
          shCallback == null ? void 0 : shCallback(i2, sh1, sh2, sh3);
        }
      }
      sectionBase += storageSizeBytes;
    }
  }
  function unpackKsplat(fileBytes, splatEncoding) {
    var _a2;
    const HEADER_BYTES = 4096;
    const SECTION_BYTES = 1024;
    let headerOffset = 0;
    const header = new DataView(fileBytes.buffer, headerOffset, HEADER_BYTES);
    headerOffset += HEADER_BYTES;
    const versionMajor = header.getUint8(0);
    const versionMinor = header.getUint8(1);
    if (versionMajor !== 0 || versionMinor < 1) {
      throw new Error(
        \`Unsupported .ksplat version: \${versionMajor}.\${versionMinor}\`
      );
    }
    const maxSectionCount = header.getUint32(4, true);
    const splatCount = header.getUint32(16, true);
    const compressionLevel = header.getUint16(20, true);
    if (compressionLevel < 0 || compressionLevel > 2) {
      throw new Error(\`Invalid .ksplat compression level: \${compressionLevel}\`);
    }
    const minSphericalHarmonicsCoeff = header.getFloat32(36, true) || -1.5;
    const maxSphericalHarmonicsCoeff = header.getFloat32(40, true) || 1.5;
    const numSplats = splatCount;
    const maxSplats = computeMaxSplats(numSplats);
    const packedArray = new Uint32Array(maxSplats * 4);
    const extra = {};
    let sectionBase = HEADER_BYTES + maxSectionCount * SECTION_BYTES;
    for (let section = 0; section < maxSectionCount; ++section) {
      let getSh = function(splatOffset, component) {
        if (compressionLevel === 0) {
          return data.getFloat32(
            splatOffset + sphericalHarmonicsOffsetBytes + component * 4,
            true
          );
        }
        if (compressionLevel === 1) {
          return fromHalf(
            data.getUint16(
              splatOffset + sphericalHarmonicsOffsetBytes + component * 2,
              true
            )
          );
        }
        const t = data.getUint8(splatOffset + sphericalHarmonicsOffsetBytes + component) / 255;
        return minSphericalHarmonicsCoeff + t * (maxSphericalHarmonicsCoeff - minSphericalHarmonicsCoeff);
      };
      const section2 = new DataView(fileBytes.buffer, headerOffset, SECTION_BYTES);
      headerOffset += SECTION_BYTES;
      const sectionSplatCount = section2.getUint32(0, true);
      const sectionMaxSplatCount = section2.getUint32(4, true);
      const bucketSize = section2.getUint32(8, true);
      const bucketCount = section2.getUint32(12, true);
      const bucketBlockSize = section2.getFloat32(16, true);
      const bucketStorageSizeBytes = section2.getUint16(20, true);
      const compressionScaleRange = (section2.getUint32(24, true) || ((_a2 = KSPLAT_COMPRESSION[compressionLevel]) == null ? void 0 : _a2.scaleRange)) ?? 1;
      const fullBucketCount = section2.getUint32(32, true);
      const fullBucketSplats = fullBucketCount * bucketSize;
      const partiallyFilledBucketCount = section2.getUint32(36, true);
      const bucketsMetaDataSizeBytes = partiallyFilledBucketCount * 4;
      const bucketsStorageSizeBytes = bucketStorageSizeBytes * bucketCount + bucketsMetaDataSizeBytes;
      const sphericalHarmonicsDegree = section2.getUint16(40, true);
      const shComponents = KSPLAT_SH_DEGREE_TO_COMPONENTS[sphericalHarmonicsDegree];
      const {
        bytesPerCenter,
        bytesPerScale,
        bytesPerRotation,
        bytesPerColor,
        bytesPerSphericalHarmonicsComponent,
        scaleOffsetBytes,
        rotationOffsetBytes,
        colorOffsetBytes,
        sphericalHarmonicsOffsetBytes
      } = KSPLAT_COMPRESSION[compressionLevel];
      const bytesPerSplat = bytesPerCenter + bytesPerScale + bytesPerRotation + bytesPerColor + shComponents * bytesPerSphericalHarmonicsComponent;
      const splatDataStorageSizeBytes = bytesPerSplat * sectionMaxSplatCount;
      const storageSizeBytes = splatDataStorageSizeBytes + bucketsStorageSizeBytes;
      const sh1Index = [0, 3, 6, 1, 4, 7, 2, 5, 8];
      const sh2Index = [
        9,
        14,
        19,
        10,
        15,
        20,
        11,
        16,
        21,
        12,
        17,
        22,
        13,
        18,
        23
      ];
      const sh3Index = [
        24,
        31,
        38,
        25,
        32,
        39,
        26,
        33,
        40,
        27,
        34,
        41,
        28,
        35,
        42,
        29,
        36,
        43,
        30,
        37,
        44
      ];
      const sh1 = sphericalHarmonicsDegree >= 1 ? new Float32Array(3 * 3) : void 0;
      const sh2 = sphericalHarmonicsDegree >= 2 ? new Float32Array(5 * 3) : void 0;
      const sh3 = sphericalHarmonicsDegree >= 3 ? new Float32Array(7 * 3) : void 0;
      const compressionScaleFactor = bucketBlockSize / 2 / compressionScaleRange;
      const bucketsBase = sectionBase + bucketsMetaDataSizeBytes;
      const dataBase = sectionBase + bucketsStorageSizeBytes;
      const data = new DataView(
        fileBytes.buffer,
        dataBase,
        splatDataStorageSizeBytes
      );
      const bucketArray = new Float32Array(
        fileBytes.buffer,
        bucketsBase,
        bucketCount * 3
      );
      const partiallyFilledBucketLengths = new Uint32Array(
        fileBytes.buffer,
        sectionBase,
        partiallyFilledBucketCount
      );
      let partialBucketIndex = fullBucketCount;
      let partialBucketBase = fullBucketSplats;
      for (let i2 = 0; i2 < sectionSplatCount; ++i2) {
        const splatOffset = i2 * bytesPerSplat;
        let bucketIndex;
        if (i2 < fullBucketSplats) {
          bucketIndex = Math.floor(i2 / bucketSize);
        } else {
          const bucketLength = partiallyFilledBucketLengths[partialBucketIndex - fullBucketCount];
          if (i2 >= partialBucketBase + bucketLength) {
            partialBucketIndex += 1;
            partialBucketBase += bucketLength;
          }
          bucketIndex = partialBucketIndex;
        }
        const x2 = compressionLevel === 0 ? data.getFloat32(splatOffset + 0, true) : (data.getUint16(splatOffset + 0, true) - compressionScaleRange) * compressionScaleFactor + bucketArray[3 * bucketIndex + 0];
        const y = compressionLevel === 0 ? data.getFloat32(splatOffset + 4, true) : (data.getUint16(splatOffset + 2, true) - compressionScaleRange) * compressionScaleFactor + bucketArray[3 * bucketIndex + 1];
        const z = compressionLevel === 0 ? data.getFloat32(splatOffset + 8, true) : (data.getUint16(splatOffset + 4, true) - compressionScaleRange) * compressionScaleFactor + bucketArray[3 * bucketIndex + 2];
        const scaleX = compressionLevel === 0 ? data.getFloat32(splatOffset + scaleOffsetBytes + 0, true) : fromHalf(data.getUint16(splatOffset + scaleOffsetBytes + 0, true));
        const scaleY = compressionLevel === 0 ? data.getFloat32(splatOffset + scaleOffsetBytes + 4, true) : fromHalf(data.getUint16(splatOffset + scaleOffsetBytes + 2, true));
        const scaleZ = compressionLevel === 0 ? data.getFloat32(splatOffset + scaleOffsetBytes + 8, true) : fromHalf(data.getUint16(splatOffset + scaleOffsetBytes + 4, true));
        const quatW = compressionLevel === 0 ? data.getFloat32(splatOffset + rotationOffsetBytes + 0, true) : fromHalf(
          data.getUint16(splatOffset + rotationOffsetBytes + 0, true)
        );
        const quatX = compressionLevel === 0 ? data.getFloat32(splatOffset + rotationOffsetBytes + 4, true) : fromHalf(
          data.getUint16(splatOffset + rotationOffsetBytes + 2, true)
        );
        const quatY = compressionLevel === 0 ? data.getFloat32(splatOffset + rotationOffsetBytes + 8, true) : fromHalf(
          data.getUint16(splatOffset + rotationOffsetBytes + 4, true)
        );
        const quatZ = compressionLevel === 0 ? data.getFloat32(splatOffset + rotationOffsetBytes + 12, true) : fromHalf(
          data.getUint16(splatOffset + rotationOffsetBytes + 6, true)
        );
        const r = data.getUint8(splatOffset + colorOffsetBytes + 0) / 255;
        const g = data.getUint8(splatOffset + colorOffsetBytes + 1) / 255;
        const b = data.getUint8(splatOffset + colorOffsetBytes + 2) / 255;
        const opacity = data.getUint8(splatOffset + colorOffsetBytes + 3) / 255;
        setPackedSplat(
          packedArray,
          i2,
          x2,
          y,
          z,
          scaleX,
          scaleY,
          scaleZ,
          quatX,
          quatY,
          quatZ,
          quatW,
          opacity,
          r,
          g,
          b,
          splatEncoding
        );
        if (sphericalHarmonicsDegree >= 1) {
          if (sh1) {
            if (!extra.sh1) {
              extra.sh1 = new Uint32Array(numSplats * 2);
            }
            for (const [i22, key] of sh1Index.entries()) {
              sh1[i22] = getSh(splatOffset, key);
            }
            encodeSh1Rgb(extra.sh1, i2, sh1, splatEncoding);
          }
          if (sh2) {
            if (!extra.sh2) {
              extra.sh2 = new Uint32Array(numSplats * 4);
            }
            for (const [i22, key] of sh2Index.entries()) {
              sh2[i22] = getSh(splatOffset, key);
            }
            encodeSh2Rgb(extra.sh2, i2, sh2, splatEncoding);
          }
          if (sh3) {
            if (!extra.sh3) {
              extra.sh3 = new Uint32Array(numSplats * 4);
            }
            for (const [i22, key] of sh3Index.entries()) {
              sh3[i22] = getSh(splatOffset, key);
            }
            encodeSh3Rgb(extra.sh3, i2, sh3, splatEncoding);
          }
        }
      }
      sectionBase += storageSizeBytes;
    }
    return { packedArray, numSplats, extra };
  }
  const PLY_PROPERTY_TYPES = [
    "char",
    "uchar",
    "short",
    "ushort",
    "int",
    "uint",
    "float",
    "double"
  ];
  const _PlyReader = class _PlyReader {
    // Create a PlyReader from a Uint8Array/ArrayBuffer, no parsing done yet
    constructor({ fileBytes }) {
      this.header = "";
      this.littleEndian = true;
      this.elements = {};
      this.comments = [];
      this.data = null;
      this.numSplats = 0;
      this.fileBytes = fileBytes instanceof ArrayBuffer ? new Uint8Array(fileBytes) : fileBytes;
    }
    // Identify and parse the PLY text header (assumed to be <64KB in size).
    // this.elements will contain all the elements in the file, typically
    // "vertex" contains the Gsplat data.
    async parseHeader() {
      const bufferStream = new ReadableStream({
        start: (controller) => {
          controller.enqueue(this.fileBytes.slice(0, 65536));
          controller.close();
        }
      });
      const decoder = bufferStream.pipeThrough(new TextDecoderStream()).getReader();
      this.header = "";
      const headerTerminator = "end_header\\n";
      while (true) {
        const { value, done } = await decoder.read();
        if (done) {
          throw new Error("Failed to read header");
        }
        this.header += value;
        const endHeader = this.header.indexOf(headerTerminator);
        if (endHeader >= 0) {
          this.header = this.header.slice(0, endHeader + headerTerminator.length);
          break;
        }
      }
      const headerLen = new TextEncoder().encode(this.header).length;
      this.data = new DataView(this.fileBytes.buffer, headerLen);
      this.elements = {};
      let curElement = null;
      this.comments = [];
      this.header.trim().split("\\n").forEach((line, lineIndex) => {
        const trimmedLine = line.trim();
        if (lineIndex === 0) {
          if (trimmedLine !== "ply") {
            throw new Error("Invalid PLY header");
          }
          return;
        }
        if (trimmedLine.length === 0) {
          return;
        }
        const fields = trimmedLine.split(" ");
        switch (fields[0]) {
          case "format":
            if (fields[1] === "binary_little_endian") {
              this.littleEndian = true;
            } else if (fields[1] === "binary_big_endian") {
              this.littleEndian = false;
            } else {
              throw new Error(\`Unsupported PLY format: \${fields[1]}\`);
            }
            if (fields[2] !== "1.0") {
              throw new Error(\`Unsupported PLY version: \${fields[2]}\`);
            }
            break;
          case "end_header":
            break;
          case "comment":
            this.comments.push(trimmedLine.slice("comment ".length));
            break;
          case "element": {
            const name = fields[1];
            curElement = {
              name,
              count: Number.parseInt(fields[2]),
              properties: {}
            };
            this.elements[name] = curElement;
            break;
          }
          case "property":
            if (curElement == null) {
              throw new Error("Property must be inside an element");
            }
            if (fields[1] === "list") {
              curElement.properties[fields[4]] = {
                isList: true,
                type: fields[3],
                countType: fields[2]
              };
            } else {
              curElement.properties[fields[2]] = {
                isList: false,
                type: fields[1]
              };
            }
            break;
        }
      });
      if (this.elements.vertex) {
        this.numSplats = this.elements.vertex.count;
      }
    }
    parseData(elementCallback) {
      let offset = 0;
      const data = this.data;
      if (data == null) {
        throw new Error("No data to parse");
      }
      for (const elementName in this.elements) {
        const element = this.elements[elementName];
        const { count, properties } = element;
        const item = createEmptyItem(properties);
        const parseFn = createParseFn(properties, this.littleEndian);
        const callback = elementCallback(element) ?? (() => {
        });
        for (let index = 0; index < count; index++) {
          offset = parseFn(data, offset, item);
          callback(index, item);
        }
      }
    }
    // Parse all the Gsplat data in the PLY file in go, invoking the given
    // callbacks for each Gsplat.
    parseSplats(splatCallback, shCallback) {
      if (this.elements.vertex == null) {
        throw new Error("No vertex element found");
      }
      let isSuperSplat = false;
      const ssChunks = [];
      let numSh = 0;
      let sh1Props = [];
      let sh2Props = [];
      let sh3Props = [];
      let sh1 = void 0;
      let sh2 = void 0;
      let sh3 = void 0;
      function prepareSh() {
        const num_f_rest = NUM_SH_TO_NUM_F_REST[numSh];
        sh1Props = new Array(3).fill(null).flatMap((_, k) => [0, 1, 2].map((_2, d) => k + d * num_f_rest / 3));
        sh2Props = new Array(5).fill(null).flatMap(
          (_, k) => [0, 1, 2].map((_2, d) => 3 + k + d * num_f_rest / 3)
        );
        sh3Props = new Array(7).fill(null).flatMap(
          (_, k) => [0, 1, 2].map((_2, d) => 8 + k + d * num_f_rest / 3)
        );
        sh1 = numSh >= 1 ? new Float32Array(3 * 3) : void 0;
        sh2 = numSh >= 2 ? new Float32Array(5 * 3) : void 0;
        sh3 = numSh >= 3 ? new Float32Array(7 * 3) : void 0;
      }
      function ssShCallback(index, item) {
        if (!sh1) {
          throw new Error("Missing sh1");
        }
        const sh = item.f_rest;
        for (let i2 = 0; i2 < sh1Props.length; i2++) {
          sh1[i2] = sh[sh1Props[i2]] * 8 / 255 - 4;
        }
        if (sh2) {
          for (let i2 = 0; i2 < sh2Props.length; i2++) {
            sh2[i2] = sh[sh2Props[i2]] * 8 / 255 - 4;
          }
        }
        if (sh3) {
          for (let i2 = 0; i2 < sh3Props.length; i2++) {
            sh3[i2] = sh[sh3Props[i2]] * 8 / 255 - 4;
          }
        }
        shCallback == null ? void 0 : shCallback(index, sh1, sh2, sh3);
      }
      function initSuperSplat(element) {
        const {
          min_x,
          min_y,
          min_z,
          max_x,
          max_y,
          max_z,
          min_scale_x,
          min_scale_y,
          min_scale_z,
          max_scale_x,
          max_scale_y,
          max_scale_z
        } = element.properties;
        if (!min_x || !min_y || !min_z || !max_x || !max_y || !max_z || !min_scale_x || !min_scale_y || !min_scale_z || !max_scale_x || !max_scale_y || !max_scale_z) {
          throw new Error("Missing PLY chunk properties");
        }
        isSuperSplat = true;
        return (index, item) => {
          const {
            min_x: min_x2,
            min_y: min_y2,
            min_z: min_z2,
            max_x: max_x2,
            max_y: max_y2,
            max_z: max_z2,
            min_scale_x: min_scale_x2,
            min_scale_y: min_scale_y2,
            min_scale_z: min_scale_z2,
            max_scale_x: max_scale_x2,
            max_scale_y: max_scale_y2,
            max_scale_z: max_scale_z2,
            min_r,
            min_g,
            min_b,
            max_r,
            max_g,
            max_b
          } = item;
          ssChunks.push({
            min_x: min_x2,
            min_y: min_y2,
            min_z: min_z2,
            max_x: max_x2,
            max_y: max_y2,
            max_z: max_z2,
            min_scale_x: min_scale_x2,
            min_scale_y: min_scale_y2,
            min_scale_z: min_scale_z2,
            max_scale_x: max_scale_x2,
            max_scale_y: max_scale_y2,
            max_scale_z: max_scale_z2,
            min_r,
            min_g,
            min_b,
            max_r,
            max_g,
            max_b
          });
        };
      }
      function decodeSuperSplat(element) {
        if (shCallback && element.name === "sh") {
          numSh = getNumSh(element.properties);
          prepareSh();
          return ssShCallback;
        }
        if (element.name !== "vertex") {
          return null;
        }
        const { packed_position, packed_rotation, packed_scale, packed_color } = element.properties;
        if (!packed_position || !packed_rotation || !packed_scale || !packed_color) {
          throw new Error(
            "Missing PLY properties: packed_position, packed_rotation, packed_scale, packed_color"
          );
        }
        const SQRT2 = Math.sqrt(2);
        return (index, item) => {
          const chunk = ssChunks[index >>> 8];
          if (chunk == null) {
            throw new Error("Missing PLY chunk");
          }
          const {
            min_x,
            min_y,
            min_z,
            max_x,
            max_y,
            max_z,
            min_scale_x,
            min_scale_y,
            min_scale_z,
            max_scale_x,
            max_scale_y,
            max_scale_z,
            min_r,
            min_g,
            min_b,
            max_r,
            max_g,
            max_b
          } = chunk;
          const { packed_position: packed_position2, packed_rotation: packed_rotation2, packed_scale: packed_scale2, packed_color: packed_color2 } = item;
          const x2 = (packed_position2 >>> 21 & 2047) / 2047 * (max_x - min_x) + min_x;
          const y = (packed_position2 >>> 11 & 1023) / 1023 * (max_y - min_y) + min_y;
          const z = (packed_position2 & 2047) / 2047 * (max_z - min_z) + min_z;
          const r0 = ((packed_rotation2 >>> 20 & 1023) / 1023 - 0.5) * SQRT2;
          const r1 = ((packed_rotation2 >>> 10 & 1023) / 1023 - 0.5) * SQRT2;
          const r2 = ((packed_rotation2 & 1023) / 1023 - 0.5) * SQRT2;
          const rr = Math.sqrt(Math.max(0, 1 - r0 * r0 - r1 * r1 - r2 * r2));
          const rOrder = packed_rotation2 >>> 30;
          const quatX = rOrder === 0 ? r0 : rOrder === 1 ? rr : r1;
          const quatY = rOrder <= 1 ? r1 : rOrder === 2 ? rr : r2;
          const quatZ = rOrder <= 2 ? r2 : rr;
          const quatW = rOrder === 0 ? rr : r0;
          const scaleX = Math.exp(
            (packed_scale2 >>> 21 & 2047) / 2047 * (max_scale_x - min_scale_x) + min_scale_x
          );
          const scaleY = Math.exp(
            (packed_scale2 >>> 11 & 1023) / 1023 * (max_scale_y - min_scale_y) + min_scale_y
          );
          const scaleZ = Math.exp(
            (packed_scale2 & 2047) / 2047 * (max_scale_z - min_scale_z) + min_scale_z
          );
          const r = (packed_color2 >>> 24 & 255) / 255 * ((max_r ?? 1) - (min_r ?? 0)) + (min_r ?? 0);
          const g = (packed_color2 >>> 16 & 255) / 255 * ((max_g ?? 1) - (min_g ?? 0)) + (min_g ?? 0);
          const b = (packed_color2 >>> 8 & 255) / 255 * ((max_b ?? 1) - (min_b ?? 0)) + (min_b ?? 0);
          const opacity = (packed_color2 & 255) / 255;
          splatCallback(
            index,
            x2,
            y,
            z,
            scaleX,
            scaleY,
            scaleZ,
            quatX,
            quatY,
            quatZ,
            quatW,
            opacity,
            r,
            g,
            b
          );
        };
      }
      const elementCallback = (element) => {
        if (element.name === "chunk") {
          return initSuperSplat(element);
        }
        if (isSuperSplat) {
          return decodeSuperSplat(element);
        }
        if (element.name !== "vertex") {
          return null;
        }
        const {
          x: x2,
          y,
          z,
          scale_0,
          scale_1,
          scale_2,
          rot_0,
          rot_1,
          rot_2,
          rot_3,
          opacity,
          f_dc_0,
          f_dc_1,
          f_dc_2,
          red,
          green,
          blue,
          alpha
        } = element.properties;
        if (!x2 || !y || !z) {
          throw new Error("Missing PLY properties: x, y, z");
        }
        const hasScales = scale_0 && scale_1 && scale_2;
        const hasRots = rot_0 && rot_1 && rot_2 && rot_3;
        const alphaDiv = alpha != null ? FIELD_SCALE[alpha.type] : 1;
        const redDiv = red != null ? FIELD_SCALE[red.type] : 1;
        const greenDiv = green != null ? FIELD_SCALE[green.type] : 1;
        const blueDiv = blue != null ? FIELD_SCALE[blue.type] : 1;
        numSh = getNumSh(element.properties);
        prepareSh();
        return (index, item) => {
          const scaleX = hasScales ? Math.exp(item.scale_0) : _PlyReader.defaultPointScale;
          const scaleY = hasScales ? Math.exp(item.scale_1) : _PlyReader.defaultPointScale;
          const scaleZ = hasScales ? Math.exp(item.scale_2) : _PlyReader.defaultPointScale;
          const quatX = hasRots ? item.rot_1 : 0;
          const quatY = hasRots ? item.rot_2 : 0;
          const quatZ = hasRots ? item.rot_3 : 0;
          const quatW = hasRots ? item.rot_0 : 1;
          const op = opacity != null ? 1 / (1 + Math.exp(-item.opacity)) : alpha != null ? item.alpha / alphaDiv : 1;
          const r = f_dc_0 != null ? item.f_dc_0 * SH_C0$1 + 0.5 : red != null ? item.red / redDiv : 1;
          const g = f_dc_1 != null ? item.f_dc_1 * SH_C0$1 + 0.5 : green != null ? item.green / greenDiv : 1;
          const b = f_dc_2 != null ? item.f_dc_2 * SH_C0$1 + 0.5 : blue != null ? item.blue / blueDiv : 1;
          splatCallback(
            index,
            item.x,
            item.y,
            item.z,
            scaleX,
            scaleY,
            scaleZ,
            quatX,
            quatY,
            quatZ,
            quatW,
            op,
            r,
            g,
            b
          );
          if (shCallback && sh1) {
            const sh = item.f_rest;
            if (sh1) {
              for (let i2 = 0; i2 < sh1Props.length; i2++) {
                sh1[i2] = sh[sh1Props[i2]];
              }
            }
            if (sh2) {
              for (let i2 = 0; i2 < sh2Props.length; i2++) {
                sh2[i2] = sh[sh2Props[i2]];
              }
            }
            if (sh3) {
              for (let i2 = 0; i2 < sh3Props.length; i2++) {
                sh3[i2] = sh[sh3Props[i2]];
              }
            }
            shCallback(index, sh1, sh2, sh3);
          }
        };
      };
      this.parseData(elementCallback);
    }
    // Inject RGBA values into original PLY file, which can be used to modify
    // the color/opacity of the Gsplats and write out the modified PLY file.
    injectRgba(rgba) {
      let offset = 0;
      const data = this.data;
      if (data == null) {
        throw new Error("No parsed data");
      }
      if (rgba.length !== this.numSplats * 4) {
        throw new Error("Invalid RGBA array length");
      }
      for (const elementName in this.elements) {
        const element = this.elements[elementName];
        const { count, properties } = element;
        const parsers = [];
        let rgbaOffset = 0;
        const isVertex = elementName === "vertex";
        if (isVertex) {
          for (const name of ["opacity", "f_dc_0", "f_dc_1", "f_dc_2"]) {
            if (!properties[name] || properties[name].type !== "float") {
              throw new Error(\`Can't injectRgba due to property: \${name}\`);
            }
          }
        }
        for (const [propertyName, property] of Object.entries(properties)) {
          if (!property.isList) {
            if (isVertex) {
              if (propertyName === "f_dc_0" || propertyName === "f_dc_1" || propertyName === "f_dc_2") {
                const component = Number.parseInt(
                  propertyName.slice("f_dc_".length)
                );
                parsers.push(() => {
                  const value = (rgba[rgbaOffset + component] / 255 - 0.5) / SH_C0$1;
                  SET_FIELD[property.type](
                    data,
                    offset,
                    this.littleEndian,
                    value
                  );
                });
              } else if (propertyName === "opacity") {
                parsers.push(() => {
                  const value = Math.max(
                    -100,
                    Math.min(
                      100,
                      -Math.log(1 / (rgba[rgbaOffset + 3] / 255) - 1)
                    )
                  );
                  SET_FIELD[property.type](
                    data,
                    offset,
                    this.littleEndian,
                    value
                  );
                });
              }
            }
            parsers.push(() => {
              offset += FIELD_BYTES[property.type];
            });
          } else {
            parsers.push(() => {
              const length = PARSE_FIELD[property.countType](
                data,
                offset,
                this.littleEndian
              );
              offset += FIELD_BYTES[property.countType];
              offset += length * FIELD_BYTES[property.type];
            });
          }
        }
        for (let index = 0; index < count; index++) {
          for (const parser of parsers) {
            parser();
          }
          if (isVertex) {
            rgbaOffset += 4;
          }
        }
      }
    }
  };
  _PlyReader.defaultPointScale = 1e-3;
  let PlyReader = _PlyReader;
  const SH_C0$1 = 0.28209479177387814;
  const PARSE_FIELD = {
    char: (data, offset, littleEndian) => {
      return data.getInt8(offset);
    },
    uchar: (data, offset, littleEndian) => {
      return data.getUint8(offset);
    },
    short: (data, offset, littleEndian) => {
      return data.getInt16(offset, littleEndian);
    },
    ushort: (data, offset, littleEndian) => {
      return data.getUint16(offset, littleEndian);
    },
    int: (data, offset, littleEndian) => {
      return data.getInt32(offset, littleEndian);
    },
    uint: (data, offset, littleEndian) => {
      return data.getUint32(offset, littleEndian);
    },
    float: (data, offset, littleEndian) => {
      return data.getFloat32(offset, littleEndian);
    },
    double: (data, offset, littleEndian) => {
      return data.getFloat64(offset, littleEndian);
    }
  };
  const SET_FIELD = {
    char: (data, offset, littleEndian, value) => {
      data.setInt8(offset, value);
    },
    uchar: (data, offset, littleEndian, value) => {
      data.setUint8(offset, value);
    },
    short: (data, offset, littleEndian, value) => {
      data.setInt16(offset, value, littleEndian);
    },
    ushort: (data, offset, littleEndian, value) => {
      data.setUint16(offset, value, littleEndian);
    },
    int: (data, offset, littleEndian, value) => {
      data.setInt32(offset, value, littleEndian);
    },
    uint: (data, offset, littleEndian, value) => {
      data.setUint32(offset, value, littleEndian);
    },
    float: (data, offset, littleEndian, value) => {
      data.setFloat32(offset, value, littleEndian);
    },
    double: (data, offset, littleEndian, value) => {
      data.setFloat64(offset, value, littleEndian);
    }
  };
  const FIELD_BYTES = {
    char: 1,
    uchar: 1,
    short: 2,
    ushort: 2,
    int: 4,
    uint: 4,
    float: 4,
    double: 8
  };
  const FIELD_SCALE = {
    char: 127,
    uchar: 255,
    short: 32767,
    ushort: 65535,
    int: 2147483647,
    uint: 4294967295,
    float: 1,
    double: 1
  };
  const NUM_F_REST_TO_NUM_SH = {
    0: 0,
    9: 1,
    24: 2,
    45: 3
  };
  const NUM_SH_TO_NUM_F_REST = {
    0: 0,
    1: 9,
    2: 24,
    3: 45
  };
  const F_REST_REGEX = /^f_rest_([0-9]{1,2})$/;
  function createEmptyItem(properties) {
    const item = {};
    for (const [propertyName, property] of Object.entries(properties)) {
      if (F_REST_REGEX.test(propertyName)) {
        item.f_rest = new Array(getNumSh(properties));
      } else {
        item[propertyName] = property.isList ? [] : 0;
      }
    }
    return item;
  }
  function createParseFn(properties, littleEndian) {
    if (safeToCompile(properties)) {
      return createCompiledParserFn(properties, littleEndian);
    }
    return createDynamicParserFn(properties, littleEndian);
  }
  const UNSAFE_EVAL_ALLOWED = (() => {
    try {
      new Function("return 42;");
    } catch (e) {
      return false;
    }
    return true;
  })();
  const PROPERTY_NAME_REGEX = /^[a-zA-Z0-9_]+$/;
  function safeToCompile(properties) {
    if (!UNSAFE_EVAL_ALLOWED) {
      return false;
    }
    for (const [propertyName, property] of Object.entries(properties)) {
      if (!PROPERTY_NAME_REGEX.test(propertyName)) {
        return false;
      }
      if (property.isList && !PLY_PROPERTY_TYPES.includes(property.countType)) {
        return false;
      }
      if (!PLY_PROPERTY_TYPES.includes(property.type)) {
        return false;
      }
    }
    return true;
  }
  function createCompiledParserFn(properties, littleEndian) {
    const parserSrc = ["let list;"];
    for (const [propertyName, property] of Object.entries(properties)) {
      const fRestMatch = propertyName.match(F_REST_REGEX);
      if (fRestMatch) {
        const fRestIndex = +fRestMatch[1];
        parserSrc.push(
          /*js*/
          \`
        item.f_rest[\${fRestIndex}] = PARSE_FIELD['\${property.type}'](data, offset, \${littleEndian});
        offset += \${FIELD_BYTES[property.type]};
      \`
        );
      } else if (!property.isList) {
        parserSrc.push(
          /*js*/
          \`
        item['\${propertyName}'] = PARSE_FIELD['\${property.type}'](data, offset, \${littleEndian});
        offset += \${FIELD_BYTES[property.type]};
      \`
        );
      } else {
        parserSrc.push(
          /*js*/
          \`
        list = item['\${propertyName}'];
        list.length = PARSE_FIELD['\${property.countType}'](data, offset, \${littleEndian});
        offset += \${FIELD_BYTES[property.countType]};
        for (let i = 0; i < list.length; i++) {
          list[i] = PARSE_FIELD['\${property.type}'](data, offset, \${littleEndian});
          offset += \${FIELD_BYTES[property.type]};
        }
      \`
        );
      }
    }
    parserSrc.push("return offset;");
    const fn = new Function(
      "data",
      "offset",
      "item",
      "PARSE_FIELD",
      parserSrc.join("\\n")
    );
    return (data, offset, item) => fn(data, offset, item, PARSE_FIELD);
  }
  function createDynamicParserFn(properties, littleEndian) {
    const parsers = [];
    for (const [propertyName, property] of Object.entries(properties)) {
      const fRestMatch = propertyName.match(F_REST_REGEX);
      if (fRestMatch) {
        const fRestIndex = +fRestMatch[1];
        parsers.push(
          (data, offset, item) => {
            item.f_rest[fRestIndex] = PARSE_FIELD[property.type](
              data,
              offset,
              littleEndian
            );
            return offset + FIELD_BYTES[property.type];
          }
        );
      } else if (!property.isList) {
        parsers.push(
          (data, offset, item) => {
            item[propertyName] = PARSE_FIELD[property.type](
              data,
              offset,
              littleEndian
            );
            return offset + FIELD_BYTES[property.type];
          }
        );
      } else {
        parsers.push(
          (data, offset, item) => {
            const list = item[propertyName];
            list.length = PARSE_FIELD[property.countType](
              data,
              offset,
              littleEndian
            );
            let currentOffset = offset + FIELD_BYTES[property.countType];
            for (let i2 = 0; i2 < list.length; i2++) {
              list[i2] = PARSE_FIELD[property.type](
                data,
                currentOffset,
                littleEndian
              );
              currentOffset += FIELD_BYTES[property.type];
            }
            return currentOffset;
          }
        );
      }
    }
    return (data, offset, item) => {
      let currentOffset = offset;
      for (let parserIndex = 0; parserIndex < parsers.length; parserIndex++) {
        currentOffset = parsers[parserIndex](data, currentOffset, item);
      }
      return currentOffset;
    };
  }
  function getNumSh(properties) {
    let num_f_rest = 0;
    while (properties[\`f_rest_\${num_f_rest}\`]) {
      num_f_rest += 1;
    }
    const numSh = NUM_F_REST_TO_NUM_SH[num_f_rest];
    if (numSh == null) {
      throw new Error(\`Unsupported number of SH coefficients: \${num_f_rest}\`);
    }
    return numSh;
  }
  var SplatFileType = /* @__PURE__ */ ((SplatFileType2) => {
    SplatFileType2["PLY"] = "ply";
    SplatFileType2["SPZ"] = "spz";
    SplatFileType2["SPLAT"] = "splat";
    SplatFileType2["KSPLAT"] = "ksplat";
    SplatFileType2["PCSOGS"] = "pcsogs";
    SplatFileType2["PCSOGSZIP"] = "pcsogszip";
    return SplatFileType2;
  })(SplatFileType || {});
  function getSplatFileType(fileBytes) {
    const view = new DataView(fileBytes.buffer);
    if ((view.getUint32(0, true) & 16777215) === 7957616) {
      return "ply";
    }
    if ((view.getUint32(0, true) & 16777215) === 559903) {
      const header = decompressPartialGzip(fileBytes, 4);
      const gView = new DataView(header.buffer);
      if (gView.getUint32(0, true) === 1347635022) {
        return "spz";
      }
      return void 0;
    }
    if (view.getUint32(0, true) === 67324752) {
      if (tryPcSogsZip(fileBytes)) {
        return "pcsogszip";
      }
      return void 0;
    }
    return void 0;
  }
  function getFileExtension(pathOrUrl) {
    const noTrailing = pathOrUrl.split(/[?#]/, 1)[0];
    const lastSlash = Math.max(
      noTrailing.lastIndexOf("/"),
      noTrailing.lastIndexOf("\\\\")
    );
    const filename = noTrailing.slice(lastSlash + 1);
    const lastDot = filename.lastIndexOf(".");
    if (lastDot <= 0 || lastDot === filename.length - 1) {
      return "";
    }
    return filename.slice(lastDot + 1).toLowerCase();
  }
  function getSplatFileTypeFromPath(pathOrUrl) {
    const extension = getFileExtension(pathOrUrl);
    if (extension === "ply") {
      return "ply";
    }
    if (extension === "spz") {
      return "spz";
    }
    if (extension === "splat") {
      return "splat";
    }
    if (extension === "ksplat") {
      return "ksplat";
    }
    return void 0;
  }
  function tryPcSogs(input) {
    try {
      let text;
      if (typeof input === "string") {
        text = input;
      } else {
        const fileBytes = input instanceof ArrayBuffer ? new Uint8Array(input) : input;
        if (fileBytes.length > 65536) {
          return void 0;
        }
        text = new TextDecoder().decode(fileBytes);
      }
      const json = JSON.parse(text);
      if (!json || typeof json !== "object" || Array.isArray(json)) {
        return void 0;
      }
      for (const key of ["means", "scales", "quats", "sh0"]) {
        if (!json[key] || typeof json[key] !== "object" || Array.isArray(json[key])) {
          return void 0;
        }
        if (!json[key].shape || !json[key].files) {
          return void 0;
        }
        if (key !== "quats" && (!json[key].mins || !json[key].maxs)) {
          return void 0;
        }
      }
      return json;
    } catch {
      return void 0;
    }
  }
  function tryPcSogsZip(input) {
    try {
      const fileBytes = input instanceof ArrayBuffer ? new Uint8Array(input) : input;
      let metaFilename = null;
      const unzipped = unzipSync(fileBytes, {
        filter: ({ name }) => {
          const filename = name.split(/[\\\\/]/).pop();
          if (filename === "meta.json") {
            metaFilename = name;
            return true;
          }
          return false;
        }
      });
      if (!metaFilename) {
        return void 0;
      }
      const json = tryPcSogs(unzipped[metaFilename]);
      if (!json) {
        return void 0;
      }
      return { name: metaFilename, json };
    } catch {
      return void 0;
    }
  }
  class SplatData {
    constructor({ maxSplats = 1 } = {}) {
      this.numSplats = 0;
      this.maxSplats = getTextureSize(maxSplats).maxSplats;
      this.centers = new Float32Array(this.maxSplats * 3);
      this.scales = new Float32Array(this.maxSplats * 3);
      this.quaternions = new Float32Array(this.maxSplats * 4);
      this.opacities = new Float32Array(this.maxSplats);
      this.colors = new Float32Array(this.maxSplats * 3);
    }
    pushSplat() {
      const index = this.numSplats;
      this.ensureIndex(index);
      this.numSplats += 1;
      return index;
    }
    unpushSplat(index) {
      if (index === this.numSplats - 1) {
        this.numSplats -= 1;
      } else {
        throw new Error("Cannot unpush splat from non-last position");
      }
    }
    ensureCapacity(numSplats) {
      if (numSplats > this.maxSplats) {
        const targetSplats = Math.max(numSplats, this.maxSplats * 2);
        const newCenters = new Float32Array(targetSplats * 3);
        const newScales = new Float32Array(targetSplats * 3);
        const newQuaternions = new Float32Array(targetSplats * 4);
        const newOpacities = new Float32Array(targetSplats);
        const newColors = new Float32Array(targetSplats * 3);
        newCenters.set(this.centers);
        newScales.set(this.scales);
        newQuaternions.set(this.quaternions);
        newOpacities.set(this.opacities);
        newColors.set(this.colors);
        this.centers = newCenters;
        this.scales = newScales;
        this.quaternions = newQuaternions;
        this.opacities = newOpacities;
        this.colors = newColors;
        if (this.sh1) {
          const newSh1 = new Float32Array(targetSplats * 9);
          newSh1.set(this.sh1);
          this.sh1 = newSh1;
        }
        if (this.sh2) {
          const newSh2 = new Float32Array(targetSplats * 15);
          newSh2.set(this.sh2);
          this.sh2 = newSh2;
        }
        if (this.sh3) {
          const newSh3 = new Float32Array(targetSplats * 21);
          newSh3.set(this.sh3);
          this.sh3 = newSh3;
        }
        this.maxSplats = targetSplats;
      }
    }
    ensureIndex(index) {
      this.ensureCapacity(index + 1);
    }
    setCenter(index, x2, y, z) {
      this.centers[index * 3] = x2;
      this.centers[index * 3 + 1] = y;
      this.centers[index * 3 + 2] = z;
    }
    setScale(index, scaleX, scaleY, scaleZ) {
      this.scales[index * 3] = scaleX;
      this.scales[index * 3 + 1] = scaleY;
      this.scales[index * 3 + 2] = scaleZ;
    }
    setQuaternion(index, x2, y, z, w) {
      this.quaternions[index * 4] = x2;
      this.quaternions[index * 4 + 1] = y;
      this.quaternions[index * 4 + 2] = z;
      this.quaternions[index * 4 + 3] = w;
    }
    setOpacity(index, opacity) {
      this.opacities[index] = opacity;
    }
    setColor(index, r, g, b) {
      this.colors[index * 3] = r;
      this.colors[index * 3 + 1] = g;
      this.colors[index * 3 + 2] = b;
    }
    setSh1(index, sh1) {
      if (!this.sh1) {
        this.sh1 = new Float32Array(this.maxSplats * 9);
      }
      for (let j = 0; j < 9; ++j) {
        this.sh1[index * 9 + j] = sh1[j];
      }
    }
    setSh2(index, sh2) {
      if (!this.sh2) {
        this.sh2 = new Float32Array(this.maxSplats * 15);
      }
      for (let j = 0; j < 15; ++j) {
        this.sh2[index * 15 + j] = sh2[j];
      }
    }
    setSh3(index, sh3) {
      if (!this.sh3) {
        this.sh3 = new Float32Array(this.maxSplats * 21);
      }
      for (let j = 0; j < 21; ++j) {
        this.sh3[index * 21 + j] = sh3[j];
      }
    }
  }
  async function unpackPcSogs(json, extraFiles, splatEncoding) {
    if (json.quats.encoding !== "quaternion_packed") {
      throw new Error("Unsupported quaternion encoding");
    }
    const numSplats = json.means.shape[0];
    const maxSplats = computeMaxSplats(numSplats);
    const packedArray = new Uint32Array(maxSplats * 4);
    const extra = {};
    const meansPromise = Promise.all([
      decodeImageRgba(extraFiles[json.means.files[0]]),
      decodeImageRgba(extraFiles[json.means.files[1]])
    ]).then((means) => {
      for (let i2 = 0; i2 < numSplats; ++i2) {
        const i4 = i2 * 4;
        const fx = (means[0][i4 + 0] + (means[1][i4 + 0] << 8)) / 65535;
        const fy = (means[0][i4 + 1] + (means[1][i4 + 1] << 8)) / 65535;
        const fz = (means[0][i4 + 2] + (means[1][i4 + 2] << 8)) / 65535;
        let x2 = json.means.mins[0] + (json.means.maxs[0] - json.means.mins[0]) * fx;
        let y = json.means.mins[1] + (json.means.maxs[1] - json.means.mins[1]) * fy;
        let z = json.means.mins[2] + (json.means.maxs[2] - json.means.mins[2]) * fz;
        x2 = Math.sign(x2) * (Math.exp(Math.abs(x2)) - 1);
        y = Math.sign(y) * (Math.exp(Math.abs(y)) - 1);
        z = Math.sign(z) * (Math.exp(Math.abs(z)) - 1);
        setPackedSplatCenter(packedArray, i2, x2, y, z);
      }
    });
    const scalesPromise = decodeImageRgba(extraFiles[json.scales.files[0]]).then(
      (scales) => {
        const xLookup = new Array(256).fill(0).map(
          (_, i2) => json.scales.mins[0] + (json.scales.maxs[0] - json.scales.mins[0]) * (i2 / 255)
        ).map((x2) => Math.exp(x2));
        const yLookup = new Array(256).fill(0).map(
          (_, i2) => json.scales.mins[1] + (json.scales.maxs[1] - json.scales.mins[1]) * (i2 / 255)
        ).map((x2) => Math.exp(x2));
        const zLookup = new Array(256).fill(0).map(
          (_, i2) => json.scales.mins[2] + (json.scales.maxs[2] - json.scales.mins[2]) * (i2 / 255)
        ).map((x2) => Math.exp(x2));
        for (let i2 = 0; i2 < numSplats; ++i2) {
          const i4 = i2 * 4;
          setPackedSplatScales(
            packedArray,
            i2,
            xLookup[scales[i4 + 0]],
            yLookup[scales[i4 + 1]],
            zLookup[scales[i4 + 2]],
            splatEncoding
          );
        }
      }
    );
    const quatsPromise = decodeImageRgba(extraFiles[json.quats.files[0]]).then(
      (quats) => {
        const SQRT2 = Math.sqrt(2);
        const lookup = new Array(256).fill(0).map((_, i2) => (i2 / 255 - 0.5) * SQRT2);
        for (let i2 = 0; i2 < numSplats; ++i2) {
          const i4 = i2 * 4;
          const r0 = lookup[quats[i4 + 0]];
          const r1 = lookup[quats[i4 + 1]];
          const r2 = lookup[quats[i4 + 2]];
          const rr = Math.sqrt(Math.max(0, 1 - r0 * r0 - r1 * r1 - r2 * r2));
          const rOrder = quats[i4 + 3] - 252;
          const quatX = rOrder === 0 ? r0 : rOrder === 1 ? rr : r1;
          const quatY = rOrder <= 1 ? r1 : rOrder === 2 ? rr : r2;
          const quatZ = rOrder <= 2 ? r2 : rr;
          const quatW = rOrder === 0 ? rr : r0;
          setPackedSplatQuat(packedArray, i2, quatX, quatY, quatZ, quatW);
        }
      }
    );
    const sh0Promise = decodeImageRgba(extraFiles[json.sh0.files[0]]).then(
      (sh0) => {
        const SH_C02 = 0.28209479177387814;
        const rLookup = new Array(256).fill(0).map(
          (_, i2) => json.sh0.mins[0] + (json.sh0.maxs[0] - json.sh0.mins[0]) * (i2 / 255)
        ).map((x2) => SH_C02 * x2 + 0.5);
        const gLookup = new Array(256).fill(0).map(
          (_, i2) => json.sh0.mins[1] + (json.sh0.maxs[1] - json.sh0.mins[1]) * (i2 / 255)
        ).map((x2) => SH_C02 * x2 + 0.5);
        const bLookup = new Array(256).fill(0).map(
          (_, i2) => json.sh0.mins[2] + (json.sh0.maxs[2] - json.sh0.mins[2]) * (i2 / 255)
        ).map((x2) => SH_C02 * x2 + 0.5);
        const aLookup = new Array(256).fill(0).map(
          (_, i2) => json.sh0.mins[3] + (json.sh0.maxs[3] - json.sh0.mins[3]) * (i2 / 255)
        ).map((x2) => 1 / (1 + Math.exp(-x2)));
        for (let i2 = 0; i2 < numSplats; ++i2) {
          const i4 = i2 * 4;
          setPackedSplatRgba(
            packedArray,
            i2,
            rLookup[sh0[i4 + 0]],
            gLookup[sh0[i4 + 1]],
            bLookup[sh0[i4 + 2]],
            aLookup[sh0[i4 + 3]],
            splatEncoding
          );
        }
      }
    );
    const promises = [meansPromise, scalesPromise, quatsPromise, sh0Promise];
    if (json.shN) {
      const useSH3 = json.shN.shape[1] >= 48 - 3;
      const useSH2 = json.shN.shape[1] >= 27 - 3;
      const useSH1 = json.shN.shape[1] >= 12 - 3;
      if (useSH1) extra.sh1 = new Uint32Array(numSplats * 2);
      if (useSH2) extra.sh2 = new Uint32Array(numSplats * 4);
      if (useSH3) extra.sh3 = new Uint32Array(numSplats * 4);
      const sh1 = new Float32Array(9);
      const sh2 = new Float32Array(15);
      const sh3 = new Float32Array(21);
      const shN = json.shN;
      const shNPromise = Promise.all([
        decodeImage(extraFiles[json.shN.files[0]]),
        decodeImage(extraFiles[json.shN.files[1]])
      ]).then(([centroids, labels]) => {
        const lookup = new Array(256).fill(0).map((_, i2) => shN.mins + (shN.maxs - shN.mins) * (i2 / 255));
        for (let i2 = 0; i2 < numSplats; ++i2) {
          const i4 = i2 * 4;
          const label = labels.rgba[i4 + 0] + (labels.rgba[i4 + 1] << 8);
          const col = (label & 63) * 15;
          const row = label >>> 6;
          const offset = row * centroids.width + col;
          for (let d = 0; d < 3; ++d) {
            if (useSH1) {
              for (let k = 0; k < 3; ++k) {
                sh1[k * 3 + d] = lookup[centroids.rgba[(offset + k) * 4 + d]];
              }
            }
            if (useSH2) {
              for (let k = 0; k < 5; ++k) {
                sh2[k * 3 + d] = lookup[centroids.rgba[(offset + 3 + k) * 4 + d]];
              }
            }
            if (useSH3) {
              for (let k = 0; k < 7; ++k) {
                sh3[k * 3 + d] = lookup[centroids.rgba[(offset + 8 + k) * 4 + d]];
              }
            }
          }
          if (useSH1)
            encodeSh1Rgb(extra.sh1, i2, sh1, splatEncoding);
          if (useSH2)
            encodeSh2Rgb(extra.sh2, i2, sh2, splatEncoding);
          if (useSH3)
            encodeSh3Rgb(extra.sh3, i2, sh3, splatEncoding);
        }
      });
      promises.push(shNPromise);
    }
    await Promise.all(promises);
    return { packedArray, numSplats, extra };
  }
  let offscreenGlContext = null;
  async function decodeImage(fileBytes) {
    if (!offscreenGlContext) {
      const canvas = new OffscreenCanvas(1, 1);
      offscreenGlContext = canvas.getContext("webgl2");
      if (!offscreenGlContext) {
        throw new Error("Failed to create WebGL2 context");
      }
    }
    const imageBlob = new Blob([fileBytes]);
    const bitmap = await createImageBitmap(imageBlob, {
      premultiplyAlpha: "none"
    });
    const gl = offscreenGlContext;
    const texture = gl.createTexture();
    gl.bindTexture(gl.TEXTURE_2D, texture);
    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);
    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, bitmap);
    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);
    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);
    const framebuffer = gl.createFramebuffer();
    gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);
    gl.framebufferTexture2D(
      gl.FRAMEBUFFER,
      gl.COLOR_ATTACHMENT0,
      gl.TEXTURE_2D,
      texture,
      0
    );
    const data = new Uint8Array(bitmap.width * bitmap.height * 4);
    gl.readPixels(
      0,
      0,
      bitmap.width,
      bitmap.height,
      gl.RGBA,
      gl.UNSIGNED_BYTE,
      data
    );
    gl.deleteTexture(texture);
    gl.deleteFramebuffer(framebuffer);
    return { rgba: data, width: bitmap.width, height: bitmap.height };
  }
  async function decodeImageRgba(fileBytes) {
    const { rgba } = await decodeImage(fileBytes);
    return rgba;
  }
  async function unpackPcSogsZip(fileBytes, splatEncoding) {
    var _a2;
    const nameJson = tryPcSogsZip(fileBytes);
    if (!nameJson) {
      throw new Error("Invalid PC SOGS zip file");
    }
    const { name, json } = nameJson;
    const lastSlash = name.lastIndexOf("/");
    const lastBackslash = name.lastIndexOf("\\\\");
    const prefix = name.slice(0, Math.max(lastSlash, lastBackslash) + 1);
    const fileMap = /* @__PURE__ */ new Map();
    const refFiles = [
      ...json.means.files,
      ...json.scales.files,
      ...json.quats.files,
      ...json.sh0.files,
      ...((_a2 = json.shN) == null ? void 0 : _a2.files) ?? []
    ];
    for (const file of refFiles) {
      fileMap.set(prefix + file, file);
    }
    const unzipped = await new Promise(
      (resolve, reject) => {
        unzip(
          fileBytes,
          {
            filter: ({ name: name2 }) => {
              return fileMap.has(name2);
            }
          },
          (err2, files) => {
            if (err2) {
              reject(err2);
            } else {
              resolve(files);
            }
          }
        );
      }
    );
    const extraFiles = {};
    for (const [full, name2] of fileMap.entries()) {
      extraFiles[name2] = unzipped[full];
    }
    return await unpackPcSogs(json, extraFiles, splatEncoding);
  }
  class SpzReader {
    constructor({ fileBytes }) {
      this.fileBytes = fileBytes instanceof ArrayBuffer ? new Uint8Array(fileBytes) : fileBytes;
      this.reader = new GunzipReader({ fileBytes: this.fileBytes });
      const header = new DataView(this.reader.read(16).buffer);
      if (header.getUint32(0, true) !== 1347635022) {
        throw new Error("Invalid SPZ file");
      }
      this.version = header.getUint32(4, true);
      if (this.version < 1 || this.version > 3) {
        throw new Error(\`Unsupported SPZ version: \${this.version}\`);
      }
      this.numSplats = header.getUint32(8, true);
      this.shDegree = header.getUint8(12);
      this.fractionalBits = header.getUint8(13);
      this.flags = header.getUint8(14);
      this.flagAntiAlias = (this.flags & 1) !== 0;
      this.reserved = header.getUint8(15);
      this.parsed = false;
    }
    parseSplats(centerCallback, alphaCallback, rgbCallback, scalesCallback, quatCallback, shCallback) {
      if (this.parsed) {
        throw new Error("SPZ file already parsed");
      }
      this.parsed = true;
      if (this.version === 1) {
        const centerBytes = this.reader.read(this.numSplats * 3 * 2);
        const centerUint16 = new Uint16Array(centerBytes.buffer);
        for (let i2 = 0; i2 < this.numSplats; i2++) {
          const i3 = i2 * 3;
          const x2 = fromHalf(centerUint16[i3]);
          const y = fromHalf(centerUint16[i3 + 1]);
          const z = fromHalf(centerUint16[i3 + 2]);
          centerCallback == null ? void 0 : centerCallback(i2, x2, y, z);
        }
      } else if (this.version === 2 || this.version === 3) {
        const fixed = 1 << this.fractionalBits;
        const centerBytes = this.reader.read(this.numSplats * 3 * 3);
        for (let i2 = 0; i2 < this.numSplats; i2++) {
          const i9 = i2 * 9;
          const x2 = ((centerBytes[i9 + 2] << 24 | centerBytes[i9 + 1] << 16 | centerBytes[i9] << 8) >> 8) / fixed;
          const y = ((centerBytes[i9 + 5] << 24 | centerBytes[i9 + 4] << 16 | centerBytes[i9 + 3] << 8) >> 8) / fixed;
          const z = ((centerBytes[i9 + 8] << 24 | centerBytes[i9 + 7] << 16 | centerBytes[i9 + 6] << 8) >> 8) / fixed;
          centerCallback == null ? void 0 : centerCallback(i2, x2, y, z);
        }
      } else {
        throw new Error("Unreachable");
      }
      {
        const bytes = this.reader.read(this.numSplats);
        for (let i2 = 0; i2 < this.numSplats; i2++) {
          alphaCallback == null ? void 0 : alphaCallback(i2, bytes[i2] / 255);
        }
      }
      {
        const rgbBytes = this.reader.read(this.numSplats * 3);
        const scale = SH_C0 / 0.15;
        for (let i2 = 0; i2 < this.numSplats; i2++) {
          const i3 = i2 * 3;
          const r = (rgbBytes[i3] / 255 - 0.5) * scale + 0.5;
          const g = (rgbBytes[i3 + 1] / 255 - 0.5) * scale + 0.5;
          const b = (rgbBytes[i3 + 2] / 255 - 0.5) * scale + 0.5;
          rgbCallback == null ? void 0 : rgbCallback(i2, r, g, b);
        }
      }
      {
        const scalesBytes = this.reader.read(this.numSplats * 3);
        for (let i2 = 0; i2 < this.numSplats; i2++) {
          const i3 = i2 * 3;
          const scaleX = Math.exp(scalesBytes[i3] / 16 - 10);
          const scaleY = Math.exp(scalesBytes[i3 + 1] / 16 - 10);
          const scaleZ = Math.exp(scalesBytes[i3 + 2] / 16 - 10);
          scalesCallback == null ? void 0 : scalesCallback(i2, scaleX, scaleY, scaleZ);
        }
      }
      if (this.version === 3) {
        const maxValue = 1 / Math.sqrt(2);
        const quatBytes = this.reader.read(this.numSplats * 4);
        for (let i2 = 0; i2 < this.numSplats; i2++) {
          const i3 = i2 * 4;
          const quaternion = [0, 0, 0, 0];
          const values = [
            quatBytes[i3],
            quatBytes[i3 + 1],
            quatBytes[i3 + 2],
            quatBytes[i3 + 3]
          ];
          const combinedValues = values[0] + (values[1] << 8) + (values[2] << 16) + (values[3] << 24);
          const valueMask = (1 << 9) - 1;
          const largestIndex = combinedValues >>> 30;
          let remainingValues = combinedValues;
          let sumSquares = 0;
          for (let i22 = 3; i22 >= 0; --i22) {
            if (i22 !== largestIndex) {
              const value = remainingValues & valueMask;
              const sign = remainingValues >>> 9 & 1;
              remainingValues = remainingValues >>> 10;
              quaternion[i22] = maxValue * (value / valueMask);
              quaternion[i22] = sign === 0 ? quaternion[i22] : -quaternion[i22];
              sumSquares += quaternion[i22] * quaternion[i22];
            }
          }
          const square = 1 - sumSquares;
          quaternion[largestIndex] = Math.sqrt(Math.max(square, 0));
          quatCallback == null ? void 0 : quatCallback(
            i2,
            quaternion[0],
            quaternion[1],
            quaternion[2],
            quaternion[3]
          );
        }
      } else {
        const quatBytes = this.reader.read(this.numSplats * 3);
        for (let i2 = 0; i2 < this.numSplats; i2++) {
          const i3 = i2 * 3;
          const quatX = quatBytes[i3] / 127.5 - 1;
          const quatY = quatBytes[i3 + 1] / 127.5 - 1;
          const quatZ = quatBytes[i3 + 2] / 127.5 - 1;
          const quatW = Math.sqrt(
            Math.max(0, 1 - quatX * quatX - quatY * quatY - quatZ * quatZ)
          );
          quatCallback == null ? void 0 : quatCallback(i2, quatX, quatY, quatZ, quatW);
        }
      }
      if (shCallback && this.shDegree >= 1) {
        const sh1 = new Float32Array(3 * 3);
        const sh2 = this.shDegree >= 2 ? new Float32Array(5 * 3) : void 0;
        const sh3 = this.shDegree >= 3 ? new Float32Array(7 * 3) : void 0;
        const shBytes = this.reader.read(
          this.numSplats * SH_DEGREE_TO_VECS[this.shDegree] * 3
        );
        let offset = 0;
        for (let i2 = 0; i2 < this.numSplats; i2++) {
          for (let j = 0; j < 9; ++j) {
            sh1[j] = (shBytes[offset + j] - 128) / 128;
          }
          offset += 9;
          if (sh2) {
            for (let j = 0; j < 15; ++j) {
              sh2[j] = (shBytes[offset + j] - 128) / 128;
            }
            offset += 15;
          }
          if (sh3) {
            for (let j = 0; j < 21; ++j) {
              sh3[j] = (shBytes[offset + j] - 128) / 128;
            }
            offset += 21;
          }
          shCallback == null ? void 0 : shCallback(i2, sh1, sh2, sh3);
        }
      }
    }
  }
  const SH_DEGREE_TO_VECS = { 1: 3, 2: 8, 3: 15 };
  const SH_C0 = 0.28209479177387814;
  const SPZ_MAGIC = 1347635022;
  const SPZ_VERSION = 3;
  const FLAG_ANTIALIASED = 1;
  class SpzWriter {
    constructor({
      numSplats,
      shDegree,
      fractionalBits = 12,
      flagAntiAlias = true
    }) {
      this.clippedCount = 0;
      const splatSize = 9 + // Position
      1 + // Opacity
      3 + // Scale
      3 + // DC-rgb
      4 + // Rotation
      (shDegree >= 1 ? 9 : 0) + (shDegree >= 2 ? 15 : 0) + (shDegree >= 3 ? 21 : 0);
      const bufferSize = 16 + numSplats * splatSize;
      this.buffer = new ArrayBuffer(bufferSize);
      this.view = new DataView(this.buffer);
      this.view.setUint32(0, SPZ_MAGIC, true);
      this.view.setUint32(4, SPZ_VERSION, true);
      this.view.setUint32(8, numSplats, true);
      this.view.setUint8(12, shDegree);
      this.view.setUint8(13, fractionalBits);
      this.view.setUint8(14, flagAntiAlias ? FLAG_ANTIALIASED : 0);
      this.view.setUint8(15, 0);
      this.numSplats = numSplats;
      this.shDegree = shDegree;
      this.fractionalBits = fractionalBits;
      this.fraction = 1 << fractionalBits;
      this.flagAntiAlias = flagAntiAlias;
    }
    setCenter(index, x2, y, z) {
      const xRounded = Math.round(x2 * this.fraction);
      const xInt = Math.max(-8388607, Math.min(8388607, xRounded));
      const yRounded = Math.round(y * this.fraction);
      const yInt = Math.max(-8388607, Math.min(8388607, yRounded));
      const zRounded = Math.round(z * this.fraction);
      const zInt = Math.max(-8388607, Math.min(8388607, zRounded));
      const clipped = xRounded !== xInt || yRounded !== yInt || zRounded !== zInt;
      if (clipped) {
        this.clippedCount += 1;
      }
      const i9 = index * 9;
      const base = 16 + i9;
      this.view.setUint8(base, xInt & 255);
      this.view.setUint8(base + 1, xInt >> 8 & 255);
      this.view.setUint8(base + 2, xInt >> 16 & 255);
      this.view.setUint8(base + 3, yInt & 255);
      this.view.setUint8(base + 4, yInt >> 8 & 255);
      this.view.setUint8(base + 5, yInt >> 16 & 255);
      this.view.setUint8(base + 6, zInt & 255);
      this.view.setUint8(base + 7, zInt >> 8 & 255);
      this.view.setUint8(base + 8, zInt >> 16 & 255);
    }
    setAlpha(index, alpha) {
      const base = 16 + this.numSplats * 9 + index;
      this.view.setUint8(
        base,
        Math.max(0, Math.min(255, Math.round(alpha * 255)))
      );
    }
    static scaleRgb(r) {
      const v = ((r - 0.5) / (SH_C0 / 0.15) + 0.5) * 255;
      return Math.max(0, Math.min(255, Math.round(v)));
    }
    setRgb(index, r, g, b) {
      const base = 16 + this.numSplats * 10 + index * 3;
      this.view.setUint8(base, SpzWriter.scaleRgb(r));
      this.view.setUint8(base + 1, SpzWriter.scaleRgb(g));
      this.view.setUint8(base + 2, SpzWriter.scaleRgb(b));
    }
    setScale(index, scaleX, scaleY, scaleZ) {
      const base = 16 + this.numSplats * 13 + index * 3;
      this.view.setUint8(
        base,
        Math.max(0, Math.min(255, Math.round((Math.log(scaleX) + 10) * 16)))
      );
      this.view.setUint8(
        base + 1,
        Math.max(0, Math.min(255, Math.round((Math.log(scaleY) + 10) * 16)))
      );
      this.view.setUint8(
        base + 2,
        Math.max(0, Math.min(255, Math.round((Math.log(scaleZ) + 10) * 16)))
      );
    }
    setQuat(index, ...q) {
      const base = 16 + this.numSplats * 16 + index * 4;
      const quat = normalize(q);
      let iLargest = 0;
      for (let i2 = 1; i2 < 4; ++i2) {
        if (Math.abs(quat[i2]) > Math.abs(quat[iLargest])) {
          iLargest = i2;
        }
      }
      const negate = quat[iLargest] < 0 ? 1 : 0;
      let comp = iLargest;
      for (let i2 = 0; i2 < 4; ++i2) {
        if (i2 !== iLargest) {
          const negbit = (quat[i2] < 0 ? 1 : 0) ^ negate;
          const mag = Math.floor(
            ((1 << 9) - 1) * (Math.abs(quat[i2]) / Math.SQRT1_2) + 0.5
          );
          comp = comp << 10 | negbit << 9 | mag;
        }
      }
      this.view.setUint8(base, comp & 255);
      this.view.setUint8(base + 1, comp >> 8 & 255);
      this.view.setUint8(base + 2, comp >> 16 & 255);
      this.view.setUint8(base + 3, comp >>> 24 & 255);
    }
    static quantizeSh(sh, bits2) {
      const value = Math.round(sh * 128) + 128;
      const bucketSize = 1 << 8 - bits2;
      const quantized = Math.floor((value + bucketSize / 2) / bucketSize) * bucketSize;
      return Math.max(0, Math.min(255, quantized));
    }
    setSh(index, sh1, sh2, sh3) {
      const shVecs = SH_DEGREE_TO_VECS[this.shDegree] || 0;
      const base1 = 16 + this.numSplats * 20 + index * shVecs * 3;
      for (let j = 0; j < 9; ++j) {
        this.view.setUint8(base1 + j, SpzWriter.quantizeSh(sh1[j], 5));
      }
      if (sh2) {
        const base2 = base1 + 9;
        for (let j = 0; j < 15; ++j) {
          this.view.setUint8(base2 + j, SpzWriter.quantizeSh(sh2[j], 4));
        }
        if (sh3) {
          const base3 = base2 + 15;
          for (let j = 0; j < 21; ++j) {
            this.view.setUint8(base3 + j, SpzWriter.quantizeSh(sh3[j], 4));
          }
        }
      }
    }
    async finalize() {
      const input = new Uint8Array(this.buffer);
      const stream = new ReadableStream({
        async start(controller) {
          controller.enqueue(input);
          controller.close();
        }
      });
      const compressed = stream.pipeThrough(new CompressionStream("gzip"));
      const response = new Response(compressed);
      const buffer = await response.arrayBuffer();
      console.log(
        "Compressed",
        input.length,
        "bytes to",
        buffer.byteLength,
        "bytes"
      );
      return new Uint8Array(buffer);
    }
  }
  async function transcodeSpz(input) {
    var _a2, _b2, _c;
    const splats = new SplatData();
    const {
      inputs,
      clipXyz,
      maxSh,
      fractionalBits = 12,
      opacityThreshold
    } = input;
    for (const input2 of inputs) {
      let transformPos = function(pos) {
        pos.multiplyScalar(scale);
        pos.applyQuaternion(quaternion);
        pos.add(translate);
        return pos;
      }, transformScales = function(scales) {
        scales.multiplyScalar(scale);
        return scales;
      }, transformQuaternion = function(quat) {
        quat.premultiply(quaternion);
        return quat;
      }, withinClip = function(p) {
        return !clip || clip.containsPoint(p);
      }, withinOpacity = function(opacity) {
        return opacityThreshold !== void 0 ? opacity >= opacityThreshold : true;
      };
      const scale = ((_a2 = input2.transform) == null ? void 0 : _a2.scale) ?? 1;
      const quaternion = new Quaternion().fromArray(
        ((_b2 = input2.transform) == null ? void 0 : _b2.quaternion) ?? [0, 0, 0, 1]
      );
      const translate = new Vector3().fromArray(
        ((_c = input2.transform) == null ? void 0 : _c.translate) ?? [0, 0, 0]
      );
      const clip = clipXyz ? new Box3(
        new Vector3().fromArray(clipXyz.min),
        new Vector3().fromArray(clipXyz.max)
      ) : void 0;
      let fileType = input2.fileType;
      if (!fileType) {
        fileType = getSplatFileType(input2.fileBytes);
        if (!fileType && input2.pathOrUrl) {
          fileType = getSplatFileTypeFromPath(input2.pathOrUrl);
        }
      }
      switch (fileType) {
        case SplatFileType.PLY: {
          const ply = new PlyReader({ fileBytes: input2.fileBytes });
          await ply.parseHeader();
          let lastIndex = null;
          ply.parseSplats(
            (index, x2, y, z, scaleX, scaleY, scaleZ, quatX, quatY, quatZ, quatW, opacity, r, g, b) => {
              const center = transformPos(new Vector3(x2, y, z));
              if (withinClip(center) && withinOpacity(opacity)) {
                lastIndex = splats.pushSplat();
                splats.setCenter(lastIndex, center.x, center.y, center.z);
                const scales = transformScales(
                  new Vector3(scaleX, scaleY, scaleZ)
                );
                splats.setScale(lastIndex, scales.x, scales.y, scales.z);
                const quaternion2 = transformQuaternion(
                  new Quaternion(quatX, quatY, quatZ, quatW)
                );
                splats.setQuaternion(
                  lastIndex,
                  quaternion2.x,
                  quaternion2.y,
                  quaternion2.z,
                  quaternion2.w
                );
                splats.setOpacity(lastIndex, opacity);
                splats.setColor(lastIndex, r, g, b);
              } else {
                lastIndex = null;
              }
            },
            (index, sh1, sh2, sh3) => {
              if (sh1 && lastIndex !== null) {
                splats.setSh1(lastIndex, sh1);
              }
              if (sh2 && lastIndex !== null) {
                splats.setSh2(lastIndex, sh2);
              }
              if (sh3 && lastIndex !== null) {
                splats.setSh3(lastIndex, sh3);
              }
            }
          );
          break;
        }
        case SplatFileType.SPZ: {
          const spz2 = new SpzReader({ fileBytes: input2.fileBytes });
          const mapping = new Int32Array(spz2.numSplats);
          mapping.fill(-1);
          const centers = new Float32Array(spz2.numSplats * 3);
          const center = new Vector3();
          spz2.parseSplats(
            (index, x2, y, z) => {
              const center2 = transformPos(new Vector3(x2, y, z));
              centers[index * 3] = center2.x;
              centers[index * 3 + 1] = center2.y;
              centers[index * 3 + 2] = center2.z;
            },
            (index, alpha) => {
              center.fromArray(centers, index * 3);
              if (withinClip(center) && withinOpacity(alpha)) {
                mapping[index] = splats.pushSplat();
                splats.setCenter(mapping[index], center.x, center.y, center.z);
                splats.setOpacity(mapping[index], alpha);
              }
            },
            (index, r, g, b) => {
              if (mapping[index] >= 0) {
                splats.setColor(mapping[index], r, g, b);
              }
            },
            (index, scaleX, scaleY, scaleZ) => {
              if (mapping[index] >= 0) {
                const scales = transformScales(
                  new Vector3(scaleX, scaleY, scaleZ)
                );
                splats.setScale(mapping[index], scales.x, scales.y, scales.z);
              }
            },
            (index, quatX, quatY, quatZ, quatW) => {
              if (mapping[index] >= 0) {
                const quaternion2 = transformQuaternion(
                  new Quaternion(quatX, quatY, quatZ, quatW)
                );
                splats.setQuaternion(
                  mapping[index],
                  quaternion2.x,
                  quaternion2.y,
                  quaternion2.z,
                  quaternion2.w
                );
              }
            },
            (index, sh1, sh2, sh3) => {
              if (mapping[index] >= 0) {
                splats.setSh1(mapping[index], sh1);
                if (sh2) {
                  splats.setSh2(mapping[index], sh2);
                }
                if (sh3) {
                  splats.setSh3(mapping[index], sh3);
                }
              }
            }
          );
          break;
        }
        case SplatFileType.SPLAT:
          decodeAntiSplat(
            input2.fileBytes,
            (numSplats) => {
            },
            (index, x2, y, z, scaleX, scaleY, scaleZ, quatX, quatY, quatZ, quatW, opacity, r, g, b) => {
              const center = transformPos(new Vector3(x2, y, z));
              if (withinClip(center) && withinOpacity(opacity)) {
                const index2 = splats.pushSplat();
                splats.setCenter(index2, center.x, center.y, center.z);
                const scales = transformScales(
                  new Vector3(scaleX, scaleY, scaleZ)
                );
                splats.setScale(index2, scales.x, scales.y, scales.z);
                const quaternion2 = transformQuaternion(
                  new Quaternion(quatX, quatY, quatZ, quatW)
                );
                splats.setQuaternion(
                  index2,
                  quaternion2.x,
                  quaternion2.y,
                  quaternion2.z,
                  quaternion2.w
                );
                splats.setOpacity(index2, opacity);
                splats.setColor(index2, r, g, b);
              }
            }
          );
          break;
        case SplatFileType.KSPLAT: {
          let lastIndex = null;
          decodeKsplat(
            input2.fileBytes,
            (numSplats) => {
            },
            (index, x2, y, z, scaleX, scaleY, scaleZ, quatX, quatY, quatZ, quatW, opacity, r, g, b) => {
              const center = transformPos(new Vector3(x2, y, z));
              if (withinClip(center) && withinOpacity(opacity)) {
                lastIndex = splats.pushSplat();
                splats.setCenter(lastIndex, center.x, center.y, center.z);
                const scales = transformScales(
                  new Vector3(scaleX, scaleY, scaleZ)
                );
                splats.setScale(lastIndex, scales.x, scales.y, scales.z);
                const quaternion2 = transformQuaternion(
                  new Quaternion(quatX, quatY, quatZ, quatW)
                );
                splats.setQuaternion(
                  lastIndex,
                  quaternion2.x,
                  quaternion2.y,
                  quaternion2.z,
                  quaternion2.w
                );
                splats.setOpacity(lastIndex, opacity);
                splats.setColor(lastIndex, r, g, b);
              } else {
                lastIndex = null;
              }
            },
            (index, sh1, sh2, sh3) => {
              if (lastIndex !== null) {
                splats.setSh1(lastIndex, sh1);
                if (sh2) {
                  splats.setSh2(lastIndex, sh2);
                }
                if (sh3) {
                  splats.setSh3(lastIndex, sh3);
                }
              }
            }
          );
          break;
        }
        default:
          throw new Error(\`transcodeSpz not implemented for \${fileType}\`);
      }
    }
    const shDegree = Math.min(
      maxSh ?? 3,
      splats.sh3 ? 3 : splats.sh2 ? 2 : splats.sh1 ? 1 : 0
    );
    const spz = new SpzWriter({
      numSplats: splats.numSplats,
      shDegree,
      fractionalBits,
      flagAntiAlias: true
    });
    for (let i2 = 0; i2 < splats.numSplats; ++i2) {
      const i3 = i2 * 3;
      const i4 = i2 * 4;
      spz.setCenter(
        i2,
        splats.centers[i3],
        splats.centers[i3 + 1],
        splats.centers[i3 + 2]
      );
      spz.setScale(
        i2,
        splats.scales[i3],
        splats.scales[i3 + 1],
        splats.scales[i3 + 2]
      );
      spz.setQuat(
        i2,
        splats.quaternions[i4],
        splats.quaternions[i4 + 1],
        splats.quaternions[i4 + 2],
        splats.quaternions[i4 + 3]
      );
      spz.setAlpha(i2, splats.opacities[i2]);
      spz.setRgb(
        i2,
        splats.colors[i3],
        splats.colors[i3 + 1],
        splats.colors[i3 + 2]
      );
      if (splats.sh1 && shDegree >= 1) {
        spz.setSh(
          i2,
          splats.sh1.slice(i2 * 9, (i2 + 1) * 9),
          shDegree >= 2 && splats.sh2 ? splats.sh2.slice(i2 * 15, (i2 + 1) * 15) : void 0,
          shDegree >= 3 && splats.sh3 ? splats.sh3.slice(i2 * 21, (i2 + 1) * 21) : void 0
        );
      }
    }
    const spzBytes = await spz.finalize();
    return { fileBytes: spzBytes, clippedCount: spz.clippedCount };
  }
  async function onMessage(event) {
    const { name, args, id } = event.data;
    let result = void 0;
    let error = void 0;
    try {
      switch (name) {
        case "unpackPly": {
          const { packedArray, fileBytes, splatEncoding } = args;
          const decoded = await unpackPly({
            packedArray,
            fileBytes,
            splatEncoding
          });
          result = {
            id,
            numSplats: decoded.numSplats,
            packedArray: decoded.packedArray,
            extra: decoded.extra
          };
          break;
        }
        case "decodeSpz": {
          const { fileBytes, splatEncoding } = args;
          const decoded = unpackSpz(fileBytes, splatEncoding);
          result = {
            id,
            numSplats: decoded.numSplats,
            packedArray: decoded.packedArray,
            extra: decoded.extra
          };
          break;
        }
        case "decodeAntiSplat": {
          const { fileBytes, splatEncoding } = args;
          const decoded = unpackAntiSplat(fileBytes, splatEncoding);
          result = {
            id,
            numSplats: decoded.numSplats,
            packedArray: decoded.packedArray
          };
          break;
        }
        case "decodeKsplat": {
          const { fileBytes, splatEncoding } = args;
          const decoded = unpackKsplat(fileBytes, splatEncoding);
          result = {
            id,
            numSplats: decoded.numSplats,
            packedArray: decoded.packedArray,
            extra: decoded.extra
          };
          break;
        }
        case "decodePcSogs": {
          const { fileBytes, extraFiles, splatEncoding } = args;
          const json = JSON.parse(
            new TextDecoder().decode(fileBytes)
          );
          const decoded = await unpackPcSogs(json, extraFiles, splatEncoding);
          result = {
            id,
            numSplats: decoded.numSplats,
            packedArray: decoded.packedArray,
            extra: decoded.extra
          };
          break;
        }
        case "decodePcSogsZip": {
          const { fileBytes, splatEncoding } = args;
          const decoded = await unpackPcSogsZip(fileBytes, splatEncoding);
          result = {
            id,
            numSplats: decoded.numSplats,
            packedArray: decoded.packedArray,
            extra: decoded.extra
          };
          break;
        }
        case "sortSplats": {
          const { totalSplats, readback, ordering } = args;
          result = {
            id,
            readback,
            ...sortSplats({ totalSplats, readback, ordering })
          };
          break;
        }
        case "sortDoubleSplats": {
          const { numSplats, readback, ordering } = args;
          {
            result = {
              id,
              readback,
              ordering,
              activeSplats: sort_splats(numSplats, readback, ordering)
            };
          }
          break;
        }
        case "sort32Splats": {
          const { numSplats, readback, ordering } = args;
          {
            result = {
              id,
              readback,
              ordering,
              activeSplats: sort32_splats(numSplats, readback, ordering)
            };
          }
          break;
        }
        case "transcodeSpz": {
          const input = args;
          const spzBytes = await transcodeSpz(input);
          result = {
            id,
            fileBytes: spzBytes,
            input
          };
          break;
        }
        default: {
          throw new Error(\`Unknown name: \${name}\`);
        }
      }
    } catch (e) {
      error = e;
      console.error(error);
    }
    self.postMessage(
      { id, result, error },
      { transfer: getArrayBuffers(result) }
    );
  }
  async function unpackPly({
    packedArray,
    fileBytes,
    splatEncoding
  }) {
    const ply = new PlyReader({ fileBytes });
    await ply.parseHeader();
    const numSplats = ply.numSplats;
    const extra = {};
    ply.parseSplats(
      (index, x2, y, z, scaleX, scaleY, scaleZ, quatX, quatY, quatZ, quatW, opacity, r, g, b) => {
        setPackedSplat(
          packedArray,
          index,
          x2,
          y,
          z,
          scaleX,
          scaleY,
          scaleZ,
          quatX,
          quatY,
          quatZ,
          quatW,
          opacity,
          r,
          g,
          b,
          splatEncoding
        );
      },
      (index, sh1, sh2, sh3) => {
        if (sh1) {
          if (!extra.sh1) {
            extra.sh1 = new Uint32Array(numSplats * 2);
          }
          encodeSh1Rgb(extra.sh1, index, sh1, splatEncoding);
        }
        if (sh2) {
          if (!extra.sh2) {
            extra.sh2 = new Uint32Array(numSplats * 4);
          }
          encodeSh2Rgb(extra.sh2, index, sh2, splatEncoding);
        }
        if (sh3) {
          if (!extra.sh3) {
            extra.sh3 = new Uint32Array(numSplats * 4);
          }
          encodeSh3Rgb(extra.sh3, index, sh3, splatEncoding);
        }
      }
    );
    return { packedArray, numSplats, extra };
  }
  function unpackSpz(fileBytes, splatEncoding) {
    const spz = new SpzReader({ fileBytes });
    const numSplats = spz.numSplats;
    const maxSplats = computeMaxSplats(numSplats);
    const packedArray = new Uint32Array(maxSplats * 4);
    const extra = {};
    spz.parseSplats(
      (index, x2, y, z) => {
        setPackedSplatCenter(packedArray, index, x2, y, z);
      },
      (index, alpha) => {
        setPackedSplatOpacity(packedArray, index, alpha);
      },
      (index, r, g, b) => {
        setPackedSplatRgb(packedArray, index, r, g, b, splatEncoding);
      },
      (index, scaleX, scaleY, scaleZ) => {
        setPackedSplatScales(
          packedArray,
          index,
          scaleX,
          scaleY,
          scaleZ,
          splatEncoding
        );
      },
      (index, quatX, quatY, quatZ, quatW) => {
        setPackedSplatQuat(packedArray, index, quatX, quatY, quatZ, quatW);
      },
      (index, sh1, sh2, sh3) => {
        if (sh1) {
          if (!extra.sh1) {
            extra.sh1 = new Uint32Array(numSplats * 2);
          }
          encodeSh1Rgb(extra.sh1, index, sh1, splatEncoding);
        }
        if (sh2) {
          if (!extra.sh2) {
            extra.sh2 = new Uint32Array(numSplats * 4);
          }
          encodeSh2Rgb(extra.sh2, index, sh2, splatEncoding);
        }
        if (sh3) {
          if (!extra.sh3) {
            extra.sh3 = new Uint32Array(numSplats * 4);
          }
          encodeSh3Rgb(extra.sh3, index, sh3, splatEncoding);
        }
      }
    );
    return { packedArray, numSplats, extra };
  }
  const DEPTH_INFINITY_F16 = 31744;
  const DEPTH_SIZE_16 = DEPTH_INFINITY_F16 + 1;
  let depthArray16 = null;
  function sortSplats({
    totalSplats,
    readback,
    ordering
  }) {
    if (!depthArray16) {
      depthArray16 = new Uint32Array(DEPTH_SIZE_16);
    }
    depthArray16.fill(0);
    const readbackUint32 = readback.map((layer) => new Uint32Array(layer.buffer));
    const layerSize = readbackUint32[0].length;
    const numLayers = Math.ceil(totalSplats / layerSize);
    let layerBase = 0;
    for (let layer = 0; layer < numLayers; ++layer) {
      const readbackLayer = readbackUint32[layer];
      const layerSplats = Math.min(readbackLayer.length, totalSplats - layerBase);
      for (let i2 = 0; i2 < layerSplats; ++i2) {
        const pri = readbackLayer[i2] & 32767;
        if (pri < DEPTH_INFINITY_F16) {
          depthArray16[pri] += 1;
        }
      }
      layerBase += layerSplats;
    }
    let activeSplats = 0;
    for (let j = 0; j < DEPTH_SIZE_16; ++j) {
      const nextIndex = activeSplats + depthArray16[j];
      depthArray16[j] = activeSplats;
      activeSplats = nextIndex;
    }
    layerBase = 0;
    for (let layer = 0; layer < numLayers; ++layer) {
      const readbackLayer = readbackUint32[layer];
      const layerSplats = Math.min(readbackLayer.length, totalSplats - layerBase);
      for (let i2 = 0; i2 < layerSplats; ++i2) {
        const pri = readbackLayer[i2] & 32767;
        if (pri < DEPTH_INFINITY_F16) {
          ordering[depthArray16[pri]] = layerBase + i2;
          depthArray16[pri] += 1;
        }
      }
      layerBase += layerSplats;
    }
    if (depthArray16[DEPTH_SIZE_16 - 1] !== activeSplats) {
      throw new Error(
        \`Expected \${activeSplats} active splats but got \${depthArray16[DEPTH_SIZE_16 - 1]}\`
      );
    }
    return { activeSplats, ordering };
  }
  const messageBuffer = [];
  function bufferMessage(event) {
    messageBuffer.push(event);
  }
  async function initialize() {
    self.addEventListener("message", bufferMessage);
    await __wbg_init();
    self.removeEventListener("message", bufferMessage);
    self.addEventListener("message", onMessage);
    for (const event of messageBuffer) {
      onMessage(event);
    }
    messageBuffer.length = 0;
  }
  initialize().catch(console.error);
})();
//# sourceMappingURL=worker-erPBjhH-.js.map
`,zE=typeof self<"u"&&self.Blob&&new Blob([pk],{type:"text/javascript;charset=utf-8"});function RW(n){let e;try{if(e=zE&&(self.URL||self.webkitURL).createObjectURL(zE),!e)throw"";const t=new Worker(e,{name:n?.name});return t.addEventListener("error",()=>{(self.URL||self.webkitURL).revokeObjectURL(e)}),t}catch{return new Worker("data:text/javascript;charset=utf-8,"+encodeURIComponent(pk),{name:n?.name})}finally{e&&(self.URL||self.webkitURL).revokeObjectURL(e)}}class MW{constructor(){this.messages={},this.messageIdNext=0,this.worker=new RW,this.worker.onmessage=e=>this.onMessage(e)}makeMessageId(){return++this.messageIdNext}makeMessagePromiseId(){const e=this.makeMessageId(),t=new Promise((s,r)=>{this.messages[e]={resolve:s,reject:r}});return{id:e,promise:t}}onMessage(e){const{id:t,result:s,error:r}=e.data,i=this.messages[t];i&&(delete this.messages[t],r?i.reject(r):i.resolve(s))}async call(e,t){const{id:s,promise:r}=this.makeMessagePromiseId();return this.worker.postMessage({name:e,args:t,id:s},{transfer:g5(t)}),r}}let mk=4,v0=0;const gk=[],Ak=[];async function DW(){const n=gk.shift();if(n)return n;if(v0<mk){const e=new MW;return v0+=1,e}return new Promise(e=>{Ak.push(e)})}function FW(n){if(v0>mk){v0-=1;return}const e=Ak.shift();if(e){e(n);return}gk.push(n)}async function Wc(n){const e=await DW();try{return await n(e)}finally{FW(e)}}class $W extends sx{constructor(e){super(e),this.fileLoader=new kB(e)}load(e,t,s,r){const i=this.manager.resolveURL((this.path??"")+(e??"")),o=new Headers(this.requestHeader),a=this.withCredentials?"include":"same-origin",l=new Request(i,{headers:o,credentials:a});let c=this.fileType;this.manager.itemStart(i),GE(l,s).then(async u=>{var h;const d=[new ProgressEvent("progress",{lengthComputable:!0,loaded:u.byteLength,total:u.byteLength})];function f(){if(s){const g=d.every(b=>b.lengthComputable||b.loaded===0&&b.total===0),x=d.reduce((b,w)=>b+w.loaded,0),v=d.reduce((b,w)=>b+w.total,0);s(new ProgressEvent("progress",{lengthComputable:g,loaded:x,total:v}))}}const p={},A=[],m=yk(u);if(c==="pcsogs"&&m===void 0)throw new Error("Invalid PC SOGS file");if(m!==void 0){c="pcsogs";for(const g of["means","scales","quats","sh0","shN"]){const x=m[g];if(x)for(const v of x.files){const b=new URL(v,i).toString(),w=d.length;d.push(new ProgressEvent("progress")),this.manager.itemStart(b);const _=new Request(b,{headers:o,credentials:a}),N=GE(_,M=>{d[w]=M,f()}).then(M=>{p[v]=M}).catch(M=>{throw this.manager.itemError(b),M}).finally(()=>{this.manager.itemEnd(b)});A.push(N)}}}if(await Promise.all(A),t){const g=((h=this.packedSplats)==null?void 0:h.splatEncoding)??dx,x=await xk({input:u,extraFiles:p,fileType:c,pathOrUrl:i,splatEncoding:g});this.packedSplats?(this.packedSplats.initialize(x),t(this.packedSplats)):t(new xu(x))}}).catch(u=>{this.manager.itemError(i),r?.(u)}).finally(()=>{this.manager.itemEnd(i)})}async loadAsync(e,t){return new Promise((s,r)=>{this.load(e,i=>{s(i)},t,r)})}parse(e){return new b0({packedSplats:e})}}async function GE(n,e){const t=await fetch(n);if(!t.ok)throw new Error(`${t.status} "${t.statusText}" fetching URL: ${n.url}`);if(!t.body)throw new Error(`Response body is null for URL: ${n.url}`);const s=t.body.getReader(),r=Number.parseInt(t.headers.get("Content-Length")||"0"),i=Number.isNaN(r)?0:r;let o=0;const a=[];for(;;){const{done:u,value:h}=await s.read();if(u)break;a.push(h),o+=h.length,e&&e(new ProgressEvent("progress",{lengthComputable:i!==0,loaded:o,total:i}))}const l=new Uint8Array(o);let c=0;for(const u of a)l.set(u,c),c+=u.length;return l.buffer}function PW(n){const e=new DataView(n.buffer);if((e.getUint32(0,!0)&16777215)===7957616)return"ply";if((e.getUint32(0,!0)&16777215)===559903){const t=R5(n,4);return new DataView(t.buffer).getUint32(0,!0)===1347635022?"spz":void 0}if(e.getUint32(0,!0)===67324752)return QW(n)?"pcsogszip":void 0}function LW(n){const e=n.split(/[?#]/,1)[0],t=Math.max(e.lastIndexOf("/"),e.lastIndexOf("\\")),s=e.slice(t+1),r=s.lastIndexOf(".");return r<=0||r===s.length-1?"":s.slice(r+1).toLowerCase()}function OW(n){const e=LW(n);if(e==="ply")return"ply";if(e==="spz")return"spz";if(e==="splat")return"splat";if(e==="ksplat")return"ksplat"}function yk(n){try{let e;if(typeof n=="string")e=n;else{const s=n instanceof ArrayBuffer?new Uint8Array(n):n;if(s.length>65536)return;e=new TextDecoder().decode(s)}const t=JSON.parse(e);if(!t||typeof t!="object"||Array.isArray(t))return;for(const s of["means","scales","quats","sh0"])if(!t[s]||typeof t[s]!="object"||Array.isArray(t[s])||!t[s].shape||!t[s].files||s!=="quats"&&(!t[s].mins||!t[s].maxs))return;return t}catch{return}}function QW(n){try{const e=n instanceof ArrayBuffer?new Uint8Array(n):n;let t=null;const s=LV(e,{filter:({name:i})=>i.split(/[\\/]/).pop()==="meta.json"?(t=i,!0):!1});if(!t)return;const r=yk(s[t]);return r?{name:t,json:r}:void 0}catch{return}}async function xk({input:n,extraFiles:e,fileType:t,pathOrUrl:s,splatEncoding:r}){const i=n instanceof ArrayBuffer?new Uint8Array(n):n;let o=t;switch(t||(o=PW(i),!o&&s&&(o=OW(s))),o){case"ply":{const a=new CW({fileBytes:i});await a.parseHeader();const l=a.numSplats,c=Co(l).maxSplats,u={fileBytes:i,packedArray:new Uint32Array(c*4),splatEncoding:r};return await Wc(async h=>{const{packedArray:d,numSplats:f,extra:p}=await h.call("unpackPly",u);return{packedArray:d,numSplats:f,extra:p}})}case"spz":return await Wc(async a=>{const{packedArray:l,numSplats:c,extra:u}=await a.call("decodeSpz",{fileBytes:i,splatEncoding:r});return{packedArray:l,numSplats:c,extra:u}});case"splat":return await Wc(async a=>{const{packedArray:l,numSplats:c}=await a.call("decodeAntiSplat",{fileBytes:i,splatEncoding:r});return{packedArray:l,numSplats:c}});case"ksplat":return await Wc(async a=>{const{packedArray:l,numSplats:c,extra:u}=await a.call("decodeKsplat",{fileBytes:i,splatEncoding:r});return{packedArray:l,numSplats:c,extra:u}});case"pcsogs":return await Wc(async a=>{const{packedArray:l,numSplats:c,extra:u}=await a.call("decodePcSogs",{fileBytes:i,extraFiles:e,splatEncoding:r});return{packedArray:l,numSplats:c,extra:u}});case"pcsogszip":return await Wc(async a=>{const{packedArray:l,numSplats:c,extra:u}=await a.call("decodePcSogsZip",{fileBytes:i,splatEncoding:r});return{packedArray:l,numSplats:c,extra:u}});default:throw new Error(`Unknown splat file type: ${o}`)}}var UW=`precision highp float;
precision highp int;
precision highp sampler2D;
precision highp usampler2D;
precision highp isampler2D;
precision highp sampler2DArray;
precision highp usampler2DArray;
precision highp isampler2DArray;
precision highp sampler3D;
precision highp usampler3D;
precision highp isampler3D;

#include <splatDefines>

uniform uint targetLayer;
uniform int targetBase;
uniform int targetCount;

out uvec4 target;

{{ GLOBALS }}

void produceSplat(int index) {
    {{ STATEMENTS }}
}

void main() {
    int targetIndex = int(targetLayer << SPLAT_TEX_LAYER_BITS) + int(uint(gl_FragCoord.y) << SPLAT_TEX_WIDTH_BITS) + int(gl_FragCoord.x);
    int index = targetIndex - targetBase;

    if ((index >= 0) && (index < targetCount)) {
        produceSplat(index);
    } else {
        target = uvec4(0u, 0u, 0u, 0u);
    }
}`;const dx={rgbMin:0,rgbMax:1,lnScaleMin:fl,lnScaleMax:pl,sh1Min:-1,sh1Max:1,sh2Min:-1,sh2Max:1,sh3Min:-1,sh3Max:1},ig=class Hr{constructor(e={}){this.maxSplats=0,this.numSplats=0,this.packedArray=null,this.isInitialized=!1,this.target=null,this.source=null,this.needsUpdate=!0,this.extra={},this.dyno=new oI({packedSplats:this}),this.dynoRgbMinMaxLnScaleMinMax=new ux({key:"rgbMinMaxLnScaleMinMax",value:new Vn(0,1,fl,pl),update:t=>{var s,r,i,o;return t.set(((s=this.splatEncoding)==null?void 0:s.rgbMin)??0,((r=this.splatEncoding)==null?void 0:r.rgbMax)??1,((i=this.splatEncoding)==null?void 0:i.lnScaleMin)??fl,((o=this.splatEncoding)==null?void 0:o.lnScaleMax)??pl),t}}),this.dynoSh1MinMax=new O2({key:"sh1MinMax",value:new En(-1,1),update:t=>{var s,r;return t.set(((s=this.splatEncoding)==null?void 0:s.sh1Min)??-1,((r=this.splatEncoding)==null?void 0:r.sh1Max)??1),t}}),this.dynoSh2MinMax=new O2({key:"sh2MinMax",value:new En(-1,1),update:t=>{var s,r;return t.set(((s=this.splatEncoding)==null?void 0:s.sh2Min)??-1,((r=this.splatEncoding)==null?void 0:r.sh2Max)??1),t}}),this.dynoSh3MinMax=new O2({key:"sh3MinMax",value:new En(-1,1),update:t=>{var s,r;return t.set(((s=this.splatEncoding)==null?void 0:s.sh3Min)??-1,((r=this.splatEncoding)==null?void 0:r.sh3Max)??1),t}}),this.initialized=Promise.resolve(this),this.reinitialize(e)}reinitialize(e){this.isInitialized=!1,this.extra={},this.splatEncoding=e.splatEncoding,e.url||e.fileBytes||e.construct?this.initialized=this.asyncInitialize(e).then(()=>(this.isInitialized=!0,this)):(this.initialize(e),this.isInitialized=!0,this.initialized=Promise.resolve(this))}initialize(e){e.packedArray?(this.packedArray=e.packedArray,this.maxSplats=Math.floor(this.packedArray.length/4),this.maxSplats=Math.floor(this.maxSplats/hs)*hs,this.numSplats=Math.min(this.maxSplats,e.numSplats??Number.POSITIVE_INFINITY)):(this.maxSplats=e.maxSplats??0,this.numSplats=0),this.extra=e.extra??{}}async asyncInitialize(e){const{url:t,fileBytes:s,construct:r}=e;if(t){const i=new $W;i.packedSplats=this,await i.loadAsync(t)}else if(s){const i=await xk({input:s,fileType:e.fileType,pathOrUrl:e.fileName??t,splatEncoding:e.splatEncoding??dx});this.initialize(i)}if(r){const i=r(this);i instanceof Promise&&await i}}dispose(){this.target&&(this.target.dispose(),this.target=null),this.source&&(this.source.dispose(),this.source=null)}ensureSplats(e){const t=e<=this.maxSplats?this.maxSplats:Math.max(e,2*this.maxSplats),s=this.packedArray?this.packedArray.length/4:0;if(!this.packedArray||t>s){this.maxSplats=Co(t).maxSplats;const r=new Uint32Array(this.maxSplats*4);this.packedArray&&r.set(this.packedArray),this.packedArray=r}return this.packedArray}ensureSplatsSh(e,t){let s,r;if(e===0)return this.ensureSplats(t);if(e===1)s=2,r="sh1";else if(e===2)s=4,r="sh2";else if(e===3)s=4,r="sh3";else throw new Error(`Invalid level: ${e}`);let i=this.extra[r]?this.extra[r].length/s:0;const o=t<=i?i:Math.max(t,2*i);if(!this.extra[r]||o>i){i=Co(o).maxSplats;const a=new Uint32Array(i*s);this.extra[r]&&a.set(this.extra[r]),this.extra[r]=a}return this.extra[r]}getSplat(e){if(!this.packedArray||e>=this.numSplats)throw new Error("Invalid index");return $E(this.packedArray,e,this.splatEncoding)}setSplat(e,t,s,r,i,o){const a=this.ensureSplats(e+1);FE(a,e,t.x,t.y,t.z,s.x,s.y,s.z,r.x,r.y,r.z,r.w,i,o.r,o.g,o.b),this.numSplats=Math.max(this.numSplats,e+1)}pushSplat(e,t,s,r,i){const o=this.ensureSplats(this.numSplats+1);FE(o,this.numSplats,e.x,e.y,e.z,t.x,t.y,t.z,s.x,s.y,s.z,s.w,r,i.r,i.g,i.b),++this.numSplats}forEachSplat(e){if(!(!this.packedArray||!this.numSplats))for(let t=0;t<this.numSplats;++t){const s=$E(this.packedArray,t,this.splatEncoding);e(t,s.center,s.scales,s.quaternion,s.opacity,s.color)}}ensureGenerate(e){if(this.target&&(e??1)<=this.maxSplats)return!1;this.dispose();const t=Co(e??1),{width:s,height:r,depth:i}=t;return this.maxSplats=t.maxSplats,this.target=new gB(s,r,i,{depthBuffer:!1,stencilBuffer:!1,generateMipmaps:!1,magFilter:Dr,minFilter:Dr}),this.target.texture.format=ll,this.target.texture.type=Oi,this.target.texture.internalFormat="RGBA32UI",this.target.scissorTest=!0,!0}generateMapping(e){let t=0;const s=e.map(r=>{const i=t,o=Math.ceil(r/hs)*hs;return t+=o,{base:i,count:r}});return{maxSplats:t,mapping:s}}getTexture(){return this.target?this.target.texture:this.source||this.packedArray?this.maybeUpdateSource():Hr.getEmpty()}maybeUpdateSource(){if(!this.packedArray)throw new Error("No packed splats");if(this.needsUpdate||!this.source){if(this.needsUpdate=!1,this.source){const{width:e,height:t,depth:s}=this.source.image;this.maxSplats!==e*t*s&&(this.source.dispose(),this.source=null)}if(this.source)this.packedArray.buffer!==this.source.image.data.buffer&&(this.source.image.data=new Uint8Array(this.packedArray.buffer));else{const{width:e,height:t,depth:s}=Co(this.maxSplats);this.source=new Ca(this.packedArray,e,t,s),this.source.format=ll,this.source.type=Oi,this.source.internalFormat="RGBA32UI",this.source.needsUpdate=!0}this.source.needsUpdate=!0}return this.source}static getEmpty(){if(!Hr.emptySource){const{width:e,height:t,depth:s,maxSplats:r}=Co(1),i=new Uint32Array(r*4);Hr.emptySource=new Ca(i,e,t,s),Hr.emptySource.format=ll,Hr.emptySource.type=Oi,Hr.emptySource.internalFormat="RGBA32UI",Hr.emptySource.needsUpdate=!0}return Hr.emptySource}prepareProgramMaterial(e){let t=Hr.generatorProgram.get(e);if(!t){const r=ml({index:"int"},{output:"uvec4"},({index:i})=>{e.inputs.index=i;const o=e.outputs.gsplat;return{output:c5(o,this.dynoRgbMinMaxLnScaleMinMax)}});Hr.programTemplate||(Hr.programTemplate=new nk(UW)),t=new tk({graph:r,inputs:{index:"index"},outputs:{output:"target"},template:Hr.programTemplate}),Object.assign(t.uniforms,{targetLayer:{value:0},targetBase:{value:0},targetCount:{value:0}}),Hr.generatorProgram.set(e,t)}const s=t.prepareMaterial();return Hr.fullScreenQuad.material=s,{program:t,material:s}}saveRenderState(e){return{xrEnabled:e.xr.enabled,autoClear:e.autoClear}}resetRenderState(e,t){e.setRenderTarget(null),e.xr.enabled=t.xrEnabled,e.autoClear=t.autoClear}generate({generator:e,base:t,count:s,renderer:r}){if(!this.target)throw new Error("Target must be initialized with ensureSplats");if(t+s>this.maxSplats)throw new Error("Base + count exceeds maxSplats");const{program:i,material:o}=this.prepareProgramMaterial(e);i.update();const a=this.saveRenderState(r),l=Math.ceil((t+s)/hs)*hs,c=hs*ou;for(o.uniforms.targetBase.value=t,o.uniforms.targetCount.value=s;t<l;){const u=Math.floor(t/c);o.uniforms.targetLayer.value=u;const h=u*c,d=Math.floor((t-h)/hs),f=Math.min(ou,Math.ceil((l-h)/hs));this.target.scissor.set(0,d,hs,f-d),r.setRenderTarget(this.target,u),r.xr.enabled=!1,r.autoClear=!1,Hr.fullScreenQuad.render(r),t+=hs*(f-d)}return this.resetRenderState(r,a),{nextBase:l}}};ig.emptySource=null;ig.programTemplate=null;ig.generatorProgram=new Map;ig.fullScreenQuad=new LB(new ZC({visible:!1}));let xu=ig;class oI extends Xo{constructor({packedSplats:e}={}){super({key:"packedSplats",type:cx,globals:()=>[tI],value:{texture:xu.getEmpty(),numSplats:0,rgbMinMaxLnScaleMinMax:new Vn(0,1,fl,pl)},update:t=>{var s,r,i,o,a,l,c,u,h,d;return t.texture=((s=this.packedSplats)==null?void 0:s.getTexture())??xu.getEmpty(),t.numSplats=((r=this.packedSplats)==null?void 0:r.numSplats)??0,t.rgbMinMaxLnScaleMinMax.set(((o=(i=this.packedSplats)==null?void 0:i.splatEncoding)==null?void 0:o.rgbMin)??0,((l=(a=this.packedSplats)==null?void 0:a.splatEncoding)==null?void 0:l.rgbMax)??1,((u=(c=this.packedSplats)==null?void 0:c.splatEncoding)==null?void 0:u.lnScaleMin)??fl,((d=(h=this.packedSplats)==null?void 0:h.splatEncoding)==null?void 0:d.lnScaleMax)??pl),t}}),this.packedSplats=e}}class Mv extends _O{constructor(e,t){super(),this.ordering=e,this.setAttribute("position",new io(zW,3)),this.setIndex(new io(GW,1)),this._maxInstanceCount=e.length,this.instanceCount=t,this.attribute=new mO(e,1,!1,1),this.attribute.setUsage(E4),this.setAttribute("splatIndex",this.attribute)}update(e,t){this.ordering=e,this.attribute.array=e,this.instanceCount=t,this.attribute.addUpdateRange(0,t),this.attribute.needsUpdate=!0}}const zW=new Float32Array([-1,-1,0,1,-1,0,1,1,0,-1,1,0]),GW=new Uint16Array([0,1,2,0,2,3]),aI=class nm{constructor(e){if(this.lastTime=null,this.encodeLinear=!1,this.superXY=1,this.display=null,this.sorting=null,this.pending=null,this.sortingCheck=!1,this.readback16=new Uint16Array(0),this.readback32=new Uint32Array(0),this.spark=e.spark,this.camera=e.camera,this.viewToWorld=e.viewToWorld??new is,e.target){const{width:t,height:s,doubleBuffer:r}=e.target,i=Math.max(1,Math.min(4,e.target.superXY??1));if(this.superXY=i,t*i>8192||s*i>8192)throw new Error("Target size too large");this.target=new _a(t*i,s*i,{format:Er,type:Ui,colorSpace:jr}),r&&(this.back=new _a(t*i,s*i,{format:Er,type:Ui,colorSpace:jr})),this.encodeLinear=!0}this.onTextureUpdated=e.onTextureUpdated,this.sortRadial=e.sortRadial??!0,this.sortDistance=e.sortDistance,this.sortCoorient=e.sortCoorient,this.depthBias=e.depthBias,this.sort360=e.sort360,this.sort32=e.sort32,this.stochastic=e.stochastic??!1,this.orderingFreelist=new A5({allocate:t=>new Uint32Array(t),valid:(t,s)=>t.length===s}),this.autoUpdate=!1,this.setAutoUpdate(e.autoUpdate??!1)}dispose(){var e;this.setAutoUpdate(!1),this.target&&(this.target.dispose(),this.target=void 0),this.back&&(this.back.dispose(),this.back=void 0),this.display&&(this.spark.releaseAccumulator(this.display.accumulator),this.display.geometry.dispose(),this.display=null),(e=this.pending)!=null&&e.accumulator&&(this.spark.releaseAccumulator(this.pending.accumulator),this.pending=null)}setAutoUpdate(e){!this.autoUpdate&&e?this.spark.autoViewpoints.push(this):this.autoUpdate&&!e&&(this.spark.autoViewpoints=this.spark.autoViewpoints.filter(t=>t!==this)),this.autoUpdate=e}async prepare({scene:e,camera:t,viewToWorld:s,update:r,forceOrigin:i}){var o;for(s?this.viewToWorld=s:(this.camera=t??this.camera,this.camera&&(this.camera.updateMatrixWorld(),this.viewToWorld=this.camera.matrixWorld.clone()));r??!0;){const l=i?this.viewToWorld:void 0;if(this.spark.updateInternal({scene:e,originToWorld:l}))break;await new Promise(u=>setTimeout(u,10))}const a=this.spark.active;a!==((o=this.display)==null?void 0:o.accumulator)&&(this.spark.active.refCount+=1),await this.sortUpdate({accumulator:a,viewToWorld:this.viewToWorld})}renderTarget({scene:e,camera:t}){var s;const r=this.back??this.target;if(!r)throw new Error("Must initialize SparkViewpoint with target");if(t=t??this.camera,!t)throw new Error("Must provide camera");if(t instanceof Fi){const i=new Fi().copy(t,!1);i.aspect=r.width/r.height,i.updateProjectionMatrix(),t=i}this.viewToWorld=t.matrixWorld.clone();try{this.spark.renderer.setRenderTarget(r),this.spark.prepareViewpoint(this),this.spark.renderer.render(e,t)}finally{this.spark.prepareViewpoint(this.spark.defaultView),this.spark.renderer.setRenderTarget(null)}r!==this.target&&([this.target,this.back]=[this.back,this.target]),(s=this.onTextureUpdated)==null||s.call(this,r.texture)}async readTarget(){if(!this.target)throw new Error("Must initialize SparkViewpoint with target");const{width:e,height:t}=this.target,s=e*t*4;(!this.superPixels||this.superPixels.length<s)&&(this.superPixels=new Uint8Array(s)),await this.spark.renderer.readRenderTargetPixelsAsync(this.target,0,0,e,t,this.superPixels);const{superXY:r}=this;if(r===1)return this.superPixels;const i=e/r,o=t/r,a=i*o*4;(!this.pixels||this.pixels.length<a)&&(this.pixels=new Uint8Array(a));const{superPixels:l,pixels:c}=this,u=r*r;for(let h=0;h<o;h++){const d=h*i;for(let f=0;f<i;f++){const p=f*r;let A=0,m=0,g=0,x=0;for(let b=0;b<r;b++){const w=(h*r+b)*this.target.width;for(let _=0;_<r;_++){const N=(w+p+_)*4;A+=l[N],m+=l[N+1],g+=l[N+2],x+=l[N+3]}}const v=(d+f)*4;c[v]=A/u,c[v+1]=m/u,c[v+2]=g/u,c[v+3]=x/u}}return c}async prepareRenderPixels({scene:e,camera:t,viewToWorld:s,update:r,forceOrigin:i}){return await this.prepare({scene:e,camera:t,viewToWorld:s,update:r,forceOrigin:i}),this.renderTarget({scene:e,camera:t}),this.readTarget()}autoPoll({accumulator:e}){var t,s,r,i;this.camera&&(this.camera.updateMatrixWorld(),this.viewToWorld=this.camera.matrixWorld.clone());let o=!1,a=!1;if(!this.display)o=!0;else if(e){o=!0;const{mappingVersion:c}=this.display.accumulator;e.mappingVersion===c&&(this.spark.releaseAccumulator(this.display.accumulator),this.display.accumulator=e,a=!0)}const l=((t=this.sorting)==null?void 0:t.viewToWorld)??((s=this.display)==null?void 0:s.viewToWorld);l&&!Tv({matrix1:this.viewToWorld,matrix2:l,maxDistance:this.sortDistance??.01,minCoorient:this.sortCoorient??this.sortRadial?.99:.999})&&(o=!0),o&&(e&&(e.refCount+=1),e&&((r=this.pending)!=null&&r.accumulator)&&this.pending.accumulator!==((i=this.display)==null?void 0:i.accumulator)&&this.spark.releaseAccumulator(this.pending.accumulator),this.pending={accumulator:e,viewToWorld:this.viewToWorld,displayed:a},this.driveSort())}async driveSort(){for(var e;;){if(this.sorting||!this.pending)return;const{viewToWorld:t,displayed:s}=this.pending;let r=this.pending.accumulator??((e=this.display)==null?void 0:e.accumulator);if(r||(r=this.spark.active,r.refCount+=1),this.pending=null,!r)throw new Error("No accumulator to sort");this.sorting={viewToWorld:t},await this.sortUpdate({accumulator:r,viewToWorld:t,displayed:s}),this.sorting=null}}async sortUpdate({accumulator:e,viewToWorld:t,displayed:s=!1}){if(this.sortingCheck)throw new Error("Only one sort at a time");this.sortingCheck=!0,e=e??this.spark.active;const{numSplats:r,maxSplats:i}=e.splats;let o=0,a=this.orderingFreelist.alloc(i);if(this.stochastic){o=r;for(let l=0;l<r;++l)a[l]=l}else if(r>0){const{reader:l,doubleSortReader:c,sort32Reader:u,dynoSortRadial:h,dynoOrigin:d,dynoDirection:f,dynoDepthBias:p,dynoSort360:A,dynoSplats:m}=nm.makeSorter(),g=this.sort32??!1;let x;if(g)this.readback32=l.ensureBuffer(i,this.readback32),x=this.readback32;else{const M=Math.ceil(i/2);this.readback16=l.ensureBuffer(M,this.readback16),x=this.readback16}const v=e.toWorld.clone().invert(),b=t.clone().premultiply(v);h.value=this.sort360?!0:this.sortRadial,d.value.set(0,0,0).applyMatrix4(b),f.value.set(0,0,-1).applyMatrix4(b).sub(d.value).normalize(),p.value=this.depthBias??1,A.value=this.sort360??!1,m.packedSplats=e.splats;const w=g?u:c,_=g?r:Math.ceil(r/2);await l.renderReadback({renderer:this.spark.renderer,reader:w,count:_,readback:x});const N=await Wc(async M=>{const T=g?"sort32Splats":"sortDoubleSplats";return M.call(T,{maxSplats:i,numSplats:r,readback:x,ordering:a})});g?this.readback32=N.readback:this.readback16=N.readback,a=N.ordering,o=N.activeSplats}this.updateDisplay({accumulator:e,viewToWorld:t,ordering:a,activeSplats:o,displayed:s}),this.sortingCheck=!1}updateDisplay({accumulator:e,viewToWorld:t,ordering:s,activeSplats:r,displayed:i=!1}){if(!this.display)this.display={accumulator:e,viewToWorld:t,geometry:new Mv(s,r)};else{!i&&e!==this.display.accumulator&&(this.spark.releaseAccumulator(this.display.accumulator),this.display.accumulator=e),this.display.viewToWorld=t;const o=this.display.geometry.ordering;o.length===s.length?this.display.geometry.update(s,r):(this.display.geometry.dispose(),this.display.geometry=new Mv(s,r)),this.orderingFreelist.free(o)}this.spark.viewpoint===this&&this.spark.prepareViewpoint(this)}static makeSorter(){if(!nm.dynos){const e=new DE({value:!0}),t=new y0({value:new Ae}),s=new y0({value:new Ae}),r=new Bm({value:1}),i=new DE({value:!1}),o=new oI,a=new rk,l=ml({index:"int"},{rgba8:"vec4"},({index:u})=>{if(!u)throw new Error("No index");const h={sortRadial:e,sortOrigin:t,sortDirection:s,sortDepthBias:r,sort360:i},d=tm(u,gm("int",2)),f=Am(o,d),p=G2({gsplat:f,...h}),A=Am(o,Kc(d,gm("int",1))),m=G2({gsplat:A,...h}),g=H5({vectorType:"vec2",x:p,y:m});return{rgba8:OE(Q5(g))}}),c=ml({index:"int"},{rgba8:"vec4"},({index:u})=>{if(!u)throw new Error("No index");const h={sortRadial:e,sortOrigin:t,sortDirection:s,sortDepthBias:r,sort360:i},d=Am(o,u),f=G2({gsplat:d,...h});return{rgba8:OE(O5(f))}});nm.dynos={dynoSortRadial:e,dynoOrigin:t,dynoDirection:s,dynoDepthBias:r,dynoSort360:i,dynoSplats:o,reader:a,doubleSortReader:l,sort32Reader:c}}return nm.dynos}};aI.EMPTY_TEXTURE=new _r;aI.dynos=null;let VE=aI;const VW=Yi(`
  float computeSort(Gsplat gsplat, bool sortRadial, vec3 sortOrigin, vec3 sortDirection, float sortDepthBias, bool sort360) {
    if (!isGsplatActive(gsplat.flags)) {
      return INFINITY;
    }

    vec3 center = gsplat.center - sortOrigin;
    float biasedDepth = dot(center, sortDirection) + sortDepthBias;
    if (!sort360 && (biasedDepth <= 0.0)) {
      return INFINITY;
    }

    return sortRadial ? length(center) : biasedDepth;
  }
`);function G2({gsplat:n,sortRadial:e,sortOrigin:t,sortDirection:s,sortDepthBias:r,sort360:i}){return ox({inTypes:{gsplat:gr,sortRadial:"bool",sortOrigin:"vec3",sortDirection:"vec3",sortDepthBias:"float",sort360:"bool"},outTypes:{metric:"float"},globals:()=>[La,VW],inputs:{gsplat:n,sortRadial:e,sortOrigin:t,sortDirection:s,sortDepthBias:r,sort360:i},statements:({inputs:o,outputs:a})=>{const{gsplat:l,sortRadial:c,sortOrigin:u,sortDirection:h,sortDepthBias:d,sort360:f}=o;return Pa(`
        ${a.metric} = computeSort(${l}, ${c}, ${u}, ${h}, ${d}, ${f});
      `)}}).outputs.metric}class V2{constructor(){this.splats=new xu,this.toWorld=new is,this.mapping=[],this.refCount=0,this.splatsVersion=-1,this.mappingVersion=-1}ensureGenerate(e){this.splats.ensureGenerate(e)&&(this.mapping=[])}generateSplats({renderer:e,modifier:t,generators:s,forceUpdate:r,originToWorld:i}){const o=this.mapping.reduce((c,u)=>(c.set(u.node,u),c),new Map);let a=0,l=0;for(const{node:c,generator:u,version:h,base:d,count:f}of s){const p=o.get(c);if((r||u!==p?.generator||h!==p?.version||d!==p?.base||f!==p?.count)&&u&&f>0){const A=t.apply(u);try{this.splats.generate({generator:A,base:d,count:f,renderer:e})}catch(m){c.generator=void 0,c.generatorError=m}a+=1}l=Math.max(l,d+f)}return this.splats.numSplats=l,this.toWorld=i,this.mapping=s,a!==0}hasCorrespondence(e){return this.mapping.length!==e.mapping.length?!1:this.mapping.every(({node:t,base:s,count:r},i)=>{const{node:o,base:a,count:l}=e.mapping[i];return t===o&&s===a&&r===l})}}var WW=`const float LN_SCALE_MIN = -12.0;
const float LN_SCALE_MAX = 9.0;

const uint SPLAT_TEX_WIDTH_BITS = 11u;
const uint SPLAT_TEX_HEIGHT_BITS = 11u;
const uint SPLAT_TEX_DEPTH_BITS = 11u;
const uint SPLAT_TEX_LAYER_BITS = SPLAT_TEX_WIDTH_BITS + SPLAT_TEX_HEIGHT_BITS;

const uint SPLAT_TEX_WIDTH = 1u << SPLAT_TEX_WIDTH_BITS;
const uint SPLAT_TEX_HEIGHT = 1u << SPLAT_TEX_HEIGHT_BITS;
const uint SPLAT_TEX_DEPTH = 1u << SPLAT_TEX_DEPTH_BITS;

const uint SPLAT_TEX_WIDTH_MASK = SPLAT_TEX_WIDTH - 1u;
const uint SPLAT_TEX_HEIGHT_MASK = SPLAT_TEX_HEIGHT - 1u;
const uint SPLAT_TEX_DEPTH_MASK = SPLAT_TEX_DEPTH - 1u;

const uint F16_INF = 0x7c00u;
const float PI = 3.1415926535897932384626433832795;

const float INFINITY = 1.0 / 0.0;
const float NEG_INFINITY = -INFINITY;

float sqr(float x) {
    return x * x;
}

float pow4(float x) {
    float x2 = x * x;
    return x2 * x2;
}

float pow8(float x) {
    float x4 = pow4(x);
    return x4 * x4;
}

vec3 srgbToLinear(vec3 rgb) {
    return pow(rgb, vec3(2.2));
}

vec3 linearToSrgb(vec3 rgb) {
    return pow(rgb, vec3(1.0 / 2.2));
}

uint encodeQuatOctXy88R8(vec4 q) {
    
    if (q.w < 0.0) {
        q = -q;
    }
    
    float theta = 2.0 * acos(q.w);
    float halfTheta = theta * 0.5;
    float s = sin(halfTheta);
    
    vec3 axis = (abs(s) < 1e-6) ? vec3(1.0, 0.0, 0.0) : q.xyz / s;
    
    
    
    float sum = abs(axis.x) + abs(axis.y) + abs(axis.z);
    vec2 p = vec2(axis.x, axis.y) / sum;
    
    if (axis.z < 0.0) {
        float oldPx = p.x;
        p.x = (1.0 - abs(p.y)) * (p.x >= 0.0 ? 1.0 : -1.0);
        p.y = (1.0 - abs(oldPx)) * (p.y >= 0.0 ? 1.0 : -1.0);
    }
    
    float u_f = p.x * 0.5 + 0.5;
    float v_f = p.y * 0.5 + 0.5;
    
    uint quantU = uint(clamp(round(u_f * 255.0), 0.0, 255.0));
    uint quantV = uint(clamp(round(v_f * 255.0), 0.0, 255.0));
    
    
    
    uint angleInt = uint(clamp(round((theta / 3.14159265359) * 255.0), 0.0, 255.0));
    
    
    return (angleInt << 16u) | (quantV << 8u) | quantU;
}

vec4 decodeQuatOctXy88R8(uint encoded) {
    
    uint quantU = encoded & uint(0xFFu);               
    uint quantV = (encoded >> 8u) & uint(0xFFu);         
    uint angleInt = encoded >> 16u;                      

    
    float u_f = float(quantU) / 255.0;
    float v_f = float(quantV) / 255.0;
    vec2 f = vec2(u_f * 2.0 - 1.0, v_f * 2.0 - 1.0);

    vec3 axis = vec3(f.xy, 1.0 - abs(f.x) - abs(f.y));
    float t = max(-axis.z, 0.0);
    axis.x += (axis.x >= 0.0) ? -t : t;
    axis.y += (axis.y >= 0.0) ? -t : t;
    axis = normalize(axis);
    
    
    float theta = (float(angleInt) / 255.0) * 3.14159265359;
    float halfTheta = theta * 0.5;
    float s = sin(halfTheta);
    float w = cos(halfTheta);
    
    return vec4(axis * s, w);
}

    

    

    

    

    

    

    

    

    

    

uvec4 packSplatEncoding(
    vec3 center, vec3 scales, vec4 quaternion, vec4 rgba, vec4 rgbMinMaxLnScaleMinMax
) {
    float rgbMin = rgbMinMaxLnScaleMinMax.x;
    float rgbMax = rgbMinMaxLnScaleMinMax.y;
    vec3 encRgb = (rgba.rgb - vec3(rgbMin)) / (rgbMax - rgbMin);
    uvec4 uRgba = uvec4(round(clamp(vec4(encRgb, rgba.a) * 255.0, 0.0, 255.0)));

    uint uQuat = encodeQuatOctXy88R8(quaternion);
    
    
    uvec3 uQuat3 = uvec3(uQuat & 0xffu, (uQuat >> 8u) & 0xffu, (uQuat >> 16u) & 0xffu);

    
    float lnScaleMin = rgbMinMaxLnScaleMinMax.z;
    float lnScaleMax = rgbMinMaxLnScaleMinMax.w;
    float lnScaleScale = 254.0 / (lnScaleMax - lnScaleMin);
    uvec3 uScales = uvec3(
        (scales.x == 0.0) ? 0u : uint(round(clamp((log(scales.x) - lnScaleMin) * lnScaleScale, 0.0, 254.0))) + 1u,
        (scales.y == 0.0) ? 0u : uint(round(clamp((log(scales.y) - lnScaleMin) * lnScaleScale, 0.0, 254.0))) + 1u,
        (scales.z == 0.0) ? 0u : uint(round(clamp((log(scales.z) - lnScaleMin) * lnScaleScale, 0.0, 254.0))) + 1u
    );

    
    uint word0 = uRgba.r | (uRgba.g << 8u) | (uRgba.b << 16u) | (uRgba.a << 24u);
    uint word1 = packHalf2x16(center.xy);
    uint word2 = packHalf2x16(vec2(center.z, 0.0)) | (uQuat3.x << 16u) | (uQuat3.y << 24u);
    uint word3 = uScales.x | (uScales.y << 8u) | (uScales.z << 16u) | (uQuat3.z << 24u);
    return uvec4(word0, word1, word2, word3);
}

uvec4 packSplat(vec3 center, vec3 scales, vec4 quaternion, vec4 rgba) {
    return packSplatEncoding(center, scales, quaternion, rgba, vec4(0.0, 1.0, LN_SCALE_MIN, LN_SCALE_MAX));
}

void unpackSplatEncoding(uvec4 packed, out vec3 center, out vec3 scales, out vec4 quaternion, out vec4 rgba, vec4 rgbMinMaxLnScaleMinMax) {
    uint word0 = packed.x, word1 = packed.y, word2 = packed.z, word3 = packed.w;

    uvec4 uRgba = uvec4(word0 & 0xffu, (word0 >> 8u) & 0xffu, (word0 >> 16u) & 0xffu, (word0 >> 24u) & 0xffu);
    float rgbMin = rgbMinMaxLnScaleMinMax.x;
    float rgbMax = rgbMinMaxLnScaleMinMax.y;
    rgba = (vec4(uRgba) / 255.0);
    rgba.rgb = rgba.rgb * (rgbMax - rgbMin) + rgbMin;

    center = vec4(
        unpackHalf2x16(word1),
        unpackHalf2x16(word2 & 0xffffu)
    ).xyz;

    uvec3 uScales = uvec3(word3 & 0xffu, (word3 >> 8u) & 0xffu, (word3 >> 16u) & 0xffu);
    float lnScaleMin = rgbMinMaxLnScaleMinMax.z;
    float lnScaleMax = rgbMinMaxLnScaleMinMax.w;
    float lnScaleScale = (lnScaleMax - lnScaleMin) / 254.0;
    scales = vec3(
        (uScales.x == 0u) ? 0.0 : exp(lnScaleMin + float(uScales.x - 1u) * lnScaleScale),
        (uScales.y == 0u) ? 0.0 : exp(lnScaleMin + float(uScales.y - 1u) * lnScaleScale),
        (uScales.z == 0u) ? 0.0 : exp(lnScaleMin + float(uScales.z - 1u) * lnScaleScale)
    );

    uint uQuat = ((word2 >> 16u) & 0xFFFFu) | ((word3 >> 8u) & 0xFF0000u);
    quaternion = decodeQuatOctXy88R8(uQuat);
    
    
}

void unpackSplat(uvec4 packed, out vec3 center, out vec3 scales, out vec4 quaternion, out vec4 rgba) {
    unpackSplatEncoding(packed, center, scales, quaternion, rgba, vec4(0.0, 1.0, LN_SCALE_MIN, LN_SCALE_MAX));
}

vec3 quatVec(vec4 q, vec3 v) {
    
    vec3 t = 2.0 * cross(q.xyz, v);
    return v + q.w * t + cross(q.xyz, t);
}

vec4 quatQuat(vec4 q1, vec4 q2) {
    return vec4(
        q1.w * q2.x + q1.x * q2.w + q1.y * q2.z - q1.z * q2.y,
        q1.w * q2.y - q1.x * q2.z + q1.y * q2.w + q1.z * q2.x,
        q1.w * q2.z + q1.x * q2.y - q1.y * q2.x + q1.z * q2.w,
        q1.w * q2.w - q1.x * q2.x - q1.y * q2.y - q1.z * q2.z
    );
}

mat3 scaleQuaternionToMatrix(vec3 s, vec4 q) {
    
    return mat3(
        s.x * (1.0 - 2.0 * (q.y * q.y + q.z * q.z)),
        s.x * (2.0 * (q.x * q.y + q.w * q.z)),
        s.x * (2.0 * (q.x * q.z - q.w * q.y)),
        s.y * (2.0 * (q.x * q.y - q.w * q.z)),
        s.y * (1.0 - 2.0 * (q.x * q.x + q.z * q.z)),
        s.y * (2.0 * (q.y * q.z + q.w * q.x)),
        s.z * (2.0 * (q.x * q.z + q.w * q.y)),
        s.z * (2.0 * (q.y * q.z - q.w * q.x)),
        s.z * (1.0 - 2.0 * (q.x * q.x + q.y * q.y))
    );
}

vec4 slerp(vec4 q1, vec4 q2, float t) {
    
    float cosHalfTheta = dot(q1, q2);

    
    if (abs(cosHalfTheta) >= 0.999) {
        return q1;
    }
    
    
    
    if (cosHalfTheta < 0.0) {
        q2 = -q2;
        cosHalfTheta = -cosHalfTheta;
    }

    
    float halfTheta = acos(cosHalfTheta);
    float sinHalfTheta = sqrt(1.0 - cosHalfTheta * cosHalfTheta);

    
    float ratioA = sin((1.0 - t) * halfTheta) / sinHalfTheta;
    float ratioB = sin(t * halfTheta) / sinHalfTheta;

    
    return q1 * ratioA + q2 * ratioB;
}

ivec3 splatTexCoord(int index) {
    uint x = uint(index) & SPLAT_TEX_WIDTH_MASK;
    uint y = (uint(index) >> SPLAT_TEX_WIDTH_BITS) & SPLAT_TEX_HEIGHT_MASK;
    uint z = uint(index) >> SPLAT_TEX_LAYER_BITS;
    return ivec3(x, y, z);
}`,HW=`precision highp float;
precision highp int;

#include <splatDefines>

uniform float near;
uniform float far;
uniform bool encodeLinear;
uniform float time;
uniform bool debugFlag;
uniform float maxStdDev;
uniform float minAlpha;
uniform bool stochastic;
uniform bool disableFalloff;
uniform float falloff;

uniform bool splatTexEnable;
uniform sampler3D splatTexture;
uniform mat2 splatTexMul;
uniform vec2 splatTexAdd;
uniform float splatTexNear;
uniform float splatTexFar;
uniform float splatTexMid;

out vec4 fragColor;

in vec4 vRgba;
in vec2 vSplatUv;
in vec3 vNdc;
flat in uint vSplatIndex;

void main() {
    vec4 rgba = vRgba;

    float z = dot(vSplatUv, vSplatUv);
    if (!splatTexEnable) {
        if (z > (maxStdDev * maxStdDev)) {
            discard;
        }
    } else {
        vec2 uv = splatTexMul * vSplatUv + splatTexAdd;
        float ndcZ = vNdc.z;
        float depth = (2.0 * near * far) / (far + near - ndcZ * (far - near));
        float clampedFar = max(splatTexFar, splatTexNear);
        float clampedDepth = clamp(depth, splatTexNear, clampedFar);
        float logDepth = log2(clampedDepth + 1.0);
        float logNear = log2(splatTexNear + 1.0);
        float logFar = log2(clampedFar + 1.0);

        float texZ;
        if (splatTexMid > 0.0) {
            float clampedMid = clamp(splatTexMid, splatTexNear, clampedFar);
            float logMid = log2(clampedMid + 1.0);
            texZ = (clampedDepth <= clampedMid) ?
                (0.5 * ((logDepth - logNear) / (logMid - logNear))) :
                (0.5 * ((logDepth - logMid) / (logFar - logMid)) + 0.5);
        } else {
            texZ = (logDepth - logNear) / (logFar - logNear);
        }

        vec4 modulate = texture(splatTexture, vec3(uv, 1.0 - texZ));
        rgba *= modulate;
    }

    rgba.a *= mix(1.0, exp(-0.5 * z), falloff);

    if (rgba.a < minAlpha) {
        discard;
    }
    if (encodeLinear) {
        rgba.rgb = srgbToLinear(rgba.rgb);
    }

    if (stochastic) {
        const bool STEADY = false;
        uint uTime = STEADY ? 0u : floatBitsToUint(time);
        uvec2 coord = uvec2(gl_FragCoord.xy);
        uint state = uTime + 0x9e3779b9u * coord.x + 0x85ebca6bu * coord.y + 0xc2b2ae35u * uint(vSplatIndex);
        state = state * 747796405u + 2891336453u;
        uint hash = ((state >> ((state >> 28u) + 4u)) ^ state) * 277803737u;
        hash = (hash >> 22u) ^ hash;
        float rand = float(hash) / 4294967296.0;
        if (rand < rgba.a) {
            fragColor = vec4(rgba.rgb, 1.0);
        } else {
            discard;
        }
    } else {
        #ifdef PREMULTIPLIED_ALPHA
            fragColor = vec4(rgba.rgb * rgba.a, rgba.a);
        #else
            fragColor = rgba;
        #endif
    }
}`,qW=`precision highp float;
precision highp int;
precision highp usampler2DArray;

#include <splatDefines>

attribute uint splatIndex;

out vec4 vRgba;
out vec2 vSplatUv;
out vec3 vNdc;
flat out uint vSplatIndex;

uniform vec2 renderSize;
uniform uint numSplats;
uniform vec4 renderToViewQuat;
uniform vec3 renderToViewPos;
uniform float maxStdDev;
uniform float maxPixelRadius;
uniform float time;
uniform float deltaTime;
uniform bool debugFlag;
uniform float minAlpha;
uniform bool stochastic;
uniform bool enable2DGS;
uniform float blurAmount;
uniform float preBlurAmount;
uniform float focalDistance;
uniform float apertureAngle;
uniform float clipXY;
uniform float focalAdjustment;

uniform usampler2DArray packedSplats;
uniform vec4 rgbMinMaxLnScaleMinMax;

void main() {
    
    gl_Position = vec4(0.0, 0.0, 2.0, 1.0);

    if (uint(gl_InstanceID) >= numSplats) {
        return;
    }

    ivec3 texCoord;
    if (stochastic) {
        texCoord = ivec3(
            uint(gl_InstanceID) & SPLAT_TEX_WIDTH_MASK,
            (uint(gl_InstanceID) >> SPLAT_TEX_WIDTH_BITS) & SPLAT_TEX_HEIGHT_MASK,
            (uint(gl_InstanceID) >> SPLAT_TEX_LAYER_BITS)
        );
    } else {
        if (splatIndex == 0xffffffffu) {
            
            return;
        }
        texCoord = ivec3(
            splatIndex & SPLAT_TEX_WIDTH_MASK,
            (splatIndex >> SPLAT_TEX_WIDTH_BITS) & SPLAT_TEX_HEIGHT_MASK,
            splatIndex >> SPLAT_TEX_LAYER_BITS
        );
    }
    uvec4 packed = texelFetch(packedSplats, texCoord, 0);

    vec3 center, scales;
    vec4 quaternion, rgba;
    unpackSplatEncoding(packed, center, scales, quaternion, rgba, rgbMinMaxLnScaleMinMax);

    if (rgba.a < minAlpha) {
        return;
    }
    bvec3 zeroScales = equal(scales, vec3(0.0));
    if (all(zeroScales)) {
        return;
    }

    
    vec3 viewCenter = quatVec(renderToViewQuat, center) + renderToViewPos;

    
    if (viewCenter.z >= 0.0) {
        return;
    }

    
    vec4 clipCenter = projectionMatrix * vec4(viewCenter, 1.0);

    
    if (abs(clipCenter.z) >= clipCenter.w) {
        return;
    }

    
    float clip = clipXY * clipCenter.w;
    if (abs(clipCenter.x) > clip || abs(clipCenter.y) > clip) {
        return;
    }

    
    vSplatIndex = splatIndex;

    
    vec4 viewQuaternion = quatQuat(renderToViewQuat, quaternion);

    if (enable2DGS && any(zeroScales)) {
        vRgba = rgba;
        vSplatUv = position.xy * maxStdDev;

        vec3 offset;
        if (zeroScales.z) {
            offset = vec3(vSplatUv.xy * scales.xy, 0.0);
        } else if (zeroScales.y) {
            offset = vec3(vSplatUv.x * scales.x, 0.0, vSplatUv.y * scales.z);
        } else {
            offset = vec3(0.0, vSplatUv.xy * scales.yz);
        }

        vec3 viewPos = viewCenter + quatVec(viewQuaternion, offset);
        gl_Position = projectionMatrix * vec4(viewPos, 1.0);
        vNdc = gl_Position.xyz / gl_Position.w;
        return;
    }

    
    vec3 ndcCenter = clipCenter.xyz / clipCenter.w;

    
    mat3 RS = scaleQuaternionToMatrix(scales, viewQuaternion);
    mat3 cov3D = RS * transpose(RS);

    
    vec2 scaledRenderSize = renderSize * focalAdjustment;
    vec2 focal = 0.5 * scaledRenderSize * vec2(projectionMatrix[0][0], projectionMatrix[1][1]);

    mat3 J;
    if(isOrthographic) {
        J = mat3(
            focal.x, 0.0, 0.0,
            0.0, focal.y, 0.0,
            0.0, 0.0, 0.0
        );
    } else {
        float invZ = 1.0 / viewCenter.z;
        vec2 J1 = focal * invZ;
        vec2 J2 = -(J1 * viewCenter.xy) * invZ;
        J = mat3(
            J1.x, 0.0, J2.x,
            0.0, J1.y, J2.y,
            0.0, 0.0, 0.0
        );
    }

    
    
    
    
    
    
    
    mat3 cov2D = transpose(J) * cov3D * J;
    float a = cov2D[0][0];
    float d = cov2D[1][1];
    float b = cov2D[0][1];

    
    a += preBlurAmount;
    d += preBlurAmount;

    float fullBlurAmount = blurAmount;
    if ((focalDistance > 0.0) && (apertureAngle > 0.0)) {
        float focusRadius = maxPixelRadius;
        if (viewCenter.z < 0.0) {
            float focusBlur = abs((-viewCenter.z - focalDistance) / viewCenter.z);
            float apertureRadius = focal.x * tan(0.5 * apertureAngle);
            focusRadius = focusBlur * apertureRadius;
        }
        fullBlurAmount = clamp(sqr(focusRadius), blurAmount, sqr(maxPixelRadius));
    }

    
    float detOrig = a * d - b * b;
    a += fullBlurAmount;
    d += fullBlurAmount;
    float det = a * d - b * b;

    
    float blurAdjust = sqrt(max(0.0, detOrig / det));
    rgba.a *= blurAdjust;
    if (rgba.a < minAlpha) {
        return;
    }

    
    float eigenAvg = 0.5 * (a + d);
    float eigenDelta = sqrt(max(0.0, eigenAvg * eigenAvg - det));
    float eigen1 = eigenAvg + eigenDelta;
    float eigen2 = eigenAvg - eigenDelta;

    vec2 eigenVec1 = normalize(vec2((abs(b) < 0.001) ? 1.0 : b, eigen1 - a));
    vec2 eigenVec2 = vec2(eigenVec1.y, -eigenVec1.x);

    float scale1 = position.x * min(maxPixelRadius, maxStdDev * sqrt(eigen1));
    float scale2 = position.y * min(maxPixelRadius, maxStdDev * sqrt(eigen2));

    
    vec2 pixelOffset = eigenVec1 * scale1 + eigenVec2 * scale2;
    vec2 ndcOffset = (2.0 / scaledRenderSize) * pixelOffset;
    vec3 ndc = vec3(ndcCenter.xy + ndcOffset, ndcCenter.z);

    vRgba = rgba;
    vSplatUv = position.xy * maxStdDev;
    vNdc = ndc;
    gl_Position = vec4(ndc.xy * clipCenter.w, clipCenter.zw);
}`;let W2=null;function YW(){return W2||(bn.splatDefines=WW,W2={splatVertex:qW,splatFragment:HW}),W2}const WE=5,fx=class qr extends hr{constructor(e){const t=qr.makeUniforms(),s=YW(),r=e.premultipliedAlpha??!0,i=new So({glslVersion:m0,vertexShader:s.splatVertex,fragmentShader:s.splatFragment,uniforms:t,premultipliedAlpha:r,transparent:!0,depthTest:!0,depthWrite:!1,side:zo});super(HE,i),this.splatTexture=null,this.autoViewpoints=[],this.rotateToAccumulator=new ux({value:new fr}),this.translateToAccumulator=new y0({value:new Ae}),this.lastFrame=-1,this.lastUpdateTime=null,this.defaultCameras=[],this.lastStochastic=null,this.pendingUpdate={scene:null,originToWorld:new is,timeoutId:-1},this.envViewpoint=null,this.frustumCulled=!1,this.renderer=e.renderer,this.material=i,this.uniforms=t;const o=ml({gsplat:gr},{gsplat:gr},({gsplat:a})=>{if(!a)throw new Error("gsplat not defined");return a=KB(a,{rotate:this.rotateToAccumulator,translate:this.translateToAccumulator}),{gsplat:a}});this.modifier=new dW(o),this.premultipliedAlpha=r,this.autoUpdate=e.autoUpdate??!0,this.preUpdate=e.preUpdate??!1,this.needsUpdate=!1,this.originDistance=e.originDistance??1,this.maxStdDev=e.maxStdDev??Math.sqrt(8),this.maxPixelRadius=e.maxPixelRadius??512,this.minAlpha=e.minAlpha??.5*(1/255),this.enable2DGS=e.enable2DGS??!1,this.preBlurAmount=e.preBlurAmount??0,this.blurAmount=e.blurAmount??.3,this.focalDistance=e.focalDistance??0,this.apertureAngle=e.apertureAngle??0,this.falloff=e.falloff??1,this.clipXY=e.clipXY??1.4,this.focalAdjustment=e.focalAdjustment??1,this.splatEncoding=e.splatEncoding??{...dx},this.active=new V2,this.accumulatorCount=1,this.freeAccumulators=[];for(let a=0;a<1;++a)this.freeAccumulators.push(new V2),this.accumulatorCount+=1;this.defaultView=new VE({...e.view,autoUpdate:!0,spark:this}),this.viewpoint=this.defaultView,this.prepareViewpoint(this.viewpoint),this.clock=e.clock?w5(e.clock):new RB}static makeUniforms(){return{renderSize:{value:new En},near:{value:.1},far:{value:1e3},numSplats:{value:0},renderToViewQuat:{value:new fr},renderToViewPos:{value:new Ae},maxStdDev:{value:1},maxPixelRadius:{value:512},minAlpha:{value:.00196078431372549},stochastic:{value:!1},enable2DGS:{value:!1},preBlurAmount:{value:0},blurAmount:{value:.3},focalDistance:{value:0},apertureAngle:{value:0},falloff:{value:1},clipXY:{value:1.4},focalAdjustment:{value:1},splatTexEnable:{value:!1},splatTexture:{type:"t",value:qr.EMPTY_SPLAT_TEXTURE},splatTexMul:{value:new rx},splatTexAdd:{value:new En},splatTexNear:{value:.1},splatTexFar:{value:1e3},splatTexMid:{value:0},packedSplats:{type:"t",value:xu.getEmpty()},rgbMinMaxLnScaleMinMax:{value:new Vn},time:{value:0},deltaTime:{value:0},encodeLinear:{value:!1},debugFlag:{value:!1}}}canAllocAccumulator(){return this.freeAccumulators.length>0||this.accumulatorCount<WE}maybeAllocAccumulator(){let e=this.freeAccumulators.pop();if(e===void 0){if(this.accumulatorCount>=WE)return null;e=new V2,this.accumulatorCount+=1}return e.refCount=1,e}releaseAccumulator(e){e.refCount-=1,e.refCount===0&&this.freeAccumulators.push(e)}newViewpoint(e){return new VE({...e,spark:this})}onBeforeRender(e,t,s){var r,i;const o=this.time??this.clock.getElapsedTime(),a=o-(this.viewpoint.lastTime??o);this.viewpoint.lastTime=o;const l=e.info.render.frame,c=l!==this.lastFrame;this.lastFrame=l;const u=this.viewpoint;if(u===this.defaultView){if(c)if(!e.xr.isPresenting)this.defaultView.viewToWorld=s.matrixWorld.clone(),this.defaultCameras=[this.defaultView.viewToWorld];else{const A=e.xr.getCamera().cameras;this.defaultCameras=A.map(m=>m.matrixWorld),this.defaultView.viewToWorld=jW(this.defaultCameras)??new is}this.autoUpdate&&this.update({scene:t,viewToWorld:this.defaultView.viewToWorld})}if(c&&(this.material.premultipliedAlpha!==this.premultipliedAlpha&&(this.material.premultipliedAlpha=this.premultipliedAlpha,this.material.needsUpdate=!0),this.uniforms.time.value=o,this.uniforms.deltaTime.value=a,this.uniforms.debugFlag.value=performance.now()/1e3%2<1,u.display&&u.stochastic&&(this.geometry.instanceCount=this.uniforms.numSplats.value)),u.target)this.uniforms.renderSize.value.set(u.target.width,u.target.height);else{const A=e.getDrawingBufferSize(this.uniforms.renderSize.value);if(A.x===1&&A.y===1){const m=(r=e.xr.getSession())==null?void 0:r.renderState.baseLayer;m&&(A.x=m.framebufferWidth,A.y=m.framebufferHeight)}}const h=s;if(this.uniforms.near.value=h.near,this.uniforms.far.value=h.far,this.uniforms.encodeLinear.value=u.encodeLinear,this.uniforms.maxStdDev.value=this.maxStdDev,this.uniforms.maxPixelRadius.value=this.maxPixelRadius,this.uniforms.minAlpha.value=this.minAlpha,this.uniforms.stochastic.value=u.stochastic,this.uniforms.enable2DGS.value=this.enable2DGS,this.uniforms.preBlurAmount.value=this.preBlurAmount,this.uniforms.blurAmount.value=this.blurAmount,this.uniforms.focalDistance.value=this.focalDistance,this.uniforms.apertureAngle.value=this.apertureAngle,this.uniforms.falloff.value=this.falloff,this.uniforms.clipXY.value=this.clipXY,this.uniforms.focalAdjustment.value=this.focalAdjustment,this.lastStochastic!==!u.stochastic&&(this.lastStochastic=!u.stochastic,this.material.transparent=!u.stochastic,this.material.depthWrite=u.stochastic,this.material.needsUpdate=!0),this.splatTexture){const{enable:A,texture:m,multiply:g,add:x,near:v,far:b,mid:w}=this.splatTexture;A&&m?(this.uniforms.splatTexEnable.value=!0,this.uniforms.splatTexture.value=m,g?this.uniforms.splatTexMul.value.fromArray(g.elements):this.uniforms.splatTexMul.value.set(.5/this.maxStdDev,0,0,.5/this.maxStdDev),this.uniforms.splatTexAdd.value.set(x?.x??.5,x?.y??.5),this.uniforms.splatTexNear.value=v??this.uniforms.near.value,this.uniforms.splatTexFar.value=b??this.uniforms.far.value,this.uniforms.splatTexMid.value=w??0):(this.uniforms.splatTexEnable.value=!1,this.uniforms.splatTexture.value=qr.EMPTY_SPLAT_TEXTURE)}else this.uniforms.splatTexEnable.value=!1,this.uniforms.splatTexture.value=qr.EMPTY_SPLAT_TEXTURE;const d=((i=u.display)==null?void 0:i.accumulator.toWorld)??new is,f=s.matrixWorld.clone().invert();d.clone().premultiply(f).decompose(this.uniforms.renderToViewPos.value,this.uniforms.renderToViewQuat.value,new Ae)}prepareViewpoint(e){var t,s,r,i;if(this.viewpoint=e??this.viewpoint,this.viewpoint.display){const{accumulator:o,geometry:a}=this.viewpoint.display;this.uniforms.numSplats.value=o.splats.numSplats,this.uniforms.packedSplats.value=o.splats.getTexture(),this.uniforms.rgbMinMaxLnScaleMinMax.value.set(((t=o.splats.splatEncoding)==null?void 0:t.rgbMin)??0,((s=o.splats.splatEncoding)==null?void 0:s.rgbMax)??1,((r=o.splats.splatEncoding)==null?void 0:r.lnScaleMin)??fl,((i=o.splats.splatEncoding)==null?void 0:i.lnScaleMax)??pl),this.geometry=a,this.material.transparent=!this.viewpoint.stochastic,this.material.depthWrite=this.viewpoint.stochastic,this.material.needsUpdate=!0}else this.uniforms.numSplats.value=0,this.uniforms.packedSplats.value=xu.getEmpty(),this.geometry=HE}update({scene:e,viewToWorld:t}){const s=this.matrixWorld;this.preUpdate?this.updateInternal({scene:e,originToWorld:s.clone(),viewToWorld:t}):(this.pendingUpdate.scene=e,this.pendingUpdate.originToWorld.copy(s),this.pendingUpdate.timeoutId===-1&&(this.pendingUpdate.timeoutId=setTimeout(()=>{const{scene:r,originToWorld:i}=this.pendingUpdate;this.pendingUpdate.scene=null,this.pendingUpdate.timeoutId=-1,this.updateInternal({scene:r,originToWorld:i,viewToWorld:t})&&this.renderer.getContext().flush()},1)))}updateInternal({scene:e,originToWorld:t,viewToWorld:s}){var r;if(!this.canAllocAccumulator())return!1;t||(t=this.active.toWorld),s=s??t.clone();const i=this.time??this.clock.getElapsedTime(),o=i-(this.lastUpdateTime??i);this.lastUpdateTime=i;const a=this.active.mapping.reduce((A,m)=>(A.set(m.node,m),A),new Map),{generators:l,visibleGenerators:c,globalEdits:u}=this.compileScene(e);for(const A of l)(r=A.frameUpdate)==null||r.call(A,{object:A,time:i,deltaTime:o,viewToWorld:s,globalEdits:u});const h=new Set(c.map(A=>A.uuid));for(const A of l){const m=a.get(A),x=A.generator&&h.has(A.uuid)?A.numSplats:0;(this.needsUpdate||A.generator!==m?.generator||x!==m?.count)&&A.updateVersion()}const d=!Tv({matrix1:t,matrix2:this.active.toWorld,maxDistance:this.originDistance}),f=this.needsUpdate||d||l.length!==a.size||l.some(A=>{var m;return A.version!==((m=a.get(A))==null?void 0:m.version)});this.needsUpdate=!1;let p=null;if(f){if(p=this.maybeAllocAccumulator(),!p)throw new Error("Unreachable");const A=!Tv({matrix1:t,matrix2:this.active.toWorld,maxDistance:1e-5,minCoorient:.99999}),g=c.map((N,M)=>{const T=a.get(N);return T?[N.version-T.version,T.base,N]:[Number.POSITIVE_INFINITY,N.version,N]}).sort((N,M)=>N[0]!==M[0]?N[0]-M[0]:N[1]-M[1]).map(([N,M,T])=>T),x=g.map(N=>N.numSplats),{maxSplats:v,mapping:b}=p.splats.generateMapping(x),w=g.map((N,M)=>{const{base:T,count:k}=b[M];return{node:N,generator:N.generator,version:N.version,base:T,count:k}});t.clone().invert().decompose(this.translateToAccumulator.value,this.rotateToAccumulator.value,new Ae),p.ensureGenerate(v),p.splats.splatEncoding={...this.splatEncoding},p.generateSplats({renderer:this.renderer,modifier:this.modifier,generators:w,forceUpdate:A,originToWorld:t}),p.splatsVersion=this.active.splatsVersion+1;const _=p.hasCorrespondence(this.active);p.mappingVersion=this.active.mappingVersion+(_?0:1),this.releaseAccumulator(this.active),this.active=p,this.prepareViewpoint()}return setTimeout(()=>{for(const A of this.autoViewpoints)A.autoPoll({accumulator:p??void 0})},1),!0}compileScene(e){const t=[];e.traverse(i=>{i instanceof kv&&t.push(i)});const s=[];e.traverseVisible(i=>{i instanceof kv&&s.push(i)});const r=new Set;return e.traverseVisible(i=>{if(i instanceof ck){let o=i.parent;for(;o!=null&&!(o instanceof b0);)o=o.parent;o==null&&r.add(i)}}),{generators:t,visibleGenerators:s,globalEdits:Array.from(r)}}async renderEnvMap({renderer:e,scene:t,worldCenter:s,size:r=256,near:i=.1,far:o=1e3,hideObjects:a=[],update:l=!1}){var c,u;if(this.envViewpoint||(this.envViewpoint=this.newViewpoint({sort360:!0})),!qr.cubeRender||qr.cubeRender.target.width!==r||qr.cubeRender.near!==i||qr.cubeRender.far!==o){qr.cubeRender&&qr.cubeRender.target.dispose();const A=new EB(r,{format:Er,generateMipmaps:!0,minFilter:m4}),m=new wB(i,o,A);qr.cubeRender={target:A,camera:m,near:i,far:o}}qr.pmrem||(qr.pmrem=new wv(e??this.renderer));const h=new is().setPosition(s);await((c=this.envViewpoint)==null?void 0:c.prepare({scene:t,viewToWorld:h,update:l}));const{target:d,camera:f}=qr.cubeRender;f.position.copy(s);const p=new Map;for(const A of a)p.set(A,A.visible),A.visible=!1;this.prepareViewpoint(this.envViewpoint),f.update(e??this.renderer,t),this.prepareViewpoint(this.defaultView);for(const[A,m]of p.entries())A.visible=m;return(u=qr.pmrem)==null?void 0:u.fromCubemap(d.texture).texture}recurseSetEnvMap(e,t){e.traverse(s=>{if(s instanceof hr)if(Array.isArray(s.material))for(const r of s.material)r instanceof Iv&&(r.envMap=t);else s.material instanceof Iv&&(s.material.envMap=t)})}getRgba({generator:e,rgba:t}){const s=this.active.mapping.find(({node:r})=>r===e);if(!s)throw new Error("Generator not found");return t=t??new iW,t.fromPackedSplats({packedSplats:this.active.splats,base:s.base,count:s.count,renderer:this.renderer}),t}async readRgba({generator:e,rgba:t}){return t=this.getRgba({generator:e,rgba:t}),t.read()}};fx.cubeRender=null;fx.pmrem=null;fx.EMPTY_SPLAT_TEXTURE=new AB;let Dv=fx;const HE=new Mv(new Uint32Array(1),0);ml({packedSplats:cx,index:"int"},{gsplat:gr},({packedSplats:n,index:e})=>{if(!n||!e)throw new Error("Invalid input");return{gsplat:Am(n,e)}});function jW(n){if(n.length===0)return null;const e=new Ae,t=new fr,s=new Ae,r=[],i=[];for(const o of n)o.decompose(e,t,s),r.push(e),i.push(t);return new is().compose(E5(r),_5(i),new Ae(1,1,1))}Yi(`
  struct GsplatSkinning {
    int numSplats;
    int numBones;
    usampler2DArray skinTexture;
    sampler2D boneTexture;
  };
`);Yi(`
  void applyGsplatSkinning(
    int numSplats, int numBones,
    usampler2DArray skinTexture, sampler2D boneTexture,
    int splatIndex, inout vec3 center, inout vec4 quaternion
  ) {
    if ((splatIndex < 0) || (splatIndex >= numSplats)) {
      return;
    }

    uvec4 skinData = texelFetch(skinTexture, splatTexCoord(splatIndex), 0);

    float weights[4];
    weights[0] = float(skinData.x & 0xffu) / 255.0;
    weights[1] = float(skinData.y & 0xffu) / 255.0;
    weights[2] = float(skinData.z & 0xffu) / 255.0;
    weights[3] = float(skinData.w & 0xffu) / 255.0;

    uint boneIndices[4];
    boneIndices[0] = (skinData.x >> 8u) & 0xffu;
    boneIndices[1] = (skinData.y >> 8u) & 0xffu;
    boneIndices[2] = (skinData.z >> 8u) & 0xffu;
    boneIndices[3] = (skinData.w >> 8u) & 0xffu;

    vec4 quat = vec4(0.0);
    vec4 dual = vec4(0.0);
    for (int i = 0; i < 4; i++) {
      if (weights[i] > 0.0) {
        int boneIndex = int(boneIndices[i]);
        vec4 boneQuat = vec4(0.0, 0.0, 0.0, 1.0);
        vec4 boneDual = vec4(0.0);
        if (boneIndex < numBones) {
          boneQuat = texelFetch(boneTexture, ivec2(2, boneIndex), 0);
          boneDual = texelFetch(boneTexture, ivec2(3, boneIndex), 0);
        }

        if ((i > 0) && (dot(quat, boneQuat) < 0.0)) {
          // Flip sign if next blend is pointing in the opposite direction
          boneQuat = -boneQuat;
          boneDual = -boneDual;
        }
        quat += weights[i] * boneQuat;
        dual += weights[i] * boneDual;
      }
    }

    // Normalize dual quaternion
    float norm = length(quat);
    quat /= norm;
    dual /= norm;
    vec3 translate = vec3(
      2.0 * (-dual.w * quat.x + dual.x * quat.w - dual.y * quat.z + dual.z * quat.y),
      2.0 * (-dual.w * quat.y + dual.x * quat.z + dual.y * quat.w - dual.z * quat.x),
      2.0 * (-dual.w * quat.z - dual.x * quat.y + dual.y * quat.x + dual.z * quat.w)
    );

    center = quatVec(quat, center) + translate;
    quaternion = quatQuat(quat, quaternion);
  }
`);new fc(new Ae(-1,-1,-1),new Ae(1,1,1)),new Ae(-1,-3,1).normalize(),new In(1,1,1),new In(.5,.5,1),new Ae(1,1,1);new fc(new Ae(-2,-1,-2),new Ae(2,5,2)),new Ae(0,-1,0),new In(1,1,1),new In(.25,.25,.5),new Ae(.1,1,.1);const bk=class Fv{static createButton(e,t={}){const s=navigator.xr;if(!s)return null;const r=s,i=document.createElement("button");e.xr.enabled=!0,e.xr.setReferenceSpaceType("local");function o(){let h=null;async function d(A){console.log("onSessionStarted"),A.addEventListener("end",f),await e.xr.setSession(A),i.textContent="EXIT VR",h=A}function f(){console.log("onSessionEnded"),h?.removeEventListener("end",f),i.textContent="ENTER VR",h=null}i.style.display="",i.style.cursor="pointer",i.style.left="calc(50% - 100px)",i.style.width="200px",i.style.height="100px",i.textContent="ENTER VR";const p={...t,optionalFeatures:[...t.optionalFeatures||[]]};i.onmouseenter=()=>{i.style.opacity="1.0"},i.onmouseleave=()=>{i.style.opacity="0.5"},i.onclick=()=>{h===null?(console.log("requesting session"),r.requestSession("immersive-vr",p).then(d)):(console.log("ending session"),h.end())}}function a(){i.style.display="none",i.style.cursor="auto",i.style.left="calc(50% - 75px)",i.style.width="150px",i.onmouseenter=null,i.onmouseleave=null,i.onclick=null}function l(){a(),i.textContent="VR NOT SUPPORTED"}function c(h){a(),console.warn("Exception when trying to call xr.isSessionSupported",h),i.textContent="VR NOT ALLOWED"}function u(h){h.style.position="absolute",h.style.bottom="20px",h.style.padding="12px 6px",h.style.border="1px solid #fff",h.style.borderRadius="4px",h.style.background="rgba(0,0,0,0.1)",h.style.color="#fff",h.style.font="normal 13px sans-serif",h.style.textAlign="center",h.style.opacity="0.5",h.style.outline="none",h.style.zIndex="999"}return i.id="VRButton",i.style.display="none",u(i),r.isSessionSupported("immersive-vr").then(h=>{h?o():l(),h&&Fv.xrSessionIsGranted&&i.click()}).catch(c),i}static registerSessionGrantedListener(){const e=navigator.xr;if(!e)return null;const t=e;/WebXRViewer\//i.test(navigator.userAgent)||t.addEventListener("sessiongranted",()=>{Fv.xrSessionIsGranted=!0})}};bk.xrSessionIsGranted=!1;let XW=bk;XW.registerSessionGrantedListener();var vk=(n=>(n.w="wrist",n.t0="thumb-metacarpal",n.t1="thumb-phalanx-proximal",n.t2="thumb-phalanx-distal",n.t3="thumb-tip",n.i0="index-finger-metacarpal",n.i1="index-finger-phalanx-proximal",n.i2="index-finger-phalanx-intermediate",n.i3="index-finger-phalanx-distal",n.i4="index-finger-tip",n.m0="middle-finger-metacarpal",n.m1="middle-finger-phalanx-proximal",n.m2="middle-finger-phalanx-intermediate",n.m3="middle-finger-phalanx-distal",n.m4="middle-finger-tip",n.r0="ring-finger-metacarpal",n.r1="ring-finger-phalanx-proximal",n.r2="ring-finger-phalanx-intermediate",n.r3="ring-finger-phalanx-distal",n.r4="ring-finger-tip",n.p0="pinky-finger-metacarpal",n.p1="pinky-finger-phalanx-proximal",n.p2="pinky-finger-phalanx-intermediate",n.p3="pinky-finger-phalanx-distal",n.p4="pinky-finger-tip",n))(vk||{});const KW=Object.keys(vk);KW.length;new Ae(0,0,-1),new Ae(0,0,1),new Ae(-1,0,0),new Ae(1,0,0),new Ae(0,1,0),new Ae(0,-1,0);new Ae(0,0,-1),new Ae(0,0,1),new Ae(-1,0,0),new Ae(1,0,0),new Ae(0,1,0),new Ae(0,-1,0);new Ae(0,0,1),new Ae(0,0,-1);new Ae(0,-1,0),new Ae(0,1,0),new Ae(-1,0,0),new Ae(1,0,0);const JW=new URL("./assets/leftwing.ksplat",import.meta.url).href,ZW=new URL("./assets/rightwing.ksplat",import.meta.url).href,e6=new URL("./assets/leftwing.ply",import.meta.url).href,t6=new URL("./assets/rightwing.ply",import.meta.url).href,n6=.5,s6=.55,r6=.25,H2=Math.PI/6,i6=150,qE=1.8,YE=Math.PI/12;class o6{constructor({scene:e,debug:t}){this.scene=e,this.debug=t,this.group=new Jp,this.scene.add(this.group),this.left=null,this.right=null,this.lastAnchor=null,this.currentScale=qE,this.currentOffset=0,this.group.position.z=-9.9}async loadAssets(){try{await this._loadPLY(),this.debug.updateAssetStatus(".PLY wings loaded");return}catch(e){this.debug.log("warning",`PLY load failed (${e?.message}). Falling back to ksplat/boxes.`)}try{await this._loadSplat(),this.debug.updateAssetStatus("ksplat wings loaded");return}catch{}this._loadBoxes(),this.debug.updateAssetStatus("Box wings (fallback)")}async _loadPLY(){const e=new mV,[t,s]=await Promise.all([new Promise((i,o)=>e.load(e6,i,void 0,o)),new Promise((i,o)=>e.load(t6,i,void 0,o))]);t.computeVertexNormals(),s.computeVertexNormals();const r=new Iv({color:16777215,roughness:.9,metalness:.05});this.left=new hr(t,r),this.right=new hr(s,r.clone()),this.left.castShadow=this.right.castShadow=!1,this.left.visible=this.right.visible=!1,this.left.renderOrder=this.right.renderOrder=2,this.group.add(this.left),this.group.add(this.right)}async _loadSplat(){const e=this._findRenderer();e&&new Dv(e),this.left=new b0({url:JW,fileType:"ksplat"}),this.right=new b0({url:ZW,fileType:"ksplat"}),this.left.visible=this.right.visible=!1,this.left.renderOrder=this.right.renderOrder=2,this.group.add(this.left),this.group.add(this.right)}_findRenderer(){const e=document.querySelectorAll("canvas");for(const t of e)if(t?.getContext&&t.getContext("webgl"))return{domElement:t,setSize(){},setPixelRatio(){},dispose(){}};return null}_loadBoxes(){const e=new hf(.5,.8,.08),t=new nx({color:52479,transparent:!0,opacity:.8});this.left=new hr(e,t),this.right=new hr(e.clone(),t.clone()),this.left.visible=this.right.visible=!1,this.left.renderOrder=this.right.renderOrder=2,this.group.add(this.left),this.group.add(this.right)}setVisible(e){!this.left||!this.right||(this.left.visible=e,this.right.visible=e)}hasLastAnchor(){return!!this.lastAnchor}updateFromShoulders({left:e,right:t,videoWidth:s,videoHeight:r,facingMode:i}){this.lastAnchor={left:e,right:t};const o=(e.x+t.x)/2,a=(e.y+t.y)/2,l=o/s*2-1,c=-(a/r)*2+1;let u=l,h=c-n6;i==="user"&&(u=-u),this.group.position.x+=(u-this.group.position.x)*.6,this.group.position.y+=(h-this.group.position.y)*.6;const d=e.x/s*2-1,f=t.x/s*2-1;let p=i==="user"?-d:d,A=i==="user"?-f:f;const m=Math.abs(A-p),g=Math.max(m/2*s6,r6);this.currentOffset=g;let v=(e.y-t.y)/i6*H2;v=XC.clamp(v,-H2,H2),i==="user"&&(v=-v),this.group.rotation.x+=(v-this.group.rotation.x)*.6;const b=s/r;let w=b<1?.85:b>1.7?1.1:1;const _=window.innerHeight/800;this.currentScale=qE*w*Math.min(1,_),this._positionSingle(this.left,"left"),this._positionSingle(this.right,"right")}_positionSingle(e,t){if(!e)return;const r=(t==="left"?this.currentOffset:-this.currentOffset)*1;e.position.set(r,0,0),e.scale.set(this.currentScale,this.currentScale,this.currentScale*1.5);const o=-Math.PI*.2,a=Math.PI,l=t==="left"?Math.PI+YE:-Math.PI-YE;e.rotation.set(o,a,l)}}class a6{constructor({scene:e,camera:t,depthZ:s=-9.8,threshold:r=.5,debug:i}){this.scene=e,this.camera=t,this.threshold=r,this.debug=i,this.maskCanvas=document.createElement("canvas"),this.maskTex=new _r(this.maskCanvas),this.maskTex.minFilter=Pi,this.maskTex.magFilter=Pi,this.maskTex.format=Er;const o=new df(1,1);o.scale(1,-1,1),this.material=new So({uniforms:{uMask:{value:this.maskTex},uThreshold:{value:r},uFlipX:{value:0}},vertexShader:`
        varying vec2 vUv;
        uniform float uFlipX;
        void main() {
          vUv = uv;
          if (uFlipX > 0.5) vUv = vec2(1.0 - vUv.x, vUv.y);
          gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);
        }
      `,fragmentShader:`
        varying vec2 vUv;
        uniform sampler2D uMask;
        uniform float uThreshold;
        void main(){
          float a = texture2D(uMask, vUv).a; // use alpha of binary mask
          if (a < uThreshold) discard; // only keep person pixels (write depth)
          gl_FragColor = vec4(0.0, 0.0, 0.0, a);
        }
             `,depthWrite:!0,depthTest:!0,transparent:!0,colorWrite:!1});const a=XC.degToRad(t.fov),l=this._getAspect(),c=Math.abs(2*Math.tan(a/2)*s),u=c*l;this.mesh=new hr(o,this.material),this.mesh.position.z=s,this.mesh.scale.set(u,c,1),this.mesh.renderOrder=1,e.add(this.mesh)}_getAspect(){const t=document.getElementById("three-container").getBoundingClientRect();return t.width/t.height}updateMask(e,t){(this.maskCanvas.width!==e.width||this.maskCanvas.height!==e.height)&&(this.maskCanvas.width=e.width,this.maskCanvas.height=e.height);const s=this.maskCanvas.getContext("2d");s.clearRect(0,0,this.maskCanvas.width,this.maskCanvas.height),s.drawImage(e,0,0),this.maskTex.needsUpdate=!0,this.material.uniforms.uFlipX.value=t==="user"?1:0}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const l6=1e-7,c6=1e-4;class px{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class og{refCount(e){return Ri("refCount")}incRef(e){return Ri("incRef")}timerAvailable(){return!0}time(e){return Ri("time")}read(e){return Ri("read")}readSync(e){return Ri("readSync")}readToGPU(e,t){return Ri("readToGPU")}numDataIds(){return Ri("numDataIds")}disposeData(e,t){return Ri("disposeData")}write(e,t,s){return Ri("write")}move(e,t,s,r,i){return Ri("move")}createTensorFromGPUData(e,t,s){return Ri("createTensorFromGPUData")}memory(){return Ri("memory")}floatPrecision(){return Ri("floatPrecision")}epsilon(){return this.floatPrecision()===32?l6:c6}dispose(){return Ri("dispose")}}function Ri(n){throw new Error(`'${n}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lI(n){let e=n.length,t=0;for(;e>0;)t=Math.random()*e|0,e--,sl(n,e,t)}function u6(n,e){if(n.length!==e.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${n.length}Second array length was ${e.length}`);let t=n.length,s=0;for(;t>0;)s=Math.random()*t|0,t--,sl(n,t,s),sl(e,t,s)}function tc(n,e,t){return Math.max(n,Math.min(e,t))}function mx(n){return n%2===0?n:n+1}function sl(n,e,t){const s=n[e];n[e]=n[t],n[t]=s}function cI(n){let e=0;for(let t=0;t<n.length;t++)e+=n[t];return e}function h6(n,e){const t=Math.random();return e*t+(1-t)*n}function d6(n,e){let t=0;for(let s=0;s<n.length;s++){const r=Number(n[s])-Number(e[s]);t+=r*r}return t}function z(n,e){if(!n)throw new Error(typeof e=="string"?e:e())}function br(n,e,t=""){z(dn(n,e),()=>t+` Shapes ${n} and ${e} must match`)}function Du(n){z(n!=null,()=>"The input to the tensor constructor must be a non-null value.")}function ye(n){if(n.length===0)return 1;let e=n[0];for(let t=1;t<n.length;t++)e*=n[t];return e}function $v(n){return n.length===0}function Ck(n,e){if(n===e)return!0;if(n==null||e==null||n.length!==e.length)return!1;for(let t=0;t<n.length;t++)if(n[t]!==null&&e[t]!==null&&n[t]!==e[t])return!1;return!0}function dn(n,e){if(n===e)return!0;if(n==null||e==null||n.length!==e.length)return!1;for(let t=0;t<n.length;t++)if(n[t]!==e[t])return!1;return!0}function bu(n){return n%1===0}function f6(n){if(Math.tanh!=null)return Math.tanh(n);if(n===1/0)return 1;if(n===-1/0)return-1;{const e=Math.exp(2*n);return(e-1)/(e+1)}}function C0(n){const e=Math.ceil(Math.sqrt(n));return[e,Math.ceil(n/e)]}function p6(n){const e=new Uint32Array(n);for(let t=0;t<n;++t)e[t]=t;return lI(e),e}function fu(n,e){return e<=n.length?n:n+" ".repeat(e-n.length)}function Pv(n,e=r=>0,t,s){return new Promise((r,i)=>{let o=0;const a=()=>{if(n()){r();return}o++;const l=e(o);if(t!=null&&o>=t){i();return}s!=null?s(a,l):setTimeout(a,l)};a()})}function gx(n,e){let t=1,s=-1;for(let i=0;i<n.length;++i)if(n[i]>=0)t*=n[i];else if(n[i]===-1){if(s!==-1)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${s} and dim ${i}`);s=i}else if(n[i]<0)throw Error(`Shapes can not be < 0. Found ${n[i]} at dim ${i}`);if(s===-1){if(e>0&&e!==t)throw Error(`Size(${e}) must match the product of shape ${n}`);return n}if(t===0)throw Error(`Cannot infer the missing size in [${n}] when there are 0 elements`);if(e%t!==0)throw Error(`The implicit shape can't be a fractional number. Got ${e} / ${t}`);const r=n.slice();return r[s]=e/t,r}function an(n,e){const t=e.length;return n=n==null?e.map((s,r)=>r):[].concat(n),z(n.every(s=>s>=-t&&s<t),()=>`All values in axis param must be in range [-${t}, ${t}) but got axis ${n}`),z(n.every(s=>bu(s)),()=>`All values in axis param must be integers but got axis ${n}`),n.map(s=>s<0?t+s:s)}function Sl(n,e){const t=[],s=[],r=e!=null&&Array.isArray(e)&&e.length===0,i=e==null||r?null:an(e,n).sort();let o=0;for(let a=0;a<n.length;++a){if(i!=null){if(i[o]===a&&n[a]!==1)throw new Error(`Can't squeeze axis ${a} since its dim '${n[a]}' is not 1`);(i[o]==null||i[o]>a)&&n[a]===1&&(t.push(n[a]),s.push(a)),i[o]<=a&&o++}n[a]!==1&&(t.push(n[a]),s.push(a))}return{newShape:t,keptDims:s}}function Ws(n,e){return Ts(n,e)}function Ts(n,e){let t=null;if(n==null||n==="float32")t=new Float32Array(e);else if(n==="int32")t=new Int32Array(e);else if(n==="bool")t=new Uint8Array(e);else if(n==="string")t=new Array(e);else throw new Error(`Unknown data type ${n}`);return t}function Ik(n,e){for(let t=0;t<n.length;t++){const s=n[t];if(isNaN(s)||!isFinite(s))throw Error(`A tensor of type ${e} being uploaded contains ${s}.`)}}function wk(n){return n==="bool"||n==="complex64"||n==="float32"||n==="int32"||n==="string"}function Ax(n,e){return!(e==="complex64"||e==="float32"&&n!=="complex64"||e==="int32"&&n!=="float32"&&n!=="complex64"||e==="bool"&&n==="bool")}function Nm(n){if(n==="float32"||n==="int32")return 4;if(n==="complex64")return 8;if(n==="bool")return 1;throw new Error(`Unknown dtype ${n}`)}function Sk(n){if(n==null)return 0;let e=0;return n.forEach(t=>e+=t.length),e}function Wo(n){return typeof n=="string"||n instanceof String}function Ek(n){return typeof n=="boolean"}function I0(n){return typeof n=="number"}function pc(n){return Array.isArray(n)?pc(n[0]):n instanceof Float32Array?"float32":n instanceof Int32Array||n instanceof Uint8Array||n instanceof Uint8ClampedArray?"int32":I0(n)?"float32":Wo(n)?"string":Ek(n)?"bool":"float32"}function nc(n){return!!(n&&n.constructor&&n.call&&n.apply)}function w0(n,e){for(let t=e;t<n;++t)if(n%t===0)return t;return n}function Ot(n){const e=n.length;if(e<2)return[];const t=new Array(e-1);t[e-2]=n[e-1];for(let s=e-3;s>=0;--s)t[s]=t[s+1]*n[s+1];return t}function _k(n,e,t,s=!1){const r=new Array;if(e.length===1){const i=e[0]*(s?2:1);for(let o=0;o<i;o++)r[o]=t[n+o]}else{const i=e[0],o=e.slice(1),a=o.reduce((l,c)=>l*c)*(s?2:1);for(let l=0;l<i;l++)r[l]=_k(n+l*a,o,t,s)}return r}function oo(n,e,t=!1){if(n.length===0)return e[0];const s=n.reduce((r,i)=>r*i)*(t?2:1);if(s===0)return[];if(s!==e.length)throw new Error(`[${n}] does not match the input size ${e.length}${t?" for a complex tensor":""}.`);return _k(0,n,e,t)}function ym(n,e){if(Array.isArray(n))return n;if(e==="float32")return n instanceof Float32Array?n:new Float32Array(n);if(e==="int32")return n instanceof Int32Array?n:new Int32Array(n);if(e==="bool"||e==="string")return Uint8Array.from(new Int32Array(n));throw new Error(`Unknown dtype ${e}`)}function yx(n,e){const t=Ar(n,e);for(let s=0;s<t.length;s++)t[s]=1;return t}function Ar(n,e){if(e==null||e==="float32"||e==="complex64")return new Float32Array(n);if(e==="int32")return new Int32Array(n);if(e==="bool")return new Uint8Array(n);throw new Error(`Unknown data type ${e}`)}function uI(n,e){const t=n.reduce((s,r)=>s*r,1);if(e==null||e==="float32")return oo(n,new Float32Array(t));if(e==="int32")return oo(n,new Int32Array(t));if(e==="bool")return oo(n,new Uint8Array(t));throw new Error(`Unknown data type ${e}`)}function ji(n){n.forEach(e=>{z(Number.isInteger(e)&&e>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${n}].`)})}function qo(n,e,t){if(e===0)return 0;if(e===1)return n[0];let s=n[n.length-1];for(let r=0;r<n.length-1;++r)s+=t[r]*n[r];return s}function Fu(n,e,t){if(e===0)return[];if(e===1)return[n];const s=new Array(e);for(let r=0;r<s.length-1;++r)s[r]=Math.floor(n/t[r]),n-=s[r]*t[r];return s[s.length-1]=n,s}function sc(n){return n&&n.then&&typeof n.then=="function"}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jE="tfjsflags";class Tk{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=m6,this.populateURLFlags()}setPlatform(e,t){this.platform!=null&&(xe().getBool("IS_TEST")||xe().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,s){if(this.flagRegistry[e]={evaluationFn:t,setHook:s},this.urlFlags[e]!=null){const r=this.urlFlags[e];xe().getBool("IS_TEST")||xe().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${r}.`),this.set(e,r)}}async getAsync(e){return e in this.flags?this.flags[e]:(this.flags[e]=await this.evaluateFlag(e),this.flags[e])}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(sc(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getString(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(this.flagRegistry[e]==null)throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,this.flagRegistry[e].setHook!=null&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(this.flagRegistry[e]==null)throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(typeof this.global>"u"||typeof this.global.location>"u"||typeof this.global.location.search>"u")return;const e=this.getQueryParams(this.global.location.search);jE in e&&e[jE].split(",").forEach(s=>{const[r,i]=s.split(":");this.urlFlags[r]=A6(r,i)})}}function m6(n){const e={};return n.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(t,...s)=>(g6(e,s[0],s[1]),s.join("="))),e}function g6(n,e,t){n[decodeURIComponent(e)]=decodeURIComponent(t||"")}function A6(n,e){const t=e.toLowerCase();return t==="true"||t==="false"?t==="true":`${+t}`===t?+t:e}function xe(){return hI}let hI=null;function y6(n){hI=n}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let q2;function Bk(){if(q2==null){let n;if(typeof window<"u")n=window;else if(typeof global<"u")n=global;else if(typeof process<"u")n=process;else if(typeof self<"u")n=self;else throw new Error("Could not find a global object");q2=n}return q2}function x6(){const n=Bk();return n._tfGlobals==null&&(n._tfGlobals=new Map),n._tfGlobals}function dI(n,e){const t=x6();if(t.has(n))return t.get(n);{const s=e();return t.set(n,s),t.get(n)}}const pf="Abs",$u="Acos",Pu="Acosh",mc="Add",mf="AddN",ag="All",lg="Any",gf="ArgMax",Af="ArgMin",Lu="Asin",Ou="Asinh",Qu="Atan",Uu="Atanh",zu="Atan2",yf="AvgPool",cg="AvgPoolGrad",xf="AvgPool3D",ug="AvgPool3DGrad",bf="BatchMatMul",vf="BatchToSpaceND",hg="Bincount",dg="BitwiseAnd",kk="BroadcastTo",fg="BroadcastArgs",Gu="Cast",Vu="Ceil",Wu="ClipByValue",pg="Complex",Cf="ComplexAbs",If="Concat",wf="Conv2D",mg="Conv2DBackpropFilter",Sf="Conv2DBackpropInput",Ef="Conv3D",gg="Conv3DBackpropFilterV2",Ag="Conv3DBackpropInputV2",Hu="Cos",qu="Cosh",yg="Cumprod",_f="Cumsum",xg="CropAndResize",bg="DenseBincount",vg="DepthToSpace",Tf="DepthwiseConv2dNative",Cg="DepthwiseConv2dNativeBackpropFilter",Ig="DepthwiseConv2dNativeBackpropInput",wg="Diag",Bf="Dilation2D",Rm="Dilation2DBackpropInput",Mm="Dilation2DBackpropFilter",Sg="Draw",Yu="RealDiv",Eg="Einsum",ju="Elu",_g="EluGrad",Xu="Erf",kf="Equal",Ku="Exp",Nf="ExpandDims",Ju="Expm1",Tg="FFT",Bg="Fill",kg="FlipLeftRight",Zu="Floor",eh="FloorDiv",Rf="FusedBatchNorm",Mf="GatherV2",Ng="GatherNd",Df="Greater",th="GreaterEqual",nh="Identity",Rg="IFFT",Mg="Imag",sh="IsFinite",rh="IsInf",ih="IsNan",Ff="LeakyRelu",$f="Less",Pf="LessEqual",Dg="LinSpace",oh="Log",ah="Log1p",Lf="LogicalAnd",Of="LogicalNot",Qf="LogicalOr",b6="LogicalXor",Nk="LogSoftmax",v6="LowerBound",Uf="LRN",Fg="LRNGrad",C6="MatrixBandPart",zf="Max",lh="Maximum",Gf="MaxPool",$g="MaxPoolGrad",Vf="MaxPool3D",Pg="MaxPool3DGrad",Lg="MaxPoolWithArgmax",Wf="Mean",Hf="Min",ch="Minimum",qf="MirrorPad",uh="Mod",Og="Multinomial",hh="Multiply",Yf="Neg",jf="NotEqual",Qg="NonMaxSuppressionV3",xx="NonMaxSuppressionV4",Ug="NonMaxSuppressionV5",Xf="OnesLike",Kf="OneHot",Jf="Pack",Zf="PadV2",I6="Pool",dh="Pow",ep="Prelu",tp="Prod",bx="RaggedGather",vx="RaggedRange",Cx="RaggedTensorToTensor",zg="Range",Gg="Real",fh="Reciprocal",ph="Relu",np="Reshape",sp="ResizeNearestNeighbor",Vg="ResizeNearestNeighborGrad",rp="ResizeBilinear",Wg="ResizeBilinearGrad",mh="Relu6",ip="Reverse",gh="Round",Ah="Rsqrt",Hg="ScatterNd",qg="TensorScatterUpdate",Yg="SearchSorted",op="Select",yh="Selu",ap="Slice",xh="Sin",bh="Sinh",vh="Sign",Ch="Sigmoid",Ih="Softplus",wh="Sqrt",lp="Sum",cp="SpaceToBatchND",up="SplitV",hp="Softmax",Ix="SparseFillEmptyRows",wx="SparseReshape",jg="SparseSegmentMean",Xg="SparseSegmentSum",Kg="SparseToDense",Sh="SquaredDifference",Jg="Square",Zg="StaticRegexReplace",eA="StridedSlice",tA="StringNGrams",Sx="StringSplit",Ex="StringToHashBucketFast",Eh="Sub",_h="Tan",Th="Tanh",Bh="Tile",nA="TopK",sA="Transform",Xl="Transpose",_x="Unique",dp="Unpack",fp="UnsortedSegmentSum",w6="UpperBound",pp="ZerosLike",kh="Step",Dm="FromPixels",rA="RotateWithOffset",Gd="_FusedMatMul",Vd="FusedConv2D",Wd="FusedDepthwiseConv2D";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function to(...n){xe().getBool("IS_TEST")||xe().getBool("PROD")||console.warn(...n)}function S6(...n){xe().getBool("IS_TEST")||xe().getBool("PROD")||console.log(...n)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hd=dI("kernelRegistry",()=>new Map),Fm=dI("gradRegistry",()=>new Map);function $m(n,e){const t=fI(n,e);return Hd.get(t)}function Lv(n){return Fm.get(n)}function S0(n){const e=Hd.entries(),t=[];for(;;){const{done:s,value:r}=e.next();if(s)break;const[i,o]=r,[a]=i.split("_");a===n&&t.push(o)}return t}function iA(n){const{kernelName:e,backendName:t}=n,s=fI(e,t);Hd.has(s)&&to(`The kernel '${e}' for backend '${t}' is already registered`),Hd.set(s,n)}function Rk(n){const{kernelName:e}=n;Fm.has(e)&&xe().getBool("DEBUG")&&to(`Overriding the gradient for '${e}'`),Fm.set(e,n)}function E6(n,e){const t=fI(n,e);if(!Hd.has(t))throw new Error(`The kernel '${n}' for backend '${e}' is not registered`);Hd.delete(t)}function _6(n){if(!Fm.has(n))throw new Error(`The gradient '${n}' for backend is not registered`);Fm.delete(n)}function T6(n,e){S0(n).forEach(s=>{const r=Object.assign({},s,{backendName:e});iA(r)})}function fI(n,e){return`${e}_${n}`}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mk(n){return n instanceof Float32Array||n instanceof Int32Array||n instanceof Uint8Array||n instanceof Uint8ClampedArray}var qd=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{};function B6(n){return n&&n.__esModule&&Object.prototype.hasOwnProperty.call(n,"default")?n.default:n}function k6(n){if(Object.prototype.hasOwnProperty.call(n,"__esModule"))return n;var e=n.default;if(typeof e=="function"){var t=function s(){var r=!1;try{r=this instanceof s}catch{}return r?Reflect.construct(e,arguments,this.constructor):e.apply(this,arguments)};t.prototype=e.prototype}else t={};return Object.defineProperty(t,"__esModule",{value:!0}),Object.keys(n).forEach(function(s){var r=Object.getOwnPropertyDescriptor(n,s);Object.defineProperty(t,s,r.get?r:{enumerable:!0,get:function(){return n[s]}})}),t}var Y2,XE;function N6(){if(XE)return Y2;XE=1,Y2=e;var n=null;try{n=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch{}function e(k,B,L){this.low=k|0,this.high=B|0,this.unsigned=!!L}e.prototype.__isLong__,Object.defineProperty(e.prototype,"__isLong__",{value:!0});function t(k){return(k&&k.__isLong__)===!0}e.isLong=t;var s={},r={};function i(k,B){var L,U,V;return B?(k>>>=0,(V=0<=k&&k<256)&&(U=r[k],U)?U:(L=a(k,(k|0)<0?-1:0,!0),V&&(r[k]=L),L)):(k|=0,(V=-128<=k&&k<128)&&(U=s[k],U)?U:(L=a(k,k<0?-1:0,!1),V&&(s[k]=L),L))}e.fromInt=i;function o(k,B){if(isNaN(k))return B?x:g;if(B){if(k<0)return x;if(k>=p)return N}else{if(k<=-A)return M;if(k+1>=A)return _}return k<0?o(-k,B).neg():a(k%f|0,k/f|0,B)}e.fromNumber=o;function a(k,B,L){return new e(k,B,L)}e.fromBits=a;var l=Math.pow;function c(k,B,L){if(k.length===0)throw Error("empty string");if(k==="NaN"||k==="Infinity"||k==="+Infinity"||k==="-Infinity")return g;if(typeof B=="number"?(L=B,B=!1):B=!!B,L=L||10,L<2||36<L)throw RangeError("radix");var U;if((U=k.indexOf("-"))>0)throw Error("interior hyphen");if(U===0)return c(k.substring(1),B,L).neg();for(var V=o(l(L,8)),W=g,H=0;H<k.length;H+=8){var ee=Math.min(8,k.length-H),K=parseInt(k.substring(H,H+ee),L);if(ee<8){var te=o(l(L,ee));W=W.mul(te).add(o(K))}else W=W.mul(V),W=W.add(o(K))}return W.unsigned=B,W}e.fromString=c;function u(k,B){return typeof k=="number"?o(k,B):typeof k=="string"?c(k,B):a(k.low,k.high,typeof B=="boolean"?B:k.unsigned)}e.fromValue=u;var h=65536,d=1<<24,f=h*h,p=f*f,A=p/2,m=i(d),g=i(0);e.ZERO=g;var x=i(0,!0);e.UZERO=x;var v=i(1);e.ONE=v;var b=i(1,!0);e.UONE=b;var w=i(-1);e.NEG_ONE=w;var _=a(-1,2147483647,!1);e.MAX_VALUE=_;var N=a(-1,-1,!0);e.MAX_UNSIGNED_VALUE=N;var M=a(0,-2147483648,!1);e.MIN_VALUE=M;var T=e.prototype;return T.toInt=function(){return this.unsigned?this.low>>>0:this.low},T.toNumber=function(){return this.unsigned?(this.high>>>0)*f+(this.low>>>0):this.high*f+(this.low>>>0)},T.toString=function(B){if(B=B||10,B<2||36<B)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative())if(this.eq(M)){var L=o(B),U=this.div(L),V=U.mul(L).sub(this);return U.toString(B)+V.toInt().toString(B)}else return"-"+this.neg().toString(B);for(var W=o(l(B,6),this.unsigned),H=this,ee="";;){var K=H.div(W),te=H.sub(K.mul(W)).toInt()>>>0,le=te.toString(B);if(H=K,H.isZero())return le+ee;for(;le.length<6;)le="0"+le;ee=""+le+ee}},T.getHighBits=function(){return this.high},T.getHighBitsUnsigned=function(){return this.high>>>0},T.getLowBits=function(){return this.low},T.getLowBitsUnsigned=function(){return this.low>>>0},T.getNumBitsAbs=function(){if(this.isNegative())return this.eq(M)?64:this.neg().getNumBitsAbs();for(var B=this.high!=0?this.high:this.low,L=31;L>0&&(B&1<<L)==0;L--);return this.high!=0?L+33:L+1},T.isZero=function(){return this.high===0&&this.low===0},T.eqz=T.isZero,T.isNegative=function(){return!this.unsigned&&this.high<0},T.isPositive=function(){return this.unsigned||this.high>=0},T.isOdd=function(){return(this.low&1)===1},T.isEven=function(){return(this.low&1)===0},T.equals=function(B){return t(B)||(B=u(B)),this.unsigned!==B.unsigned&&this.high>>>31===1&&B.high>>>31===1?!1:this.high===B.high&&this.low===B.low},T.eq=T.equals,T.notEquals=function(B){return!this.eq(B)},T.neq=T.notEquals,T.ne=T.notEquals,T.lessThan=function(B){return this.comp(B)<0},T.lt=T.lessThan,T.lessThanOrEqual=function(B){return this.comp(B)<=0},T.lte=T.lessThanOrEqual,T.le=T.lessThanOrEqual,T.greaterThan=function(B){return this.comp(B)>0},T.gt=T.greaterThan,T.greaterThanOrEqual=function(B){return this.comp(B)>=0},T.gte=T.greaterThanOrEqual,T.ge=T.greaterThanOrEqual,T.compare=function(B){if(t(B)||(B=u(B)),this.eq(B))return 0;var L=this.isNegative(),U=B.isNegative();return L&&!U?-1:!L&&U?1:this.unsigned?B.high>>>0>this.high>>>0||B.high===this.high&&B.low>>>0>this.low>>>0?-1:1:this.sub(B).isNegative()?-1:1},T.comp=T.compare,T.negate=function(){return!this.unsigned&&this.eq(M)?M:this.not().add(v)},T.neg=T.negate,T.add=function(B){t(B)||(B=u(B));var L=this.high>>>16,U=this.high&65535,V=this.low>>>16,W=this.low&65535,H=B.high>>>16,ee=B.high&65535,K=B.low>>>16,te=B.low&65535,le=0,fe=0,Ie=0,Se=0;return Se+=W+te,Ie+=Se>>>16,Se&=65535,Ie+=V+K,fe+=Ie>>>16,Ie&=65535,fe+=U+ee,le+=fe>>>16,fe&=65535,le+=L+H,le&=65535,a(Ie<<16|Se,le<<16|fe,this.unsigned)},T.subtract=function(B){return t(B)||(B=u(B)),this.add(B.neg())},T.sub=T.subtract,T.multiply=function(B){if(this.isZero())return g;if(t(B)||(B=u(B)),n){var L=n.mul(this.low,this.high,B.low,B.high);return a(L,n.get_high(),this.unsigned)}if(B.isZero())return g;if(this.eq(M))return B.isOdd()?M:g;if(B.eq(M))return this.isOdd()?M:g;if(this.isNegative())return B.isNegative()?this.neg().mul(B.neg()):this.neg().mul(B).neg();if(B.isNegative())return this.mul(B.neg()).neg();if(this.lt(m)&&B.lt(m))return o(this.toNumber()*B.toNumber(),this.unsigned);var U=this.high>>>16,V=this.high&65535,W=this.low>>>16,H=this.low&65535,ee=B.high>>>16,K=B.high&65535,te=B.low>>>16,le=B.low&65535,fe=0,Ie=0,Se=0,De=0;return De+=H*le,Se+=De>>>16,De&=65535,Se+=W*le,Ie+=Se>>>16,Se&=65535,Se+=H*te,Ie+=Se>>>16,Se&=65535,Ie+=V*le,fe+=Ie>>>16,Ie&=65535,Ie+=W*te,fe+=Ie>>>16,Ie&=65535,Ie+=H*K,fe+=Ie>>>16,Ie&=65535,fe+=U*le+V*te+W*K+H*ee,fe&=65535,a(Se<<16|De,fe<<16|Ie,this.unsigned)},T.mul=T.multiply,T.divide=function(B){if(t(B)||(B=u(B)),B.isZero())throw Error("division by zero");if(n){if(!this.unsigned&&this.high===-2147483648&&B.low===-1&&B.high===-1)return this;var L=(this.unsigned?n.div_u:n.div_s)(this.low,this.high,B.low,B.high);return a(L,n.get_high(),this.unsigned)}if(this.isZero())return this.unsigned?x:g;var U,V,W;if(this.unsigned){if(B.unsigned||(B=B.toUnsigned()),B.gt(this))return x;if(B.gt(this.shru(1)))return b;W=x}else{if(this.eq(M)){if(B.eq(v)||B.eq(w))return M;if(B.eq(M))return v;var H=this.shr(1);return U=H.div(B).shl(1),U.eq(g)?B.isNegative()?v:w:(V=this.sub(B.mul(U)),W=U.add(V.div(B)),W)}else if(B.eq(M))return this.unsigned?x:g;if(this.isNegative())return B.isNegative()?this.neg().div(B.neg()):this.neg().div(B).neg();if(B.isNegative())return this.div(B.neg()).neg();W=g}for(V=this;V.gte(B);){U=Math.max(1,Math.floor(V.toNumber()/B.toNumber()));for(var ee=Math.ceil(Math.log(U)/Math.LN2),K=ee<=48?1:l(2,ee-48),te=o(U),le=te.mul(B);le.isNegative()||le.gt(V);)U-=K,te=o(U,this.unsigned),le=te.mul(B);te.isZero()&&(te=v),W=W.add(te),V=V.sub(le)}return W},T.div=T.divide,T.modulo=function(B){if(t(B)||(B=u(B)),n){var L=(this.unsigned?n.rem_u:n.rem_s)(this.low,this.high,B.low,B.high);return a(L,n.get_high(),this.unsigned)}return this.sub(this.div(B).mul(B))},T.mod=T.modulo,T.rem=T.modulo,T.not=function(){return a(~this.low,~this.high,this.unsigned)},T.and=function(B){return t(B)||(B=u(B)),a(this.low&B.low,this.high&B.high,this.unsigned)},T.or=function(B){return t(B)||(B=u(B)),a(this.low|B.low,this.high|B.high,this.unsigned)},T.xor=function(B){return t(B)||(B=u(B)),a(this.low^B.low,this.high^B.high,this.unsigned)},T.shiftLeft=function(B){return t(B)&&(B=B.toInt()),(B&=63)===0?this:B<32?a(this.low<<B,this.high<<B|this.low>>>32-B,this.unsigned):a(0,this.low<<B-32,this.unsigned)},T.shl=T.shiftLeft,T.shiftRight=function(B){return t(B)&&(B=B.toInt()),(B&=63)===0?this:B<32?a(this.low>>>B|this.high<<32-B,this.high>>B,this.unsigned):a(this.high>>B-32,this.high>=0?0:-1,this.unsigned)},T.shr=T.shiftRight,T.shiftRightUnsigned=function(B){if(t(B)&&(B=B.toInt()),B&=63,B===0)return this;var L=this.high;if(B<32){var U=this.low;return a(U>>>B|L<<32-B,L>>>B,this.unsigned)}else return B===32?a(L,0,this.unsigned):a(L>>>B-32,0,this.unsigned)},T.shru=T.shiftRightUnsigned,T.shr_u=T.shiftRightUnsigned,T.toSigned=function(){return this.unsigned?a(this.low,this.high,!1):this},T.toUnsigned=function(){return this.unsigned?this:a(this.low,this.high,!0)},T.toBytes=function(B){return B?this.toBytesLE():this.toBytesBE()},T.toBytesLE=function(){var B=this.high,L=this.low;return[L&255,L>>>8&255,L>>>16&255,L>>>24,B&255,B>>>8&255,B>>>16&255,B>>>24]},T.toBytesBE=function(){var B=this.high,L=this.low;return[B>>>24,B>>>16&255,B>>>8&255,B&255,L>>>24,L>>>16&255,L>>>8&255,L&255]},e.fromBytes=function(B,L,U){return U?e.fromBytesLE(B,L):e.fromBytesBE(B,L)},e.fromBytesLE=function(B,L){return new e(B[0]|B[1]<<8|B[2]<<16|B[3]<<24,B[4]|B[5]<<8|B[6]<<16|B[7]<<24,L)},e.fromBytesBE=function(B,L){return new e(B[4]<<24|B[5]<<16|B[6]<<8|B[7],B[0]<<24|B[1]<<16|B[2]<<8|B[3],L)},Y2}var Dk=N6();const Fk=B6(Dk),R6=FL({__proto__:null,default:Fk},[Dk]);/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jc=Fk||R6;function oA(n){return Jc.fromString(n,!0,16)}const $k=oA("c3a5c85c97cb3127"),Hc=oA("b492b66fbe98f273"),Zr=oA("9ae16a3b2f90404f");function Ov(n){return n.xor(n.shru(47))}function Pk(n,e,t){const s=n.slice(e,e+t);return Jc.fromBytes(Array.from(s),!0,!0)}function ds(n,e){return Pk(n,e,8)}function KE(n,e){return Pk(n,e,4)}function cr(n,e){return e===0?n:n.shru(e).or(n.shl(64-e))}function Kl(n,e,t=oA("9ddfea08eb382d69")){let s=n.xor(e).mul(t);s=s.xor(s.shru(47));let r=e.xor(s).mul(t);return r=r.xor(r.shru(47)),r=r.mul(t),r}function M6(n,e,t,s,r,i){r=r.add(n),i=cr(i.add(r).add(s),21);const o=r;return r=r.add(e),r=r.add(t),i=i.add(cr(r,44)),[r.add(s),i.add(o)]}function vy(n,e,t,s){return M6(ds(n,e),ds(n,e+8),ds(n,e+16),ds(n,e+24),t,s)}function D6(n,e=n.length){if(e>=8){const t=Zr.add(e*2),s=ds(n,0).add(Zr),r=ds(n,e-8),i=cr(r,37).mul(t).add(s),o=cr(s,25).add(r).mul(t);return Kl(i,o,t)}if(e>=4){const t=Zr.add(e*2),s=KE(n,0);return Kl(s.shl(3).add(e),KE(n,e-4),t)}if(e>0){const t=n[0],s=n[e>>1],r=n[e-1],i=t+(s<<8),o=e+(r<<2);return Ov(Zr.mul(i).xor($k.mul(o))).mul(Zr)}return Zr}function F6(n,e=n.length){const t=Zr.add(e*2),s=ds(n,0).mul(Hc),r=ds(n,8),i=ds(n,e-8).mul(t),o=ds(n,e-16).mul(Zr);return Kl(cr(s.add(r),43).add(cr(i,30)).add(o),s.add(cr(r.add(Zr),18)).add(i),t)}function $6(n,e=n.length){const t=Zr.add(e*2),s=ds(n,0).mul(Zr),r=ds(n,8),i=ds(n,e-8).mul(t),o=ds(n,e-16).mul(Zr),a=cr(s.add(r),43).add(cr(i,30)).add(o),l=Kl(a,s.add(cr(r.add(Zr),18)).add(i),t),c=ds(n,16).mul(t),u=ds(n,24),h=a.add(ds(n,e-32)).mul(t),d=l.add(ds(n,e-24)).mul(t);return Kl(cr(c.add(u),43).add(cr(h,30)).add(d),c.add(cr(u.add(s),18)).add(h),t)}function Lk(n,e=n.length){const t=Jc.fromNumber(81,!0);if(e<=32)return e<=16?D6(n,e):F6(n,e);if(e<=64)return $6(n,e);let s=t,r=t.mul(Hc).add(113),i=Ov(r.mul(Zr).add(113)).mul(Zr),o=[Jc.UZERO,Jc.UZERO],a=[Jc.UZERO,Jc.UZERO];s=s.mul(Zr).add(ds(n,0));let l=0;const c=(e-1>>6)*64,u=c+(e-1&63)-63;do s=cr(s.add(r).add(o[0]).add(ds(n,l+8)),37).mul(Hc),r=cr(r.add(o[1]).add(ds(n,l+48)),42).mul(Hc),s=s.xor(a[1]),r=r.add(o[0]).add(ds(n,l+40)),i=cr(i.add(a[0]),33).mul(Hc),o=vy(n,l,o[1].mul(Hc),s.add(a[0])),a=vy(n,l+32,i.add(a[1]),r.add(ds(n,l+16))),[i,s]=[s,i],l+=64;while(l!==c);const h=Hc.add(i.and(255).shl(1));return l=u,a[0]=a[0].add(e-1&63),o[0]=o[0].add(a[0]),a[0]=a[0].add(o[0]),s=cr(s.add(r).add(o[0]).add(ds(n,l+8)),37).mul(h),r=cr(r.add(o[1]).add(ds(n,l+48)),42).mul(h),s=s.xor(a[1].mul(9)),r=r.add(o[0].mul(9).add(ds(n,l+40))),i=cr(i.add(a[0]),33).mul(h),o=vy(n,l,o[1].mul(h),s.add(a[0])),a=vy(n,l+32,i.add(a[1]),r.add(ds(n,l+16))),[i,s]=[s,i],Kl(Kl(o[0],a[0],h).add(Ov(r).mul($k)).add(i),Kl(o[1],a[1],h).add(s),h)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function El(n,e){return e==="string"?Yo(n):gc([n],e)}function P6(n,e){return n instanceof Float32Array&&e==="float32"||n instanceof Int32Array&&e==="int32"||n instanceof Uint8Array&&e==="bool"}function gc(n,e){if(e==="string")throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(n)&&(n=_o(n)),xe().getBool("DEBUG")&&Ik(n,e),P6(n,e))return n;if(e==null||e==="float32"||e==="complex64")return new Float32Array(n);if(e==="int32")return new Int32Array(n);if(e==="bool"){const t=new Uint8Array(n.length);for(let s=0;s<t.length;++s)Math.round(n[s])!==0&&(t[s]=1);return t}else throw new Error(`Unknown data type ${e}`)}function Kr(){return xe().platform.now()}function L6(n,e){return xe().platform.fetch(n,e)}function Yo(n,e="utf-8"){return e=e||"utf-8",xe().platform.encode(n,e)}function Eo(n,e="utf-8"){return e=e||"utf-8",xe().platform.decode(n,e)}function ur(n){return xe().platform.isTypedArray!=null?xe().platform.isTypedArray(n):Mk(n)}function _o(n,e=[],t=!1){if(e==null&&(e=[]),typeof n=="boolean"||typeof n=="number"||typeof n=="string"||sc(n)||n==null||ur(n)&&t)e.push(n);else if(Array.isArray(n)||ur(n))for(let s=0;s<n.length;++s)_o(n[s],e,t);else{let s=-1;for(const r of Object.keys(n))/^([1-9]+[0-9]*|0)$/.test(r)&&(s=Math.max(s,Number(r)));for(let r=0;r<=s;r++)_o(n[r],e,t)}return e}const O6=Object.freeze(Object.defineProperty({__proto__:null,arraysEqual:dn,arraysEqualWithNull:Ck,assert:z,assertNonNegativeIntegerDimensions:ji,assertNonNull:Du,assertShapesMatch:br,bytesFromStringArray:Sk,bytesPerElement:Nm,checkConversionForErrors:Ik,clamp:tc,computeStrides:Ot,convertBackendValuesAndArrayBuffer:ym,createScalarValue:El,createShuffledIndices:p6,decodeString:Eo,distSquared:d6,encodeString:Yo,fetch:L6,fingerPrint64:Lk,flatten:_o,getArrayFromDType:Ts,getTypedArrayFromDType:Ws,hasEncodingLoss:Ax,hexToLong:oA,indexToLoc:Fu,inferDtype:pc,inferFromImplicitShape:gx,isBoolean:Ek,isFunction:nc,isInt:bu,isNumber:I0,isPromise:sc,isScalarShape:$v,isString:Wo,isTypedArray:ur,isValidDtype:wk,locToIndex:qo,makeOnesTypedArray:yx,makeZerosNestedTypedArray:uI,makeZerosTypedArray:Ar,nearestDivisor:w0,nearestLargerEven:mx,now:Kr,parseAxisParam:an,randUniform:h6,repeatedTry:Pv,rightPad:fu,shuffle:lI,shuffleCombo:u6,sizeFromShape:ye,sizeToSquarishShape:C0,squeezeShape:Sl,sum:cI,swap:sl,tanh:f6,toNestedArray:oo,toTypedArray:gc},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Q6{constructor(e,t){this.backendTimer=e,this.logger=t,t==null&&(this.logger=new z6)}profileKernel(e,t,s){let r;const i=()=>{r=s()};let o;const a=Kr();if(this.backendTimer.timerAvailable())o=this.backendTimer.time(i);else{i();for(const c of r)c.dataSync();o=Promise.resolve({kernelMs:Kr()-a})}if(xe().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let c=0;c<r.length;c++){const u=r[c];u.data().then(h=>{U6(h,u.dtype,e)})}return{kernelName:e,outputs:r,inputs:t,timeMs:o.then(c=>c.kernelMs),extraInfo:o.then(c=>c.getExtraProfileInfo!=null?c.getExtraProfileInfo():"")}}logKernelProfile(e){const{kernelName:t,outputs:s,timeMs:r,inputs:i,extraInfo:o}=e;s.forEach(a=>{Promise.all([a.data(),r,o]).then(l=>{this.logger.logKernelProfile(t,a,l[0],l[1],i,l[2])})})}}function U6(n,e,t){if(e!=="float32")return!1;for(let s=0;s<n.length;s++){const r=n[s];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${t}'`),!0}return!1}class z6{logKernelProfile(e,t,s,r,i,o){const a=typeof r=="number"?fu(`${r}ms`,9):r.error,l=fu(e,25),c=t.rank,u=t.size,h=fu(t.shape.toString(),14);let d="";for(const f in i){const p=i[f];if(p!=null){const A=p.shape||t.shape,m=A.length;d+=`${f}: ${m}D ${m>0?A:""} `}}console.log(`%c${l}	%c${a}	%c${c}D ${h}	%c${u}	%c${d}	%c${o}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function G6(n,e,t){const s={},r={};for(let l=0;l<e.length;l++)s[e[l].id]=!0;for(let l=0;l<n.length;l++){const c=n[l],u=c.inputs;for(const h in u){const d=u[h];let f=!1;for(let p=0;p<e.length;p++)if(s[d.id]){c.outputs.forEach(A=>s[A.id]=!0),f=!0,r[c.id]=!0;break}if(f)break}}const i={};i[t.id]=!0;const o={};for(let l=n.length-1;l>=0;l--){const c=n[l],u=c.inputs;for(let h=0;h<c.outputs.length;h++)if(i[c.outputs[h].id]){for(const d in u)i[u[d].id]=!0,o[c.id]=!0;break}}const a=[];for(let l=0;l<n.length;l++){const c=n[l];if(r[c.id]&&o[c.id]){const u={};for(const d in c.inputs){const f=c.inputs[d];s[f.id]&&(u[d]=f)}const h=Object.assign({},c);h.inputs=u,h.outputs=c.outputs,a.push(h)}}return a}function V6(n,e,t,s){for(let r=e.length-1;r>=0;r--){const i=e[r],o=[];if(i.outputs.forEach(l=>{const c=n[l.id];c!=null?o.push(c):o.push(null)}),i.gradient==null)throw new Error(`Cannot compute gradient: gradient function not found for ${i.kernelName}.`);const a=i.gradient(o);for(const l in i.inputs){if(!(l in a))throw new Error(`Cannot backprop through input ${l}. Available gradients found: ${Object.keys(a)}.`);const c=t(()=>a[l]());if(c.dtype!=="float32")throw new Error(`Error in gradient for op ${i.kernelName}. The gradient of input ${l} must have 'float32' dtype, but has '${c.dtype}'`);const u=i.inputs[l];if(!dn(c.shape,u.shape))throw new Error(`Error in gradient for op ${i.kernelName}. The gradient of input '${l}' has shape '${c.shape}', which does not match the shape of the input '${u.shape}'`);if(n[u.id]==null)n[u.id]=c;else{const h=n[u.id];n[u.id]=s(h,c),h.dispose()}}}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JE=20,Hp=3,j2=7;function W6(n,e,t,s){const r=Ot(e),i=H6(n,e,t,r),o=e.length,a=Jy(n,e,t,r,i),l=["Tensor"];return s&&(l.push(`  dtype: ${t}`),l.push(`  rank: ${o}`),l.push(`  shape: [${e}]`),l.push("  values:")),l.push(a.map(c=>"    "+c).join(`
`)),l.join(`
`)}function H6(n,e,t,s){const r=ye(e),i=s[s.length-1],o=new Array(i).fill(0),a=e.length,l=t==="complex64"?rm(n):n;if(a>1)for(let c=0;c<r/i;c++){const u=c*i;for(let h=0;h<i;h++)o[h]=Math.max(o[h],sm(l[u+h],0,t).length)}return o}function sm(n,e,t){let s;return Array.isArray(n)?s=`${parseFloat(n[0].toFixed(j2))} + ${parseFloat(n[1].toFixed(j2))}j`:Wo(n)?s=`'${n}'`:t==="bool"?s=Ok(n):s=parseFloat(n.toFixed(j2)).toString(),fu(s,e)}function Ok(n){return n===0?"false":"true"}function Jy(n,e,t,s,r,i=!0){const o=t==="complex64"?2:1,a=e[0],l=e.length;if(l===0){if(t==="complex64"){const A=rm(n);return[sm(A[0],0,t)]}return t==="bool"?[Ok(n[0])]:[n[0].toString()]}if(l===1){if(a>JE){const m=Hp*o;let g=Array.from(n.slice(0,m)),x=Array.from(n.slice((a-Hp)*o,a*o));return t==="complex64"&&(g=rm(g),x=rm(x)),["["+g.map((v,b)=>sm(v,r[b],t)).join(", ")+", ..., "+x.map((v,b)=>sm(v,r[a-Hp+b],t)).join(", ")+"]"]}return["["+(t==="complex64"?rm(n):Array.from(n)).map((m,g)=>sm(m,r[g],t)).join(", ")+"]"]}const c=e.slice(1),u=s.slice(1),h=s[0]*o,d=[];if(a>JE){for(let A=0;A<Hp;A++){const m=A*h,g=m+h;d.push(...Jy(n.slice(m,g),c,t,u,r,!1))}d.push("...");for(let A=a-Hp;A<a;A++){const m=A*h,g=m+h;d.push(...Jy(n.slice(m,g),c,t,u,r,A===a-1))}}else for(let A=0;A<a;A++){const m=A*h,g=m+h;d.push(...Jy(n.slice(m,g),c,t,u,r,A===a-1))}const f=l===2?",":"";d[0]="["+(a>0?d[0]+f:"");for(let A=1;A<d.length-1;A++)d[A]=" "+d[A]+f;let p=`,
`;for(let A=2;A<l;A++)p+=`
`;return d[d.length-1]=" "+d[d.length-1]+"]"+(i?"":p),d}function rm(n){const e=[];for(let t=0;t<n.length;t+=2)e.push([n[t],n[t+1]]);return e}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Vs{constructor(e,t,s){if(this.dtype=t,this.shape=e.slice(),this.size=ye(e),s!=null){const r=s.length;z(r===this.size,()=>`Length of values '${r}' does not match the size inferred by the shape '${this.size}'.`)}if(t==="complex64")throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=s||Ts(t,this.size),this.strides=Ot(e)}set(e,...t){t.length===0&&(t=[0]),z(t.length===this.rank,()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`);const s=this.locToIndex(t);this.values[s]=e}get(...e){e.length===0&&(e=[0]);let t=0;for(const r of e){if(r<0||r>=this.shape[t]){const i=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(i)}t++}let s=e[e.length-1];for(let r=0;r<e.length-1;++r)s+=this.strides[r]*e[r];return this.values[s]}locToIndex(e){if(this.rank===0)return 0;if(this.rank===1)return e[0];let t=e[e.length-1];for(let s=0;s<e.length-1;++s)t+=this.strides[s]*e[s];return t}indexToLoc(e){if(this.rank===0)return[];if(this.rank===1)return[e];const t=new Array(this.shape.length);for(let s=0;s<t.length-1;++s)t[s]=Math.floor(e/this.strides[s]),e-=t[s]*this.strides[s];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return Oo().makeTensor(this.values,this.shape,this.dtype)}}let Oo=null,_d=null;function q6(n){Oo=n}function Y6(n){_d=n}class cn{constructor(e,t,s,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=ye(e),this.strides=Ot(e),this.dataId=s,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return _d.buffer(this.shape,this.dtype,e)}bufferSync(){return _d.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return oo(this.shape,e,this.dtype==="complex64")}arraySync(){return oo(this.shape,this.dataSync(),this.dtype==="complex64")}async data(){this.throwIfDisposed();const e=Oo().read(this.dataId);if(this.dtype==="string"){const t=await e;try{return t.map(s=>Eo(s))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),Oo().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();const e=Oo().readSync(this.dataId);if(this.dtype==="string")try{return e.map(t=>Eo(t))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await Oo().read(this.dataId);return this.dtype==="string"?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(this.kerasMask&&this.kerasMask.dispose(),Oo().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return _d.print(this,e)}clone(){return this.throwIfDisposed(),_d.clone(this)}toString(e=!1){const t=this.dataSync();return W6(t,this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),_d.cast(this,e)}variable(e=!0,t,s){return this.throwIfDisposed(),Oo().makeVariable(this,e,t,s)}}Object.defineProperty(cn,Symbol.hasInstance,{value:n=>!!n&&n.data!=null&&n.dataSync!=null&&n.throwIfDisposed!=null});function Me(){return dI("Tensor",()=>cn)}Me();class Pm extends cn{constructor(e,t,s,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=s}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!dn(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);Oo().disposeTensor(this),this.dataId=e.dataId,Oo().incRef(this,null)}dispose(){Oo().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(Pm,Symbol.hasInstance,{value:n=>n instanceof cn&&n.assign!=null&&n.assign instanceof Function});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Qv;(function(n){n.R0="R0",n.R1="R1",n.R2="R2",n.R3="R3",n.R4="R4",n.R5="R5",n.R6="R6"})(Qv||(Qv={}));var Uv;(function(n){n.float32="float32",n.int32="int32",n.bool="int32",n.complex64="complex64"})(Uv||(Uv={}));var zv;(function(n){n.float32="float32",n.int32="int32",n.bool="bool",n.complex64="complex64"})(zv||(zv={}));var Gv;(function(n){n.float32="float32",n.int32="float32",n.bool="float32",n.complex64="complex64"})(Gv||(Gv={}));var Vv;(function(n){n.float32="complex64",n.int32="complex64",n.bool="complex64",n.complex64="complex64"})(Vv||(Vv={}));const j6={float32:Gv,int32:Uv,bool:zv,complex64:Vv};function tr(n,e){if(n==="string"||e==="string"){if(n==="string"&&e==="string")return"string";throw new Error(`Can not upcast ${n} with ${e}`)}return j6[n][e]}function aA(n){return tr(n,"int32")}function Qk(n){return n!=null&&typeof n=="object"&&"texture"in n&&n.texture instanceof WebGLTexture}function Uk(n){return typeof GPUBuffer<"u"&&n!=null&&typeof n=="object"&&"buffer"in n&&n.buffer instanceof GPUBuffer}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ks(n,e){if(n.dtype===e.dtype)return[n,e];const t=tr(n.dtype,e.dtype);return[n.cast(t),e.cast(t)]}function zk(n,e){z(n.dtype===e.dtype,()=>`The dtypes of the first(${n.dtype}) and second(${e.dtype}) input must match`)}function X6(n,e){return e.some(t=>t.id===n.id)}function pI(n){const e=[];return Gk(n,e,new Set),e}function Gk(n,e,t){if(n==null)return;if(n instanceof cn){e.push(n);return}if(!K6(n))return;const s=n;for(const r in s){const i=s[r];t.has(i)||(t.add(i),Gk(i,e,t))}}function K6(n){return Array.isArray(n)||typeof n=="object"}const J6=Object.freeze(Object.defineProperty({__proto__:null,assertTypesMatch:zk,getTensorsInContainer:pI,isTensorInList:X6,makeTypesMatch:ks},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function X2(n){return n.kernelName!=null}class ZE{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(e=>e.name)))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class Yd{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new ZE}async ready(){if(this.pendingBackendInit!=null)return this.pendingBackendInit.then(()=>{});if(this.backendInstance!=null)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const s=e[t];if(await this.initializeBackend(s).success){await this.setBackend(s);return}}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(this.pendingBackendInit!=null)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(this.backendInstance==null){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry))if(e in this.registryFactory){const{asyncInit:t}=this.initializeBackend(e);if(t)return null}else return null;return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,s=1){return e in this.registryFactory?(to(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:s},!0)}async setBackend(e){if(this.registryFactory[e]==null)throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,this.registry[e]==null){this.backendInstance=null;const{success:t,asyncInit:s}=this.initializeBackend(e);if(!(s?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new Q6(this.backendInstance),!0}setupRegisteredKernels(){S0(this.backendName).forEach(t=>{t.setupFunc!=null&&t.setupFunc(this.backendInstance)})}disposeRegisteredKernels(e){S0(e).forEach(s=>{s.disposeFunc!=null&&s.disposeFunc(this.registry[e])})}initializeBackend(e){const t=this.registryFactory[e];if(t==null)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const s=t.factory();if(s&&!(s instanceof og)&&typeof s.then=="function"){const r=++this.pendingBackendInitId,i=s.then(o=>r<this.pendingBackendInitId?!1:(this.registry[e]=o,this.pendingBackendInit=null,!0)).catch(o=>(r<this.pendingBackendInitId||(this.pendingBackendInit=null,to(`Initialization of backend ${e} failed`),to(o.stack||o.message)),!1));return this.pendingBackendInit=i,{success:i,asyncInit:!0}}else return this.registry[e]=s,{success:!0,asyncInit:!1}}catch(s){return to(`Initialization of backend ${e} failed`),to(s.stack||s.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&this.pendingBackendInit!=null&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(Object.keys(this.registryFactory).length===0)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority)}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const s=e[t],{success:r,asyncInit:i}=this.initializeBackend(s);if(i||r)return{name:s,asyncInit:i}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const s=this.state.tensorInfo.get(t),r=s.backend,i=this.readSync(t),o=r.refCount(t);r.disposeData(t,!0),s.backend=e,e.move(t,i,s.shape,s.dtype,o),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let s=null;if(t==null){if(typeof e!="function")throw new Error("Please provide a function to tidy()");t=e}else{if(typeof e!="string"&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if(typeof t!="function")throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");s=e}let r;return this.scopedRun(()=>this.startScope(s),()=>this.endScope(r),()=>(r=t(),r instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),r))}scopedRun(e,t,s){e();try{const r=s();return t(),r}catch(r){throw t(),r}}nextTensorId(){return Yd.nextTensorId++}nextVariableId(){return Yd.nextVariableId++}clone(e){const t=re.runKernel(nh,{x:e}),s={x:e},r=o=>({x:()=>{const a="float32",l={x:o},c={dtype:a};return re.runKernel(Gu,l,c)}}),i=[];return this.addTapeNode(this.state.activeScope.name,s,[t],r,i,{}),t}runKernel(e,t,s){if(this.backendName==null&&this.backend,!($m(e,this.backendName)!=null))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:s})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,s){const r=this.backend.numDataIds();let i=0;s.forEach(l=>{i+=l.dtype==="complex64"?3:1});const o=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],a=r-t-i-o;if(a>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${a} data ids) after running '${e}'`)}runKernelFunc(e){let t,s=[];const r=this.isTapeOn(),i=this.state.numBytes,o=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);let a;this.backendName==null&&this.backend;let l;const c=X2(e)?e.kernelName:this.state.activeScope!=null?this.state.activeScope.name:"";if(X2(e)){const{kernelName:p,inputs:A,attrs:m}=e;this.backendName==null&&this.backend;const g=$m(p,this.backendName);z(g!=null,()=>`Cannot find registered kernel '${p}' for backend '${this.backendName}'`),a=()=>{const x=this.backend.numDataIds();l=g.kernelFunc({inputs:A,attrs:m,backend:this.backend});const v=Array.isArray(l)?l:[l];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(p,x,v);const b=v.map(w=>w.rank!=null?w:this.makeTensorFromTensorInfo(w));if(r){const w=this.getTensorsForGradient(p,A,b);s=this.saveTensorsForBackwardMode(w)}return b}}else{const{forwardFunc:p}=e,A=m=>{r&&(s=m.map(g=>this.keep(this.clone(g))))};a=()=>{const m=this.backend.numDataIds();l=this.tidy(()=>p(this.backend,A));const g=Array.isArray(l)?l:[l];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(c,m,g),g}}const{inputs:u,attrs:h}=e,d=X2(e)?null:e.backwardsFunc;let f;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{!this.ENV.getBool("DEBUG")&&!this.state.profiling?t=a():(f=this.profiler.profileKernel(c,u,()=>a()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(f),t=f.outputs)}),r&&this.addTapeNode(c,u,t,d,s,h),this.state.profiling&&this.state.activeProfile.kernels.push({name:c,bytesAdded:this.state.numBytes-i,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-o,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(u).map(p=>u[p]!=null?u[p].shape:null),outputShapes:t.map(p=>p.shape),kernelTimeMs:f.timeMs,extraInfo:f.extraInfo}),Array.isArray(l)?t:t[0]}saveTensorsForBackwardMode(e){return e.map(s=>this.keep(this.clone(s)))}getTensorsForGradient(e,t,s){const r=Lv(e);if(r!=null){const i=r.inputsToSave||[],o=r.outputsToSave||[];let a;r.saveAllInputs?(z(Array.isArray(t),()=>"saveAllInputs is true, expected inputs to be an array."),a=Object.keys(t).map(c=>t[c])):a=i.map(c=>t[c]);const l=s.filter((c,u)=>o[u]);return a.concat(l)}return[]}makeTensor(e,t,s,r){if(e==null)throw new Error("Values passed to engine.makeTensor() are null");s=s||"float32",r=r||this.backend;let i=e;s==="string"&&Wo(e[0])&&(i=e.map(l=>Yo(l)));const o=r.write(i,t,s),a=new cn(t,s,o,this.nextTensorId());if(this.trackTensor(a,r),s==="string"){const l=this.state.tensorInfo.get(o),c=Sk(i);this.state.numBytes+=c-l.bytes,l.bytes=c}return a}makeTensorFromDataId(e,t,s,r){s=s||"float32";const i={dataId:e,shape:t,dtype:s};return this.makeTensorFromTensorInfo(i,r)}makeTensorFromTensorInfo(e,t){const{dataId:s,shape:r,dtype:i}=e,o=new cn(r,i,s,this.nextTensorId());return this.trackTensor(o,t),o}makeVariable(e,t=!0,s,r){s=s||this.nextVariableId().toString(),r!=null&&r!==e.dtype&&(e=e.cast(r));const i=new Pm(e,t,s,this.nextTensorId());if(this.state.registeredVariables[i.name]!=null)throw new Error(`Variable with name ${i.name} was already registered`);return this.state.registeredVariables[i.name]=i,this.incRef(i,this.backend),i}trackTensor(e,t){this.state.numTensors++,e.dtype==="string"&&this.state.numStringTensors++;let s=0;e.dtype!=="complex64"&&e.dtype!=="string"&&(s=e.size*Nm(e.dtype)),this.state.numBytes+=s,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:s})),e instanceof Pm||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,e.dtype==="string"&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),e.dtype!=="complex64"&&e.dtype!=="string"){const s=e.size*Nm(e.dtype);this.state.numBytes-=s}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),this.state.registeredVariables[e.name]!=null&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,e.reasons==null&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,s=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(r=>r.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-s;for(const r of this.state.activeProfile.kernels)r.kernelTimeMs=await r.kernelTimeMs,r.extraInfo=await r.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&this.state.kernelDepth===0}addTapeNode(e,t,s,r,i,o){const a={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:s,saved:i},l=Lv(e);l!=null&&(r=l.gradFunc),r!=null&&(a.gradient=c=>(c=c.map((u,h)=>{if(u==null){const d=s[h],f=Ar(d.size,d.dtype);return this.makeTensor(f,d.shape,d.dtype)}return u}),r(c.length>1?c:c[0],i,o))),this.state.activeTape.push(a)}keep(e){return e.kept=!0,e}startTape(){this.state.gradientDepth===0&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=pI(e),s=new Set(t.map(i=>i.id));for(let i=0;i<this.state.activeScope.track.length;i++){const o=this.state.activeScope.track[i];!o.kept&&!s.has(o.id)&&o.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=this.state.scopeStack.length===0?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach(i=>{!i.kept&&i.scopeId===r.id&&this.track(i)})}gradients(e,t,s,r=!1){if(z(t.length>0,()=>"gradients() received an empty list of xs."),s!=null&&s.dtype!=="float32")throw new Error(`dy must have 'float32' dtype, but has '${s.dtype}'`);const i=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",e));z(i instanceof cn,()=>"The result y returned by f() must be a tensor.");const o=G6(this.state.activeTape,t,i);if(!r&&o.length===0&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{const a={};a[i.id]=s??Z6(i.shape),V6(a,o,c=>this.tidy(c),eH);const l=t.map(c=>a[c.id]);return this.state.gradientDepth===0&&(this.state.activeTape.forEach(c=>{for(const u of c.saved)u.dispose()}),this.state.activeTape=null),{value:i,grads:l}})}customGrad(e){return z(nc(e),()=>"The f passed in customGrad(f) must be a function."),(...t)=>{z(t.every(a=>a instanceof cn),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let s;const r={};t.forEach((a,l)=>{r[l]=a});const i=(a,l)=>(s=e(...t,l),z(s.value instanceof cn,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),z(nc(s.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),s.value),o=(a,l)=>{const c=s.gradFunc(a,l),u=Array.isArray(c)?c:[c];z(u.length===t.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),z(u.every(d=>d instanceof cn),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");const h={};return u.forEach((d,f)=>{h[f]=()=>d}),h};return this.runKernelFunc({forwardFunc:i,backwardsFunc:o,inputs:r})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){const t=Kr(),s=await this.backend.time(e);return s.wallMs=Kr()-t,s}track(e){return this.state.activeScope!=null&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new ZE;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}Yd.nextTensorId=0;Yd.nextVariableId=0;function Z6(n){const e=yx(ye(n),"float32");return re.makeTensor(e,n,"float32")}function Vk(){const n=Bk();if(n._tfengine==null){const e=new Tk(n);n._tfengine=new Yd(e)}return y6(n._tfengine.ENV),q6(()=>n._tfengine),n._tfengine}const re=Vk();function eH(n,e){const t={a:n,b:e};return re.runKernel(mc,t)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tH(){return typeof navigator<"u"&&navigator!=null}let Wv;function nH(n){Wv=n}function mI(n){if(Wv!==void 0)return Wv;if(n||tH()){if(n||(n=navigator),n.product==="ReactNative")return!0;const e=n.userAgent||n.vendor||(typeof window<"u"?window.opera:"");if(!e){const t=n;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(e)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(e.substr(0,4))}return!1}function gI(){return typeof window<"u"&&window.document!=null||typeof WorkerGlobalScope<"u"}const sH=Object.freeze(Object.defineProperty({__proto__:null,isBrowser:gI,isMobile:mI,mockIsMobile:nH},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vi=xe();vi.registerFlag("DEBUG",()=>!1,n=>{n&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")});vi.registerFlag("IS_BROWSER",()=>gI());vi.registerFlag("IS_NODE",()=>typeof process<"u"&&typeof process.versions<"u"&&typeof process.versions.node<"u");vi.registerFlag("IS_CHROME",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor));vi.registerFlag("IS_SAFARI",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Safari/.test(navigator.userAgent)&&/Apple/.test(navigator.vendor));vi.registerFlag("PROD",()=>!1);vi.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>vi.getBool("DEBUG"));vi.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0);vi.registerFlag("IS_TEST",()=>!1);vi.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>vi.getBool("DEBUG"));vi.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1);vi.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",()=>!1);vi.registerFlag("USE_SETTIMEOUTCUSTOM",()=>!1);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ba(n,e){let t=n;if(ur(n))return e==="string"?[]:[n.length];if(Qk(n)){const r=n.channels||"RGBA";return[n.height,n.width*r.length]}else if(Uk(n))return[n.buffer.size/(e==null?4:Nm(e))];if(!Array.isArray(n))return[];const s=[];for(;Array.isArray(t)||ur(t)&&e!=="string";)s.push(t.length),t=t[0];return Array.isArray(n)&&xe().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&Wk(n,s,[]),s}function Wk(n,e,t){if(t=t||[],!Array.isArray(n)&&!ur(n)){z(e.length===0,()=>`Element arr[${t.join("][")}] is a primitive, but should be an array/TypedArray of ${e[0]} elements`);return}z(e.length>0,()=>`Element arr[${t.join("][")}] should be a primitive, but is an array of ${n.length} elements`),z(n.length===e[0],()=>`Element arr[${t.join("][")}] should have ${e[0]} elements, but has ${n.length} elements`);const s=e.slice(1);for(let r=0;r<n.length;++r)Wk(n[r],s,t.concat(r))}function e_(n,e,t,s){if(n!=="string_or_numeric"){if(n==null)throw new Error("Expected dtype cannot be null.");if(n!=="numeric"&&n!==e||n==="numeric"&&e==="string")throw new Error(`Argument '${t}' passed to '${s}' must be ${n} tensor, but got ${e} tensor`)}}function q(n,e,t,s="numeric"){if(n instanceof Me())return e_(s,n.dtype,e,t),n;let r=pc(n);if(r!=="string"&&["bool","int32","float32"].indexOf(s)>=0&&(r=s),e_(s,r,e,t),n==null||!ur(n)&&!Array.isArray(n)&&typeof n!="number"&&typeof n!="boolean"&&typeof n!="string"){const l=n==null?"null":n.constructor.name;throw new Error(`Argument '${e}' passed to '${t}' must be a Tensor or TensorLike, but got '${l}'`)}const i=Ba(n,r);!ur(n)&&!Array.isArray(n)&&(n=[n]);const a=r!=="string"?gc(n,r):_o(n,[],!0);return re.makeTensor(a,i,r)}function Lm(n,e,t,s="numeric"){if(!Array.isArray(n))throw new Error(`Argument ${e} passed to ${t} must be a \`Tensor[]\` or \`TensorLike[]\``);return n.map((i,o)=>q(i,`${e}[${o}]`,t,s))}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AI="__op";function ie(n){const e=Object.keys(n);if(e.length!==1)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${e.length} keys.`);let t=e[0];const s=n[t];t.endsWith("_")&&(t=t.substring(0,t.length-1)),t=t+AI;const r=(...i)=>{re.startScope(t);try{const o=s(...i);return sc(o)&&console.error("Cannot return a Promise inside of tidy."),re.endScope(o),o}catch(o){throw re.endScope(null),o}};return Object.defineProperty(r,"name",{value:t,configurable:!0}),r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rH(n,e){const t=q(n,"real","complex"),s=q(e,"imag","complex");br(t.shape,s.shape,`real and imag shapes, ${t.shape} and ${s.shape}, must match in call to tf.complex().`);const r={real:t,imag:s};return re.runKernel(pg,r)}const gl=ie({complex_:rH});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ac(n,e,t,s){if(s==null)s=pc(n);else if(s==="complex64")throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(Uk(n)||Qk(n)){if(s!=="float32"&&s!=="int32")throw new Error(`Creating tensor from GPU data only supports 'float32'|'int32' dtype, while the dtype is ${s}.`);return re.backend.createTensorFromGPUData(n,e||t,s)}if(!ur(n)&&!Array.isArray(n)&&typeof n!="number"&&typeof n!="boolean"&&typeof n!="string")throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(e!=null){ji(e);const r=ye(e),i=ye(t);z(r===i,()=>`Based on the provided shape, [${e}], the tensor should have ${r} values but has ${i}`);for(let o=0;o<t.length;++o){const a=t[o],l=o===t.length-1?a!==ye(e.slice(o)):!0;z(t[o]===e[o]||!l,()=>`Error creating a new Tensor. Inferred shape (${t}) does not match the provided shape (${e}). `)}}return!ur(n)&&!Array.isArray(n)&&(n=[n]),e=e||t,n=s!=="string"?gc(n,s):_o(n,[],!0),re.makeTensor(n,e,s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ao(n,e,t){const s=Ba(n,t);return Ac(n,e,s,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vu={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};class ra{static join(e){return new ra(e).slice()}constructor(e){if(this.shards=[],this.previousShardIndex=0,e==null||(e instanceof Array||(e=[e]),e=e.map(s=>ur(s)?s.buffer:s),e.length===0))return;this.bufferUniformSize=e[0].byteLength;let t=0;for(let s=0;s<e.length;s++){const r=e[s];s!==e.length-1&&r.byteLength!==this.bufferUniformSize&&(this.bufferUniformSize=void 0);const i=t+r.byteLength;this.shards.push({buffer:r,start:t,end:i}),t=i}this.shards.length===0&&(this.byteLength=0),this.byteLength=this.shards[this.shards.length-1].end}slice(e=0,t=this.byteLength){if(this.shards.length===0)return new ArrayBuffer(0);if(e=isNaN(Number(e))?0:e,t=isNaN(Number(t))?0:t,e=Math.max(0,e),t=Math.min(this.byteLength,t),t<=e)return new ArrayBuffer(0);const s=this.findShardForByte(e);if(s===-1)throw new Error(`Could not find start shard for byte ${e}`);const r=t-e,i=new ArrayBuffer(r),o=new Uint8Array(i);let a=0;for(let l=s;l<this.shards.length;l++){const c=this.shards[l],h=e+a-c.start,d=a,p=Math.min(t,c.end)-c.start,A=new Uint8Array(c.buffer,h,p-h);if(o.set(A,d),a+=A.length,t<c.end)break}return i}findShardForByte(e){if(this.shards.length===0||e<0||e>=this.byteLength)return-1;if(this.bufferUniformSize!=null)return this.previousShardIndex=Math.floor(e/this.bufferUniformSize),this.previousShardIndex;function t(r){return e<r.start?-1:e>=r.end?1:0}if(t(this.shards[this.previousShardIndex])===0)return this.previousShardIndex;const s=iH(this.shards,t);return s===-1?-1:(this.previousShardIndex=s,this.previousShardIndex)}}function iH(n,e){let t=0,s=n.length;for(;t<=s;){const r=Math.floor((s-t)/2)+t,i=e(n[r]);if(i===0)return r;i<0?s=r:t=r+1}return-1}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oH(){xe().set("PROD",!0)}function aH(){xe().set("DEBUG",!0)}function lH(){xe().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function cH(n){xe().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(n+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function uH(){re.disposeVariables()}function lr(){return re}function Hv(){return re.memory()}function hH(n){return re.profile(n)}function ue(n,e){return re.tidy(n,e)}function zt(n){pI(n).forEach(t=>t.dispose())}function Xs(n){return re.keep(n)}function dH(n){return re.time(n)}function Hk(n){return re.setBackend(n)}function qk(){return re.ready()}function Cu(){return re.backendName}function fH(n){re.removeBackend(n)}function pH(n){return re.findBackend(n)}function mH(n){return re.findBackendFactory(n)}function Tx(n,e,t=1){return re.registerBackend(n,e,t)}function Al(){return re.backend}function gH(n,e){xe().setPlatform(n,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rc=4;async function qv(n,e){const t=[],s=[],r=Array.isArray(n)?n.map(o=>o.name):Object.keys(n);for(let o=0;o<r.length;++o){const a=r[o],l=Array.isArray(n)?n[o].tensor:n[a];if(l.dtype!=="float32"&&l.dtype!=="int32"&&l.dtype!=="bool"&&l.dtype!=="string"&&l.dtype!=="complex64")throw new Error(`Unsupported dtype in weight '${a}': ${l.dtype}`);const c={name:a,shape:l.shape,dtype:l.dtype};if(l.dtype==="string"){const u=new Promise(async h=>{const d=await l.bytes(),f=d.reduce((m,g)=>m+g.length,0)+rc*d.length,p=new Uint8Array(f);let A=0;for(let m=0;m<d.length;m++){const g=d[m],x=new Uint8Array(new Uint32Array([g.length]).buffer);p.set(x,A),A+=rc,p.set(g,A),A+=g.length}h(p)});s.push(u)}else s.push(l.data());e!=null&&(c.group=e),t.push(c)}const i=await Promise.all(s);return{data:xH(i),specs:t}}function Yk(n,e){const t=new ra(n),s={};let r=0;for(const i of e){const o=AH(i,(a,l)=>t.slice(r+a,r+l));s[i.name]=jk(i,t.slice(r,r+o)),r+=o}return s}function AH(n,e){const t=ye(n.shape);let s;if("quantization"in n){const r=n.quantization;s=vu[r.dtype]}else if(n.dtype==="string"){let r=0;for(let i=0;i<t;i++)r+=rc+new Uint32Array(e(r,r+rc))[0];return r}else s=vu[n.dtype];return t*s}async function yH(n,e){const t=ye(n.shape);let s;if("quantization"in n){const r=n.quantization;s=vu[r.dtype]}else if(n.dtype==="string"){let r=0;for(let i=0;i<t;i++)r+=rc+new Uint32Array(await e(r,r+rc))[0];return r}else s=vu[n.dtype];return t*s}function jk(n,e){const t=n.name,s=n.dtype,r=n.shape,i=ye(r);let o,a=0;if("quantization"in n){const l=n.quantization;if(l.dtype==="uint8"||l.dtype==="uint16"){if(!("min"in l&&"scale"in l))throw new Error(`Weight ${n.name} with quantization ${l.dtype} doesn't have corresponding metadata min and scale.`)}else if(l.dtype==="float16"){if(s!=="float32")throw new Error(`Weight ${n.name} is quantized with ${l.dtype} which only supports weights of type float32 not ${s}.`)}else throw new Error(`Weight ${n.name} has unknown quantization dtype ${l.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);const c=vu[l.dtype],u=l.dtype==="uint8"?new Uint8Array(e):new Uint16Array(e);if(s==="float32")if(l.dtype==="uint8"||l.dtype==="uint16"){o=new Float32Array(u.length);for(let h=0;h<u.length;h++){const d=u[h];o[h]=d*l.scale+l.min}}else if(l.dtype==="float16")o=SH()(u);else throw new Error(`Unsupported quantization type ${l.dtype} for weight type float32.`);else if(s==="int32"){if(l.dtype!=="uint8"&&l.dtype!=="uint16")throw new Error(`Unsupported quantization type ${l.dtype} for weight type int32.`);o=new Int32Array(u.length);for(let h=0;h<u.length;h++){const d=u[h];o[h]=Math.round(d*l.scale+l.min)}}else throw new Error(`Unsupported dtype in weight '${t}': ${s}`);a+=i*c}else if(s==="string"){const l=ye(n.shape);o=[];for(let c=0;c<l;c++){const u=new Uint32Array(e.slice(a,a+rc))[0];a+=rc;const h=new Uint8Array(e.slice(a,a+u));o.push(h),a+=u}}else{const l=vu[s];if(s==="float32")o=new Float32Array(e);else if(s==="int32")o=new Int32Array(e);else if(s==="bool")o=new Uint8Array(e);else if(s==="complex64"){o=new Float32Array(e);const c=new Float32Array(o.length/2),u=new Float32Array(o.length/2);for(let p=0;p<c.length;p++)c[p]=o[p*2],u[p]=o[p*2+1];const h=ao(c,r,"float32"),d=ao(u,r,"float32"),f=gl(h,d);return h.dispose(),d.dispose(),f}else throw new Error(`Unsupported dtype in weight '${t}': ${s}`);a+=i*l}return ao(o,r,s)}async function t_(n,e,t){let s=new Uint8Array(e);for(;s.byteLength<t;){const{done:r,value:i}=await n.read();if(r&&i==null){const a=t-s.byteLength;throw new Error(`Reader is done but ${a} bytes are still expected`)}const o=new Uint8Array(s.length+i.byteLength);o.set(s,0),o.set(new Uint8Array(i),s.length),s=o}return s.buffer}async function Xk(n,e){const t={},s=n.getReader();let r=new ArrayBuffer(0);for(const i of e){const o=await yH(i,async(c,u)=>(r=await t_(s,r,u),r.slice(c,u)));r=await t_(s,r,o);const a=r.slice(0,o);r=r.slice(o);const l=jk(i,a);if(t[i.name]=l,Cu()==="webgpu"){const c=Al();"uploadToGPU"in c&&ye(l.shape)>=xe().get("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD")&&c.uploadToGPU(l.dataId)}}return t}function xH(n){if(n===null)throw new Error(`Invalid input value: ${JSON.stringify(n)}`);let e=0;const t=[];n.forEach(i=>{if(e+=i.byteLength,t.push(i.byteLength===i.buffer.byteLength?i:new i.constructor(i)),!(i instanceof Float32Array||i instanceof Int32Array||i instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${i.constructor.name}`)});const s=new Uint8Array(e);let r=0;return t.forEach(i=>{s.set(new Uint8Array(i.buffer),r),r+=i.byteLength}),s.buffer}const yI=typeof Buffer<"u"&&(typeof Blob>"u"||typeof atob>"u"||typeof btoa>"u");function n_(n){return yI?Buffer.byteLength(n,"utf8"):new Blob([n]).size}function bH(n){if(yI)return Buffer.from(n).toString("base64");const e=new Uint8Array(n);let t="";for(let s=0,r=e.length;s<r;s++)t+=String.fromCharCode(e[s]);return btoa(t)}function vH(n){if(yI){const s=Buffer.from(n,"base64");return s.buffer.slice(s.byteOffset,s.byteOffset+s.byteLength)}const e=atob(n),t=new Uint8Array(e.length);for(let s=0;s<e.length;++s)t.set([e.charCodeAt(s)],s);return t.buffer}function Kk(n){return ra.join(n)}function s_(n){for(n=n.trim();n.endsWith("/");)n=n.slice(0,n.length-1);const t=n.split("/");return t[t.length-1]}function Jk(n,e){const t={modelTopology:n.modelTopology,format:n.format,generatedBy:n.generatedBy,convertedBy:n.convertedBy,weightsManifest:e};return n.signature!=null&&(t.signature=n.signature),n.userDefinedMetadata!=null&&(t.userDefinedMetadata=n.userDefinedMetadata),n.modelInitializer!=null&&(t.modelInitializer=n.modelInitializer),n.initializerSignature!=null&&(t.initializerSignature=n.initializerSignature),n.trainingConfig!=null&&(t.trainingConfig=n.trainingConfig),t}function Zk(n,e,t){const s={modelTopology:n.modelTopology,format:n.format,generatedBy:n.generatedBy,convertedBy:n.convertedBy};if(n.trainingConfig!=null&&(s.trainingConfig=n.trainingConfig),n.weightsManifest!=null){if(!e)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!t)throw new Error("modelJSON has weightsManifest but weightData is null");s.weightSpecs=e,s.weightData=t}return n.signature!=null&&(s.signature=n.signature),n.userDefinedMetadata!=null&&(s.userDefinedMetadata=n.userDefinedMetadata),n.modelInitializer!=null&&(s.modelInitializer=n.modelInitializer),n.initializerSignature!=null&&(s.initializerSignature=n.initializerSignature),s}async function xI(n,e){let t,s;return n.weightsManifest!=null&&([t,s]=await e(n.weightsManifest)),Zk(n,t,s)}function lA(n){if(n.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:n.modelTopology==null?0:n_(JSON.stringify(n.modelTopology)),weightSpecsBytes:n.weightSpecs==null?0:n_(JSON.stringify(n.weightSpecs)),weightDataBytes:n.weightData==null?0:new ra(n.weightData).byteLength}}function Yv(n){const e=[];for(const t of n)e.push(...t.weights);return e}function CH(){const n=t=>{let s=t<<13,r=0;for(;(s&8388608)===0;)r-=8388608,s<<=1;return s&=-8388609,r+=947912704,s|r},e=new Uint32Array(2048);e[0]=0;for(let t=1;t<1024;t++)e[t]=n(t);for(let t=1024;t<2048;t++)e[t]=939524096+(t-1024<<13);return e}function IH(){const n=new Uint32Array(64);n[0]=0,n[31]=1199570944,n[32]=2147483648,n[63]=3347054592;for(let e=1;e<31;e++)n[e]=e<<23;for(let e=33;e<63;e++)n[e]=2147483648+(e-32<<23);return n}function wH(){const n=new Uint32Array(64);for(let e=0;e<64;e++)n[e]=1024;return n[0]=n[32]=0,n}function SH(){const n=CH(),e=IH(),t=wH();return s=>{const r=new ArrayBuffer(4*s.length),i=new Uint32Array(r);for(let o=0;o<s.length;o++){const a=s[o],l=n[t[a>>10]+(a&1023)]+e[a>>10];i[o]=l}return new Float32Array(r)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Es{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return Es.instance==null&&(Es.instance=new Es),Es.instance}static registerSaveRouter(e){Es.getInstance().saveRouters.push(e)}static registerLoadRouter(e){Es.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return Es.getHandlers(e,"save")}static getLoadHandlers(e,t){return Es.getHandlers(e,"load",t)}static getHandlers(e,t,s){const r=[];return(t==="load"?Es.getInstance().loadRouters:Es.getInstance().saveRouters).forEach(o=>{const a=o(e,s);a!==null&&r.push(a)}),r}}const EH=n=>Es.registerSaveRouter(n),_H=n=>Es.registerLoadRouter(n),eN=n=>Es.getSaveHandlers(n),TH=(n,e)=>Es.getLoadHandlers(n,e);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jv="tensorflowjs",Xv=1,uu="models_store",Vl="model_info_store";function tN(){if(!xe().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const n=typeof window>"u"?self:window,e=n.indexedDB||n.mozIndexedDB||n.webkitIndexedDB||n.msIndexedDB||n.shimIndexedDB;if(e==null)throw new Error("The current browser does not appear to support IndexedDB.");return e}function Kv(n){const e=n.result;e.createObjectStore(uu,{keyPath:"modelPath"}),e.createObjectStore(Vl,{keyPath:"modelPath"})}class Iu{constructor(e){if(this.indexedDB=tN(),e==null||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise((s,r)=>{const i=this.indexedDB.open(jv,Xv);i.onupgradeneeded=()=>Kv(i),i.onsuccess=()=>{const o=i.result;if(t==null){const a=o.transaction(uu,"readonly"),c=a.objectStore(uu).get(this.modelPath);c.onsuccess=()=>{if(c.result==null)return o.close(),r(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));s(c.result.modelArtifacts)},c.onerror=u=>(o.close(),r(c.error)),a.oncomplete=()=>o.close()}else{t.weightData=ra.join(t.weightData);const a=lA(t),l=o.transaction(Vl,"readwrite");let c=l.objectStore(Vl),u;try{u=c.put({modelPath:this.modelPath,modelArtifactsInfo:a})}catch(d){return r(d)}let h;u.onsuccess=()=>{h=o.transaction(uu,"readwrite");const d=h.objectStore(uu);let f;try{f=d.put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:a})}catch(p){return r(p)}f.onsuccess=()=>s({modelArtifactsInfo:a}),f.onerror=p=>{c=l.objectStore(Vl);const A=c.delete(this.modelPath);A.onsuccess=()=>(o.close(),r(f.error)),A.onerror=m=>(o.close(),r(f.error))}},u.onerror=d=>(o.close(),r(u.error)),l.oncomplete=()=>{h==null?o.close():h.oncomplete=()=>o.close()}}},i.onerror=o=>r(i.error)})}}Iu.URL_SCHEME="indexeddb://";const nN=n=>xe().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(Iu.URL_SCHEME)?BH(n.slice(Iu.URL_SCHEME.length)):null;Es.registerSaveRouter(nN);Es.registerLoadRouter(nN);function BH(n){return new Iu(n)}function kH(n){return n.startsWith(Iu.URL_SCHEME)?n.slice(Iu.URL_SCHEME.length):n}class NH{constructor(){this.indexedDB=tN()}async listModels(){return new Promise((e,t)=>{const s=this.indexedDB.open(jv,Xv);s.onupgradeneeded=()=>Kv(s),s.onsuccess=()=>{const r=s.result,i=r.transaction(Vl,"readonly"),a=i.objectStore(Vl).getAll();a.onsuccess=()=>{const l={};for(const c of a.result)l[c.modelPath]=c.modelArtifactsInfo;e(l)},a.onerror=l=>(r.close(),t(a.error)),i.oncomplete=()=>r.close()},s.onerror=r=>t(s.error)})}async removeModel(e){return e=kH(e),new Promise((t,s)=>{const r=this.indexedDB.open(jv,Xv);r.onupgradeneeded=()=>Kv(r),r.onsuccess=()=>{const i=r.result,o=i.transaction(Vl,"readwrite"),a=o.objectStore(Vl),l=a.get(e);let c;l.onsuccess=()=>{if(l.result==null)return i.close(),s(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const u=a.delete(e),h=()=>{c=i.transaction(uu,"readwrite");const f=c.objectStore(uu).delete(e);f.onsuccess=()=>t(l.result.modelArtifactsInfo),f.onerror=p=>s(l.error)};u.onsuccess=h,u.onerror=d=>(h(),i.close(),s(l.error))}},l.onerror=u=>(i.close(),s(l.error)),o.oncomplete=()=>{c==null?i.close():c.oncomplete=()=>i.close()}},r.onerror=i=>s(r.error)})}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rl="/",Td="tensorflowjs_models",sN="info",RH="model_topology",MH="weight_specs",DH="weight_data",FH="model_metadata";function rN(n){return{info:[Td,n,sN].join(rl),topology:[Td,n,RH].join(rl),weightSpecs:[Td,n,MH].join(rl),weightData:[Td,n,DH].join(rl),modelMetadata:[Td,n,FH].join(rl)}}function iN(n){for(const e of Object.values(n))window.localStorage.removeItem(e)}function $H(n){const e=n.split(rl);if(e.length<3)throw new Error(`Invalid key format: ${n}`);return e.slice(1,e.length-1).join(rl)}function PH(n){return n.startsWith(wu.URL_SCHEME)?n.slice(wu.URL_SCHEME.length):n}class wu{constructor(e){if(!xe().getBool("IS_BROWSER")||typeof window>"u"||typeof window.localStorage>"u")throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,e==null||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=rN(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const t=JSON.stringify(e.modelTopology),s=JSON.stringify(e.weightSpecs),r=lA(e),i=ra.join(e.weightData);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,s),this.LS.setItem(this.keys.weightData,bH(i));const o={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:e.signature!=null?e.signature:void 0,userDefinedMetadata:e.userDefinedMetadata!=null?e.userDefinedMetadata:void 0,modelInitializer:e.modelInitializer!=null?e.modelInitializer:void 0,initializerSignature:e.initializerSignature!=null?e.initializerSignature:void 0,trainingConfig:e.trainingConfig!=null?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(o)),{modelArtifactsInfo:r}}catch{throw iN(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(e==null)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if(e.modelTopologyType!=="JSON")throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},s=JSON.parse(this.LS.getItem(this.keys.topology));if(s==null)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=s;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(r==null)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;const i=this.LS.getItem(this.keys.modelMetadata);if(i!=null){const a=JSON.parse(i);t.format=a.format,t.generatedBy=a.generatedBy,t.convertedBy=a.convertedBy,a.signature!=null&&(t.signature=a.signature),a.userDefinedMetadata!=null&&(t.userDefinedMetadata=a.userDefinedMetadata),a.modelInitializer!=null&&(t.modelInitializer=a.modelInitializer),a.initializerSignature!=null&&(t.initializerSignature=a.initializerSignature),a.trainingConfig!=null&&(t.trainingConfig=a.trainingConfig)}const o=this.LS.getItem(this.keys.weightData);if(o==null)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=vH(o),t}}wu.URL_SCHEME="localstorage://";const oN=n=>xe().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(wu.URL_SCHEME)?LH(n.slice(wu.URL_SCHEME.length)):null;Es.registerSaveRouter(oN);Es.registerLoadRouter(oN);function LH(n){return new wu(n)}class OH{constructor(){z(xe().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),z(typeof window>"u"||typeof window.localStorage<"u",()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){const e={},t=Td+rl,s=rl+sN;for(let r=0;r<this.LS.length;++r){const i=this.LS.key(r);if(i.startsWith(t)&&i.endsWith(s)){const o=$H(i);e[o]=JSON.parse(this.LS.getItem(i))}}return e}async removeModel(e){e=PH(e);const t=rN(e);if(this.LS.getItem(t.info)==null)throw new Error(`Cannot find model at path '${e}'`);const s=JSON.parse(this.LS.getItem(t.info));return iN(t),s}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Dd="://";class Jr{constructor(){this.managers={}}static getInstance(){return Jr.instance==null&&(Jr.instance=new Jr),Jr.instance}static registerManager(e,t){z(e!=null,()=>"scheme must not be undefined or null."),e.endsWith(Dd)&&(e=e.slice(0,e.indexOf(Dd))),z(e.length>0,()=>"scheme must not be an empty string.");const s=Jr.getInstance();z(s.managers[e]==null,()=>`A model store manager is already registered for scheme '${e}'.`),s.managers[e]=t}static getManager(e){const t=Jr.getInstance().managers[e];if(t==null)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(Jr.getInstance().managers)}}function Zy(n){if(n.indexOf(Dd)===-1)throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${Jr.getSchemes().join(",")}`);return{scheme:n.split(Dd)[0],path:n.split(Dd)[1]}}async function aN(n,e,t=!1){z(n!==e,()=>`Old path and new path are the same: '${n}'`);const s=Es.getLoadHandlers(n);z(s.length>0,()=>`Copying failed because no load handler is found for source URL ${n}.`),z(s.length<2,()=>`Copying failed because more than one (${s.length}) load handlers for source URL ${n}.`);const r=s[0],i=Es.getSaveHandlers(e);z(i.length>0,()=>`Copying failed because no save handler is found for destination URL ${e}.`),z(i.length<2,()=>`Copying failed because more than one (${s.length}) save handlers for destination URL ${e}.`);const o=i[0],a=Zy(n).scheme,l=Zy(n).path,c=a===Zy(n).scheme,u=await r.load();t&&c&&await Jr.getManager(a).removeModel(l);const h=await o.save(u);return t&&!c&&await Jr.getManager(a).removeModel(l),h.modelArtifactsInfo}async function QH(){const n=Jr.getSchemes(),e={};for(const t of n){const s=await Jr.getManager(t).listModels();for(const r in s){const i=t+Dd+r;e[i]=s[r]}}return e}async function UH(n){const e=Zy(n);return Jr.getManager(e.scheme).removeModel(e.path)}async function zH(n,e){return aN(n,e,!1)}async function GH(n,e){return aN(n,e,!0)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class VH{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return this.textEncoder==null&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}setTimeoutCustom(e,t){if(typeof window>"u"||!xe().getBool("USE_SETTIMEOUTCUSTOM")){setTimeout(e,t);return}this.functionRefs.push(e),setTimeout(()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")},t),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",s=>{if(s.source===window&&s.data.name===this.messageName){s.stopPropagation();const r=this.functionRefs[s.data.index];r(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0)}},!0))}isTypedArray(e){return Mk(e)}}if(xe().get("IS_BROWSER")){xe().setPlatform("browser",new VH);try{Jr.registerManager(wu.URL_SCHEME,new OH)}catch{}try{Jr.registerManager(Iu.URL_SCHEME,new NH)}catch{}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WH={importFetch:()=>require("node-fetch")};let K2;class HH{constructor(){this.util=require("util"),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return xe().global.fetch!=null?xe().global.fetch(e,t):(K2==null&&(K2=WH.importFetch()),K2(e,t))}now(){const e=process.hrtime();return e[0]*1e3+e[1]/1e6}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return e.length===0?"":new this.util.TextDecoder(t).decode(e)}isTypedArray(e){return this.util.types.isFloat32Array(e)||this.util.types.isInt32Array(e)||this.util.types.isUint8Array(e)||this.util.types.isUint8ClampedArray(e)}}xe().get("IS_NODE")&&!xe().get("IS_BROWSER")&&xe().setPlatform("node",new HH);/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rn(n,e="float32",t){return e=e||"float32",ji(n),new Vs(n,e,t)}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qH(n,e){const t=q(n,"x","cast");if(!wk(e))throw new Error(`Failed to cast to unknown dtype ${e}`);if(e==="string"&&t.dtype!=="string"||e!=="string"&&t.dtype==="string")throw new Error("Only strings can be casted to strings");const s={x:t},r={dtype:e};return re.runKernel(Gu,s,r)}const Ze=ie({cast_:qH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YH(n){const t={x:q(n,"x","clone","string_or_numeric")};return re.runKernel(nh,t)}const Ia=ie({clone_:YH});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bI(n,e=!1){console.log(n.toString(e))}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Vk();const jH={buffer:rn,cast:Ze,clone:Ia,print:bI};Y6(jH);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XH(n,e){let t=q(n,"a","add"),s=q(e,"b","add");[t,s]=ks(t,s);const r={a:t,b:s};return re.runKernel(mc,r)}const $e=ie({add_:XH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KH(n,e){let t=q(n,"a","floorDiv"),s=q(e,"b","floorDiv");[t,s]=ks(t,s);const r={a:t,b:s};return re.runKernel(eh,r)}const Bx=ie({floorDiv_:KH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JH(n,e){let t=q(n,"a","div"),s=q(e,"b","div");if([t,s]=ks(t,s),t.dtype==="int32"&&s.dtype==="int32")return Bx(t,s);const r={a:t,b:s},i={};return re.runKernel(Yu,r,i)}const rt=ie({div_:JH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZH(n,e){let t=q(n,"a","mul"),s=q(e,"b","mul");[t,s]=ks(t,s);const r={a:t,b:s};return re.runKernel(hh,r)}const ne=ie({mul_:ZH});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function e8(n){const e=q(n,"x","abs");if(e.dtype==="complex64"){const t={x:e};return re.runKernel(Cf,t)}else{const t={x:e};return re.runKernel(pf,t)}}const Gs=ie({abs_:e8});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function t8(n){const t={x:q(n,"x","acos")};return re.runKernel($u,t)}const vI=ie({acos_:t8});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function n8(n){const t={x:q(n,"x","acosh")};return re.runKernel(Pu,t)}const CI=ie({acosh_:n8});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function s8(n){z(Array.isArray(n),()=>"The argument passed to tf.addN() must be a list of tensors"),z(n.length>=1,()=>`Must pass at least one tensor to tf.addN(), but got ${n.length}`);const e=n.map((r,i)=>q(r,`tensors${i}`,"addN")),t=e[0];e.forEach(r=>{if(r.dtype!==t.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),e.forEach(r=>{if(!dn(r.shape,t.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});const s=e;return re.runKernel(mf,s)}const lN=ie({addN_:s8});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function r8(n,e=null,t=!1){const r={x:q(n,"x","all","bool")},i={axis:e,keepDims:t};return re.runKernel(ag,r,i)}const kx=ie({all_:r8});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function i8(n,e=null,t=!1){const r={x:q(n,"x","any","bool")},i={axis:e,keepDims:t};return re.runKernel(lg,r,i)}const Om=ie({any_:i8});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function o8(n,e=0){const s={x:q(n,"x","argMax")},r={axis:e};return re.runKernel(gf,s,r)}const yl=ie({argMax_:o8});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a8(n,e=0){const s={x:q(n,"x","argMin")},r={axis:e};return re.runKernel(Af,s,r)}const II=ie({argMin_:a8});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function l8(n){const t={x:q(n,"x","asin")};return re.runKernel(Lu,t)}const wI=ie({asin_:l8});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function c8(n){const t={x:q(n,"x","asinh")};return re.runKernel(Ou,t)}const SI=ie({asinh_:c8});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function u8(n){const t={x:q(n,"x","atan")};return re.runKernel(Qu,t)}const EI=ie({atan_:u8});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function h8(n,e){let t=q(n,"a","atan2"),s=q(e,"b","atan2");[t,s]=ks(t,s);const r={a:t,b:s};return re.runKernel(zu,r)}const _I=ie({atan2_:h8});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function d8(n){const t={x:q(n,"x","atanh")};return re.runKernel(Uu,t)}const TI=ie({atanh_:d8});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yc(n,e,t,s,r="NHWC",i){const o=n[3],a=[...e,o],l=Xi(r);return As(n,a,t,i,s,null,null,l)}function Pr(n,e,t,s,r,i,o="channelsLast"){const[a,l]=Qm(e);let c;if(o==="channelsLast")c=[a,l,n[3],n[3]];else if(o==="channelsFirst")c=[a,l,n[1],n[1]];else throw new Error(`Unknown dataFormat ${o}`);return As(n,c,t,s,r,i,!1,o)}function fo(n,e,t,s,r,i,o="NDHWC"){const[a,l,c]=Jv(e);let u,h;if(o==="NDHWC")h="channelsLast",u=[a,l,c,n[4],n[4]];else if(o==="NCDHW")h="channelsFirst",u=[a,l,c,n[1],n[1]];else throw new Error(`Unknown dataFormat ${o}`);return ia(n,u,t,s,r,!1,h,i)}function As(n,e,t,s,r,i,o=!1,a="channelsLast"){let[l,c,u,h]=[-1,-1,-1,-1];if(a==="channelsLast")[l,c,u,h]=n;else if(a==="channelsFirst")[l,h,c,u]=n;else throw new Error(`Unknown dataFormat ${a}`);const[d,f,,p]=e,[A,m]=Qm(t),[g,x]=Qm(s),v=Fd(d,g),b=Fd(f,x),{padInfo:w,outHeight:_,outWidth:N}=m8(r,c,u,A,m,v,b,i,a),M=o?p*h:p;let T;return a==="channelsFirst"?T=[l,M,_,N]:a==="channelsLast"&&(T=[l,_,N,M]),{batchSize:l,dataFormat:a,inHeight:c,inWidth:u,inChannels:h,outHeight:_,outWidth:N,outChannels:M,padInfo:w,strideHeight:A,strideWidth:m,filterHeight:d,filterWidth:f,effectiveFilterHeight:v,effectiveFilterWidth:b,dilationHeight:g,dilationWidth:x,inShape:n,outShape:T,filterShape:e}}function ia(n,e,t,s,r,i=!1,o="channelsLast",a){let[l,c,u,h,d]=[-1,-1,-1,-1,-1];if(o==="channelsLast")[l,c,u,h,d]=n;else if(o==="channelsFirst")[l,d,c,u,h]=n;else throw new Error(`Unknown dataFormat ${o}`);const[f,p,A,,m]=e,[g,x,v]=Jv(t),[b,w,_]=Jv(s),N=Fd(f,b),M=Fd(p,w),T=Fd(A,_),{padInfo:k,outDepth:B,outHeight:L,outWidth:U}=g8(r,c,u,h,g,x,v,N,M,T,a),V=i?m*d:m;let W;return o==="channelsFirst"?W=[l,V,B,L,U]:o==="channelsLast"&&(W=[l,B,L,U,V]),{batchSize:l,dataFormat:o,inDepth:c,inHeight:u,inWidth:h,inChannels:d,outDepth:B,outHeight:L,outWidth:U,outChannels:V,padInfo:k,strideDepth:g,strideHeight:x,strideWidth:v,filterDepth:f,filterHeight:p,filterWidth:A,effectiveFilterDepth:N,effectiveFilterHeight:M,effectiveFilterWidth:T,dilationDepth:b,dilationHeight:w,dilationWidth:_,inShape:n,outShape:W,filterShape:e}}function f8(n,e,t,s,r){s==null&&(s=BI(n,e,t));const i=n[0],o=n[1],a=Um((i-e+2*s)/t+1,r),l=Um((o-e+2*s)/t+1,r);return[a,l]}function p8(n,e,t,s,r,i){r==null&&(r=BI(n,e[0],s[0]));const o=[0,0,0,t];for(let a=0;a<3;a++)n[a]+2*r>=e[a]&&(o[a]=Um((n[a]-e[a]+2*r)/s[a]+1,i));return o}function BI(n,e,t,s=1){const r=Fd(e,s);return Math.floor((n[0]*(t-1)-t+r)/2)}function Qm(n){return typeof n=="number"?[n,n,n]:n.length===2?[n[0],n[1],1]:n}function Jv(n){return typeof n=="number"?[n,n,n]:n}function Fd(n,e){return e<=1?n:n+(n-1)*(e-1)}function m8(n,e,t,s,r,i,o,a,l){let c,u,h;if(typeof n=="number"){c={top:n,bottom:n,left:n,right:n,type:n===0?"VALID":"NUMBER"};const f=f8([e,t],i,s,n,a);u=f[0],h=f[1]}else if(n==="same"){u=Math.ceil(e/s),h=Math.ceil(t/r);const d=Math.max(0,(u-1)*s+i-e),f=Math.max(0,(h-1)*r+o-t),p=Math.floor(d/2),A=d-p,m=Math.floor(f/2),g=f-m;c={top:p,bottom:A,left:m,right:g,type:"SAME"}}else if(n==="valid")c={top:0,bottom:0,left:0,right:0,type:"VALID"},u=Math.ceil((e-i+1)/s),h=Math.ceil((t-o+1)/r);else if(typeof n=="object"){const d=l==="channelsLast"?n[1][0]:n[2][0],f=l==="channelsLast"?n[1][1]:n[2][1],p=l==="channelsLast"?n[2][0]:n[3][0],A=l==="channelsLast"?n[2][1]:n[3][1];c={top:d,bottom:f,left:p,right:A,type:d===0&&f===0&&p===0&&A===0?"VALID":"EXPLICIT"},u=Um((e-i+d+f)/s+1,a),h=Um((t-o+p+A)/r+1,a)}else throw Error(`Unknown padding parameter: ${n}`);return{padInfo:c,outHeight:u,outWidth:h}}function g8(n,e,t,s,r,i,o,a,l,c,u){let h,d,f,p;if(n==="valid"&&(n=0),typeof n=="number"){h={top:n,bottom:n,left:n,right:n,front:n,back:n,type:n===0?"VALID":"NUMBER"};const m=p8([e,t,s,1],[a,l,c],1,[r,i,o],n,u);d=m[0],f=m[1],p=m[2]}else if(n==="same"){d=Math.ceil(e/r),f=Math.ceil(t/i),p=Math.ceil(s/o);const A=(d-1)*r+a-e,m=(f-1)*i+l-t,g=(p-1)*o+c-s,x=Math.floor(A/2),v=A-x,b=Math.floor(m/2),w=m-b,_=Math.floor(g/2),N=g-_;h={top:b,bottom:w,left:_,right:N,front:x,back:v,type:"SAME"}}else throw Error(`Unknown padding parameter: ${n}`);return{padInfo:h,outDepth:d,outHeight:f,outWidth:p}}function Um(n,e){if(!e)return Math.trunc(n);switch(e){case"round":return Math.round(n);case"ceil":return Math.ceil(n);case"floor":return Math.floor(n);default:throw new Error(`Unknown roundingMode ${e}`)}}function ic(n){const[e,t,s]=Qm(n);return e===1&&t===1&&s===1}function nr(n,e){return ic(n)||ic(e)}function Su(n){return Qm(n).every(e=>e>0)}function Xi(n){if(n==="NHWC")return"channelsLast";if(n==="NCHW")return"channelsFirst";throw new Error(`Unknown dataFormat ${n}`)}function ri(n,e,t){if(t!=null){if(typeof e=="string")throw Error(`Error in ${n}: pad must be an integer when using dimRoundingMode ${t} but got pad ${e}.`);if(typeof e=="number")z(bu(e),()=>`Error in ${n}: pad must be an integer when using dimRoundingMode ${t} but got pad ${e}.`);else if(typeof e=="object")e.forEach(s=>{s.forEach(r=>{z(bu(r),()=>`Error in ${n}: pad must be an integer when using dimRoundingMode ${t} but got pad ${r}.`)})});else throw Error(`Error in ${n}: Unknown padding parameter: ${e}`)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function A8(n,e){const s={x:q(n,"x","reshape","string_or_numeric")},r={shape:e};return re.runKernel(np,s,r)}const ae=ie({reshape_:A8});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function y8(n,e,t,s,r){const i=q(n,"x","avgPool","float32"),o=1;z(nr(t,o),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${t} and dilations '${o}'`);let a=i,l=!1;i.rank===3&&(l=!0,a=ae(i,[1,i.shape[0],i.shape[1],i.shape[2]])),z(a.rank===4,()=>`Error in avgPool: x must be rank 4 but got rank ${a.rank}.`),ri("avgPool",s,r);const c={x:a},u={filterSize:e,strides:t,pad:s,dimRoundingMode:r};let h=re.runKernel(yf,c,u);return h=Ze(h,i.dtype),l?ae(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const cA=ie({avgPool_:y8});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function x8(n,e,t,s,r,i="NDHWC"){const o=q(n,"x","avgPool3d","float32");let a=o,l=!1;o.rank===4&&(l=!0,a=ae(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),z(a.rank===5,()=>`Error in avgPool3d: x must be rank 5 but got rank ${a.rank}.`),z(i==="NDHWC",()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${i}`),z(typeof t=="number"&&t>0||Array.isArray(t)&&t[0]>0&&t[1]>0&&t[2]>0,()=>`Error in avgPool3d: Stride must be > 0, but got '${t}'`),ri("avgPool3d",s,r);const c={x:a},u={filterSize:e,strides:t,pad:s,dimRoundingMode:r,dataFormat:i};let h=re.runKernel(xf,c,u);return h=Ze(h,a.dtype),l?ae(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}const kI=ie({avgPool3d_:x8});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function b8(n,e=0){z(n.length>=1,()=>"Pass at least one tensor to concat");const t=Lm(n,"tensors","concat","string_or_numeric");if(t[0].dtype==="complex64"&&t.forEach(i=>{if(i.dtype!=="complex64")throw new Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${i.dtype}. `)}),t.length===1)return Ia(t[0]);const s=t,r={axis:e};return re.runKernel(If,s,r)}const ps=ie({concat_:b8});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function v8(n,e,t=!1,s=!1){let r=q(n,"a","matMul"),i=q(e,"b","matMul");[r,i]=ks(r,i);const o={a:r,b:i},a={transposeA:t,transposeB:s};return re.runKernel(bf,o,a)}const An=ie({matMul_:v8});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function C8(n){const t={x:q(n,"x","sigmoid","float32")};return re.runKernel(Ch,t)}const Tr=ie({sigmoid_:C8});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function I8(n,e,t){const s=q(n,"x","slice","string_or_numeric");if(s.rank===0)throw new Error("Slicing scalar is not possible");const r={x:s},i={begin:e,size:t};return re.runKernel(ap,r,i)}const Rt=ie({slice_:I8});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function w8(n){const t={x:q(n,"x","tanh","float32")};return re.runKernel(Th,t)}const oc=ie({tanh_:w8});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function S8(n,e,t,s,r,i){const o=q(n,"forgetBias","basicLSTMCell"),a=q(e,"lstmKernel","basicLSTMCell"),l=q(t,"lstmBias","basicLSTMCell"),c=q(s,"data","basicLSTMCell"),u=q(r,"c","basicLSTMCell"),h=q(i,"h","basicLSTMCell"),d=ps([c,h],1),f=An(d,a),p=$e(f,l),A=p.shape[0],m=p.shape[1]/4,g=[A,m],x=Rt(p,[0,0],g),v=Rt(p,[0,m],g),b=Rt(p,[0,m*2],g),w=Rt(p,[0,m*3],g),_=$e(ne(Tr(x),oc(v)),ne(u,Tr($e(o,b)))),N=ne(oc(_),Tr(w));return[_,N]}const cN=ie({basicLSTMCell_:S8});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function E8(n,e,t){const s=q(n,"x","batchToSpaceND"),r=e.reduce((a,l)=>a*l);z(s.rank>=1+e.length,()=>`input rank is ${s.rank} but should be > than blockShape.length ${e.length}`),z(t.length===e.length,()=>`crops.length is ${t.length} but should be equal to blockShape.length  ${e.length}`),z(s.shape[0]%r===0,()=>`input tensor batch is ${s.shape[0]} but is not divisible by the product of the elements of blockShape ${e.join(" * ")} === ${r}`);const i={x:s},o={blockShape:e,crops:t};return re.runKernel(vf,i,o)}const uA=ie({batchToSpaceND_:E8});function _8(n){let e;return n.rank===0||n.rank===1?e=ae(n,[1,1,1,n.size]):n.rank===2?e=ae(n,[1,1,n.shape[0],n.shape[1]]):n.rank===3?e=ae(n,[1,n.shape[0],n.shape[1],n.shape[2]]):e=n,e}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function T8(n,e,t,s,r,i){i==null&&(i=.001);const o=q(n,"x","batchNorm"),a=q(e,"mean","batchNorm"),l=q(t,"variance","batchNorm");let c;r!=null&&(c=q(r,"scale","batchNorm"));let u;s!=null&&(u=q(s,"offset","batchNorm")),z(a.rank===l.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),z(u==null||a.rank===u.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),z(c==null||a.rank===c.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");const d={x:_8(o),scale:c,offset:u,mean:a,variance:l},f={varianceEpsilon:i},p=re.runKernel(Rf,d,f);return ae(p,o.shape)}const mp=ie({batchNorm_:T8});function B8(n,e,t,s,r,i){const o=q(n,"x","batchNorm"),a=q(e,"mean","batchNorm"),l=q(t,"variance","batchNorm");let c;r!=null&&(c=q(r,"scale","batchNorm"));let u;return s!=null&&(u=q(s,"offset","batchNorm")),z(o.rank===2,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${o.rank}.`),z(a.rank===2||a.rank===1,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${a.rank}.`),z(l.rank===2||l.rank===1,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`),c!=null&&z(c.rank===2||c.rank===1,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${c.rank}.`),u!=null&&z(u.rank===2||u.rank===1,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${u.rank}.`),mp(o,a,l,u,c,i)}const NI=ie({batchNorm2d_:B8});function k8(n,e,t,s,r,i){const o=q(n,"x","batchNorm"),a=q(e,"mean","batchNorm"),l=q(t,"variance","batchNorm");let c;r!=null&&(c=q(r,"scale","batchNorm"));let u;return s!=null&&(u=q(s,"offset","batchNorm")),z(o.rank===3,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${o.rank}.`),z(a.rank===3||a.rank===1,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${a.rank}.`),z(l.rank===3||l.rank===1,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`),c!=null&&z(c.rank===3||c.rank===1,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${c.rank}.`),u!=null&&z(u.rank===3||u.rank===1,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${u.rank}.`),mp(o,a,l,u,c,i)}const RI=ie({batchNorm3d_:k8});function N8(n,e,t,s,r,i){const o=q(n,"x","batchNorm"),a=q(e,"mean","batchNorm"),l=q(t,"variance","batchNorm");let c;r!=null&&(c=q(r,"scale","batchNorm"));let u;return s!=null&&(u=q(s,"offset","batchNorm")),z(o.rank===4,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${o.rank}.`),z(a.rank===4||a.rank===1,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${a.rank}.`),z(l.rank===4||l.rank===1,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`),c!=null&&z(c.rank===4||c.rank===1,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${c.rank}.`),u!=null&&z(u.rank===4||u.rank===1,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${u.rank}.`),mp(o,a,l,u,c,i)}const MI=ie({batchNorm4d_:N8});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function R8(n,e,t){const s=q(n,"x","bincount"),r=q(e,"weights","bincount");z(s.dtype==="int32",()=>`Error in bincount: input dtype must be int32, but got ${s.dtype}`),z(t>=0,()=>`size must be non-negative, but got ${t}.`),z(r.size===s.size||r.size===0,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${s.shape}, weights shape: ${r.shape}.`);const i={x:s,weights:r},o={size:t};return re.runKernel(hg,i,o)}const DI=ie({bincount_:R8});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function M8(n,e){const t=q(n,"x","bitwiseAnd"),s=q(e,"y","bitwiseAnd");if(!dn(t.shape,s.shape))throw new Error(`BitwiseAnd: Tensors must have the same shape. x: ${t.shape}, y: ${s.shape}`);if(t.dtype!=="int32"||s.dtype!=="int32")throw new Error(`BitwiseAnd: Only supports 'int32' values in tensor, found type of x: ${t.dtype} and type of y: ${s.dtype}`);const r={a:t,b:s};return re.runKernel(dg,r)}const uN=ie({bitwiseAnd_:M8});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function D8(n,e){const t=q(n,"s0","broadcastArgs","int32"),s=q(e,"s1","broadcastArgs","int32");if(t.rank!==1)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${t.rank}`);if(s.rank!==1)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${s.rank}`);const r={s0:t,s1:s};return re.runKernel(fg,r)}const hN=ie({broadcastArgs_:D8});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function F8(n,e){let t=q(n,"broadcastTo","x");const s=t.shape;if(ji(e),e.length<t.rank)throw new Error(`broadcastTo(): shape.length=${e.length} < input.rank=${t.rank}.`);if(e.length>t.rank){const c=t.shape.slice();for(;c.length<e.length;)c.unshift(1);t=ae(t,c)}const r=t.shape,i=Array.from(e);for(let c=e.length-1;c>=0;c--)if(r[c]===e[c])i[c]=1;else if(t.shape[c]!==1)throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${e}].`);if(i.map((c,u)=>c>1?u:-1).filter(c=>c>=0).length===0)return Ia(t);const a={x:t},l={reps:i};return re.runKernel(Bh,a,l)}const pu=ie({broadcastTo_:F8});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $8(n){const t={x:q(n,"x","ceil","float32")};return re.runKernel(Vu,t)}const FI=ie({ceil_:$8});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nh(n,e,t){ji(n),t=t||pc(e);const s={shape:n,value:e,dtype:t};return re.runKernel(Bg,{},s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function P8(n,e,t){const s=q(n,"x","clipByValue");if(z(e<=t,()=>`Error in clip: min (${e}) must be less than or equal to max (${t}).`),e===t)return Nh(s.shape,e,s.dtype);const r={x:s},i={clipValueMin:e,clipValueMax:t};return re.runKernel(Wu,r,i)}const $r=ie({clipByValue_:P8});function L8(n){return ps(n,0)}const $I=ie({concat1d_:L8});function O8(n,e){return ps(n,e)}const PI=ie({concat2d_:O8});function Q8(n,e){return ps(n,e)}const LI=ie({concat3d_:Q8});function U8(n,e){return ps(n,e)}const OI=ie({concat4d_:U8});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function z8(n,e,t,s,r="NHWC",i=[1,1],o){const a=q(n,"x","conv2d","float32"),l=q(e,"filter","conv2d","float32");let c=a,u=!1;a.rank===3&&(u=!0,c=ae(a,[1,a.shape[0],a.shape[1],a.shape[2]])),z(c.rank===4,()=>`Error in conv2d: input must be rank 4, but got rank ${c.rank}.`),z(l.rank===4,()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`),ri("conv2d",s,o);const h=r==="NHWC"?c.shape[3]:c.shape[1];z(h===l.shape[2],()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${l.shape[2]}.`),z(nr(t,i),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${t} and dilations '${i}'`),z(Su(i),()=>"Error in conv2D: Dilated rates should be larger than 0."),z(Su(t),()=>"Error in conv2D: Strides should be larger than 0.");const d={x:c,filter:l},f={strides:t,pad:s,dataFormat:r,dilations:i,dimRoundingMode:o},p=re.runKernel(wf,d,f);return u?ae(p,[p.shape[1],p.shape[2],p.shape[3]]):p}const xl=ie({conv2d_:z8});function G8(n,e,t,s,r="NWC",i=1,o){const a=q(n,"x","conv1d"),l=q(e,"filter","conv1d");let c=a,u=!1;a.rank===2&&(u=!0,c=ae(a,[1,a.shape[0],a.shape[1]])),z(c.rank===3,()=>`Error in conv1d: input must be rank 3, but got rank ${c.rank}.`),z(l.rank===3,()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`),ri("conv1d",s,o),z(c.shape[2]===l.shape[1],()=>`Error in conv1d: depth of input (${c.shape[2]}) must match input depth for filter ${l.shape[1]}.`),z(nr(t,i),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${t} and dilation '${i}'`),z(Su(i),()=>"Error in conv1D: Dilated rates should be larger than 0."),z(Su(t),()=>"Error in conv1D: Stride should be larger than 0."),z(r==="NWC",()=>`Error in conv1d: got dataFormat of ${r} but only NWC is currently supported.`);const h=ae(l,[1,l.shape[0],l.shape[1],l.shape[2]]),d=ae(c,[c.shape[0],1,c.shape[1],c.shape[2]]),m=xl(d,h,[1,t],s,"NHWC",[1,i],o);return u?ae(m,[m.shape[2],m.shape[3]]):ae(m,[m.shape[0],m.shape[2],m.shape[3]])}const Nx=ie({conv1d_:G8});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function V8(n,e,t,s,r,i="NHWC",o){z(n.length===e.rank,()=>`Length of inShape (${n.length}) and rank of dy (${e.rank}) must match`);let a=n,l=e,c=!1;e.rank===3&&(c=!0,l=ae(e,[1,e.shape[0],e.shape[1],e.shape[2]]),a=[1,n[0],n[1],n[2]]),z(a.length===4,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${a.length}.`),z(l.rank===4,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`),z(t.rank===4,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${t.rank}`);const u=i==="NHWC"?a[3]:a[1],h=i==="NHWC"?l.shape[3]:l.shape[1];z(u===t.shape[2],()=>`Error in conv2dDerInput: depth of input (${u}) must match input depth for filter ${t.shape[2]}.`),z(h===t.shape[3],()=>`Error in conv2dDerInput: depth of output (${h}) must match output depth for filter ${t.shape[3]}.`),ri("conv2dDerInput",r,o);const d={dy:l,filter:t},f={strides:s,pad:r,dataFormat:i,dimRoundingMode:o,inputShape:a},p=re.runKernel(Sf,d,f);return c?ae(p,[p.shape[1],p.shape[2],p.shape[3]]):p}const QI=ie({conv2DBackpropInput_:V8});function W8(n,e,t,s,r,i){const o=q(n,"x","conv2dTranspose"),a=q(e,"filter","conv2dTranspose");return QI(t,o,a,s,r,"NHWC",i)}const Rx=ie({conv2dTranspose_:W8});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function H8(n,e,t,s,r="NDHWC",i=[1,1,1]){const o=q(n,"x","conv3d"),a=q(e,"filter","conv3d");let l=o,c=!1;o.rank===4&&(c=!0,l=ae(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),z(l.rank===5,()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`),z(a.rank===5,()=>`Error in conv3d: filter must be rank 5, but got rank ${a.rank}.`),z(l.shape[4]===a.shape[3],()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${a.shape[3]}.`),z(nr(t,i),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${t} and dilations '${i}'`),z(r==="NDHWC",()=>`Error in conv3d: got dataFormat of ${r} but only NDHWC is currently supported.`),z(Su(i),()=>"Error in conv3D: Dilated rates should be larger than 0."),z(Su(t),()=>"Error in conv3D: Strides should be larger than 0.");const u={x:l,filter:a},h={strides:t,pad:s,dataFormat:r,dilations:i},d=re.runKernel(Ef,u,h);return c?ae(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}const UI=ie({conv3d_:H8});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function q8(n,e,t,s,r){z(n.length===e.rank,()=>`Length of inShape (${n.length}) and rank of dy (${e.rank}) must match`);let i=n,o=e,a=!1;e.rank===4&&(a=!0,o=ae(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]),i=[1,n[0],n[1],n[2],n[3]]);const l=i[4],c=o.shape[4];z(i.length===5,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${i.length}.`),z(o.rank===5,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${o.rank}`),z(t.rank===5,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${t.rank}`),z(l===t.shape[3],()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${t.shape[3]}.`),z(c===t.shape[4],()=>`Error in conv3dDerInput: depth of output (${c}) must match output depth for filter ${t.shape[4]}.`);const u={dy:o,filter:t},h={pad:r,strides:s,inputShape:i},d=re.runKernel(Ag,u,h);return a?ae(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}const dN=ie({conv3DBackpropInput_:q8});function Y8(n,e,t,s,r){const i=q(n,"x","conv3dTranspose"),o=q(e,"filter","conv3dTranspose");return dN(t,i,o,s,r)}const zI=ie({conv3dTranspose_:Y8});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function j8(n){const t={x:q(n,"x","cos","float32")};return re.runKernel(Hu,t)}const hA=ie({cos_:j8});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function X8(n){const t={x:q(n,"x","cosh","float32")};return re.runKernel(qu,t)}const Mx=ie({cosh_:X8});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function K8(n,e=0,t=!1,s=!1){const i={x:q(n,"x","cumprod")},o={axis:e,exclusive:t,reverse:s};return re.runKernel(yg,i,o)}const zm=ie({cumprod_:K8});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function J8(n,e=0,t=!1,s=!1){const i={x:q(n,"x","cumsum")},o={axis:e,exclusive:t,reverse:s};return re.runKernel(_f,i,o)}const Dx=ie({cumsum_:J8});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Z8(n,e,t,s=!1){const r=q(n,"x","denseBincount"),i=q(e,"weights","denseBincount");z(r.dtype==="int32",()=>`Error in denseBincount: input dtype must be int32, but got ${r.dtype}`),z(r.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${r.rank}.`),z(t>=0,()=>`size must be non-negative, but got ${t}.`),z(i.size===r.size||i.size===0,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${r.shape}, weights shape: ${i.shape}.`);const o={x:r,weights:i},a={size:t,binaryOutput:s};return re.runKernel(bg,o,a)}const E0=ie({denseBincount_:Z8});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function e9(n,e,t="NHWC"){const s=q(n,"x","depthToSpace","float32"),r=t==="NHWC"?s.shape[1]:s.shape[2],i=t==="NHWC"?s.shape[2]:s.shape[3],o=t==="NHWC"?s.shape[3]:s.shape[1];z(e>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${e}`),z(r*e>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${r} and ${e}  for depthToSpace with input shape
    ${s.shape}`),z(i*e>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${i} and ${e} for depthToSpace with input shape
        ${s.shape}`),z(o%(e*e)===0,()=>`Dimension size must be evenly divisible by ${e*e} but is ${o} for depthToSpace with input shape ${s.shape}`);const a={x:s},l={blockSize:e,dataFormat:t};return re.runKernel(vg,a,l)}const GI=ie({depthToSpace_:e9});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function t9(n,e,t,s,r="NHWC",i=[1,1],o){const a=q(n,"x","depthwiseConv2d","float32"),l=q(e,"filter","depthwiseConv2d","float32");let c=a,u=!1;a.rank===3&&(u=!0,c=ae(a,[1,a.shape[0],a.shape[1],a.shape[2]])),z(c.rank===4,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${c.rank}.`),z(l.rank===4,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`);const h=r==="NHWC"?c.shape[3]:c.shape[1];z(h===l.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${h}) must match the inChannels dimension in filter ${l.shape[2]}.`),ri("depthwiseConv2d",s,o);const d={x:c,filter:l},f={strides:t,pad:s,dataFormat:r,dilations:i,dimRoundingMode:o},p=re.runKernel(Tf,d,f);return u?ae(p,[p.shape[1],p.shape[2],p.shape[3]]):p}const gp=ie({depthwiseConv2d_:t9});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function n9(n){const t={x:q(n,"x","diag")};return re.runKernel(wg,t)}const fN=ie({diag_:n9});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function s9(n,e,t,s,r=[1,1],i="NHWC"){const o=q(n,"x","dilation2d"),a=q(e,"filter","dilation2d");z(o.rank===3||o.rank===4,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${o.rank}.`),z(a.rank===3,()=>`Error in dilation2d: filter must be rank 3, but got rank ${a.rank}.`),z(i==="NHWC",()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${i}`);let l=o,c=!1;o.rank===3&&(l=ae(o,[1,o.shape[0],o.shape[1],o.shape[2]]),c=!0),z(l.shape[3]===a.shape[2],()=>`Error in dilation2d:  input and filter must have the same depth: ${l.shape[3]} vs ${a.shape[2]}`);const u={x:l,filter:a},h={strides:t,pad:s,dilations:r},d=re.runKernel(Bf,u,h);return c?ae(d,[d.shape[1],d.shape[2],d.shape[3]]):d}const VI=ie({dilation2d_:s9});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bl(n,e){const t=n.length,s=[];for(let r=0;r<t;r++){const i=t-1-r,o=n[i]||1;(e[e.length-1-r]||1)>1&&o===1&&s.unshift(i)}return s}function Hs(n,e){const t=[];for(let s=0;s<e.length;s++){const r=n[n.length-s-1],i=e.length-s-1,o=e[i];(r==null||r===1&&o>1)&&t.unshift(i)}return t}function jt(n,e){const t=Math.max(n.length,e.length),s=new Array(t);for(let r=0;r<t;r++){let i=n[n.length-r-1];i==null&&(i=1);let o=e[e.length-r-1];if(o==null&&(o=1),i===1)s[t-r-1]=o;else if(o===1)s[t-r-1]=i;else if(i!==o){const a=`Operands could not be broadcast together with shapes ${n} and ${e}.`;throw Error(a)}else s[t-r-1]=i}return s}const r9=Object.freeze(Object.defineProperty({__proto__:null,assertAndGetBroadcastShape:jt,getBroadcastDims:bl,getReductionAxes:Hs},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function i9(n,e){let t=q(n,"a","equal","string_or_numeric"),s=q(e,"b","equal","string_or_numeric");[t,s]=ks(t,s),jt(t.shape,s.shape);const r={a:t,b:s};return re.runKernel(kf,r)}const zi=ie({equal_:i9});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function o9(n,e,t){const s=q(e,"a","where"),r=q(t,"b","where"),i=q(n,"condition","where","bool"),o=jt(jt(i.shape,s.shape),r.shape),a=pu(i,o),l=pu(s,o),c=pu(r,o),u={condition:a,t:l,e:c};return re.runKernel(op,u)}const Br=ie({where_:o9});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a9(n){const t={x:q(n,"x","zerosLike")};return re.runKernel(pp,t)}const _n=ie({zerosLike_:a9});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function l9(n,e){let t=q(n,"a","div"),s=q(e,"b","div");[t,s]=ks(t,s);const r=rt(t,s),i=_n(r),o=zi(s,i);return Br(o,i,r)}const WI=ie({divNoNan_:l9});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function c9(n,e){const t=q(n,"t1","dot"),s=q(e,"t2","dot");z((t.rank===1||t.rank===2)&&(s.rank===1||s.rank===2),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${t.rank} and ${s.rank}.`);const r=t.rank===1?t.size:t.shape[1],i=s.rank===1?s.size:s.shape[0];if(z(r===i,()=>`Error in dot: inner dimensions of inputs must match, but got ${r} and ${i}.`),t.rank===1&&s.rank===1){const o=ae(t,[1,-1]),a=ae(s,[-1,1]),l=An(o,a);return ae(l,[])}else if(t.rank===1&&s.rank===2){const o=ae(t,[1,-1]),a=ae(s,[s.shape[0],s.shape[1]]),l=An(o,a);return ae(l,[l.size])}else if(t.rank===2&&s.rank===1){const o=ae(s,[-1,1]),a=An(t,o);return ae(a,[a.size])}else{const o=ae(s,[s.shape[0],s.shape[1]]);return An(t,o)}}const HI=ie({dot_:c9});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function u9(n,...e){const t=e.map((r,i)=>q(r,`tensors${i}`,"einsum")),s={equation:n};return re.runKernel(Eg,t,s)}const Zc=ie({einsum_:u9});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function h9(n){const t={x:q(n,"x","elu","float32")};return re.runKernel(ju,t)}const Ap=ie({elu_:h9});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function d9(n,e){const t=q(n,"x","ensureShape","string_or_numeric");if(!Ck(t.shape,e))throw new Error(`EnsureShape: Shape of tensor ${t.shape} is not compatible with expected shape ${e}`);return n}const pN=ie({ensureShape_:d9});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function f9(n){let e=q(n,"x","erf");z(e.dtype==="int32"||e.dtype==="float32",()=>"Input dtype must be `int32` or `float32`."),e.dtype==="int32"&&(e=Ze(e,"float32"));const t={x:e};return re.runKernel(Xu,t)}const Fx=ie({erf_:f9});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qI(n,e){for(let t=0;t<n.length;++t)if(n[n.length-t-1]!==e-1-t)return!1;return!0}function mN(n,e,t){const s=n.length+e.length,r=[];let i=0,o=0;for(let a=0;a<s;a++)t.indexOf(a)===-1?r.push(n[i++]):r.push(e[o++]);return r}function $s(n,e){const t=[],s=n.length;for(let i=0;i<s;i++)e.indexOf(i)===-1&&t.push(n[i]);const r=e.map(i=>n[i]);return[t,r]}function Ms(n,e){const t=e.map(s=>1);return mN(n,t,e)}function qs(n,e,t){z(qI(e,t),()=>`${n} supports only inner-most axes for now. Got axes ${e} and rank-${t} input.`)}function ss(n,e){if(qI(n,e))return null;const t=[];for(let s=0;s<e;++s)n.indexOf(s)===-1&&t.push(s);return n.forEach(s=>t.push(s)),t}function Oa(n){return n.map((e,t)=>[t,e]).sort((e,t)=>e[1]-t[1]).map(e=>e[0])}function ys(n,e){const t=[];for(let s=e-n;s<e;++s)t.push(s);return t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function p9(n,e=null,t=!1){const r={x:q(n,"x","max")},i={reductionIndices:e,keepDims:t};return re.runKernel(zf,r,i)}const lo=ie({max_:p9});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function m9(n,e=null,t=!1){const r={x:q(n,"x","min")},i={axis:e,keepDims:t};return re.runKernel(Hf,r,i)}const jd=ie({min_:m9});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function g9(n,e){let t=q(n,"base","pow"),s=q(e,"exp","pow");[t,s]=ks(t,s);const r={a:t,b:s};return re.runKernel(dh,r)}const ka=ie({pow_:g9});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bt(n,e){if((ur(n)&&e!=="string"||Array.isArray(n))&&e!=="complex64")throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if(e==="string"&&ur(n)&&!(n instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Ac(n,[],[],e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function A9(n){const t={x:q(n,"x","sqrt","float32")};return re.runKernel(wh,t)}const yr=ie({sqrt_:A9});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function y9(n){const e=q(n,"x","square"),t={};return re.runKernel("Square",{x:e},t)}const Jn=ie({square_:y9});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function x9(n,e=null,t=!1){let s=q(n,"x","sum");s.dtype==="bool"&&(s=Ze(s,"int32"));const r={x:s},i={axis:e,keepDims:t};return re.runKernel(lp,r,i)}const Mt=ie({sum_:x9});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function b9(n,e="euclidean",t=null,s=!1){n=q(n,"x","norm");const r=gN(n,e,t);let i=r.shape;if(s){const o=an(t,n.shape);i=Ms(r.shape,o)}return ae(r,i)}function gN(n,e,t=null){if(n.rank===0)return Gs(n);if(n.rank!==1&&t===null)return gN(ae(n,[-1]),e,t);if(n.rank===1||typeof t=="number"||Array.isArray(t)&&t.length===1){if(e===1)return Mt(Gs(n),t);if(e===1/0)return lo(Gs(n),t);if(e===-1/0)return jd(Gs(n),t);if(e==="euclidean"||e===2)return yr(Mt(ka(Gs(n),Bt(2,"int32")),t));throw new Error(`Error in norm: invalid ord value: ${e}`)}if(Array.isArray(t)&&t.length===2){if(e===1)return lo(Mt(Gs(n),t[0]),t[1]-1);if(e===1/0)return lo(Mt(Gs(n),t[1]),t[0]);if(e===-1/0)return jd(Mt(Gs(n),t[1]),t[0]);if(e==="fro"||e==="euclidean")return yr(Mt(Jn(n),t));throw new Error(`Error in norm: invalid ord value: ${e}`)}throw new Error(`Error in norm: invalid axis: ${t}`)}const yp=ie({norm_:b9});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function v9(n,e=null,t=!1){return yp(n,"euclidean",e,t)}const YI=ie({euclideanNorm_:v9});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function C9(n){const t={x:q(n,"x","exp")};return re.runKernel(Ku,t)}const xr=ie({exp_:C9});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function I9(n,e=0){const t=q(n,"x","expandDims","string_or_numeric");z(e<=t.rank,()=>"Axis must be <= rank of the tensor");const s={input:t},r={dim:e};return re.runKernel(Nf,s,r)}const Kn=ie({expandDims_:I9});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function w9(n){const t={x:q(n,"x","expm1")};return re.runKernel(Ju,t)}const jI=ie({expm1_:w9});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function S9(n,e){const t=q(n,"x","tile","string_or_numeric");z(t.rank===e.length,()=>`Error in transpose: rank of input ${t.rank} must match length of reps ${e}.`);const s={x:t},r={reps:e};return re.runKernel(Bh,s,r)}const so=ie({tile_:S9});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function E9(n,e,t,s="float32"){e==null&&(e=n);const r=rn([n,e],s),i=n<=e?n:e;for(let a=0;a<i;++a)r.set(1,a,a);const o=ae(r.toTensor(),[n,e]);if(t==null)return o;if(t.length===1)return so(Kn(o,0),[t[0],1,1]);if(t.length===2)return so(Kn(Kn(o,0),0),[t[0],t[1],1,1]);if(t.length===3)return so(Kn(Kn(Kn(o,0),0),0),[t[0],t[1],t[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${t.length}D.`)}const $x=ie({eye_:E9});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _9(n){const t={x:q(n,"x","floor","float32")};return re.runKernel(Zu,t)}const xp=ie({floor_:_9});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function T9(n,e,t=0,s=0){const r=q(n,"x","gather"),i=q(e,"indices","gather","int32"),o={x:r,indices:i},a={axis:t,batchDims:s};return re.runKernel(Mf,o,a)}const bp=ie({gather_:T9});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function B9(n,e){let t=q(n,"a","greater","string_or_numeric"),s=q(e,"b","greater","string_or_numeric");[t,s]=ks(t,s),jt(t.shape,s.shape);const r={a:t,b:s};return re.runKernel(Df,r)}const ii=ie({greater_:B9});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function k9(n,e){let t=q(n,"a","greaterEqual","string_or_numeric"),s=q(e,"b","greaterEqual","string_or_numeric");[t,s]=ks(t,s),jt(t.shape,s.shape);const r={a:t,b:s};return re.runKernel(th,r)}const _l=ie({greaterEqual_:k9});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function N9(n){const t={input:q(n,"input","imag")};return re.runKernel(Mg,t)}const dA=ie({imag_:N9});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function R9(n){const t={x:q(n,"x","isFinite")};return re.runKernel(sh,t)}const XI=ie({isFinite_:R9});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function M9(n){const t={x:q(n,"x","isInf")};return re.runKernel(rh,t)}const KI=ie({isInf_:M9});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function D9(n){const t={x:q(n,"x","isNaN")};return re.runKernel(ih,t)}const JI=ie({isNaN_:D9});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function F9(n,e=.2){const s={x:q(n,"x","leakyRelu")},r={alpha:e};return re.runKernel(Ff,s,r)}const fA=ie({leakyRelu_:F9});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $9(n,e){let t=q(n,"a","less","string_or_numeric"),s=q(e,"b","less","string_or_numeric");[t,s]=ks(t,s),jt(t.shape,s.shape);const r={a:t,b:s};return re.runKernel($f,r)}const Xd=ie({less_:$9});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function P9(n,e){let t=q(n,"a","lessEqual","string_or_numeric"),s=q(e,"b","lessEqual","string_or_numeric");[t,s]=ks(t,s),jt(t.shape,s.shape);const r={a:t,b:s};return re.runKernel(Pf,r)}const xc=ie({lessEqual_:P9});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AN(n,e,t){if(t<=0)throw new Error("The number of values should be positive.");const s={start:n,stop:e,num:t};return re.runKernel(Dg,{},s)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function L9(n,e=5,t=1,s=1,r=.5){const i=q(n,"x","localResponseNormalization");z(i.rank===4||i.rank===3,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${i.rank}.`),z(bu(e),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${e}.`);let o=i,a=!1;i.rank===3&&(a=!0,o=ae(i,[1,i.shape[0],i.shape[1],i.shape[2]]));const l={x:o},c={depthRadius:e,bias:t,alpha:s,beta:r},u=re.runKernel(Uf,l,c);return a?ae(u,[u.shape[1],u.shape[2],u.shape[3]]):u}const ZI=ie({localResponseNormalization_:L9});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function O9(n){const t={x:q(n,"x","log","float32")};return re.runKernel(oh,t)}const Gi=ie({log_:O9});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Q9(n){const t={x:q(n,"x","log1p")};return re.runKernel(ah,t)}const pA=ie({log1p_:Q9});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function U9(n){return z(nc(n),()=>"The f passed in grad(f) must be a function"),(e,t)=>{const s=q(e,"x","tf.grad","string_or_numeric"),r=t!=null?q(t,"dy","tf.grad"):null;return re.tidy(()=>{const{value:i,grads:o}=re.gradients(()=>n(s),[s],r);return r!=null&&br(i.shape,r.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),Px(o),o[0]})}}function z9(n){return z(nc(n),()=>"The f passed in grads(f) must be a function"),(e,t)=>{z(Array.isArray(e),()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s");const s=Lm(e,"args","tf.grads","string_or_numeric"),r=t!=null?q(t,"dy","tf.grads"):null;return re.tidy(()=>{const{value:i,grads:o}=re.gradients(()=>n(...s),s,r);return r!=null&&br(i.shape,r.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),Px(o),o})}}function G9(n){return z(nc(n),()=>"The f passed in valueAndGrad(f) must be a function"),(e,t)=>{z(e instanceof cn,()=>"The x passed in valueAndGrad(f)(x) must be a tensor"),z(t==null||t instanceof cn,()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor");const{grads:s,value:r}=re.gradients(()=>n(e),[e],t);return Px(s),{grad:s[0],value:r}}}function V9(n){return z(nc(n),()=>"The f passed in valueAndGrads(f) must be a function"),(e,t)=>{z(Array.isArray(e)&&e.every(r=>r instanceof cn),()=>"The args passed in valueAndGrads(f)(args) must be array of tensors"),z(t==null||t instanceof cn,()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor");const s=re.gradients(()=>n(...e),e,t);return t!=null&&br(s.value.shape,t.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),Px(s.grads),s}}function yN(n,e){z(nc(n),()=>"The f passed in variableGrads(f) must be a function"),z(e==null||Array.isArray(e)&&e.every(c=>c instanceof Pm),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");const t=e!=null;if(!t){e=[];for(const c in re.registeredVariables)e.push(re.registeredVariables[c])}const s=t?e.filter(c=>!c.trainable):null,r=e.length;e=e.filter(c=>c.trainable),z(e.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${r} variables is trainable.`);const i=!0,{value:o,grads:a}=re.gradients(n,e,null,i);z(a.some(c=>c!=null),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),z(o.rank===0,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${o.rank} tensor`);const l={};return e.forEach((c,u)=>{a[u]!=null&&(l[c.name]=a[u])}),s?.forEach(c=>l[c.name]=null),{value:o,grads:l}}function Na(n){return re.customGrad(n)}function Px(n){if(n.filter(t=>t==null).length>0)throw new Error(`Cannot compute gradient of y=f(x) with respect to x. Make sure that
    the f you passed encloses all operations that lead from x to y.`)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function W9(n){const t={x:q(n,"x","neg")};return re.runKernel(Yf,t)}const ms=ie({neg_:W9});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function H9(n){const t={x:q(n,"x","softplus")};return re.runKernel(Ih,t)}const Rh=ie({softplus_:H9});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function q9(n){const e=q(n,"x","logSigmoid");return Na(s=>({value:ms(Rh(ms(s))),gradFunc:o=>ne(o,Tr(ms(s)))}))(e)}const ew=ie({logSigmoid_:q9});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Y9(n,e){let t=q(n,"a","sub"),s=q(e,"b","sub");[t,s]=ks(t,s);const r={a:t,b:s};return re.runKernel(Eh,r)}const gt=ie({sub_:Y9});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function j9(n,e=-1){const t=q(n,"logits","logSoftmax");if(e===-1&&(e=t.rank-1),e!==t.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${t.rank} and axis was ${e}`);return Na((r,i)=>{const a=lo(r,e,!0),l=gt(r,a),c=gt(Ze(l,"float32"),Gi(Mt(xr(l),e,!0)));return i([c]),{value:c,gradFunc:(h,d)=>{const[f]=d,p=!0,A=xr(f);return gt(h,ne(Mt(h,e,p),A))}}})(t)}const Lx=ie({logSoftmax_:j9});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function X9(n,e=null,t=!1){const s=q(n,"x","logSumExp"),r=an(e,s.shape),i=lo(s,r,!0),o=gt(s,i),a=xr(o),l=Mt(a,r),c=Gi(l),u=$e(ae(i,c.shape),c);if(t){const h=Ms(u.shape,r);return ae(u,h)}return u}const mA=ie({logSumExp_:X9});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function K9(n,e){const t=q(n,"a","logicalAnd","bool"),s=q(e,"b","logicalAnd","bool");jt(t.shape,s.shape);const r={a:t,b:s};return re.runKernel(Lf,r)}const Ko=ie({logicalAnd_:K9});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function J9(n){const t={x:q(n,"x","logicalNot","bool")};return re.runKernel(Of,t)}const gA=ie({logicalNot_:J9});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Z9(n,e){const t=q(n,"a","logicalOr","bool"),s=q(e,"b","logicalOr","bool");jt(t.shape,s.shape);const r={a:t,b:s};return re.runKernel(Qf,r)}const Ox=ie({logicalOr_:Z9});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eq(n,e){const t=q(n,"a","logicalXor","bool"),s=q(e,"b","logicalXor","bool");return jt(t.shape,s.shape),Ko(Ox(n,e),gA(Ko(n,e)))}const tw=ie({logicalXor_:eq});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Cy=2147483648;function tq(n,e,t="left"){const s=q(n,"sortedSequence","searchSorted"),r=q(e,"values","searchSorted"),i=s.shape[s.shape.length-1],o=r.shape[r.shape.length-1],a=ae(s,[-1,i]),l=ae(r,[-1,o]);if(a.rank<2)throw new Error("Sorted input argument must be at least 2-dimensional");if(a.shape[0]!==l.shape[0])throw new Error("Leading dimension of 'sortedSequence' and 'values' must match.");if(ye(l.shape)>=Cy)throw new Error(`values tensor size must less than ${Cy}`);if(a.shape[1]>=Cy)throw new Error(`trailing dim_size must less than ${Cy} for int32 output type, was ${a.shape[1]}`);const c={sortedSequence:a,values:l},u={side:t};return re.runKernel(Yg,c,u)}const Qx=ie({searchSorted_:tq});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xN(n,e){return Qx(n,e,"left")}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nq(n,e,t,s,r){const i=q(n,"x","maxPool"),o=1;let a=i,l=!1;i.rank===3&&(l=!0,a=ae(i,[1,i.shape[0],i.shape[1],i.shape[2]])),z(a.rank===4,()=>`Error in maxPool: input must be rank 4 but got rank ${a.rank}.`),z(nr(t,o),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${t} and dilations '${o}'`),ri("maxPool",s,r);const c={x:a},u={filterSize:e,strides:t,pad:s,dimRoundingMode:r},h=re.runKernel(Gf,c,u);return l?ae(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const AA=ie({maxPool_:nq});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sq(n,e=[1,1,1],t,s,r,i="NDHWC"){const o=q(n,"x","maxPool3d");let a=o,l=!1;o.rank===4&&(l=!0,a=ae(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),z(a.rank===5,()=>`Error in maxPool3d: x must be rank 5 but got rank ${a.rank}.`),z(i==="NDHWC",()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${i}`),ri("maxPool3d",s,r);const c={x:a},u={filterSize:e,strides:t,pad:s,dimRoundingMode:r,dataFormat:i},h=re.runKernel(Vf,c,u);return l?ae(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}const nw=ie({maxPool3d_:sq});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rq(n,e,t,s,r=!1){const o={x:q(n,"x","maxPoolWithArgmax")},a={filterSize:e,strides:t,pad:s,includeBatchInIndex:r},l=re.runKernel(Lg,o,a);return{result:l[0],indexes:l[1]}}const bN=ie({maxPoolWithArgmax_:rq});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iq(n,e){let t=q(n,"a","maximum"),s=q(e,"b","maximum");[t,s]=ks(t,s),t.dtype==="bool"&&(t=Ze(t,"int32"),s=Ze(s,"int32")),jt(t.shape,s.shape);const r={a:t,b:s};return re.runKernel(lh,r)}const Qa=ie({maximum_:iq});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oq(n,e=null,t=!1){const r={x:q(n,"x","mean")},i={axis:e,keepDims:t};return re.runKernel(Wf,r,i)}const _s=ie({mean_:oq});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rs(n,e="float32"){if(ji(n),e==="complex64"){const s=Rs(n,"float32"),r=Rs(n,"float32");return gl(s,r)}const t=Ar(ye(n),e);return re.makeTensor(t,n,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ai(n,e="float32"){if(ji(n),e==="complex64"){const s=Ai(n,"float32"),r=Rs(n,"float32");return gl(s,r)}const t=yx(ye(n),e);return re.makeTensor(t,n,e)}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vN(n,e,{indexing:t="xy"}={}){if(t!=="xy"&&t!=="ij")throw new TypeError(`${t} is not a valid third argument to meshgrid`);if(n===void 0)return[];let s=q(n,"x","meshgrid",n instanceof cn?n.dtype:"float32");if(e===void 0)return[s];let r=q(e,"y","meshgrid",e instanceof cn?e.dtype:"float32");const i=ye(s.shape),o=ye(r.shape);return t==="xy"?(s=ae(s,[1,-1]),r=ae(r,[-1,1]),[An(Ai([o,1],s.dtype),s),An(r,Ai([1,i],r.dtype))]):(s=ae(s,[-1,1]),r=ae(r,[1,-1]),[An(s,Ai([1,o],s.dtype)),An(Ai([i,1],r.dtype),r)])}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aq(n,e){let t=q(n,"a","minimum"),s=q(e,"b","minimum");[t,s]=ks(t,s),t.dtype==="bool"&&(t=Ze(t,"int32"),s=Ze(s,"int32")),jt(t.shape,s.shape);const r={a:t,b:s};return re.runKernel(ch,r)}const vl=ie({minimum_:aq});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lq(n,e,t){z(t==="reflect"||t==="symmetric",()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${t}.`);const s=q(n,"x","mirrorPad");if(s.rank===0)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");z(e.length===s.rank,()=>`Padding doesn't match input. Must be ${s.rank}. Got ${e.length}.`);const r=t==="reflect"?1:0;for(let a=0;a<s.rank;a++)z(e[a].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),z(e[a][0]>=0&&e[a][0]<=s.shape[a]-r&&e[a][1]>=0&&e[a][1]<=s.shape[a]-r,()=>`Padding in dimension ${a} cannot be greater than or equal to ${s.shape[a]-r} or less than 0 for input of shape ${s.shape}`);const i={paddings:e,mode:t},o={x:s};return re.runKernel(qf,o,i)}const yA=ie({mirrorPad_:lq});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cq(n,e){let t=q(n,"a","mod"),s=q(e,"b","mod");[t,s]=ks(t,s);const r={a:t,b:s};return re.runKernel(uh,r)}const sw=ie({mod_:cq});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uq(n,e=null,t=!1){n=q(n,"x","moments");const s=an(e,n.shape),r=_s(n,s,t);let i=r.shape;t||(i=Ms(r.shape,s));const o=Jn(gt(Ze(n,"float32"),ae(r,i))),a=_s(o,s,t);return{mean:r,variance:a}}const xA=ie({moments_:uq});function hq(n,e,t,s){const r=q(e,"data","multiRNNCell"),i=Lm(t,"c","multiRNNCell"),o=Lm(s,"h","multiRNNCell");let a=r;const l=[];for(let h=0;h<n.length;h++){const d=n[h](a,i[h],o[h]);l.push(d[0]),l.push(d[1]),a=d[1]}const c=[],u=[];for(let h=0;h<l.length;h+=2)c.push(l[h]),u.push(l[h+1]);return[c,u]}const CN=ie({multiRNNCell_:hq});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dq(n,e,t,s=!1){const r=q(n,"logits","multinomial"),i=r.size,o=r.rank;if(i<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${i}.`);if(o>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${o}`);t=t||Math.random();const l={logits:o===1?ae(r,[1,-1]):r},c={numSamples:e,seed:t,normalized:s},u=re.runKernel(Og,l,c);return o===1?ae(u,[u.size]):u}const IN=ie({multinomial_:dq});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fq(n,e){let t=q(n,"a","notEqual","string_or_numeric"),s=q(e,"b","notEqual","string_or_numeric");[t,s]=ks(t,s),jt(t.shape,s.shape);const r={a:t,b:s};return re.runKernel(jf,r)}const Eu=ie({notEqual_:fq});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pq(n,e,t=1,s=0,r="int32"){if(e<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${e}`);const o={indices:q(n,"indices","oneHot","int32")},a={dtype:r,depth:e,onValue:t,offValue:s};return re.runKernel(Kf,o,a)}const _u=ie({oneHot_:pq});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mq(n){const t={x:q(n,"x","onesLike")};return re.runKernel(Xf,t)}const Vi=ie({onesLike_:mq});function gq(n,e){const t=q(n,"v1","outerProduct"),s=q(e,"v2","outerProduct");z(t.rank===1&&s.rank===1,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${t.rank} and ${s.rank}.`);const r=ae(t,[-1,1]),i=ae(s,[1,-1]);return An(r,i)}const wN=ie({outerProduct_:gq});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Aq(n,e,t=0){const s=q(n,"x","pad");if(s.rank===0)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const r={paddings:e,constantValue:t},i={x:s};return re.runKernel(Zf,i,r)}const co=ie({pad_:Aq});function yq(n,e,t=0){return z(e.length===2,()=>"Invalid number of paddings. Must be length of 2."),co(n,[e],t)}const SN=ie({pad1d_:yq});function xq(n,e,t=0){return z(e.length===2&&e[0].length===2&&e[1].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),co(n,e,t)}const EN=ie({pad2d_:xq});function bq(n,e,t=0){return z(e.length===3&&e[0].length===2&&e[1].length===2&&e[2].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),co(n,e,t)}const rw=ie({pad3d_:bq});function vq(n,e,t=0){return z(e.length===4&&e[0].length===2&&e[1].length===2&&e[2].length===2&&e[3].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),co(n,e,t)}const _N=ie({pad4d_:vq});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cq(n,e,t){const s=q(n,"x","spaceToBatchND");z(s.rank>=1+e.length,()=>`input rank ${s.rank} should be > than [blockShape] ${e.length}`),z(t.length===e.length,()=>`paddings.shape[0] ${t.length} must be equal to [blockShape] ${e.length}`),z(s.shape.reduce((o,a,l)=>l>0&&l<=e.length?o&&(a+t[l-1][0]+t[l-1][1])%e[l-1]===0:o,!0),()=>`input spatial dimensions ${s.shape.slice(1)} with paddings ${t.toString()} must be divisible by blockShapes ${e.toString()}`);const r={x:s},i={blockShape:e,paddings:t};return re.runKernel(cp,r,i)}const bA=ie({spaceToBatchND_:Cq});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Iq(n,e,t,s,r,i,o){r==null&&(r=[1,1]),i==null&&(i=1),s===0&&(s="valid");const a=q(n,"x","maxPool");let l=a,c=!1;a.rank===3&&(c=!0,l=ae(a,[1,a.shape[0],a.shape[1],a.shape[2]])),z(nr(i,r),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${i} and dilations '${r}'`);const u=Pr(l.shape,e,i,r,s),h=[u.dilationHeight,u.dilationWidth];let d;s==="same"?d=Sq([u.filterHeight,u.filterWidth],h):d=[[0,0],[0,0]];const f=h[0]===1&&h[1]===1,[p,A]=wq([u.inHeight,u.inWidth],h,d),m=f?s:"valid",g=f?l:bA(l,h,p),v=(t==="avg"?()=>cA(g,e,i,m,o):()=>AA(g,e,i,m,o))(),b=f?v:uA(v,h,A);return c?ae(b,[b.shape[1],b.shape[2],b.shape[3]]):b}function wq(n,e,t){const s=t.map(u=>u[0]),r=t.map(u=>u[1]),i=n.concat(s,r),o=e.map((u,h)=>(u-i[h]%u)%u),a=r.map((u,h)=>u+o[h]),l=e.map((u,h)=>[s[h],a[h]]),c=e.map((u,h)=>[0,o[h]]);return[l,c]}function Sq(n,e){const s=n.map((o,a)=>o+(o-1)*(e[a]-1)).map(o=>o-1),r=s.map(o=>Math.floor(o/2)),i=s.map((o,a)=>o-r[a]);return s.map((o,a)=>[r[a],i[a]])}const iw=ie({pool_:Iq});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Eq(n,e){const t=q(n,"x","prelu"),s=q(e,"alpha","prelu"),r={x:t,alpha:s};return re.runKernel(ep,r)}const vA=ie({prelu_:Eq});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _q(n,e=null,t=!1){let s=q(n,"x","prod");s.dtype==="bool"&&(s=Ze(s,"int32"));const r={x:s},i={axis:e,keepDims:t};return re.runKernel(tp,r,i)}const ow=ie({prod_:_q});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tq(n,e,t,s){const r=n.map((u,h)=>q(u,`tensors${h}`,"raggedGather","int32")),i=q(e,"paramsDenseValues","raggedGather"),o=q(t,"indices","raggedGather","int32"),a={paramsNestedSplits:r,paramsDenseValues:i,indices:o},l={outputRaggedRank:s},c=re.runKernel(bx,a,l);return{outputNestedSplits:c.slice(0,c.length-1),outputDenseValues:c[c.length-1]}}const TN=ie({raggedGather_:Tq});/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bq(n,e,t){const s=q(n,"starts","raggedRange"),r=q(e,"limits","raggedRange",s.dtype),i=q(t,"deltas","raggedRange",s.dtype),o={starts:s,limits:r,deltas:i},a=re.runKernel(vx,o);return{rtNestedSplits:a[0],rtDenseValues:a[1]}}const BN=ie({raggedRange_:Bq});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kq(n,e,t,s,r){const i=q(n,"shape","raggedTensorToTensor","int32"),o=q(e,"values","raggedTensorToTensor"),a=q(t,"defaultValue","raggedTensorToTensor",o.dtype),l=s.map((h,d)=>q(h,`tensors${d}`,"raggedTensorToTensor","int32")),c={shape:i,values:o,defaultValue:a,rowPartitionTensors:l},u={rowPartitionTypes:r};return re.runKernel(Cx,c,u)}const kN=ie({raggedTensorToTensor_:kq});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nq(n,e,t){ji(n);const s=ye(n);let r=null;if(t==null||t==="float32")r=new Float32Array(s);else if(t==="int32")r=new Int32Array(s);else if(t==="bool")r=new Uint8Array(s);else throw new Error(`Unknown data type ${t}`);for(let i=0;i<s;i++)r[i]=e();return re.makeTensor(r,n,t)}const NN=ie({rand_:Nq});var e0={exports:{}},Rq=e0.exports,r_;function Mq(){return r_||(r_=1,(function(n){(function(e,t,s){function r(l){var c=this,u=a();c.next=function(){var h=2091639*c.s0+c.c*23283064365386963e-26;return c.s0=c.s1,c.s1=c.s2,c.s2=h-(c.c=h|0)},c.c=1,c.s0=u(" "),c.s1=u(" "),c.s2=u(" "),c.s0-=u(l),c.s0<0&&(c.s0+=1),c.s1-=u(l),c.s1<0&&(c.s1+=1),c.s2-=u(l),c.s2<0&&(c.s2+=1),u=null}function i(l,c){return c.c=l.c,c.s0=l.s0,c.s1=l.s1,c.s2=l.s2,c}function o(l,c){var u=new r(l),h=c&&c.state,d=u.next;return d.int32=function(){return u.next()*4294967296|0},d.double=function(){return d()+(d()*2097152|0)*11102230246251565e-32},d.quick=d,h&&(typeof h=="object"&&i(h,u),d.state=function(){return i(u,{})}),d}function a(){var l=4022871197,c=function(u){u=String(u);for(var h=0;h<u.length;h++){l+=u.charCodeAt(h);var d=.02519603282416938*l;l=d>>>0,d-=l,d*=l,l=d>>>0,d-=l,l+=d*4294967296}return(l>>>0)*23283064365386963e-26};return c}t&&t.exports?t.exports=o:this.alea=o})(Rq,n)})(e0)),e0.exports}var t0={exports:{}},Dq=t0.exports,i_;function Fq(){return i_||(i_=1,(function(n){(function(e,t,s){function r(a){var l=this,c="";l.x=0,l.y=0,l.z=0,l.w=0,l.next=function(){var h=l.x^l.x<<11;return l.x=l.y,l.y=l.z,l.z=l.w,l.w^=l.w>>>19^h^h>>>8},a===(a|0)?l.x=a:c+=a;for(var u=0;u<c.length+64;u++)l.x^=c.charCodeAt(u)|0,l.next()}function i(a,l){return l.x=a.x,l.y=a.y,l.z=a.z,l.w=a.w,l}function o(a,l){var c=new r(a),u=l&&l.state,h=function(){return(c.next()>>>0)/4294967296};return h.double=function(){do var d=c.next()>>>11,f=(c.next()>>>0)/4294967296,p=(d+f)/(1<<21);while(p===0);return p},h.int32=c.next,h.quick=h,u&&(typeof u=="object"&&i(u,c),h.state=function(){return i(c,{})}),h}t&&t.exports?t.exports=o:this.xor128=o})(Dq,n)})(t0)),t0.exports}var n0={exports:{}},$q=n0.exports,o_;function Pq(){return o_||(o_=1,(function(n){(function(e,t,s){function r(a){var l=this,c="";l.next=function(){var h=l.x^l.x>>>2;return l.x=l.y,l.y=l.z,l.z=l.w,l.w=l.v,(l.d=l.d+362437|0)+(l.v=l.v^l.v<<4^(h^h<<1))|0},l.x=0,l.y=0,l.z=0,l.w=0,l.v=0,a===(a|0)?l.x=a:c+=a;for(var u=0;u<c.length+64;u++)l.x^=c.charCodeAt(u)|0,u==c.length&&(l.d=l.x<<10^l.x>>>4),l.next()}function i(a,l){return l.x=a.x,l.y=a.y,l.z=a.z,l.w=a.w,l.v=a.v,l.d=a.d,l}function o(a,l){var c=new r(a),u=l&&l.state,h=function(){return(c.next()>>>0)/4294967296};return h.double=function(){do var d=c.next()>>>11,f=(c.next()>>>0)/4294967296,p=(d+f)/(1<<21);while(p===0);return p},h.int32=c.next,h.quick=h,u&&(typeof u=="object"&&i(u,c),h.state=function(){return i(c,{})}),h}t&&t.exports?t.exports=o:this.xorwow=o})($q,n)})(n0)),n0.exports}var s0={exports:{}},Lq=s0.exports,a_;function Oq(){return a_||(a_=1,(function(n){(function(e,t,s){function r(a){var l=this;l.next=function(){var u=l.x,h=l.i,d,f;return d=u[h],d^=d>>>7,f=d^d<<24,d=u[h+1&7],f^=d^d>>>10,d=u[h+3&7],f^=d^d>>>3,d=u[h+4&7],f^=d^d<<7,d=u[h+7&7],d=d^d<<13,f^=d^d<<9,u[h]=f,l.i=h+1&7,f};function c(u,h){var d,f=[];if(h===(h|0))f[0]=h;else for(h=""+h,d=0;d<h.length;++d)f[d&7]=f[d&7]<<15^h.charCodeAt(d)+f[d+1&7]<<13;for(;f.length<8;)f.push(0);for(d=0;d<8&&f[d]===0;++d);for(d==8?f[7]=-1:f[d],u.x=f,u.i=0,d=256;d>0;--d)u.next()}c(l,a)}function i(a,l){return l.x=a.x.slice(),l.i=a.i,l}function o(a,l){a==null&&(a=+new Date);var c=new r(a),u=l&&l.state,h=function(){return(c.next()>>>0)/4294967296};return h.double=function(){do var d=c.next()>>>11,f=(c.next()>>>0)/4294967296,p=(d+f)/(1<<21);while(p===0);return p},h.int32=c.next,h.quick=h,u&&(u.x&&i(u,c),h.state=function(){return i(c,{})}),h}t&&t.exports?t.exports=o:this.xorshift7=o})(Lq,n)})(s0)),s0.exports}var r0={exports:{}},Qq=r0.exports,l_;function Uq(){return l_||(l_=1,(function(n){(function(e,t,s){function r(a){var l=this;l.next=function(){var u=l.w,h=l.X,d=l.i,f,p;return l.w=u=u+1640531527|0,p=h[d+34&127],f=h[d=d+1&127],p^=p<<13,f^=f<<17,p^=p>>>15,f^=f>>>12,p=h[d]=p^f,l.i=d,p+(u^u>>>16)|0};function c(u,h){var d,f,p,A,m,g=[],x=128;for(h===(h|0)?(f=h,h=null):(h=h+"\0",f=0,x=Math.max(x,h.length)),p=0,A=-32;A<x;++A)h&&(f^=h.charCodeAt((A+32)%h.length)),A===0&&(m=f),f^=f<<10,f^=f>>>15,f^=f<<4,f^=f>>>13,A>=0&&(m=m+1640531527|0,d=g[A&127]^=f+m,p=d==0?p+1:0);for(p>=128&&(g[(h&&h.length||0)&127]=-1),p=127,A=512;A>0;--A)f=g[p+34&127],d=g[p=p+1&127],f^=f<<13,d^=d<<17,f^=f>>>15,d^=d>>>12,g[p]=f^d;u.w=m,u.X=g,u.i=p}c(l,a)}function i(a,l){return l.i=a.i,l.w=a.w,l.X=a.X.slice(),l}function o(a,l){a==null&&(a=+new Date);var c=new r(a),u=l&&l.state,h=function(){return(c.next()>>>0)/4294967296};return h.double=function(){do var d=c.next()>>>11,f=(c.next()>>>0)/4294967296,p=(d+f)/(1<<21);while(p===0);return p},h.int32=c.next,h.quick=h,u&&(u.X&&i(u,c),h.state=function(){return i(c,{})}),h}t&&t.exports?t.exports=o:this.xor4096=o})(Qq,n)})(r0)),r0.exports}var i0={exports:{}},zq=i0.exports,c_;function Gq(){return c_||(c_=1,(function(n){(function(e,t,s){function r(a){var l=this,c="";l.next=function(){var h=l.b,d=l.c,f=l.d,p=l.a;return h=h<<25^h>>>7^d,d=d-f|0,f=f<<24^f>>>8^p,p=p-h|0,l.b=h=h<<20^h>>>12^d,l.c=d=d-f|0,l.d=f<<16^d>>>16^p,l.a=p-h|0},l.a=0,l.b=0,l.c=-1640531527,l.d=1367130551,a===Math.floor(a)?(l.a=a/4294967296|0,l.b=a|0):c+=a;for(var u=0;u<c.length+20;u++)l.b^=c.charCodeAt(u)|0,l.next()}function i(a,l){return l.a=a.a,l.b=a.b,l.c=a.c,l.d=a.d,l}function o(a,l){var c=new r(a),u=l&&l.state,h=function(){return(c.next()>>>0)/4294967296};return h.double=function(){do var d=c.next()>>>11,f=(c.next()>>>0)/4294967296,p=(d+f)/(1<<21);while(p===0);return p},h.int32=c.next,h.quick=h,u&&(typeof u=="object"&&i(u,c),h.state=function(){return i(c,{})}),h}t&&t.exports?t.exports=o:this.tychei=o})(zq,n)})(i0)),i0.exports}var o0={exports:{}};const Vq={},Wq=Object.freeze(Object.defineProperty({__proto__:null,default:Vq},Symbol.toStringTag,{value:"Module"})),Hq=k6(Wq);var qq=o0.exports,u_;function Yq(){return u_||(u_=1,(function(n){(function(e,t,s){var r=256,i=6,o=52,a="random",l=s.pow(r,i),c=s.pow(2,o),u=c*2,h=r-1,d;function f(b,w,_){var N=[];w=w==!0?{entropy:!0}:w||{};var M=g(m(w.entropy?[b,v(t)]:b??x(),3),N),T=new p(N),k=function(){for(var B=T.g(i),L=l,U=0;B<c;)B=(B+U)*r,L*=r,U=T.g(1);for(;B>=u;)B/=2,L/=2,U>>>=1;return(B+U)/L};return k.int32=function(){return T.g(4)|0},k.quick=function(){return T.g(4)/4294967296},k.double=k,g(v(T.S),t),(w.pass||_||function(B,L,U,V){return V&&(V.S&&A(V,T),B.state=function(){return A(T,{})}),U?(s[a]=B,L):B})(k,M,"global"in w?w.global:this==s,w.state)}function p(b){var w,_=b.length,N=this,M=0,T=N.i=N.j=0,k=N.S=[];for(_||(b=[_++]);M<r;)k[M]=M++;for(M=0;M<r;M++)k[M]=k[T=h&T+b[M%_]+(w=k[M])],k[T]=w;(N.g=function(B){for(var L,U=0,V=N.i,W=N.j,H=N.S;B--;)L=H[V=h&V+1],U=U*r+H[h&(H[V]=H[W=h&W+L])+(H[W]=L)];return N.i=V,N.j=W,U})(r)}function A(b,w){return w.i=b.i,w.j=b.j,w.S=b.S.slice(),w}function m(b,w){var _=[],N=typeof b,M;if(w&&N=="object")for(M in b)try{_.push(m(b[M],w-1))}catch{}return _.length?_:N=="string"?b:b+"\0"}function g(b,w){for(var _=b+"",N,M=0;M<_.length;)w[h&M]=h&(N^=w[h&M]*19)+_.charCodeAt(M++);return v(w)}function x(){try{var b;return d&&(b=d.randomBytes)?b=b(r):(b=new Uint8Array(r),(e.crypto||e.msCrypto).getRandomValues(b)),v(b)}catch{var w=e.navigator,_=w&&w.plugins;return[+new Date,e,_,e.screen,v(t)]}}function v(b){return String.fromCharCode.apply(0,b)}if(g(s.random(),t),n.exports){n.exports=f;try{d=Hq}catch{}}else s["seed"+a]=f})(typeof self<"u"?self:qq,[],Math)})(o0)),o0.exports}var J2,h_;function jq(){if(h_)return J2;h_=1;var n=Mq(),e=Fq(),t=Pq(),s=Oq(),r=Uq(),i=Gq(),o=Yq();return o.alea=n,o.xor128=e,o.xorwow=t,o.xorshift7=s,o.xor4096=r,o.tychei=i,J2=o,J2}var Ux=jq();/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xq=.001,RN=.1;function Kq(n,e,t){return t==null&&(t=aw()),Zv(n,e,(s,r)=>lw(s,r,t))}function aw(){return re.backend.floatPrecision()===32?Xq:RN}function Zv(n,e,t){let s=!0;if((ur(n)||ur(e))&&(s=!1),ur(n)&&ur(e)&&(s=!0),s){const o=n.constructor.name,a=e.constructor.name;if(o!==a)throw new Error(`Arrays are of different type. Actual: ${o}. Expected: ${a}`)}if(Array.isArray(n)&&Array.isArray(e)){const o=Ba(n),a=Ba(e);if(!dn(o,a))throw new Error(`Arrays have different shapes. Actual: [${o}]. Expected: [${a}]`)}const r=ur(n)?n:_o(n),i=ur(e)?e:_o(e);if(r.length!==i.length)throw new Error(`Arrays have different lengths actual: ${r.length} vs expected: ${i.length}.
Actual:   ${r}.
Expected: ${i}.`);for(let o=0;o<i.length;++o){const a=r[o],l=i[o];if(!t(a,l))throw new Error(`Arrays differ: actual[${o}] = ${a}, expected[${o}] = ${l}.
Actual:   ${r}.
Expected: ${i}.`)}typeof expect<"u"&&expect().nothing()}function Jq(n,e){n().then(()=>e.fail(),()=>e()),typeof expect<"u"&&expect().nothing()}function Zq(n,e){const t=typeof e=="string"||typeof e=="number"||typeof e=="boolean"?[e]:e;return Wo(n)||Wo(n[0])||Wo(e)||Wo(e[0])?Zv(n,t,(s,r)=>s==r):Zv(n,e,(s,r)=>lw(s,r,0))}function e7(n,e,t){if(t==null&&(t=aw()),!lw(n,e,t))throw new Error(`Numbers differ: actual === ${n}, expected === ${e}`);typeof expect<"u"&&expect().nothing()}function lw(n,e,t){return!isFinite(n)&&!isFinite(e)?!0:!(isNaN(n)||isNaN(e)||Math.abs(n-e)>t)}function t7(n,e,t){for(let s=0;s<n.length;s++)if(n[s]<e||n[s]>t)throw new Error(`Value out of range:${n[s]} low: ${e}, high: ${t}`)}function n7(n,e){const t=new Float32Array(n),s=new Float32Array(e);if(t.length!==s.length)throw new Error(`Expected ArrayBuffer to be of length ${s.length}, but it was ${t.length}`);for(let r=0;r<s.length;r++)if(t[r]!==s[r])throw new Error(`Expected ArrayBuffer value at ${r} to be ${s[r]} but got ${t[r]} instead`)}function MN(n){for(let e=0;e<n.length;e++){const t=n[e];Array.isArray(t)?MN(t):n[e]=Yo(t)}return n}function s7(n){const e=document.createElement("video");return"playsInline"in e&&(e.playsInline=!0),e.muted=!0,e.loop=!0,e.style.position="fixed",e.style.left="0px",e.style.top="0px",e.preload="auto",e.appendChild(n),new Promise(t=>{e.addEventListener("loadeddata",s=>t(e)),e.load()})}async function r7(n){await n.play(),"requestVideoFrameCallback"in n&&await new Promise(e=>{n.requestVideoFrameCallback(e)})}const i7=Object.freeze(Object.defineProperty({__proto__:null,TEST_EPSILON_FLOAT16:RN,createVideoElement:s7,encodeStrings:MN,expectArrayBuffersEqual:n7,expectArraysClose:Kq,expectArraysEqual:Zq,expectNumbersClose:e7,expectPromiseToFail:Jq,expectValuesInRange:t7,play:r7,testEpsilon:aw},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class cw{constructor(e,t,s,r,i){this.mean=e,this.stdDev=t,this.dtype=s,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+this.stdDev*2,this.lower=this.mean-this.stdDev*2);const o=i||Math.random();this.random=Ux.alea(o.toString())}nextValue(){if(!isNaN(this.nextVal)){const r=this.nextVal;return this.nextVal=NaN,r}let e,t,s=!1;for(;!s;){let r,i,o;do r=2*this.random()-1,i=2*this.random()-1,o=r*r+i*i;while(o>=1||o===0);const a=Math.sqrt(-2*Math.log(o)/o);e=this.mean+this.stdDev*r*a,t=this.mean+this.stdDev*i*a,(!this.truncated||this.isValidTruncated(e))&&(s=!0)}return(!this.truncated||this.isValidTruncated(t))&&(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return this.dtype==null||this.dtype==="float32"?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class o7{constructor(e,t,s,r){this.alpha=e,this.beta=1/t,this.dtype=s;const i=r||Math.random();this.randu=Ux.alea(i.toString()),this.randn=new cw(0,1,s,!1,this.randu()),e<1?this.d=e+2/3:this.d=e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,s,r,i,o;for(;;){do r=this.randn.nextValue(),o=1+this.c*r;while(o<=0);if(o*=o*o,e=r*r,t=1-.331*e*e,s=.5*e+this.d*(1-o+Math.log(o)),i=this.randu(),i<t||Math.log(i)<s)break}return o=1/this.beta*this.d*o,this.alpha<1&&(o*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(o)}convertValue(e){return this.dtype==="float32"?e:Math.round(e)}}class a7{constructor(e=0,t=1,s,r){if(this.canReturnFloat=()=>this.dtype==null||this.dtype==="float32",this.min=e,this.range=t-e,this.dtype=s,r==null&&(r=Math.random()),typeof r=="number"&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=Ux.alea(r)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function l7(n,e,t=1,s="float32",r){if(ji(n),t==null&&(t=1),s==null&&(s="float32"),s!=="float32"&&s!=="int32")throw new Error(`Unsupported data type ${s}`);const i=new o7(e,t,s,r),o=rn(n,s);for(let a=0;a<o.values.length;a++)o.values[a]=i.nextValue();return o.toTensor()}const DN=ie({randomGamma_:l7});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function c7(n,e=0,t=1,s,r){if(ji(n),s!=null&&s==="bool")throw new Error(`Unsupported data type ${s}`);const i=new cw(e,t,s,!1,r),o=rn(n,s);for(let a=0;a<o.values.length;a++)o.values[a]=i.nextValue();return o.toTensor()}const zx=ie({randomNormal_:c7});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function u7(n,e,t){if(e!=null&&e==="bool")throw new Error(`Unsupported data type ${e}`);return zx(n,0,1,e,t)}const FN=ie({randomStandardNormal_:u7});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function h7(n,e=0,t=1,s="float32",r){ji(n);const i=rn(n,s),o=new a7(e,t,null,r);for(let a=0;a<i.values.length;a++)i.values[a]=o.nextValue();return i.toTensor()}const bc=ie({randomUniform_:h7});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function d7(n,e,t,s){return bc(n,e,t,"int32",s)}const $N=ie({randomUniformInt_:d7});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cl(n,e,t=1,s="float32"){if(t===0)throw new Error("Cannot have a step of zero");const r={start:n,stop:e,step:t,dtype:s};return re.runKernel(zg,{},r)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function f7(n){const t={input:q(n,"input","real")};return re.runKernel(Gg,t)}const Kd=ie({real_:f7});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function p7(n){const t={x:q(n,"x","reciprocal")};return re.runKernel(fh,t)}const uw=ie({reciprocal_:p7});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function m7(n){const t={x:q(n,"x","relu")};return re.runKernel(ph,t)}const oa=ie({relu_:m7});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function g7(n){const t={x:q(n,"x","relu6")};return re.runKernel(mh,t)}const Gx=ie({relu6_:g7});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function A7(n,e){const s={x:q(n,"x","reverse")},r={dims:e};return re.runKernel(ip,s,r)}const uo=ie({reverse_:A7});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function y7(n){const e=q(n,"x","reverse");return z(e.rank===1,()=>`Error in reverse1D: x must be rank 1 but got rank ${e.rank}.`),uo(e,0)}const PN=ie({reverse1d_:y7});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function x7(n,e){const t=q(n,"x","reverse");return z(t.rank===2,()=>`Error in reverse2D: x must be rank 2 but got rank ${t.rank}.`),uo(t,e)}const LN=ie({reverse2d_:x7});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function b7(n,e){const t=q(n,"x","reverse");return z(t.rank===3,()=>`Error in reverse3D: x must be rank 3 but got rank ${t.rank}.`),uo(t,e)}const ON=ie({reverse3d_:b7});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function v7(n,e){const t=q(n,"x","reverse");return z(t.rank===4,()=>`Error in reverse4D: x must be rank 4 but got rank ${t.rank}.`),uo(t,e)}const QN=ie({reverse4d_:v7});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function C7(n){const t={x:q(n,"x","round")};return re.runKernel(gh,t)}const Vx=ie({round_:C7});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function I7(n){const t={x:q(n,"x","rsqrt","float32")};return re.runKernel(Ah,t)}const Wx=ie({rsqrt_:I7});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function w7(n){const t={x:q(n,"x","selu")};return re.runKernel(yh,t)}const Hx=ie({selu_:w7});function S7(n,e,t,s,r,i=[1,1],o="NHWC"){const a=q(n,"x","separableConv2d"),l=q(e,"depthwiseFilter","separableConv2d"),c=q(t,"pointwiseFilter","separableConv2d");let u=a,h=!1;if(a.rank===3&&(h=!0,u=ae(a,[1,a.shape[0],a.shape[1],a.shape[2]])),o==="NCHW")throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");z(u.rank===4,()=>`Error in separableConv2d: input must be rank 4, but got rank ${u.rank}.`),z(l.rank===4,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`),z(c.rank===4,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`),z(c.shape[0]===1,()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${c.shape[0]}.`),z(c.shape[1]===1,()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${c.shape[1]}.`);const d=l.shape[2],f=l.shape[3];z(c.shape[2]===d*f,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${d*f}, but got ${c.shape[2]}.`);const p=gp(u,l,s,r,o,i),m=xl(p,c,1,"valid",o);return h?ae(m,[m.shape[1],m.shape[2],m.shape[3]]):m}const qx=ie({separableConv2d_:S7});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function E7(n,e){const t=q(n,"x","setdiff1d"),s=q(e,"y","setdiff1d");z(t.dtype===s.dtype,()=>`x and y should have the same dtype, but got x (${t.dtype}) and y (${s.dtype}).`),z(t.rank===1,()=>`x should be 1D tensor, but got x (${t.shape}).`),z(s.rank===1,()=>`y should be 1D tensor, but got y (${s.shape}).`);const r=await t.data(),i=await s.data(),o=new Set(i);let a=0;for(let u=0;u<r.length;u++)o.has(r[u])||a++;const l=new Vs([a],t.dtype),c=new Vs([a],"int32");for(let u=0,h=0;u<r.length;u++)o.has(r[u])||(l.values[h]=r[u],c.values[h]=u,h++);return[l.toTensor(),c.toTensor()]}const UN=E7;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _7(n){const t={x:q(n,"x","sign")};return re.runKernel(vh,t)}const hw=ie({sign_:_7});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function T7(n){const t={x:q(n,"x","sin","float32")};return re.runKernel(xh,t)}const Yx=ie({sin_:T7});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function B7(n){const t={x:q(n,"x","sinh")};return re.runKernel(bh,t)}const jx=ie({sinh_:B7});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function k7(n,e,t){const s=q(n,"x","slice1d");return z(s.rank===1,()=>`slice1d expects a rank-1 tensor, but got a rank-${s.rank} tensor`),Rt(s,[e],[t])}const CA=ie({slice1d_:k7});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function N7(n,e,t){const s=q(n,"x","slice2d");return z(s.rank===2,()=>`slice2d expects a rank-2 tensor, but got a rank-${s.rank} tensor`),Rt(s,e,t)}const Xx=ie({slice2d_:N7});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function R7(n,e,t){const s=q(n,"x","slice3d");return z(s.rank===3,()=>`slice3d expects a rank-3 tensor, but got a rank-${s.rank} tensor`),Rt(s,e,t)}const IA=ie({slice3d_:R7});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function M7(n,e,t){const s=q(n,"x","slice4d");return z(s.rank===4,()=>`slice4d expects a rank-4 tensor, but got a rank-${s.rank} tensor`),Rt(s,e,t)}const Jd=ie({slice4d_:M7});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function D7(n,e=-1){const t=q(n,"logits","softmax","float32");if(e===-1&&(e=t.rank-1),e!==t.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${t.rank} and dim was ${e}`);const s={logits:t},r={dim:e};return re.runKernel(hp,s,r)}const wA=ie({softmax_:D7});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function F7(n){z(n.dtype==="complex64",()=>`The dtype for tf.spectral.fft() must be complex64 but got ${n.dtype}.`);const e={input:n};return re.runKernel(Tg,e)}const SA=ie({fft_:F7});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $7(n){z(n.dtype==="complex64",()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${n.dtype}.`);const e={input:n};return re.runKernel(Rg,e)}const Zd=ie({ifft_:$7});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function P7(n){const e=n.shape[n.shape.length-1],t=n.size/e;let s;if(e<=2){const r=ae(n,[t,e]);s=Zd(r)}else{const r=[t,2*(e-1)],i=ae(Kd(n),[t,e]),o=ae(dA(n),[t,e]),a=uo(Rt(i,[0,1],[t,e-2]),1),l=ne(uo(Rt(o,[0,1],[t,e-2]),1),Bt(-1)),c=ps([i,a],1),u=ps([o,l],1),h=ae(gl(c,u),[r[0],r[1]]);s=Zd(h)}if(s=Kd(s),n.rank===3&&n.shape[0]!==0){const r=s,i=n.shape[0];s=ae(s,[i,s.shape[0]/i,s.shape[1]]),r.dispose()}return s}const Kx=ie({irfft_:P7});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function L7(n,e,t=0){const r={x:q(n,"x","split")},i={numOrSizeSplits:e,axis:t};return re.runKernel(up,r,i)}const yi=ie({split_:L7});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function O7(n,e){z(n.dtype==="float32",()=>`The dtype for rfft() must be real value but got ${n.dtype}`);let t=n.shape[n.shape.length-1];const s=n.size/t;let r;if(e!=null&&e<t){const p=n.shape.map(m=>0),A=n.shape.map(m=>m);A[n.shape.length-1]=e,r=Rt(n,p,A),t=e}else if(e!=null&&e>t){const p=n.shape.map(A=>A);p[n.shape.length-1]=e-t,r=ps([n,Rs(p)],n.shape.length-1),t=e}else r=n;const i=_n(r),o=ae(gl(r,i),[s,t]),a=SA(o),l=Math.floor(t/2)+1,c=Kd(a),u=dA(a),h=yi(c,[l,t-l],c.shape.length-1),d=yi(u,[l,t-l],u.shape.length-1),f=r.shape.slice();return f[r.shape.length-1]=l,ae(gl(h[0],d[0]),f)}const EA=ie({rfft_:O7});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Q7(n,e){let t=q(n,"a","squaredDifference"),s=q(e,"b","squaredDifference");[t,s]=ks(t,s),jt(t.shape,s.shape);const r={a:t,b:s},i={};return re.runKernel(Sh,r,i)}const Jx=ie({squaredDifference_:Q7});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function U7(n,e){const t=q(n,"x","squeeze","string_or_numeric");return ae(t,Sl(t.shape,e).newShape)}const Ht=ie({squeeze_:U7});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function z7(n,e=0){const t=Lm(n,"tensors","stack","string_or_numeric");z(t.length>=1,()=>"Pass at least one tensor to tf.stack"),t.length>0&&z(e<=t[0].rank,()=>"Axis must be <= rank of the tensor");const s=t,r={axis:e};return re.runKernel(Jf,s,r)}const Ci=ie({stack_:z7});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function G7(n,e=0){const s={x:q(n,"x","step")},r={alpha:e};return re.runKernel(kh,s,r)}const Mh=ie({step_:G7});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function V7(n,e,t,s,r=0,i=0,o=0,a=0,l=0){const u={x:q(n,"x","stridedSlice","string_or_numeric")},h={begin:e,end:t,strides:s,beginMask:r,endMask:i,ellipsisMask:o,newAxisMask:a,shrinkAxisMask:l};return re.runKernel(eA,u,h)}const dw=ie({stridedSlice_:V7});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function W7(n){const t={x:q(n,"x","tan","float32")};return re.runKernel(_h,t)}const fw=ie({tan_:W7});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fs(n,e){Du(n);const t=Ba(n,e);if(t.length!==1)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Ac(n,null,t,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ni(n,e,t){if(Du(n),e!=null&&e.length!==2)throw new Error("tensor2d() requires shape to have two numbers");const s=Ba(n,t);if(s.length!==2&&s.length!==1)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(s.length===1&&e==null)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Ac(n,e,s,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pw(n,e,t){if(Du(n),e!=null&&e.length!==3)throw new Error("tensor3d() requires shape to have three numbers");const s=Ba(n,t);if(s.length!==3&&s.length!==1)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(s.length===1&&e==null)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return Ac(n,e,s,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zN(n,e,t){if(Du(n),e!=null&&e.length!==4)throw new Error("tensor4d() requires shape to have four numbers");const s=Ba(n,t);if(s.length!==4&&s.length!==1)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(s.length===1&&e==null)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return Ac(n,e,s,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GN(n,e,t){if(Du(n),e!=null&&e.length!==5)throw new Error("tensor5d() requires shape to have five numbers");const s=Ba(n,t);if(s.length!==5&&s.length!==1)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(s.length===1&&e==null)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return Ac(n,e,s,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VN(n,e,t){if(Du(n),e!=null&&e.length!==6)throw new Error("tensor6d() requires shape to have six numbers");const s=Ba(n,t);if(s.length!==6&&s.length!==1)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(s.length===1&&e==null)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return e=e||s,Ac(n,e,s,t)}function mw(n,e,t){const s=e.rank>1?e.shape[e.rank-1]:1,r=e.rank>1?e.rank-1:1,i=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${t.shape}, indices.shape: ${e.shape}, shape: ${n}, sliceDim: ${s}, and batchDim: ${r}.`;if(t.rank<r)throw new Error(i+` update.rank < ${r}. `);if(n.length<s+(t.rank-r))throw new Error(i+` Output shape length < ${s+(t.rank-r)}`);if(t.rank!==r+n.length-s)throw new Error(i+` update.rank != ${r+n.length-s}`);for(let o=0;o<r;++o)if(t.shape[o]!==e.shape[o])throw new Error(i+` updates.shape[${o}] (${t.shape[o]}) != indices.shape[${o}] (${e.shape[o]}).`);for(let o=0;o<t.rank-r;++o)if(t.shape[o+r]!==n[o+s])throw new Error(i+` updates.shape[${o+r}] (${t.shape[o+r]}) != shape[${o+r}] (${n[o+r]})`)}function Zx(n,e,t){if(e.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${e.rank}.`);if(n.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${n.rank}.`);if(e.dtype!=="int32")throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${e.dtype}`);if(t.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${t}`);if(t.length===0){if(e.size===0)throw new Error(`Indices specified for empty output. indices shape: ${e.shape}`);if(n.size===0)throw new Error(`Updates specified for empty output. updates shape: ${n.shape}`)}mw(t,e,n)}function aa(n,e,t){const s=e.shape.length,r=s>1?e.shape[s-1]:1,i=t.length;let o=1;for(let h=r;h<i;++h)o*=t[h];const a=r<1?1:r,l=ye(e.shape)/a,c=[...Ot(t.slice(0,r)),1],u=ye(t);return{sliceRank:r,numUpdates:l,sliceSize:o,strides:c,outputSize:u}}const H7=Object.freeze(Object.defineProperty({__proto__:null,calculateShapes:aa,validateInput:Zx,validateUpdateShape:mw},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function q7(n,e,t){const s=q(n,"tensor","tensorScatterupdate"),r=q(e,"indices","tensorScatterupdate","int32"),i=q(t,"updates","tensorScatterupdate");if(Zx(i,r,s.shape),s.dtype!==i.dtype)throw new Error(`tensor and updates must have the same dtype, instead they are ${s.dtype} and ${i.dtype}.`);const o={tensor:s,indices:r,updates:i},a={};return re.runKernel(qg,o,a)}const WN=ie({tensorScatterUpdate_:q7});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Y7(n,e=1,t=!0){const s=q(n,"x","topk");if(s.rank===0)throw new Error("topk() expects the input to be of rank 1 or higher");const r=s.shape[s.shape.length-1];if(e<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${e}`);if(e>r)throw new Error(`'k' passed to topk() must be <= the last dimension (${r}) but got ${e}`);const i={x:s},o={k:e,sorted:t},[a,l]=re.runKernel(nA,i,o);return{values:a,indices:l}}const gw=ie({topk_:Y7});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function j7(n,e=0,t=1,s,r){if(ji(n),s!=null&&s==="bool")throw new Error("Unsupported data type $ { dtype }");const i=new cw(e,t,s,!0,r),o=rn(n,s);for(let a=0;a<o.values.length;a++)o.values[a]=i.nextValue();return o.toTensor()}const e1=ie({truncatedNormal_:j7});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function X7(n,e=0){const t=q(n,"x","unique","string_or_numeric");z(t.rank>0,()=>"The input tensor must be at least 1D");const s={x:t},r={axis:e},[i,o]=re.runKernel(_x,s,r);return{values:i,indices:o}}const Aw=ie({unique_:X7});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function K7(n,e,t){const s=q(n,"x","unsortedSegmentSum"),r=q(e,"segmentIds","unsortedSegmentSum","int32");z(bu(t),()=>"numSegments must be of dtype int");const i={x:s,segmentIds:r},o={numSegments:t};return re.runKernel(fp,i,o)}const t1=ie({unsortedSegmentSum_:K7});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function J7(n,e=0){const t=q(n,"x","unstack","string_or_numeric");z(e>=-t.shape.length&&e<t.shape.length,()=>`Axis = ${e} is not in [-${t.shape.length}, ${t.shape.length})`);const s={value:t},r={axis:e};return re.runKernel(dp,s,r)}const ho=ie({unstack_:J7});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HN(n,e){return Qx(n,e,"right")}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yw(n,e=!0,t,s){return re.makeVariable(n,e,t,s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function n1(n,e){const t=[];for(let i=0;i<e.length;i++)e[i]&&t.push(i);const s=rn(n,"int32"),r=rn([t.length,n.length],"int32");for(let i=0;i<t.length;i++){const o=s.indexToLoc(t[i]),a=i*n.length;r.values.set(o,a)}return r.toTensor()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function Z7(n){const e=q(n,"condition","whereAsync","bool"),t=await e.data(),s=n1(e.shape,t);return n!==e&&e.dispose(),s}const xw=Z7;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function eY(n,e,t){const s=q(n,"tensor","boolMask"),r=q(e,"mask","boolMask","bool"),i=t??0,o=r.rank,a=s.shape;z(o>0,()=>"mask cannot be scalar"),br(a.slice(i,i+o),r.shape,"mask's shape must match the first K dimensions of tensor's shape,");let l=1;for(let A=i;A<i+o;A++)l*=a[A];const c=a.slice(0,i).concat([l],a.slice(i+o)),u=ae(s,c),h=ae(r,[-1]),d=await xw(h),f=Ht(d,[1]),p=bp(u,f,i);return n!==s&&s.dispose(),e!==r&&r.dispose(),f.dispose(),u.dispose(),h.dispose(),d.dispose(),p}const qN=eY;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tY(n,e,t){const s=q(n,"x","transpose");if(e==null&&(e=s.shape.map((o,a)=>a).reverse()),z(s.rank===e.length,()=>`Error in transpose: rank of input ${s.rank} must match length of perm ${e}.`),e.forEach(o=>{z(o>=0&&o<s.rank,()=>`All entries in 'perm' must be between 0 and ${s.rank-1} but got ${e}`)}),s.rank<=1)return s.clone();const r={x:s},i={perm:e};return s.dtype==="complex64"?ue(()=>{let o=Kd(s),a=dA(s);return o=re.runKernel(Xl,{x:o},i),a=re.runKernel(Xl,{x:a},i),t&&(a=ms(a)),gl(o,a)}):re.runKernel(Xl,r,i)}const Sn=ie({transpose_:tY});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nY(n,e,t,s,r=!0){const i=q(n,"v","movingAverage"),o=q(e,"x","movingAverage"),a=q(t,"decay","movingAverage");zk(i,o),z(dn(i.shape,o.shape),()=>"Shape mismatch in v and x");const l=Bt(1),c=gt(l,a);let u=ne(gt(o,i),c);if(r){z(s!=null,()=>"When using zeroDebias: true, step is required.");const h=q(s,"step","movingAverage");u=rt(u,gt(l,ka(a,h)))}return $e(i,u)}const YN=ie({movingAverage_:nY});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sY(n,e,t){ji(t);const s=q(n,"indices","scatterND","int32"),r=q(e,"updates","scatterND");Zx(r,s,t);const i={indices:s,updates:r},o={shape:t};return re.runKernel(Hg,i,o)}const jN=ie({scatterND_:sY});function rY(n,e,t,s){if(n.dtype!=="int32")throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${n.dtype}.`);if(n.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${n.shape}.`);const r=n.rank>0?n.shape[0]:1,i=n.rank>1?n.shape[1]:1;if(t.length!==i)throw new Error(`outputShape has incorrect number of elements:, ${t.length}, should be: ${i}.`);const o=e.size;if(!(e.rank===0||e.rank===1&&o===r))throw new Error(`sparseValues has incorrect shape ${e.shape}, should be [] or [${r}]`);if(e.dtype!==s.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iY(n,e,t,s=0){ji(t);const r=q(n,"sparseIndices","sparseToDense","int32"),i=q(e,"sparseValues","sparseToDense","string_or_numeric"),o=q(s,"defaultValue","sparseToDense",i.dtype);rY(r,i,t,o);const a={sparseIndices:r,sparseValues:i,defaultValue:o},l={outputShape:t};return re.runKernel(Kg,a,l)}const XN=ie({sparseToDense_:iY});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oY(n,e){const t=q(e,"indices","gatherND","int32"),r={params:q(n,"x","gatherND","string_or_numeric"),indices:t};return re.runKernel(Ng,r)}const KN=ie({gatherND_:oY});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aY(n,e){if(e==null)return n.shape.slice();if(dn(n.shape,e))return e;if(n.shape.length===e.length){const t=[];for(let s=0;s<n.shape.length;s++)e[s]==null&&n.shape[s]!=null?t.push(n.shape[s]):t.push(e[s]);return t}return e}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lY(n,e,t,s){const r=q(n,"x","dropout");if(z(r.dtype==="float32",()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${r.dtype} tensor instead.`),z(e>=0&&e<1,()=>`rate must be a float in the range [0, 1), but got ${e}.`),e===0)return n instanceof cn?r.clone():r;const i=aY(r,t),o=1-e,a=rt(xp($e(bc(i,0,1,"float32",s),o)),o);return ne(r,a)}const bw=ie({dropout_:lY});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vw(n){return Math.floor(Math.pow(2,Math.ceil(Math.log(n)/Math.log(2))))}function s1(n,e,t){const s=1-n%2,r=new Float32Array(n);for(let i=0;i<n;++i){const o=2*Math.PI*i/(n+s-1);r[i]=e-t*Math.cos(o)}return fs(r,"float32")}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function cY(n,e,t=1){const s=q(n,"predictions","inTopK"),r=q(e,"targets","inTopK");z(s.rank>1,()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${s.rank}`),z(s.rank-1===r.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${s.rank} and targets rank ${r.rank}`),br(s.shape.slice(0,s.shape.length-1),r.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const i=s.shape[s.shape.length-1];z(t>0&&t<=i,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${i}), but got ${t}`);const o=await s.data(),a=await r.data(),[l,c]=[o.length/i,i],u=Ws("bool",l);for(let h=0;h<l;h++){const d=h*c,f=o.subarray(d,d+c),p=[];for(let A=0;A<f.length;A++)p.push({value:f[A],index:A});p.sort((A,m)=>m.value-A.value),u[h]=0;for(let A=0;A<t;A++)if(p[A].index===a[h]){u[h]=1;break}}return n!==s&&s.dispose(),e!==r&&r.dispose(),ao(u,r.shape,"bool")}const JN=cY;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uY(n,e,t,s,r,i="NHWC",o){let a=n;n.rank===3&&(a=ae(n,[1,n.shape[0],n.shape[1],n.shape[2]]));let l=e;l.rank===3&&(l=ae(e,[1,e.shape[0],e.shape[1],e.shape[2]])),z(a.rank===4,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${a.shape}.`),z(l.rank===4,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`),z(t.length===4,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${t}.`);const c=i==="NHWC"?a.shape[3]:a.shape[1],u=i==="NHWC"?l.shape[3]:l.shape[1];z(c===t[2],()=>`Error in conv2dDerFilter: depth of input ${c}) must match input depth in filter (${t[2]}.`),z(u===t[3],()=>`Error in conv2dDerFilter: depth of dy (${u}) must match output depth for filter (${t[3]}).`),ri("conv2dDerFilter",r,o);const h={x:a,dy:l},d={strides:s,pad:r,dataFormat:i,dimRoundingMode:o,filterShape:t};return re.runKernel(mg,h,d)}const Cw=ie({conv2DBackpropFilter_:uY});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function r1(n,e,t){if(t==null||t==="linear")return n;if(t==="relu")return ne(n,Mh(e));throw new Error(`Cannot compute gradient for fused activation ${t}.`)}function i1(n,e){let t=e;const s=Hs(n.shape,e.shape);return s.length>0&&(t=Mt(t,s)),ae(t,n.shape)}function o1(n,e,t,s){if(e==="linear")return n;if(e==="relu")return oa(n);if(e==="elu")return Ap(n);if(e==="relu6")return Gx(n);if(e==="prelu")return vA(n,t);if(e==="leakyrelu")return fA(n,s);if(e==="sigmoid")return Tr(n);throw new Error(`Unknown fused activation ${e}.`)}const a1=(n,e)=>!(n>0)||e==="linear";/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hY({x:n,filter:e,strides:t,pad:s,dataFormat:r="NHWC",dilations:i=[1,1],dimRoundingMode:o,bias:a,activation:l="linear",preluActivationWeights:c,leakyreluAlpha:u}){if(l=l||"linear",a1(re.state.gradientDepth,l)===!1){z(r==="NHWC",()=>`Error in fused conv2d: got dataFormat of ${r} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`);let _=xl(n,e,t,s,r,i,o);return a!=null&&(_=$e(_,a)),o1(_,l,c,u)}const h=q(n,"x","conv2d","float32"),d=q(e,"filter","conv2d","float32");let f=h,p=!1;h.rank===3&&(p=!0,f=ae(h,[1,h.shape[0],h.shape[1],h.shape[2]])),z(f.rank===4,()=>`Error in fused conv2d: input must be rank 4, but got rank ${f.rank}.`),z(d.rank===4,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${d.rank}.`),ri("fused conv2d",s,o);const A=r==="NHWC"?f.shape[3]:f.shape[1];z(d.shape[2]===A,()=>`Error in conv2d: depth of input (${A}) must match input depth for filter ${d.shape[2]}.`),z(nr(t,i),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${t} and dilations '${i}'`);const m=As(f.shape,d.shape,t,i,s,o);let g;a!=null&&(g=q(a,"bias","fused conv2d"),[g]=ks(g,h),r==="NHWC"?jt(m.outShape,g.shape):(z(g.shape.length<=1,()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${g.shape.length}.`),z(g.shape.length===0||g.shape[0]===m.outChannels||g.shape[0]===1,()=>`Error in fused conv2d: bias shape (${g.shape}) is not compatible with the number of output channels (${m.outChannels})`)));let x;if(c!=null){const _=c.shape;if(z(_.length<=1||_.length===3,()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${_.length}.`),_.length===1)z(_[0]===1||_[0]===m.outChannels,()=>`Error in fused conv2d: PReLU activation weights (${_}) is not compatible with the number of output channels (${m.outChannels}).`);else if(_.length===3)try{jt(_,m.outShape)}catch{const M=`Error in fused conv2d: PReLU activation weights (${_}) is not compatible with the output shape of the conv2d (${m.outShape}).`;throw Error(M)}x=q(c,"prelu weights","fused conv2d")}const v=(_,N)=>{z(r==="NHWC",()=>`Error in gradient of fused conv2D: got dataFormat of ${r} but only NHWC is currently supported.`);const[M,T,k,B]=N,L=r1(_,k,l);z(ic(i),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${i}'`);const U=QI(T.shape,L,M,t,s),V=Cw(T,L,M.shape,t,s),W=[U,V];if(B!=null){const H=i1(B,L);W.push(H)}return W},b={x:f,filter:d,bias:g,preluActivationWeights:x},w={strides:t,pad:s,dataFormat:r,dilations:i,dimRoundingMode:o,activation:l,leakyreluAlpha:u};return a==null?Na((N,M,T)=>{let k=re.runKernel(Vd,b,w);return T([M,N,k]),p&&(k=ae(k,[k.shape[1],k.shape[2],k.shape[3]])),{value:k,gradFunc:v}})(f,d):Na((N,M,T,k)=>{let B=re.runKernel(Vd,b,w);return k([M,N,B,T]),p&&(B=ae(B,[B.shape[1],B.shape[2],B.shape[3]])),{value:B,gradFunc:v}})(f,d,g)}const ZN=ie({fusedConv2d_:hY});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dY(n,e,t,s,r,i=[1,1],o){let a=n;n.rank===3&&(a=ae(n,[1,n.shape[0],n.shape[1],n.shape[2]]));let l=e;l.rank===3&&(l=ae(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const c={x:a,dy:l},u={strides:s,pad:r,dimRoundingMode:o,dilations:i,filterShape:t};return re.runKernel(Cg,c,u)}const eR=ie({depthwiseConv2dNativeBackpropFilter_:dY});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fY(n,e,t,s,r,i=[1,1],o){let a=e,l=!1;e.rank===3&&(l=!0,a=ae(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const c={dy:a,filter:t},u={strides:s,pad:r,dimRoundingMode:o,dilations:i,inputShape:n},h=re.runKernel(Ig,c,u);return l?ae(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const tR=ie({depthwiseConv2dNativeBackpropInput_:fY});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pY({x:n,filter:e,strides:t,pad:s,dataFormat:r="NHWC",dilations:i=[1,1],dimRoundingMode:o,bias:a,activation:l="linear",preluActivationWeights:c,leakyreluAlpha:u}){if(a1(re.state.gradientDepth,l)===!1){let w=gp(n,e,t,s,r,i,o);return a!=null&&(w=$e(w,a)),o1(w,l,c,u)}const h=q(n,"x","depthwiseConv2d","float32"),d=q(e,"filter","depthwiseConv2d","float32");let f=h,p=!1;h.rank===3&&(p=!0,f=ae(h,[1,h.shape[0],h.shape[1],h.shape[2]])),z(f.rank===4,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${f.rank}.`),z(d.rank===4,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${d.rank}.`),z(f.shape[3]===d.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${f.shape[3]}) must match the inChannels dimension in filter ${d.shape[2]}.`),i==null&&(i=[1,1]),z(nr(t,i),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${t} and dilations '${i}'`),ri("fused depthwiseConv2d",s,o);const A=As(f.shape,d.shape,t,i,s,o,!0);let m;a!=null&&(m=q(a,"bias","fused conv2d"),[m]=ks(m,h),jt(A.outShape,m.shape));let g;c!=null&&(g=q(c,"prelu weights","fused depthwiseConv2d"));const x=(w,_)=>{z(ic(i),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${i}'`);const[N,M,T,k]=_,B=r1(w,T,l),L=tR(M.shape,B,N,t,s,i,o),U=eR(M,B,N.shape,t,s,i,o);if(k!=null){const V=i1(m,B);return[L,U,V]}return[L,U]},v={x:f,filter:d,bias:m,preluActivationWeights:g},b={strides:t,pad:s,dataFormat:r,dilations:i,dimRoundingMode:o,activation:l,leakyreluAlpha:u};return a==null?Na((_,N,M)=>{let T=re.runKernel(Wd,v,b);return M([N,_,T]),p&&(T=ae(T,[T.shape[1],T.shape[2],T.shape[3]])),{value:T,gradFunc:x}})(f,d):Na((_,N,M,T)=>{let k=re.runKernel(Wd,v,b);return T([N,_,k,M]),p&&(k=ae(k,[k.shape[1],k.shape[2],k.shape[3]])),{value:k,gradFunc:x}})(f,d,m)}const mY=ie({fusedDepthwiseConv2d_:pY});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gY({a:n,b:e,transposeA:t=!1,transposeB:s=!1,bias:r,activation:i="linear",preluActivationWeights:o,leakyreluAlpha:a=.2}){if(a1(re.state.gradientDepth,i)===!1){let B=An(n,e,t,s);return r!=null&&(B=$e(B,r)),o1(B,i,o,a)}let l=q(n,"a","fused matMul"),c=q(e,"b","fused matMul");[l,c]=ks(l,c);const u=t?l.shape[l.rank-2]:l.shape[l.rank-1],h=s?c.shape[c.rank-1]:c.shape[c.rank-2],d=t?l.shape[l.rank-1]:l.shape[l.rank-2],f=s?c.shape[c.rank-2]:c.shape[c.rank-1],p=l.shape.slice(0,-2),A=c.shape.slice(0,-2),m=ye(p),g=ye(A);z(u===h,()=>`Error in fused matMul: inner shapes (${u}) and (${h}) of Tensors with shapes ${l.shape} and ${c.shape} and transposeA=${t} and transposeB=${s} must match.`);const v=jt(l.shape.slice(0,-2),c.shape.slice(0,-2)).concat([d,f]),b=t?ae(l,[m,u,d]):ae(l,[m,d,u]),w=s?ae(c,[g,f,h]):ae(c,[g,h,f]);let _;r!=null&&(_=q(r,"bias","fused matMul"),[_]=ks(_,l),jt(v,_.shape));let N;o!=null&&(N=q(o,"prelu weights","fused matMul"));const M=(B,L)=>{const[U,V,W,H]=L,ee=r1(ae(B,W.shape),W,i);let K,te;if(!t&&!s?(K=An(ee,V,!1,!0),te=An(U,ee,!0,!1)):!t&&s?(K=An(ee,V,!1,!1),te=An(ee,U,!0,!1)):t&&!s?(K=An(V,ee,!1,!0),te=An(U,ee,!1,!1)):(K=An(V,ee,!0,!0),te=An(ee,U,!0,!0)),r!=null){const le=i1(H,ee);return[K,te,le]}else return[K,te]},T={a:b,b:w,bias:_,preluActivationWeights:N},k={transposeA:t,transposeB:s,activation:i,leakyreluAlpha:a};return r==null?Na((L,U,V)=>{const W=re.runKernel(Gd,T,k);return V([L,U,W]),{value:ae(W,v),gradFunc:M}})(b,w):Na((L,U,V,W)=>{const H=re.runKernel(Gd,T,k);return W([L,U,H,V]),{value:ae(H,v),gradFunc:M}})(b,w,_)}const eC=ie({fusedMatMul_:gY});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nR=Object.freeze(Object.defineProperty({__proto__:null,conv2d:ZN,depthwiseConv2d:mY,matMul:eC},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AY(n){return s1(n,.54,.46)}const yY=ie({hammingWindow_:AY});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xY(n){return s1(n,.5,.5)}const sR=ie({hannWindow_:xY});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bY(n,e,t,s=!1,r=0){let i=0;const o=[];for(;i+e<=n.size;)o.push(Rt(n,i,e)),i+=t;if(s)for(;i<n.size;){const a=i+e-n.size,l=ps([Rt(n,i,e-a),Nh([a],r)]);o.push(l),i+=t}return o.length===0?ni([],[0,e]):ae(ps(o),[o.length,e])}const rR=ie({frame_:bY});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vY(n,e,t,s,r=sR){s==null&&(s=vw(e));const i=rR(n,e,t),o=ne(i,r(e));return EA(o,s)}const CY=ie({stft_:vY});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IY(n,e,t,s,r="bilinear",i=0){const o=q(n,"image","cropAndResize"),a=q(e,"boxes","cropAndResize","float32"),l=q(t,"boxInd","cropAndResize","int32"),c=a.shape[0];z(o.rank===4,()=>`Error in cropAndResize: image must be rank 4,but got rank ${o.rank}.`),z(a.rank===2&&a.shape[1]===4,()=>`Error in cropAndResize: boxes must be have size [${c},4] but had shape ${a.shape}.`),z(l.rank===1&&l.shape[0]===c,()=>`Error in cropAndResize: boxInd must be have size [${c}] but had shape ${a.shape}.`),z(s.length===2,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${s.length}.`),z(s[0]>=1&&s[1]>=1,()=>`cropSize must be atleast [1,1], but was ${s}`),z(r==="bilinear"||r==="nearest",()=>`method must be bilinear or nearest, but was ${r}`);const u={image:o,boxes:a,boxInd:l},h={method:r,extrapolationValue:i,cropSize:s};return re.runKernel(xg,u,h)}const wY=ie({cropAndResize_:IY});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SY(n){const e=q(n,"image","flipLeftRight","float32");z(e.rank===4,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${e.rank}.`);const t={image:e};return re.runKernel(kg,t,{})}const EY=ie({flipLeftRight_:SY});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _Y(n){const e=q(n,"image","grayscaleToRGB"),t=e.rank-1,s=e.shape[t];z(e.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${e.rank}.`),z(s===1,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${s}.`);const r=new Array(e.rank);return r.fill(1,0,t),r[t]=3,so(e,r)}const TY=ie({grayscaleToRGB_:_Y});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BY(n){const e=q(n,"image","RGBToGrayscale"),t=e.rank-1,s=e.shape[t];z(e.rank>=2,()=>`Error in RGBToGrayscale: images must be at least rank 2, but got rank ${e.rank}.`),z(s===3,()=>`Error in RGBToGrayscale: last dimension of an RGB image should be size 3, but got size ${s}.`);const r=e.dtype,i=Ze(e,"float32"),o=fs([.2989,.587,.114]);let a;switch(e.rank){case 2:a=Zc("ij,j->i",i,o);break;case 3:a=Zc("ijk,k->ij",i,o);break;case 4:a=Zc("ijkl,l->ijk",i,o);break;case 5:a=Zc("ijklm,m->ijkl",i,o);break;case 6:a=Zc("ijklmn,n->ijklm",i,o);break;default:throw new Error("Not a valid tensor rank.")}return a=Kn(a,-1),Ze(a,r)}const kY=ie({rgbToGrayscale_:BY});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NY(n,e,t=0,s=.5){const r=q(n,"image","rotateWithOffset","float32");z(r.rank===4,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${r.rank}.`);const i={image:r},o={radians:e,fillValue:t,center:s};return re.runKernel(rA,i,o)}const RY=ie({rotateWithOffset_:NY});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vp(n,e,t,s,r,i){s==null&&(s=.5),r==null&&(r=Number.NEGATIVE_INFINITY),i==null&&(i=0);const o=n.shape[0];return t=Math.min(t,o),z(0<=s&&s<=1,()=>`iouThreshold must be in [0, 1], but was '${s}'`),z(n.rank===2,()=>`boxes must be a 2D tensor, but was of rank '${n.rank}'`),z(n.shape[1]===4,()=>`boxes must have 4 columns, but 2nd dimension was ${n.shape[1]}`),z(e.rank===1,()=>"scores must be a 1D tensor"),z(e.shape[0]===o,()=>`scores has incompatible shape with boxes. Expected ${o}, but was ${e.shape[0]}`),z(0<=i&&i<=1,()=>`softNmsSigma must be in [0, 1], but was '${i}'`),{maxOutputSize:t,iouThreshold:s,scoreThreshold:r,softNmsSigma:i}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MY(n,e,t,s=.5,r=Number.NEGATIVE_INFINITY){const i=q(n,"boxes","nonMaxSuppression","float32"),o=q(e,"scores","nonMaxSuppression","float32"),a=vp(i,o,t,s,r);t=a.maxOutputSize,s=a.iouThreshold,r=a.scoreThreshold;const l={maxOutputSize:t,iouThreshold:s,scoreThreshold:r};return re.runKernel(Qg,{boxes:i,scores:o},l)}const DY=ie({nonMaxSuppression_:MY});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FY(n,e,t){const s=$Y(n,e,t),r=s<0?-(s+1):s;n.splice(r,0,e)}function $Y(n,e,t){return LY(n,e,t||PY)}function PY(n,e){return n>e?1:n<e?-1:0}function LY(n,e,t){let s=0,r=n.length,i=0,o=!1;for(;s<r;){i=s+(r-s>>>1);const a=t(e,n[i]);a>0?s=i+1:(r=i,o=!a)}return o?s:-s-1}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _A(n,e,t,s,r){return Iw(n,e,t,s,r,0)}function l1(n,e,t,s,r,i){return Iw(n,e,t,s,r,0,!1,i,!0)}function TA(n,e,t,s,r,i){return Iw(n,e,t,s,r,i,!0)}function Iw(n,e,t,s,r,i,o=!1,a=!1,l=!1){const c=[];for(let m=0;m<e.length;m++)e[m]>r&&c.push({score:e[m],boxIndex:m,suppressBeginIndex:0});c.sort(d_);const u=i>0?-.5/i:0,h=[],d=[];for(;h.length<t&&c.length>0;){const m=c.pop(),{score:g,boxIndex:x,suppressBeginIndex:v}=m;if(g<r)break;let b=!1;for(let w=h.length-1;w>=v;--w){const _=OY(n,x,h[w]);if(_>=s){b=!0;break}if(m.score=m.score*QY(s,u,_),m.score<=r)break}m.suppressBeginIndex=h.length,b||(m.score===g?(h.push(x),d.push(m.score)):m.score>r&&FY(c,m,d_))}const f=h.length,p=t-f;a&&p>0&&(h.push(...new Array(p).fill(0)),d.push(...new Array(p).fill(0)));const A={selectedIndices:h};return o&&(A.selectedScores=d),l&&(A.validOutputs=f),A}function OY(n,e,t){const s=n.subarray(e*4,e*4+4),r=n.subarray(t*4,t*4+4),i=Math.min(s[0],s[2]),o=Math.min(s[1],s[3]),a=Math.max(s[0],s[2]),l=Math.max(s[1],s[3]),c=Math.min(r[0],r[2]),u=Math.min(r[1],r[3]),h=Math.max(r[0],r[2]),d=Math.max(r[1],r[3]),f=(a-i)*(l-o),p=(h-c)*(d-u);if(f<=0||p<=0)return 0;const A=Math.max(i,c),m=Math.max(o,u),g=Math.min(a,h),x=Math.min(l,d),v=Math.max(g-A,0)*Math.max(x-m,0);return v/(f+p-v)}function QY(n,e,t){const s=Math.exp(e*t*t);return t<=n?s:0}function d_(n,e){return n.score-e.score||n.score===e.score&&e.boxIndex-n.boxIndex}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function UY(n,e,t,s=.5,r=Number.NEGATIVE_INFINITY){const i=q(n,"boxes","nonMaxSuppressionAsync"),o=q(e,"scores","nonMaxSuppressionAsync"),a=vp(i,o,t,s,r);t=a.maxOutputSize,s=a.iouThreshold,r=a.scoreThreshold;const l=await Promise.all([i.data(),o.data()]),c=l[0],u=l[1],{selectedIndices:h}=_A(c,u,t,s,r);return i!==n&&i.dispose(),o!==e&&o.dispose(),fs(h,"int32")}const zY=UY;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GY(n,e,t,s=.5,r=Number.NEGATIVE_INFINITY,i=0){const o=q(n,"boxes","nonMaxSuppression"),a=q(e,"scores","nonMaxSuppression"),l=vp(o,a,t,s,r,i);t=l.maxOutputSize,s=l.iouThreshold,r=l.scoreThreshold,i=l.softNmsSigma;const c={boxes:o,scores:a},u={maxOutputSize:t,iouThreshold:s,scoreThreshold:r,softNmsSigma:i},h=re.runKernel(Ug,c,u);return{selectedIndices:h[0],selectedScores:h[1]}}const VY=ie({nonMaxSuppressionWithScore_:GY});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function WY(n,e,t,s=.5,r=Number.NEGATIVE_INFINITY,i=0){const o=q(n,"boxes","nonMaxSuppressionAsync"),a=q(e,"scores","nonMaxSuppressionAsync"),l=vp(o,a,t,s,r,i);t=l.maxOutputSize,s=l.iouThreshold,r=l.scoreThreshold,i=l.softNmsSigma;const c=await Promise.all([o.data(),a.data()]),u=c[0],h=c[1],{selectedIndices:d,selectedScores:f}=TA(u,h,t,s,r,i);return o!==n&&o.dispose(),a!==e&&a.dispose(),{selectedIndices:fs(d,"int32"),selectedScores:fs(f)}}const HY=WY;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qY(n,e,t,s=.5,r=Number.NEGATIVE_INFINITY,i=!1){const o=q(n,"boxes","nonMaxSuppression"),a=q(e,"scores","nonMaxSuppression"),l=vp(o,a,t,s,r,null),c=l.maxOutputSize,u=l.iouThreshold,h=l.scoreThreshold,d={boxes:o,scores:a},f={maxOutputSize:c,iouThreshold:u,scoreThreshold:h,padToMaxOutputSize:i},p=re.runKernel(xx,d,f);return{selectedIndices:p[0],validOutputs:p[1]}}const YY=ie({nonMaxSuppressionPadded_:qY});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function jY(n,e,t,s=.5,r=Number.NEGATIVE_INFINITY,i=!1){const o=q(n,"boxes","nonMaxSuppressionAsync"),a=q(e,"scores","nonMaxSuppressionAsync"),l=vp(o,a,t,s,r,null),c=l.maxOutputSize,u=l.iouThreshold,h=l.scoreThreshold,[d,f]=await Promise.all([o.data(),a.data()]),{selectedIndices:p,validOutputs:A}=l1(d,f,c,u,h,i);return o!==n&&o.dispose(),a!==e&&a.dispose(),{selectedIndices:fs(p,"int32"),validOutputs:Bt(A,"int32")}}const XY=jY;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KY(n,e,t=!1,s=!1){const r=q(n,"images","resizeBilinear");z(r.rank===3||r.rank===4,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${r.rank}.`),z(e.length===2,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${e}.`),z(s===!1||t===!1,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let i=r,o=!1;r.rank===3&&(o=!0,i=ae(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const a={images:i},l={alignCorners:t,halfPixelCenters:s,size:e},c=re.runKernel(rp,a,l);return o?ae(c,[c.shape[1],c.shape[2],c.shape[3]]):c}const iR=ie({resizeBilinear_:KY});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JY(n,e,t=!1,s=!1){const r=q(n,"images","resizeNearestNeighbor");z(r.rank===3||r.rank===4,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${r.rank}.`),z(e.length===2,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${e}.`),z(r.dtype==="float32"||r.dtype==="int32",()=>"`images` must have `int32` or `float32` as dtype"),z(s===!1||t===!1,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let i=r,o=!1;r.rank===3&&(o=!0,i=ae(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const a={images:i},l={alignCorners:t,halfPixelCenters:s,size:e},c=re.runKernel(sp,a,l);return o?ae(c,[c.shape[1],c.shape[2],c.shape[3]]):c}const oR=ie({resizeNearestNeighbor_:JY});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZY(n,e="binary",t=!1,s=.5){const r=q(n,"image","threshold"),i=.2989,o=.587,a=.114,l=r.shape[0]*r.shape[1];let c=ne(fs([s]),255),u,h,d,f;if(z(r.rank===3,()=>`Error in threshold: image must be rank 3,but got rank ${r.rank}.`),z(r.shape[2]===3||r.shape[2]===1,()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${r.shape[2]}.`),z(r.dtype==="int32"||r.dtype==="float32",()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${r.dtype}.`),z(e==="otsu"||e==="binary",()=>`Method must be binary or otsu, but was ${e}`),r.shape[2]===3){[u,h,d]=yi(r,[1,1,1],-1);const m=ne(u,i),g=ne(h,o),x=ne(d,a);f=$e($e(m,g),x)}else f=n;if(e==="otsu"){const m=DI(Ze(Vx(f),"int32"),ao([]),256);c=ej(m,l)}const p=t?xc(f,c):ii(f,c);return Ze(ne(p,255),"int32")}function ej(n,e){let t=fs([-1]),s=fs([0]),r=fs([0]),i,o,a,l,c,u;for(let h=0;h<n.size-1;h++){i=Rt(n,0,h+1),o=Rt(n,h+1),c=rt(Mt(i),e),u=rt(Mt(o),e);const d=Mt(ne(i,Cl(0,i.size)));a=rt(d,Mt(i));const f=Nh(o.shape,i.size),p=$e(Cl(0,o.size),f),A=ne(o,p);l=rt(Mt(A),Mt(o));const m=gt(a,l),g=gt(a,l),x=ne(c,u);r=ne(ne(x,m),g);const v=ii(r,s);s=Br(v,r,s),t=Br(v,fs([h]),t)}return t}const tj=ie({threshold_:ZY});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nj(n,e,t="nearest",s="constant",r=0,i){const o=q(n,"image","transform","float32"),a=q(e,"transforms","transform","float32");z(o.rank===4,()=>`Error in transform: image must be rank 4,but got rank ${o.rank}.`),z(a.rank===2&&(a.shape[0]===o.shape[0]||a.shape[0]===1)&&a.shape[1]===8,()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),z(i==null||i.length===2,()=>`Error in transform: outputShape must be [height, width] or null, but got ${i}.`);const l={image:o,transforms:a},c={interpolation:t,fillMode:s,fillValue:r,outputShape:i};return re.runKernel(sA,l,c)}const sj=ie({transform_:nj});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rj(n,e,t){const s=q(n,"a","bandPart");z(s.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${s.rank}.`);const r=s.shape,[i,o]=s.shape.slice(-2);let a,l;typeof e=="number"?(z(e%1===0,()=>`bandPart(): numLower must be an integer, got ${e}.`),z(e<=i,()=>`bandPart(): numLower (${e}) must not be greater than the number of rows (${i}).`),a=q(e<0?i:e,"numLower","bandPart")):(z(e.dtype==="int32",()=>"bandPart(): numLower's dtype must be an int32."),a=Br(Xd(e,0),i,vl(e,i))),typeof t=="number"?(z(t%1===0,()=>`bandPart(): numUpper must be an integer, got ${t}.`),z(t<=o,()=>`bandPart(): numUpper (${t}) must not be greater than the number of columns (${o}).`),l=q(t<0?o:t,"numUpper","bandPart")):(z(t.dtype==="int32",()=>"bandPart(): numUpper's dtype must be an int32."),l=Br(Xd(t,0),o,vl(t,o)));const c=ae(Cl(0,i,1,"int32"),[-1,1]),u=Cl(0,o,1,"int32"),h=gt(c,u),d=Ko(xc(h,a),_l(h,ms(l))),f=Rs([i,o],s.dtype);return ae(Ci(ho(ae(s,[-1,i,o])).map(p=>Br(d,p,f))),r)}const ij=ie({bandPart_:rj});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oj(n){let e;if(Array.isArray(n)){e=!1,z(n!=null&&n.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");const r=n[0].shape[0];for(let i=1;i<n.length;++i)z(n[i].shape[0]===r,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${n[i].shape[0]} vs. ${r})`)}else e=!0,n=yi(n,n.shape[0],0).map(r=>Ht(r,[0]));z(n.length<=n[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${n.length}) exceeds number of dimensions (${n[0].shape[0]}).`);const t=[],s=n;for(let r=0;r<n.length;++r)t.push(re.tidy(()=>{let i=s[r];if(r>0)for(let o=0;o<r;++o){const a=ne(Mt(ne(t[o],i)),t[o]);i=gt(i,a)}return rt(i,yp(i,"euclidean"))}));return e?Ci(t,0):t}const aj=ie({gramSchmidt_:oj});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lj(n,e=!1){if(z(n.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${n.rank}`),n.rank===2)return f_(n,e);{const t=n.shape.slice(0,n.shape.length-2).reduce((l,c)=>l*c),s=ho(ae(n,[t,n.shape[n.shape.length-2],n.shape[n.shape.length-1]]),0),r=[],i=[];s.forEach(l=>{const[c,u]=f_(l,e);r.push(c),i.push(u)});const o=ae(Ci(r,0),n.shape),a=ae(Ci(i,0),n.shape);return[o,a]}}function f_(n,e=!1){return re.tidy(()=>{z(n.shape.length===2,()=>`qr2d() requires a 2D Tensor, but got a ${n.shape.length}D Tensor.`);const t=n.shape[0],s=n.shape[1];let r=$x(t),i=Ia(n);const o=ni([[1]],[1,1]);let a=Ia(o);const l=t>=s?s:t;for(let c=0;c<l;++c){const u=i,h=a,d=r;[a,i,r]=re.tidy(()=>{const f=Rt(i,[c,c],[t-c,1]),p=yp(f),A=Rt(i,[c,c],[1,1]),m=Br(ii(A,0),ni([[-1]]),ni([[1]])),g=gt(A,ne(m,p)),x=rt(f,g);x.shape[0]===1?a=Ia(o):a=ps([o,Rt(x,[1,0],[x.shape[0]-1,x.shape[1]])],0);const v=ms(rt(An(m,g),p)),b=Rt(i,[c,0],[t-c,s]),w=ne(v,a),_=Sn(a);if(c===0)i=gt(b,An(w,An(_,b)));else{const T=gt(b,An(w,An(_,b)));i=ps([Rt(i,[0,0],[c,s]),T],0)}const N=Sn(w),M=Rt(r,[0,c],[t,r.shape[1]-c]);if(c===0)r=gt(M,An(An(M,a),N));else{const T=gt(M,An(An(M,a),N));r=ps([Rt(r,[0,0],[t,c]),T],1)}return[a,i,r]}),zt([u,h,d])}return!e&&t>s&&(r=Rt(r,[0,0],[t,s]),i=Rt(i,[0,0],[s,s])),[r,i]})}const cj=ie({qr_:lj});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var ei;(function(n){n[n.NONE=0]="NONE",n[n.MEAN=1]="MEAN",n[n.SUM=2]="SUM",n[n.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"})(ei||(ei={}));function uj(n,e,t=ei.SUM_BY_NONZERO_WEIGHTS){const s=q(n,"losses","computeWeightedLoss");let r=null;e!=null&&(r=q(e,"weights","computeWeightedLoss"));const i=r==null?s:ne(s,r);if(t===ei.NONE)return i;if(t===ei.SUM)return Mt(i);if(t===ei.MEAN){if(r==null)return _s(i);{const o=s.size/r.size,a=rt(Mt(i),Mt(r));return o>1?rt(a,Bt(o)):a}}if(t===ei.SUM_BY_NONZERO_WEIGHTS){if(r==null)return rt(Mt(i),Bt(s.size));{const o=ne(r,Ai(s.shape)),a=Ze(Mt(Eu(o,Bt(0))),"float32");return rt(Mt(i),a)}}throw Error(`Unknown reduction: ${t}`)}const Tl=ie({computeWeightedLoss_:uj});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hj(n,e,t,s=ei.SUM_BY_NONZERO_WEIGHTS){const r=q(n,"labels","absoluteDifference"),i=q(e,"predictions","absoluteDifference");let o=null;t!=null&&(o=q(t,"weights","absoluteDifference")),br(r.shape,i.shape,"Error in absoluteDifference: ");const a=Gs(gt(r,i));return Tl(a,o,s)}const dj=ie({absoluteDifference_:hj});function fj(n,e,t,s,r=ei.SUM_BY_NONZERO_WEIGHTS){const i=q(n,"labels","cosineDistance"),o=q(e,"predictions","cosineDistance");let a=null;s!=null&&(a=q(s,"weights","cosineDistance")),br(i.shape,o.shape,"Error in cosineDistance: ");const l=Bt(1),c=gt(l,Mt(ne(i,o),t,!0));return Tl(c,a,r)}const pj=ie({cosineDistance_:fj});function mj(n,e,t,s=ei.SUM_BY_NONZERO_WEIGHTS){let r=q(n,"labels","hingeLoss");const i=q(e,"predictions","hingeLoss");let o=null;t!=null&&(o=q(t,"weights","hingeLoss")),br(r.shape,i.shape,"Error in hingeLoss: ");const a=Bt(1);r=gt(ne(Bt(2),r),a);const l=oa(gt(a,ne(r,i)));return Tl(l,o,s)}const gj=ie({hingeLoss_:mj});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Aj(n,e,t,s=1,r=ei.SUM_BY_NONZERO_WEIGHTS){const i=q(n,"labels","huberLoss"),o=q(e,"predictions","huberLoss");let a=null;t!=null&&(a=q(t,"weights","huberLoss")),br(i.shape,o.shape,"Error in huberLoss: ");const l=Bt(s),c=Gs(gt(o,i)),u=vl(c,l),h=gt(c,u),d=$e(ne(Bt(.5),Jn(u)),ne(l,h));return Tl(d,a,r)}const yj=ie({huberLoss_:Aj});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xj(n,e,t,s=1e-7,r=ei.SUM_BY_NONZERO_WEIGHTS){const i=q(n,"labels","logLoss"),o=q(e,"predictions","logLoss");let a=null;t!=null&&(a=q(t,"weights","logLoss")),br(i.shape,o.shape,"Error in logLoss: ");const l=Bt(1),c=Bt(s),u=ms(ne(i,Gi($e(o,c)))),h=ne(gt(l,i),Gi($e(gt(l,o),c))),d=gt(u,h);return Tl(d,a,r)}const bj=ie({logLoss_:xj});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vj(n,e,t,s=ei.SUM_BY_NONZERO_WEIGHTS){const r=q(n,"labels","meanSquaredError"),i=q(e,"predictions","meanSquaredError");let o=null;t!=null&&(o=q(t,"weights","meanSquaredError")),br(r.shape,i.shape,"Error in meanSquaredError: ");const a=Jx(r,i);return Tl(a,o,s)}const Cj=ie({meanSquaredError_:vj});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ij(n,e){const t=q(n,"labels","sigmoidCrossEntropyWithLogits"),s=q(e,"logits","sigmoidCrossEntropyWithLogits");br(t.shape,s.shape,"Error in sigmoidCrossEntropyWithLogits: ");const r=oa(s),i=ne(s,t),o=pA(xr(ms(Gs(s))));return $e(gt(r,i),o)}function wj(n,e,t,s=0,r=ei.SUM_BY_NONZERO_WEIGHTS){let i=q(n,"multiClassLabels","sigmoidCrossEntropy");const o=q(e,"logits","sigmoidCrossEntropy");let a=null;if(t!=null&&(a=q(t,"weights","sigmoidCrossEntropy")),br(i.shape,o.shape,"Error in sigmoidCrossEntropy: "),s>0){const c=Bt(s),u=Bt(1),h=Bt(.5);i=$e(ne(i,gt(u,c)),ne(h,c))}const l=Ij(i,o);return Tl(l,a,r)}const Sj=ie({sigmoidCrossEntropy_:wj});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ej(n,e,t=-1){if(t===-1&&(t=e.rank-1),t!==e.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${e.rank} and dim was ${t}`);return Na((r,i,o)=>{const l=mA(i,[t],!0),c=gt(Ze(i,"float32"),l);o([r,c]);const u=ms(ne(c,r));return{value:Mt(u,[t]),gradFunc:(f,p)=>{const[A,m]=p,g=Ms(f.shape,[t]);return[ne(ae(f,g),gt(Ze(A,"float32"),xr(m))),ne(ae(f,g),gt(xr(m),Ze(A,"float32")))]}}})(n,e)}function _j(n,e,t,s=0,r=ei.SUM_BY_NONZERO_WEIGHTS){let i=q(n,"onehotLabels","softmaxCrossEntropy");const o=q(e,"logits","softmaxCrossEntropy");let a=null;if(t!=null&&(a=q(t,"weights","softmaxCrossEntropy")),br(i.shape,o.shape,"Error in softmaxCrossEntropy: "),s>0){const c=Bt(s),u=Bt(1),h=Bt(i.shape[1]);i=$e(ne(i,gt(u,c)),rt(c,h))}const l=Ej(i,o);return Tl(l,a,r)}const Tj=ie({softmaxCrossEntropy_:_j});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bj(n,e,t,s){const r=q(n,"indices","sparseFillEmptyRows","int32"),i=q(e,"values","sparseFillEmptyRows"),o=q(t,"denseShape","sparseFillEmptyRows","int32"),a=q(s,"defaultValue","sparseFillEmptyRows",i.dtype);if(r.rank!==2)throw new Error(`Indices should be Tensor2D but received shape
        ${r.shape}`);if(i.rank!==1)throw new Error(`Values should be Tensor1D but received shape ${i.shape}`);if(o.rank!==1)throw new Error(`Dense shape should be Tensor1D but received shape ${o.shape}`);if(a.rank!==0)throw new Error(`Default value should be a scalar but received shape ${a.shape}`);const l={indices:r,values:i,denseShape:o,defaultValue:a},c=re.runKernel(Ix,l);return{outputIndices:c[0],outputValues:c[1],emptyRowIndicator:c[2],reverseIndexMap:c[3]}}const kj=ie({sparseFillEmptyRows_:Bj});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nj(n,e,t){const s=q(n,"inputIndices","sparseReshape","int32"),r=q(e,"inputShape","sparseReshape","int32"),i=q(t,"newShape","sparseReshape","int32");if(s.rank!==2)throw new Error(`Input indices should be Tensor2D but received shape
        ${s.shape}`);if(r.rank!==1)throw new Error(`Input shape should be Tensor1D but received shape ${r.shape}`);if(i.rank!==1)throw new Error(`New shape should be Tensor1D but received shape ${i.shape}`);const o={inputIndices:s,inputShape:r,newShape:i},a=re.runKernel(wx,o);return{outputIndices:a[0],outputShape:a[1]}}const Rj=ie({sparseReshape_:Nj});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mj(n,e,t){const s=q(n,"data","sparseSegmentMean"),r=q(e,"indices","sparseSegmentMean","int32"),i=q(t,"segmentIds","sparseSegmentMean","int32");if(s.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
          ${r.shape}`);if(i.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
          ${i.shape}`);const o={data:s,indices:r,segmentIds:i};return re.runKernel(jg,o)}const Dj=ie({sparseSegmentMean_:Mj});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fj(n,e,t){const s=q(n,"data","sparseSegmentSum"),r=q(e,"indices","sparseSegmentSum","int32"),i=q(t,"segmentIds","sparseSegmentSum","int32");if(s.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
         ${r.shape}`);if(i.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
         ${i.shape}`);const o={data:s,indices:r,segmentIds:i};return re.runKernel(Xg,o)}const $j=ie({sparseSegmentSum_:Fj});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pj(n,e,t,s,r,i,o,a){const l=q(n,"data","stringNGrams","string");if(l.dtype!=="string")throw new Error("Data must be of datatype string");if(l.shape.length!==1)throw new Error(`Data must be a vector, saw: ${l.shape}`);const c=q(e,"dataSplits","stringNGrams");if(c.dtype!=="int32")throw new Error("Data splits must be of datatype int32");const u={separator:t,nGramWidths:s,leftPad:r,rightPad:i,padWidth:o,preserveShortSequences:a},h={data:l,dataSplits:c},d=re.runKernel(tA,h,u);return{nGrams:d[0],nGramsSplits:d[1]}}const Lj=ie({stringNGrams_:Pj});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Oj(n,e,t=!0){const s=q(n,"input","stringSplit","string"),r=q(e,"delimiter","stringSplit","string");if(s.rank!==1)throw new Error(`Input should be Tensor1D but received shape ${s.shape}`);if(r.rank!==0)throw new Error(`Delimiter should be a scalar but received shape ${r.shape}`);const i={skipEmpty:t},o={input:s,delimiter:r},a=re.runKernel(Sx,o,i);return{indices:a[0],values:a[1],shape:a[2]}}const Qj=ie({stringSplit_:Oj});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Uj(n,e){const t=q(n,"input","stringToHashBucketFast","string"),s={numBuckets:e};if(e<=0)throw new Error("Number of buckets must be at least 1");const r={input:t};return re.runKernel(Ex,r,s)}const zj=ie({stringToHashBucketFast_:Uj});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gj(n,e,t,s=!0){const r=q(n,"input","staticRegexReplace","string"),i={pattern:e,rewrite:t,replaceGlobal:s};return re.runKernel(Zg,{x:r},i)}const Vj=ie({staticRegexReplace_:Gj});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aR={fft:SA,ifft:Zd,rfft:EA,irfft:Kx},lR={hammingWindow:yY,hannWindow:sR,frame:rR,stft:CY},Is={flipLeftRight:EY,grayscaleToRGB:TY,resizeNearestNeighbor:oR,resizeBilinear:iR,rgbToGrayscale:kY,rotateWithOffset:RY,cropAndResize:wY,nonMaxSuppression:DY,nonMaxSuppressionAsync:zY,nonMaxSuppressionWithScore:VY,nonMaxSuppressionWithScoreAsync:HY,nonMaxSuppressionPadded:YY,nonMaxSuppressionPaddedAsync:XY,threshold:tj,transform:sj},ww={bandPart:ij,gramSchmidt:aj,qr:cj},cR={absoluteDifference:dj,computeWeightedLoss:Tl,cosineDistance:pj,hingeLoss:gj,huberLoss:yj,logLoss:bj,meanSquaredError:Cj,sigmoidCrossEntropy:Sj,softmaxCrossEntropy:Tj},uR={sparseFillEmptyRows:kj,sparseReshape:Rj,sparseSegmentMean:Dj,sparseSegmentSum:$j},hR={stringNGrams:Lj,stringSplit:Qj,stringToHashBucketFast:zj,staticRegexReplace:Vj};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wj=new Map,tC=new Map;class Dh{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class no{constructor(){this.classNameMap={}}static getMap(){return no.instance==null&&(no.instance=new no),no.instance}static register(e){no.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function He(n,e,t){z(n.className!=null,()=>"Class being registered does not have the static className property defined."),z(typeof n.className=="string",()=>"className is required to be a string, but got type "+typeof n.className),z(n.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),typeof e>"u"&&(e="Custom"),typeof t>"u"&&(t=n.className);const s=t,r=e+">"+s;return no.register(n),Wj.set(r,n),tC.set(n,r),n}function Hj(n){return tC.has(n)?tC.get(n):n.className}const qj=Object.freeze(Object.defineProperty({__proto__:null,Serializable:Dh,SerializationMap:no,getRegisteredName:Hj,registerClass:He},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Bl extends Dh{minimize(e,t=!1,s){const{value:r,grads:i}=this.computeGradients(e,s);if(s!=null){const o=s.map(a=>({name:a.name,tensor:i[a.name]}));this.applyGradients(o)}else this.applyGradients(i);return zt(i),t?r:(r.dispose(),null)}get iterations(){return this.iterations_==null&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return yN(e,t)}dispose(){this.iterations_!=null&&zt(this.iterations_)}async saveIterations(){return this.iterations_==null&&(this.iterations_=0),{name:"iter",tensor:Bt(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(Bl,Symbol.hasInstance,{value:n=>n.minimize!=null&&n.computeGradients!=null&&n.applyGradients!=null});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Sw extends Bl{static get className(){return"Adadelta"}constructor(e,t,s=null){super(),this.learningRate=e,this.rho=t,this.epsilon=s,this.accumulatedGrads=[],this.accumulatedUpdates=[],s==null&&(this.epsilon=re.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map(s=>s.name):Object.keys(e)).forEach((s,r)=>{const i=re.registeredVariables[s],o=!1;this.accumulatedGrads[r]==null&&(this.accumulatedGrads[r]={originalName:`${s}/accum_grad`,variable:ue(()=>_n(i).variable(o))}),this.accumulatedUpdates[r]==null&&(this.accumulatedUpdates[r]={originalName:`${s}/accum_var`,variable:ue(()=>_n(i).variable(o))});const a=Array.isArray(e)?e[r].tensor:e[s];if(a==null)return;const l=this.accumulatedGrads[r].variable,c=this.accumulatedUpdates[r].variable;ue(()=>{const u=$e(ne(l,this.rho),ne(Jn(a),1-this.rho)),h=ne(rt(yr($e(c,this.epsilon)),yr($e(l,this.epsilon))),a),d=$e(ne(c,this.rho),ne(Jn(h),1-this.rho));l.assign(u),c.assign(d);const f=$e(ne(h,-this.learningRate),i);i.assign(f)})}),this.incrementIterations()}dispose(){this.accumulatedUpdates!=null&&(zt(this.accumulatedGrads.map(e=>e.variable)),zt(this.accumulatedUpdates.map(e=>e.variable)))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=e.length/2,s=!1;this.accumulatedGrads=e.slice(0,t).map(r=>({originalName:r.name,variable:r.tensor.variable(s)})),this.accumulatedUpdates=e.slice(t,t*2).map(r=>({originalName:r.name,variable:r.tensor.variable(s)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ew extends Bl{static get className(){return"Adagrad"}constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map(s=>s.name):Object.keys(e)).forEach((s,r)=>{const i=re.registeredVariables[s];this.accumulatedGrads[r]==null&&(this.accumulatedGrads[r]={originalName:`${s}/accumulator`,variable:ue(()=>Nh(i.shape,this.initialAccumulatorValue).variable(!1))});const o=Array.isArray(e)?e[r].tensor:e[s];if(o==null)return;const a=this.accumulatedGrads[r].variable;ue(()=>{const l=$e(a,Jn(o));a.assign(l);const c=$e(ne(rt(o,yr($e(l,re.backend.epsilon()))),-this.learningRate),i);i.assign(c)})}),this.incrementIterations()}dispose(){this.accumulatedGrads!=null&&zt(this.accumulatedGrads.map(e=>e.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=!1;this.accumulatedGrads=e.map(s=>({originalName:s.name,variable:s.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class _w extends Bl{static get className(){return"Adam"}constructor(e,t,s,r=null){super(),this.learningRate=e,this.beta1=t,this.beta2=s,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],ue(()=>{this.accBeta1=Bt(t).variable(),this.accBeta2=Bt(s).variable()}),r==null&&(this.epsilon=re.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map(s=>s.name):Object.keys(e);ue(()=>{const s=gt(1,this.accBeta1),r=gt(1,this.accBeta2);t.forEach((i,o)=>{const a=re.registeredVariables[i],l=!1;this.accumulatedFirstMoment[o]==null&&(this.accumulatedFirstMoment[o]={originalName:`${i}/m`,variable:ue(()=>_n(a).variable(l))}),this.accumulatedSecondMoment[o]==null&&(this.accumulatedSecondMoment[o]={originalName:`${i}/v`,variable:ue(()=>_n(a).variable(l))});const c=Array.isArray(e)?e[o].tensor:e[i];if(c==null)return;const u=this.accumulatedFirstMoment[o].variable,h=this.accumulatedSecondMoment[o].variable,d=$e(ne(u,this.beta1),ne(c,1-this.beta1)),f=$e(ne(h,this.beta2),ne(Jn(c),1-this.beta2)),p=rt(d,s),A=rt(f,r);u.assign(d),h.assign(f);const m=$e(ne(rt(p,$e(yr(A),this.epsilon)),-this.learningRate),a);a.assign(m)}),this.accBeta1.assign(ne(this.accBeta1,this.beta1)),this.accBeta2.assign(ne(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),this.accumulatedFirstMoment!=null&&zt(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedSecondMoment!=null&&zt(this.accumulatedSecondMoment.map(e=>e.variable))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e),ue(()=>{this.accBeta1.assign(ka(this.beta1,this.iterations_+1)),this.accBeta2.assign(ka(this.beta2,this.iterations_+1))});const t=e.length/2,s=!1;this.accumulatedFirstMoment=e.slice(0,t).map(r=>({originalName:r.name,variable:r.tensor.variable(s)})),this.accumulatedSecondMoment=e.slice(t,t*2).map(r=>({originalName:r.name,variable:r.tensor.variable(s)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Tw extends Bl{static get className(){return"Adamax"}constructor(e,t,s,r=null,i=0){super(),this.learningRate=e,this.beta1=t,this.beta2=s,this.epsilon=r,this.decay=i,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],ue(()=>{this.iteration=Bt(0).variable(),this.accBeta1=Bt(t).variable()}),r==null&&(this.epsilon=re.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map(s=>s.name):Object.keys(e);ue(()=>{const s=gt(1,this.accBeta1),r=rt(-this.learningRate,$e(ne(this.iteration,this.decay),1));t.forEach((i,o)=>{const a=re.registeredVariables[i],l=!1;this.accumulatedFirstMoment[o]==null&&(this.accumulatedFirstMoment[o]={originalName:`${i}/m`,variable:_n(a).variable(l)}),this.accumulatedWeightedInfNorm[o]==null&&(this.accumulatedWeightedInfNorm[o]={originalName:`${i}/v`,variable:_n(a).variable(l)});const c=Array.isArray(e)?e[o].tensor:e[i];if(c==null)return;const u=this.accumulatedFirstMoment[o].variable,h=this.accumulatedWeightedInfNorm[o].variable,d=$e(ne(u,this.beta1),ne(c,1-this.beta1)),f=ne(h,this.beta2),p=Gs(c),A=Qa(f,p);u.assign(d),h.assign(A);const m=$e(ne(rt(r,s),rt(d,$e(A,this.epsilon))),a);a.assign(m)}),this.iteration.assign($e(this.iteration,1)),this.accBeta1.assign(ne(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),this.accumulatedFirstMoment!=null&&zt(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedWeightedInfNorm!=null&&zt(this.accumulatedWeightedInfNorm.map(e=>e.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class c1 extends Bl{static get className(){return"SGD"}constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map(s=>s.name):Object.keys(e)).forEach((s,r)=>{const i=Array.isArray(e)?e[r].tensor:e[s];if(i==null)return;const o=re.registeredVariables[s];ue(()=>{const a=$e(ne(this.c,i),o);o.assign(a)})}),this.incrementIterations()}setLearningRate(e){this.learningRate=e,this.c!=null&&this.c.dispose(),this.c=Xs(Bt(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(e=await this.extractIterations(e),e.length!==0)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Bw extends c1{static get className(){return"Momentum"}constructor(e,t,s=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=s,this.accumulations=[],this.m=Bt(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map(s=>s.name):Object.keys(e)).forEach((s,r)=>{const i=re.registeredVariables[s];this.accumulations[r]==null&&(this.accumulations[r]={originalName:`${s}/momentum`,variable:ue(()=>_n(i).variable(!1))});const o=this.accumulations[r].variable,a=Array.isArray(e)?e[r].tensor:e[s];a!=null&&ue(()=>{let l;const c=$e(ne(this.m,o),a);this.useNesterov?l=$e(ne(this.c,$e(a,ne(c,this.m))),i):l=$e(ne(this.c,c),i),o.assign(c),i.assign(l)})}),this.incrementIterations()}dispose(){this.m.dispose(),this.accumulations!=null&&zt(this.accumulations.map(e=>e.variable))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=!1;this.accumulations=e.map(s=>({originalName:s.name,variable:s.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class kw extends Bl{static get className(){return"RMSProp"}constructor(e,t=.9,s=0,r=null,i=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=s,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=i,r==null&&(this.epsilon=re.backend.epsilon()),e==null)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map(s=>s.name):Object.keys(e)).forEach((s,r)=>{const i=re.registeredVariables[s],o=!1;this.accumulatedMeanSquares[r]==null&&(this.accumulatedMeanSquares[r]={originalName:`${s}/rms`,variable:ue(()=>_n(i).variable(o))}),this.accumulatedMoments[r]==null&&(this.accumulatedMoments[r]={originalName:`${s}/momentum`,variable:ue(()=>_n(i).variable(o))}),this.accumulatedMeanGrads[r]==null&&this.centered&&(this.accumulatedMeanGrads[r]={originalName:`${s}/mg`,variable:ue(()=>_n(i).variable(o))});const a=Array.isArray(e)?e[r].tensor:e[s];if(a==null)return;const l=this.accumulatedMeanSquares[r].variable,c=this.accumulatedMoments[r].variable;ue(()=>{const u=$e(ne(l,this.decay),ne(Jn(a),1-this.decay));if(this.centered){const h=this.accumulatedMeanGrads[r].variable,d=$e(ne(h,this.decay),ne(a,1-this.decay)),f=rt(ne(a,this.learningRate),yr(gt(u,$e(Jn(d),this.epsilon)))),p=$e(ne(c,this.momentum),f);l.assign(u),h.assign(d),c.assign(p);const A=gt(i,p);i.assign(A)}else{const h=$e(ne(l,this.decay),ne(Jn(a),1-this.decay)),d=$e(ne(c,this.momentum),rt(ne(a,this.learningRate),yr($e(h,this.epsilon))));l.assign(h),c.assign(d);const f=gt(i,d);i.assign(f)}})}),this.incrementIterations()}dispose(){this.accumulatedMeanSquares!=null&&zt(this.accumulatedMeanSquares.map(e=>e.variable)),this.accumulatedMeanGrads!=null&&this.centered&&zt(this.accumulatedMeanGrads.map(e=>e.variable)),this.accumulatedMoments!=null&&zt(this.accumulatedMoments.map(e=>e.variable))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,s=!1;this.accumulatedMeanSquares=e.slice(0,t).map(r=>({originalName:r.name,variable:r.tensor.variable(s)})),this.accumulatedMoments=e.slice(t,t*2).map(r=>({originalName:r.name,variable:r.tensor.variable(s)})),this.centered&&(this.accumulatedMeanGrads=e.slice(t*2,t*3).map(r=>({originalName:r.name,variable:r.tensor.variable(s)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Yj=[Sw,Ew,_w,Tw,Bw,kw,c1];function jj(){for(const n of Yj)He(n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xj="model",Kj=".json",Jj=".weights.bin";function p_(n){return new Promise(e=>setTimeout(e)).then(n)}class Tu{constructor(e){if(!xe().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(Tu.URL_SCHEME)&&(e=e.slice(Tu.URL_SCHEME.length)),(e==null||e.length===0)&&(e=Xj),this.modelJsonFileName=e+Kj,this.weightDataFileName=e+Jj}async save(e){if(typeof document>"u")throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=ra.join(e.weightData),s=window.URL.createObjectURL(new Blob([t],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const r=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],i=Jk(e,r),o=window.URL.createObjectURL(new Blob([JSON.stringify(i)],{type:"application/json"})),a=this.modelJsonAnchor==null?document.createElement("a"):this.modelJsonAnchor;if(a.download=this.modelJsonFileName,a.href=o,await p_(()=>a.dispatchEvent(new MouseEvent("click"))),e.weightData!=null){const l=this.weightDataAnchor==null?document.createElement("a"):this.weightDataAnchor;l.download=this.weightDataFileName,l.href=s,await p_(()=>l.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:lA(e)}}}}Tu.URL_SCHEME="downloads://";class Zj{constructor(e){if(e==null||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise((e,t)=>{const s=new FileReader;s.onload=r=>{const i=JSON.parse(r.target.result),o=i.modelTopology;if(o==null){t(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));return}if(i.weightsManifest==null){t(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));return}if(this.weightsFiles.length===0){e({modelTopology:o});return}const l=xI(i,c=>this.loadWeights(c));e(l)},s.onerror=r=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),s.readAsText(this.jsonFile)})}loadWeights(e){const t=[],s=[];for(const o of e)t.push(...o.weights),s.push(...o.paths);const r=this.checkManifestAndWeightFiles(e),i=s.map(o=>this.loadWeightsFile(o,r[o]));return Promise.all(i).then(o=>[t,o])}loadWeightsFile(e,t){return new Promise((s,r)=>{const i=new FileReader;i.onload=o=>{const a=o.target.result;s(a)},i.onerror=o=>r(`Failed to weights data from file of path '${e}'.`),i.readAsArrayBuffer(t)})}checkManifestAndWeightFiles(e){const t=[],s=this.weightsFiles.map(i=>s_(i.name)),r={};for(const i of e)i.paths.forEach(o=>{const a=s_(o);if(t.indexOf(a)!==-1)throw new Error(`Duplicate file basename found in weights manifest: '${a}'`);if(t.push(a),s.indexOf(a)===-1)throw new Error(`Weight file with basename '${a}' is not provided.`);r[o]=this.weightsFiles[s.indexOf(a)]});if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return r}}const eX=n=>xe().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(Tu.URL_SCHEME)?tX(n.slice(Tu.URL_SCHEME.length)):null;Es.registerSaveRouter(eX);function tX(n="model"){return new Tu(n)}function nX(n){return new Zj(n)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function m_(n,e,t,s){o(n),t=t??0,s=s??1,a(t,s);let r=0;const i=l=>(l.then(c=>{const u=t+ ++r/n.length*(s-t);return e(u),c}),l);function o(l){z(l!=null&&Array.isArray(l)&&l.length>0,()=>"promises must be a none empty array")}function a(l,c){z(l>=0&&l<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${l}`),z(c>=0&&c<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${c}`),z(c>=l,()=>`startFraction must be no more than endFraction, but got startFraction ${l} and endFraction ${c}`)}return Promise.all(n.map(i))}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function dR(n,e){e==null&&(e={});const t=e.fetchFunc==null?xe().platform.fetch:e.fetchFunc,s=n.map(h=>t(h,e.requestInit,{isBinary:!0})),a=(e.onProgress==null?await Promise.all(s):await m_(s,e.onProgress,0,.5)).map(h=>h.arrayBuffer());return e.onProgress==null?await Promise.all(a):await m_(a,e.onProgress,.5,1)}function sX(n,e){var t;const s=e.fetchFunc==null?xe().platform.fetch:e.fetchFunc;let r=0,i;return(t=e.onProgress)===null||t===void 0||t.call(e,0),new ReadableStream({pull:async o=>{for(var a;r<n.length;){i||(i=(await s(n[r],e.requestInit,{isBinary:!0})).body.getReader());const{done:l,value:c}=await i.read();if(l){r++,i=void 0,(a=e.onProgress)===null||a===void 0||a.call(e,r/n.length);continue}o.enqueue(c);return}o.close()}})}async function rX(n,e="",t,s){return fR(o=>dR(o,{requestInit:s}))(n,e,t)}function fR(n){return async(e,t="",s)=>{const r=e.map(()=>!1),i={},o=s!=null?s.map(()=>!1):[],a=[];if(e.forEach((f,p)=>{let A=0;f.weights.forEach(m=>{const g="quantization"in m?m.quantization.dtype:m.dtype,x=vu[g]*ye(m.shape),v=()=>{r[p]=!0,i[p]==null&&(i[p]=[]),i[p].push({manifestEntry:m,groupOffset:A,sizeBytes:x})};s!=null?s.forEach((b,w)=>{b===m.name&&(v(),o[w]=!0)}):v(),a.push(m.name),A+=x})}),!o.every(f=>f)){const f=s.filter((p,A)=>!o[A]);throw new Error(`Could not find weights in manifest with names: ${f.join(", ")}. 
Manifest JSON has weights with names: ${a.join(", ")}.`)}const l=r.reduce((f,p,A)=>(p&&f.push(A),f),[]),c=[];l.forEach(f=>{e[f].paths.forEach(p=>{const A=t+(t.endsWith("/")?"":"/")+p;c.push(A)})});const u=await n(c),h={};let d=0;return l.forEach(f=>{const p=e[f].paths.length,A=new ra(u.slice(d,d+p));i[f].forEach(g=>{const x=A.slice(g.groupOffset,g.groupOffset+g.sizeBytes),v=Yk(x,[g.manifestEntry]);for(const b in v)h[b]=v[b]}),d+=p}),h}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iX="application/octet-stream",oX="application/json";class Nw{constructor(e,t){if(this.DEFAULT_METHOD="POST",t==null&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.weightUrlConverter=t.weightUrlConverter,t.fetchFunc!=null?(z(typeof t.fetchFunc=="function",()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=t.fetchFunc):this.fetch=xe().platform.fetch,z(e!=null&&e.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(e)&&z(e.length===2,()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`),this.path=e,t.requestInit!=null&&t.requestInit.body!=null)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{},this.loadOptions=t}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const s=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],r=Jk(e,s);if(t.body.append("model.json",new Blob([JSON.stringify(r)],{type:oX}),"model.json"),e.weightData!=null){const o=ra.join(e.weightData);t.body.append("model.weights.bin",new Blob([o],{type:iX}),"model.weights.bin")}const i=await this.fetch(this.path,t);if(i.ok)return{modelArtifactsInfo:lA(e),responses:[i]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${i.status}.`)}async loadModelJSON(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch{let o=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?o+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":o+=" Please make sure the server is serving valid JSON for this request.",new Error(o)}const s=t.modelTopology,r=t.weightsManifest;if(s==null&&r==null)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return t}async load(){if(this.loadOptions.streamWeights)return this.loadStream();const e=await this.loadModelJSON();return xI(e,t=>this.loadWeights(t))}async loadStream(){const e=await this.loadModelJSON(),t=await this.getWeightUrls(e.weightsManifest),s=Yv(e.weightsManifest),r=()=>sX(t,this.loadOptions);return Object.assign(Object.assign({},e),{weightSpecs:s,getWeightStream:r})}async getWeightUrls(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[s,r]=aX(t),i=this.weightPathPrefix||s,o=[],a=[];for(const l of e)for(const c of l.paths)this.weightUrlConverter!=null?a.push(this.weightUrlConverter(c)):o.push(i+c+r);return this.weightUrlConverter&&o.push(...await Promise.all(a)),o}async loadWeights(e){const t=await this.getWeightUrls(e),s=Yv(e),r=await dR(t,this.loadOptions);return[s,r]}}Nw.URL_SCHEME_REGEX=/^https?:\/\//;function aX(n){const e=n.lastIndexOf("/"),t=n.lastIndexOf("?"),s=n.substring(0,e),r=t>e?n.substring(t):"";return[s+"/",r]}function nC(n){return n.match(Nw.URL_SCHEME_REGEX)!=null}const pR=(n,e)=>{if(typeof fetch>"u"&&(e==null||e.fetchFunc==null))return null;{let t=!0;if(Array.isArray(n)?t=n.every(s=>nC(s)):t=nC(n),t)return Rw(n,e)}return null};Es.registerSaveRouter(pR);Es.registerLoadRouter(pR);function Rw(n,e){return new Nw(n,e)}function lX(n,e){return Rw(n,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Z2{constructor(e){this.modelArtifacts=e}load(){return this.modelArtifacts}}class mR{constructor(e){this.saveHandler=e}save(e){return this.saveHandler(e)}}class cX{constructor(e){e.load&&(this.load=()=>Promise.resolve(e.load())),e.save&&(this.save=t=>Promise.resolve(e.save(t)))}}function uX(n,e,t,s){const r=arguments;return new cX(gR(...r))}function gR(n,e,t,s){return arguments.length===1?n.modelTopology!=null||n.weightSpecs!=null?new Z2(n):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Z2({modelTopology:n})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Z2({modelTopology:n,weightSpecs:e,weightData:t,trainingConfig:s}))}function hX(n){return new mR(n)}function dX(n){return new mR(n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mw=Object.freeze(Object.defineProperty({__proto__:null,CompositeArrayBuffer:ra,browserFiles:nX,browserHTTPRequest:lX,concatenateArrayBuffers:Kk,copyModel:zH,decodeWeights:Yk,decodeWeightsStream:Xk,encodeWeights:qv,fromMemory:uX,fromMemorySync:gR,getLoadHandlers:TH,getModelArtifactsForJSON:xI,getModelArtifactsForJSONSync:Zk,getModelArtifactsInfoForJSON:lA,getSaveHandlers:eN,getWeightSpecs:Yv,http:Rw,isHTTPScheme:nC,listModels:QH,loadWeights:rX,moveModel:GH,registerLoadRouter:_H,registerSaveRouter:EH,removeModel:UH,weightsLoaderFactory:fR,withSaveHandler:hX,withSaveHandlerSync:dX},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fX(n,e,t){const s=q(n,"labels","confusionMatrix"),r=q(e,"predictions","confusionMatrix");z(t==null||t>0&&Number.isInteger(t),()=>`If provided, numClasses must be a positive integer, but got ${t}`),z(s.rank===1,()=>`Expected the rank of labels to be 1, but got ${s.rank}`),z(r.rank===1,()=>`Expected the rank of predictions to be 1, but got ${r.rank}`),z(s.shape[0]===r.shape[0],()=>`Mismatch in the number of examples: ${s.shape[0]} vs. ${r.shape[0]}. Labels and predictions should have the same number of elements.`),z(t>0&&Number.isInteger(t),()=>`numClasses is required to be a positive integer, but got ${t}`);const i=_u(Ze(s,"int32"),t),o=_u(Ze(r,"int32"),t),a=Sn(i),l=An(a,o);return Ze(l,"int32")}const pX=ie({confusionMatrix_:fX});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mX=Object.freeze(Object.defineProperty({__proto__:null,confusionMatrix:pX},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Qc,g_=!1;function AR(n,e=3){if(e>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(n==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let t=!1,s=!1,r=!1,i=!1,o=!1,a=!1;if(n.data instanceof Uint8Array)t=!0;else if(typeof ImageData<"u"&&n instanceof ImageData)s=!0;else if(typeof HTMLVideoElement<"u"&&n instanceof HTMLVideoElement)r=!0;else if(typeof HTMLImageElement<"u"&&n instanceof HTMLImageElement)i=!0;else if(n.getContext!=null)o=!0;else if(typeof ImageBitmap<"u"&&n instanceof ImageBitmap)a=!0;else throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${n.constructor.name}`);if($m(Dm,re.backendName)!=null){const p={pixels:n},A={numChannels:e};return re.runKernel(Dm,p,A)}const[c,u]=r?[n.videoWidth,n.videoHeight]:[n.width,n.height];let h;if(o)h=n.getContext("2d").getImageData(0,0,c,u).data;else if(s||t)h=n.data;else if(i||r||a){if(Qc==null)if(typeof document>"u")if(typeof OffscreenCanvas<"u"&&typeof OffscreenCanvasRenderingContext2D<"u")Qc=new OffscreenCanvas(1,1).getContext("2d");else throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");else Qc=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});Qc.canvas.width=c,Qc.canvas.height=u,Qc.drawImage(n,0,0,c,u),h=Qc.getImageData(0,0,c,u).data}let d;if(e===4)d=new Int32Array(h);else{const p=c*u;d=new Int32Array(p*e);for(let A=0;A<p;A++)for(let m=0;m<e;++m)d[A*e+m]=h[A*4+m]}return pw(d,[u,c,e],"int32")}function gX(n){return n!=null&&n.data instanceof Uint8Array}function AX(){return typeof window<"u"&&typeof ImageBitmap<"u"&&window.hasOwnProperty("createImageBitmap")}function yX(n){return n!=null&&n.width!==0&&n.height!==0}function xX(n){return AX()&&!(n instanceof ImageBitmap)&&yX(n)&&!gX(n)}async function bX(n,e=3){let t=null;if(xe().getBool("WRAP_TO_IMAGEBITMAP")&&xX(n)){let s;try{s=await createImageBitmap(n,{premultiplyAlpha:"none"})}catch{s=null}s!=null&&s.width===n.width&&s.height===n.height?t=s:t=n}else t=n;return AR(t,e)}function yR(n){if(n.rank!==2&&n.rank!==3)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${n.rank}.`);const e=n.rank===2?1:n.shape[2];if(e>4||e===2)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${e}`);if(n.dtype!=="float32"&&n.dtype!=="int32")throw new Error(`Unsupported type for toPixels: ${n.dtype}. Please use float32 or int32 tensors.`)}function vX(n){const e=n?.alpha||1;if(e>1||e<0)throw new Error(`Alpha value ${e} is suppoed to be in range [0 - 1].`)}async function vc(n,e){let t=q(n,"img","toPixels");if(!(n instanceof cn)){const c=t;t=Ze(c,"int32"),c.dispose()}yR(t);const[s,r]=t.shape.slice(0,2),i=t.rank===2?1:t.shape[2],o=await t.data(),a=t.dtype==="float32"?255:1,l=new Uint8ClampedArray(r*s*4);for(let c=0;c<s*r;++c){const u=[0,0,0,255];for(let d=0;d<i;d++){const f=o[c*i+d];if(t.dtype==="float32"){if(f<0||f>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${f}.`)}else if(t.dtype==="int32"&&(f<0||f>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${f}.`);i===1?(u[0]=f*a,u[1]=f*a,u[2]=f*a):u[d]=f*a}const h=c*4;l[h+0]=Math.round(u[0]),l[h+1]=Math.round(u[1]),l[h+2]=Math.round(u[2]),l[h+3]=Math.round(u[3])}if(e!=null){g_||$m(Sg,re.backendName)!=null&&(console.warn("tf.browser.toPixels is not efficient to draw tensor on canvas. Please try tf.browser.draw instead."),g_=!0),e.width=r,e.height=s;const c=e.getContext("2d"),u=new ImageData(l,r,s);c.putImageData(u,0,0)}return t!==n&&t.dispose(),l}function CX(n,e,t){let s=q(n,"img","draw");if(!(n instanceof cn)){const o=s;s=Ze(o,"int32"),o.dispose()}yR(s),vX(t?.imageOptions);const r={image:s},i={canvas:e,options:t};re.runKernel(Sg,r,i)}const Fh=ie({fromPixels_:AR}),IX=Object.freeze(Object.defineProperty({__proto__:null,draw:CX,fromPixels:Fh,fromPixelsAsync:bX,toPixels:vc},Symbol.toStringTag,{value:"Module"}));function BA(n,e){const t=n.shape.length,s=e.shape.length;if(t<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${t}.`);if(s<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${s}.`);if(e.dtype!=="int32")throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.shape[s-1]>t)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${e.shape[s-1]} vs. ${t}`);if(ye(n.shape)===0)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${n.shape}.`);const r=e.shape,i=r[r.length-1];let o=1;for(let h=0;h<r.length-1;++h)o*=r[h];const a=n.shape,l=r.slice();l.pop();let c=1;for(let h=i;h<t;++h)c*=a[h],l.push(a[h]);const u=[...Ot(n.shape).map(h=>h/c),1].slice(0,i);return[l,o,c,u]}const wX=Object.freeze(Object.defineProperty({__proto__:null,prepareAndValidate:BA},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sC=-2,SX=-1;function u1(n,e,t){const s=n.shape.length;z(s===e.length,()=>`Error in slice${s}D: Length of begin ${e} must match the rank of the array (${s}).`),z(s===t.length,()=>`Error in slice${s}D: Length of size ${t} must match the rank of the array (${s}).`);for(let r=0;r<s;++r)z(e[r]+t[r]<=n.shape[r],()=>`Error in slice${s}D: begin[${r}] + size[${r}] (${e[r]+t[r]}) would overflow input.shape[${r}] (${n.shape[r]})`)}function EX(n){const e=[];let t=0;for(;n>0;)n&1&&e.push(t),n/=2,t++;return e}function h1(n,e,t){const s=[];for(let r=0;r<n.length;r++)s[r]=Math.ceil((e[r]-n[r])/t[r]);return s}function xR(n,e,t,s){const r=[...n];for(let i=r.length;i<s.length;i++)r.push(1);for(let i=0;i<t;i++)i===0?r[e]=1:(r.splice(e,0,1),r.pop());return r}function bR(n,e,t){return t<=n?t:t-(e-1)}function vR(n,e){const t=[];for(let s=0;s<n;s++)t.push(e+s);return t}function _X(n,e,t,s,r,i,o,a,l){const c=n.length;let u=new Array(c),h=new Array(c),d=new Array(c);if(e.length&&t>0){const f=e[0],p=t+1;u=CR(o,f,p,s,n),h=IR(a,f,p,r,n),d=xR(i,f,p,n)}else for(let f=0;f<c;f++)u[f]=SR(o,s,i,n,f,l),h[f]=ER(a,r,i,n,f,l),d[f]=wR(i,f,l);return{begin:u,end:h,strides:d}}function CR(n,e,t,s,r){const i=[...r],o=vR(t,e);for(let a=0;a<i.length;a++)if(o.indexOf(a)>-1)i[a]=0;else{const l=bR(e,t,a);let c=s[l];n&1<<l&&(c=0),i[a]=c}return i}function IR(n,e,t,s,r){const i=[...r],o=vR(t,e);for(let a=0;a<i.length;a++)if(o.indexOf(a)>-1)i[a]=Number.MAX_SAFE_INTEGER;else{const l=bR(e,t,a);let c=s[l];n&1<<l&&(c=Number.MAX_SAFE_INTEGER),i[a]=c}for(let a=0;a<i.length;a++){const l=r[a];i[a]<0&&(i[a]+=l),i[a]=tc(0,i[a],r[a])}return i}function wR(n,e,t){let s=n[e];return(t&1<<e||s==null)&&(s=1),s}function SR(n,e,t,s,r,i){let o=e[r];const a=t[r]||1;(n&1<<r||i&1<<r||o==null)&&(a>0?o=Number.MIN_SAFE_INTEGER:o=Number.MAX_SAFE_INTEGER);const l=s[r];return o<0&&(o+=l),o=tc(0,o,l-1),o}function ER(n,e,t,s,r,i){let o=e[r];const a=t[r]||1;(n&1<<r||i&1<<r||o==null)&&(a>0?o=Number.MAX_SAFE_INTEGER:o=Number.MIN_SAFE_INTEGER);const l=s[r];return o<0&&(o+=l),a>0?o=tc(0,o,l):o=tc(-1,o,l-1),o}function Dw(n,e,t){let s=t.length;for(let r=0;r<t.length;r++)if(t[r]>1){s=r;break}for(let r=s+1;r<t.length;r++)if(e[r]>0||t[r]!==n[r])return!1;return!0}function Fw(n,e){let t=n.length>0?n[n.length-1]:1;for(let s=0;s<n.length-1;s++)t+=n[s]*e[s];return t}function kA(n,e,t){let s;const r=n.shape.length;typeof e=="number"?s=[e,...new Array(r-1).fill(0)]:e.length<r?s=e.concat(new Array(r-e.length).fill(0)):s=e.slice(),s.forEach(o=>{z(o!==-1,()=>"slice() does not support negative begin indexing.")});let i;return t==null?i=new Array(r).fill(-1):typeof t=="number"?i=[t,...new Array(r-1).fill(-1)]:t.length<r?i=t.concat(new Array(r-t.length).fill(-1)):i=t,i=i.map((o,a)=>o>=0?o:(z(o===-1,()=>`Negative size values should be exactly -1 but got ${o} for the slice() size at index ${a}.`),n.shape[a]-s[a])),[s,i]}function d1(n,e,t,s,r,i,o,a,l){let c;if(s==null?(c=new Array(e.length),c.fill(1)):c=s,o!=null&&(o&o-1)!==0)throw new Error("Multiple ellipses in slice is not allowed.");let u=!1;const h={dims:c.length,numAddAxisAfterEllipsis:0,begin:e.slice(),end:t.slice(),strides:c.slice(),beginMask:r,endMask:i,ellipsisMask:o,newAxisMask:a,shrinkAxisMask:l};for(let v=0;v<h.dims;v++)u&&(1<<v&a)!==0&&h.numAddAxisAfterEllipsis++,1<<v&o&&(u=!0);u||(h.ellipsisMask|=1<<h.dims,h.dims++);const d={dims:n.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};TX(h,d);let f=!0,p=!0,A=!0;const m=[],g=[];for(let v=0;v<n.length;++v){if(d.strides[v]===0)throw Error(`strides[${v}] must be non-zero`);const b=!!(d.shrinkAxisMask&1<<v),w=n[v];if(w===-1){m.push(b?1:-1);continue}const _=[d.beginMask&1<<v,d.endMask&1<<v],N=[d.strides[v]>0?0:-1,d.strides[v]>0?w:w-1];if(b&&d.strides[v]<=0)throw Error("only stride 1 allowed on non-range indexing.");A=A&&d.strides[v]===1;const M=!!(d.beginMask&1<<v&&d.endMask&1<<v);if(d.beginValid&&d.endValid){if(b){const L=d.begin[v]<0?w+d.begin[v]:d.begin[v];if(d.begin[v]=L,d.end[v]=d.begin[v]+1,L<0||L>=w)throw Error(`slice index ${d.begin[v]} of dimension ${v} out of bounds.`)}else d.begin[v]=A_(d.begin[v],0,d.strides[v],w,_,N),d.end[v]=A_(d.end[v],1,d.strides[v],w,_,N);const B=d.strides[v]===1&&d.begin[v]===0&&d.end[v]===w;f=f&&B,p=p&&(v===0&&d.strides[v]===1||B)}else f=f&&d.strides[v]===1&&M,p=p&&(v===0&&d.strides[v]===1||M);let T,k=!1;if(d.beginValid&&d.endValid?(T=d.end[v]-d.begin[v],k=!0):b?(T=1,k=!0):M&&w>=0&&(d.strides[v]<0?T=-w:T=w,k=!0),k){let B;T===0||T<0!=d.strides[v]<0?B=0:B=Math.trunc(T/d.strides[v])+(T%d.strides[v]!==0?1:0),m.push(B)}else m.push(-1)}for(let v=0;v<d.finalShapeGatherIndices.length;++v){const b=d.finalShapeGatherIndices[v];b>=0?g.push(m[b]):b===sC&&g.push(1)}return{finalShapeSparse:g.filter((v,b)=>d.finalShapeGatherIndices[b]!==sC),finalShape:g,isIdentity:f,sliceDim0:p,isSimpleSlice:A,begin:d.begin,end:d.end,strides:d.strides}}function TX(n,e){e.beginMask=0,e.endMask=0,e.shrinkAxisMask=0;let t=0;e.beginValid=n.begin!=null,e.endValid=n.end!=null,e.begin=new Array(e.dims),e.end=new Array(e.dims),e.strides=new Array(e.dims),e.finalShapeGatherIndices=[],e.finalShapeGatherIndicesSparse=[],e.inputShapeGatherIndicesSparse=new Array(e.dims);for(let s=0;s<n.dims;s++)if(1<<s&n.ellipsisMask){const r=Math.min(e.dims-(n.dims-s)+1+n.numAddAxisAfterEllipsis,e.dims);for(;t<r;t++)e.begin[t]=0,e.end[t]=0,e.strides[t]=1,e.beginMask|=1<<t,e.endMask|=1<<t,e.finalShapeGatherIndices.push(t),e.finalShapeGatherIndicesSparse.push(-1),e.inputShapeGatherIndicesSparse[t]=s}else if(1<<s&n.newAxisMask)e.finalShapeGatherIndices.push(sC),e.finalShapeGatherIndicesSparse.push(-1);else{if(t===e.begin.length)throw Error(`Index out of range using input dim ${t}; input has only ${e.dims} dims, ${e.begin.length}.`);n.begin!=null&&(e.begin[t]=n.begin[s]),n.end!=null&&(e.end[t]=n.end[s]),e.strides[t]=n.strides[s],n.beginMask&1<<s&&(e.beginMask|=1<<t),n.endMask&1<<s&&(e.endMask|=1<<t),n.shrinkAxisMask&1<<s?(e.finalShapeGatherIndices.push(SX),e.finalShapeGatherIndicesSparse.push(-1),e.shrinkAxisMask|=1<<t):(e.finalShapeGatherIndices.push(t),e.finalShapeGatherIndicesSparse.push(s)),e.inputShapeGatherIndicesSparse[t]=s,t++}}function A_(n,e,t,s,r,i){if(r[e])return t>0?i[e]:i[e+1&1];{const o=n<0?s+n:n;return o<i[0]?i[0]:o>i[1]?i[1]:o}}const _R=Object.freeze(Object.defineProperty({__proto__:null,assertParamsValid:u1,computeFlatOffset:Fw,computeOutShape:h1,getNormalizedAxes:_X,isSliceContinous:Dw,maskToAxes:EX,parseSliceParams:kA,sliceInfo:d1,startForAxis:SR,startIndicesWithElidedDims:CR,stopForAxis:ER,stopIndicesWithElidedDims:IR,stridesForAxis:wR,stridesWithElidedDims:xR},Symbol.toStringTag,{value:"Module"}));/** @license See the LICENSE file. */const BX="4.22.0";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class TR{static sgd(e){return new c1(e)}static momentum(e,t,s=!1){return new Bw(e,t,s)}static rmsprop(e,t=.9,s=0,r=null,i=!1){return new kw(e,t,s,r,i)}static adam(e=.001,t=.9,s=.999,r=null){return new _w(e,t,s,r)}static adadelta(e=.001,t=.95,s=null){return new Sw(e,t,s)}static adamax(e=.002,t=.9,s=.999,r=null,i=0){return new Tw(e,t,s,r,i)}static adagrad(e,t=.1){return new Ew(e,t)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qc=TR;/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kX=typeof requestAnimationFrame<"u"?requestAnimationFrame:typeof setImmediate<"u"?setImmediate:n=>n();function $w(){return new Promise(n=>kX(()=>n()))}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function f1(n,e){const t=n[0].length;n.forEach((r,i)=>{z(r.length===t,()=>`Error in concat${t}D: rank of tensors[${i}] must be the same as the rank of the rest (${t})`)}),z(e>=0&&e<t,()=>`Error in concat${t}D: axis must be between 0 and ${t-1}.`);const s=n[0];n.forEach((r,i)=>{for(let o=0;o<t;o++)z(o===e||r[o]===s[o],()=>`Error in concat${t}D: Shape of tensors[${i}] (${r}) does not match the shape of the rest (${s}) along the non-concatenated axis ${i}.`)})}function xi(n,e){const t=n[0].slice();for(let s=1;s<n.length;s++)t[e]+=n[s][e];return t}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Qo;(function(n){n[n.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",n[n.VALUE_ROWIDS=1]="VALUE_ROWIDS",n[n.ROW_LENGTHS=2]="ROW_LENGTHS",n[n.ROW_SPLITS=3]="ROW_SPLITS",n[n.ROW_LIMITS=4]="ROW_LIMITS",n[n.ROW_STARTS=5]="ROW_STARTS"})(Qo||(Qo={}));function BR(n,e,t){let s=new Array;if(t==null&&e==null)return s;if(e==null)for(;s.length<n+t.length;)s.push(-1);else s=e.slice();if(t==null)return s;if(n+t.length!==s.length)throw new Error(`rt input.shape and shape=${e} are incompatible: rt input.rank = ${n+t.length}, but shape.rank = ${s.length}`);for(let r=1;r<t.length;++r){const i=t[r],o=s[s.length-t.length+r],a=s[o];if(i>=0)if(a>=0){if(a!==i)throw new Error(`rt input.shape and shape=${e} are incompatible: rt input.shape[${r+n}] = ${i} but shape[${r+n}] = ${a}`)}else s[o]=i}return s}function kR(n){const e={FIRST_DIM_SIZE:Qo.FIRST_DIM_SIZE,VALUE_ROWIDS:Qo.VALUE_ROWIDS,ROW_LENGTHS:Qo.ROW_LENGTHS,ROW_SPLITS:Qo.ROW_SPLITS,ROW_LIMITS:Qo.ROW_LIMITS,ROW_STARTS:Qo.ROW_STARTS},t=[];for(const s of n)if(s in e)t.push(e[s]);else break;return t}function NR(n){return n.length===0?0:n[0]===Qo.FIRST_DIM_SIZE?n.length-1:n.length}function RR(n,e){if(n==null||e==null)return;const t=n.length,s=e.length;if(t>=s)throw new Error(`defaultValue.shape=${n} and ragged tensor flatValues.shape=${e}, are incompatible: defaultValue.rank = ${t} must be less than ragged tensor input flatValues.rank = ${s})`);for(let r=0;r<Math.min(t,s-1);++r){const i=n[r],o=e[r+1];if(i>=0&&o>=0&&i!==1&&i!==o)throw new Error(`defaultValue.shape=${n}, and ragged tensor input flatValues.shape=${e} are incompatible: defaultValue.shape[${r-n.length}] = ${i} but ragged tensor input.flatValues.shape[${r-n.length}] = ${o}`)}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Pw=30;function p1(n){return n<=Pw?n:w0(n,Math.floor(Math.sqrt(n)))}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function m1(n,e,t){const s=t*(typeof n=="number"?n:n[0]),r=e*(typeof n=="number"?n:n[1]);return[s,r]}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $h(n,e,t,s=!0){let r=[];if(s)r=r.concat(e.slice(0)),r.push(n[0]/t),r=r.concat(n.slice(1));else{r=r.concat(n[0]);const i=e.length;for(let o=0;o<i;++o)r=r.concat([n[o+1]/e[o],e[o]]);r=r.concat(n.slice(i+1))}return r}function Ph(n,e,t=!0){const s=[];if(t){s.push(e);for(let r=e+1;r<n;++r)r<=2*e?(s.push(r),s.push(r-(e+1))):s.push(r)}else{const r=[],i=[];for(let o=1;o<n;++o)o>=e*2+1||o%2===1?i.push(o):r.push(o);s.push(...r),s.push(0),s.push(...i)}return s}function Lh(n,e,t,s=!0){const r=[];s?r.push(n[0]/t):r.push(n[0]*t);for(let i=1;i<n.length;++i)i<=e.length?s?r.push(e[i-1]*n[i]):r.push(n[i]/e[i-1]):r.push(n[i]);return r}function g1(n,e){const t=[0];for(let s=0;s<e;++s)t.push(n[s][0]);return t}function A1(n,e,t){const s=n.slice(0,1);for(let r=0;r<t;++r)s.push(n[r+1]-e[r][0]-e[r][1]);return s}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NA=1.7580993408473768,RA=1.0507009873554805;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const y1=.3275911,x1=.254829592,b1=-.284496736,v1=1.421413741,C1=-1.453152027,I1=1.061405429;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jo(n,e){if(n.length!==e.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${n.length}, imag: ${e.length}.`);const t=new Float32Array(n.length*2);for(let s=0;s<t.length;s+=2)t[s]=n[s/2],t[s+1]=e[s/2];return t}function MR(n){const e=new Float32Array(n.length/2),t=new Float32Array(n.length/2);for(let s=0;s<n.length;s+=2)e[s/2]=n[s],t[s/2]=n[s+1];return{real:e,imag:t}}function DR(n){const e=Math.ceil(n.length/4),t=new Float32Array(e),s=new Float32Array(e);for(let r=0;r<n.length;r+=4)t[Math.floor(r/4)]=n[r],s[Math.floor(r/4)]=n[r+1];return{real:t,imag:s}}function FR(n){const e=Math.floor(n.length/4),t=new Float32Array(e),s=new Float32Array(e);for(let r=2;r<n.length;r+=4)t[Math.floor(r/4)]=n[r],s[Math.floor(r/4)]=n[r+1];return{real:t,imag:s}}function Lw(n,e){const t=n[e*2],s=n[e*2+1];return{real:t,imag:s}}function $R(n,e,t,s){n[s*2]=e,n[s*2+1]=t}function PR(n,e){const t=new Float32Array(n/2),s=new Float32Array(n/2);for(let r=0;r<Math.ceil(n/2);r++){const i=(e?2:-2)*Math.PI*(r/n);t[r]=Math.cos(i),s[r]=Math.sin(i)}return{real:t,imag:s}}function LR(n,e,t){const s=(t?2:-2)*Math.PI*(n/e),r=Math.cos(s),i=Math.sin(s);return{real:r,imag:i}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eb="->",NX=/->/g,y_=",",x_="...";function w1(n,e){n=n.replace(/\s/g,"");const t=(n.length-n.replace(NX,"").length)/eb.length;if(t<1)throw new Error("Equations without an arrow are not supported.");if(t>1)throw new Error(`Equation must contain exactly one arrow ("${eb}").`);const[s,r]=n.split(eb);z(s.indexOf(x_)===-1,()=>`The ellipsis notation ("${x_}") is not supported yet.`);const i=s.split(y_),o=i.length;if(e!==o)throw new Error(`Expected ${o} input tensors, received ${e}`);if(o>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const a=[];for(let d=0;d<r.length;++d){const f=r[d];if(!i.some(p=>p.indexOf(f)!==-1))throw new Error(`Output subscripts contain the label ${f} not present in the input subscripts.`);a.indexOf(f)===-1&&a.push(f)}for(let d=0;d<s.length;++d){const f=s[d];a.indexOf(f)===-1&&f!==y_&&a.push(f)}const l=new Array(i.length);for(let d=0;d<o;++d){if(new Set(i[d].split("")).size!==i[d].length)throw new Error(`Found duplicate axes in input component ${i[d]}. Support for duplicate axes in input is not implemented yet.`);l[d]=[];for(let f=0;f<i[d].length;++f)l[d].push(a.indexOf(i[d][f]))}const c=a.length,u=r.length,h=[];for(let d=u;d<c;++d)h.push(d);return{allDims:a,summedDims:h,idDims:l}}function S1(n,e){let t=new Array(n);t.fill(-1);for(let r=0;r<e.length;++r)t[e[r]]=r;const s=[];for(let r=0;r<n;++r)t[r]===-1&&s.push(r);return t=t.filter(r=>r!==-1),{permutationIndices:t,expandDims:s}}function E1(n,e,t){const s=new Array(n);for(let r=0;r<t.length;++r){const i=t[r].shape;for(let o=0;o<e[r].length;++o)s[e[r][o]]===void 0?s[e[r][o]]=i[o]:z(s[e[r][o]]===i[o],()=>`Expected dimension ${s[e[r][o]]} at axis ${o} of input shaped ${JSON.stringify(i)}, but got dimension ${i[o]}`)}}function _1(n,e){const t=n,s=[];let r=0;n.length===0&&t.push(-1),r=n.length+1;for(let o=0;o<r;++o)s.push([]);const i=[];for(let o=0;o<t.length;++o){const a=t[o],l=RX(e,a);for(const c of l)i.indexOf(c)===-1&&(s[o].push(c),i.push(c))}return{path:t,steps:s}}function T1(n){return n.every((e,t)=>e===t)}function RX(n,e){const t=[];for(let s=0;s<n.length;++s)(n[s].length===0||n[s].indexOf(e)!==-1||e===-1)&&t.push(s);return t}function B1(n,e,t=0){let s=[];if(typeof e=="number")z(n.shape[t]%e===0,()=>"Number of splits must evenly divide the axis."),s=new Array(e).fill(n.shape[t]/e);else{const r=e.reduce((o,a)=>(a===-1&&(o+=1),o),0);z(r<=1,()=>"There should be only one negative value in split array.");const i=e.indexOf(-1);if(i!==-1){const o=e.reduce((a,l)=>l>0?a+l:a);e[i]=n.shape[t]-o}z(n.shape[t]===e.reduce((o,a)=>o+a),()=>"The sum of sizes must match the size of the axis dimension."),s=e}return s}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OR(n){return`Received SparseTensor with denseShape[0] = 0 but
  indices.shape[0] = ${n}`}function QR(n,e){return`indices(${n}, 0) is invalid: ${e} < 0`}function UR(n,e,t){return`indices(${n}, 0) is invalid: ${e} >= ${t}`}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zR(n,e){return`only one output dimension may be -1, not both ${n} and ${e}`}function GR(n,e){return`size ${n} must be non-negative, not ${e}`}function VR(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function WR(n,e){const t=ye(n),s=ye(e);return`Input to reshape is a SparseTensor with ${t}
  dense values, but the requested shape requires a multiple of ${s}. inputShape=${n} outputShape= ${e}`}function HR(n,e){const t=ye(n),s=ye(e);return`Input to reshape is a tensor with ${t} dense values, but the requested shape has ${s}. inputShape=${n} outputShape=${e}`}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rC(){return"segment ids must be >= 0"}function qR(){return"segment ids are not increasing"}function YR(n,e){return`Segment id ${n} out of range [0, ${e}), possibly because segmentIds input is not sorted.`}function jR(n,e,t){return`Bad: indices[${n}] == ${e} out of range [0, ${t})`}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XR(n,e){let t=!1,s;for(n<=Pw?(s=n,t=!0):s=w0(n,Math.floor(Math.sqrt(n)));!t;)s>e||s===n?t=!0:s=w0(n,s+1);return s}function Ow(n,e,t){const s=[],r=n.length;for(let i=0;i<r;i++)i!==e?s.push(n[i]):s.push(t);return s}function k1(n,e,t,s){const r=e.shape.length,i=n.shape.length;if(s!==0&&(s<-r||s>r))throw new Error(`Expect batchDims in the range of [-${r}, ${r}], but got ${s}`);if(s<0&&(s+=r),s>i)throw new Error(`batchDims (${s}) must be less than rank(x) (
    ${i}).`);if(t<s)throw new Error(`batchDims (${s}) must be less than or equal to axis (${t}).`);for(let h=0;h<s;++h)if(n.shape[h]!==e.shape[h])throw new Error(`x.shape[${h}]: ${n.shape[h]} should be equal to indices.shape[${h}]: ${e.shape[h]}.`);const o=n.shape[t],a=[];let l=1,c=1,u=1;for(let h=0;h<s;++h)a.push(n.shape[h]),l*=n.shape[h];for(let h=s;h<t;h++)a.push(n.shape[h]),c*=n.shape[h];for(let h=s;h<r;h++)a.push(e.shape[h]);for(let h=t+1;h<i;h++)a.push(n.shape[h]),u*=n.shape[h];return{batchSize:l,sliceSize:u,outerSize:c,dimSize:o,outputShape:a}}const MX=Object.freeze(Object.defineProperty({__proto__:null,collectGatherOpShapeInfo:k1,computeOutShape:Ow,segOpComputeOptimalWindowSize:XR},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zo(n){try{return n.map(e=>Eo(e))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function KR(n){return n.map(e=>Yo(e))}const JR=Object.freeze(Object.defineProperty({__proto__:null,ERF_A1:x1,ERF_A2:b1,ERF_A3:v1,ERF_A4:C1,ERF_A5:I1,ERF_P:y1,PARALLELIZE_THRESHOLD:Pw,get RowPartitionType(){return Qo},SELU_SCALE:RA,SELU_SCALEALPHA:NA,applyActivation:o1,assertAndGetBroadcastShape:jt,assertAxesAreInnerMostDims:qs,assertParamsConsistent:f1,assignToTypedArray:$R,axesAreInnerMostDims:qI,calculateShapes:aa,checkEinsumDimSizes:E1,checkPadOnDimRoundingMode:ri,combineLocations:mN,combineRaggedTensorToTensorShapes:BR,complexWithEvenIndex:DR,complexWithOddIndex:FR,computeConv2DInfo:As,computeConv3DInfo:ia,computeDefaultPad:BI,computeDilation2DInfo:yc,computeOptimalWindowSize:p1,computeOutAndReduceShapes:$s,computeOutShape:xi,computePool2DInfo:Pr,computePool3DInfo:fo,convertConv2DDataFormat:Xi,decodeEinsumEquation:w1,eitherStridesOrDilationsAreOne:nr,expandShapeToKeepDim:Ms,exponent:LR,exponents:PR,fromStringArrayToUint8:KR,fromUint8ToStringArray:Zo,getAxesPermutation:ss,getBroadcastDims:bl,getComplexWithIndex:Lw,getEinsumComputePath:_1,getEinsumPermutation:S1,getFusedBiasGradient:i1,getFusedDyActivation:r1,getImageCenter:m1,getInnerMostAxes:ys,getPermuted:Ph,getRaggedRank:NR,getReductionAxes:Hs,getReshaped:$h,getReshapedPermuted:Lh,getRowPartitionTypesHelper:kR,getSliceBeginCoords:g1,getSliceSize:A1,getSparseFillEmptyRowsIndicesDenseShapeMismatch:OR,getSparseFillEmptyRowsNegativeIndexErrorMessage:QR,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:UR,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:VR,getSparseReshapeInputOutputMismatchErrorMessage:HR,getSparseReshapeInputOutputMultipleErrorMessage:WR,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:zR,getSparseReshapeNegativeOutputDimErrorMessage:GR,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:jR,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:rC,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:qR,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:YR,getUndoAxesPermutation:Oa,isIdentityPermutation:T1,log:S6,mergeRealAndImagArrays:Jo,prepareAndValidate:BA,prepareSplitSize:B1,segment_util:MX,shouldFuse:a1,slice_util:_R,splitRealAndImagArrays:MR,stridesOrDilationsArePositive:Su,tupleValuesAreOne:ic,upcastType:tr,validateDefaultValueShape:RR,validateInput:Zx,validateUpdateShape:mw,warn:to},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DX=Object.freeze(Object.defineProperty({__proto__:null,nonMaxSuppressionV3Impl:_A,nonMaxSuppressionV4Impl:l1,nonMaxSuppressionV5Impl:TA,whereImpl:n1},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */jj();const ZR=Object.freeze(Object.defineProperty({__proto__:null,Abs:pf,Acos:$u,Acosh:Pu,AdadeltaOptimizer:Sw,AdagradOptimizer:Ew,AdamOptimizer:_w,AdamaxOptimizer:Tw,Add:mc,AddN:mf,All:ag,Any:lg,ArgMax:gf,ArgMin:Af,Asin:Lu,Asinh:Ou,Atan:Qu,Atan2:zu,Atanh:Uu,AvgPool:yf,AvgPool3D:xf,AvgPool3DGrad:ug,AvgPoolGrad:cg,BatchMatMul:bf,BatchToSpaceND:vf,Bincount:hg,BitwiseAnd:dg,BroadcastArgs:fg,BroadcastTo:kk,Cast:Gu,Ceil:Vu,ClipByValue:Wu,Complex:pg,ComplexAbs:Cf,Concat:If,Conv2D:wf,Conv2DBackpropFilter:mg,Conv2DBackpropInput:Sf,Conv3D:Ef,Conv3DBackpropFilterV2:gg,Conv3DBackpropInputV2:Ag,Cos:Hu,Cosh:qu,CropAndResize:xg,Cumprod:yg,Cumsum:_f,DataStorage:px,DenseBincount:bg,DepthToSpace:vg,DepthwiseConv2dNative:Tf,DepthwiseConv2dNativeBackpropFilter:Cg,DepthwiseConv2dNativeBackpropInput:Ig,Diag:wg,Dilation2D:Bf,Dilation2DBackpropFilter:Mm,Dilation2DBackpropInput:Rm,Draw:Sg,get ENV(){return hI},Einsum:Eg,Elu:ju,EluGrad:_g,Environment:Tk,Equal:kf,Erf:Xu,Exp:Ku,ExpandDims:Nf,Expm1:Ju,FFT:Tg,Fill:Bg,FlipLeftRight:kg,Floor:Zu,FloorDiv:eh,FromPixels:Dm,FusedBatchNorm:Rf,FusedConv2D:Vd,FusedDepthwiseConv2D:Wd,GatherNd:Ng,GatherV2:Mf,Greater:Df,GreaterEqual:th,IFFT:Rg,Identity:nh,Imag:Mg,IsFinite:sh,IsInf:rh,IsNan:ih,KernelBackend:og,LRN:Uf,LRNGrad:Fg,LeakyRelu:Ff,Less:$f,LessEqual:Pf,LinSpace:Dg,Log:oh,Log1p:ah,LogSoftmax:Nk,LogicalAnd:Lf,LogicalNot:Of,LogicalOr:Qf,LogicalXor:b6,LowerBound:v6,MatrixBandPart:C6,Max:zf,MaxPool:Gf,MaxPool3D:Vf,MaxPool3DGrad:Pg,MaxPoolGrad:$g,MaxPoolWithArgmax:Lg,Maximum:lh,Mean:Wf,Min:Hf,Minimum:ch,MirrorPad:qf,Mod:uh,MomentumOptimizer:Bw,Multinomial:Og,Multiply:hh,Neg:Yf,NonMaxSuppressionV3:Qg,NonMaxSuppressionV4:xx,NonMaxSuppressionV5:Ug,NotEqual:jf,OP_SCOPE_SUFFIX:AI,OneHot:Kf,OnesLike:Xf,Optimizer:Bl,OptimizerConstructors:TR,Pack:Jf,PadV2:Zf,Pool:I6,Pow:dh,Prelu:ep,Prod:tp,RMSPropOptimizer:kw,RaggedGather:bx,RaggedRange:vx,RaggedTensorToTensor:Cx,Range:zg,get Rank(){return Qv},Real:Gg,RealDiv:Yu,Reciprocal:fh,get Reduction(){return ei},Relu:ph,Relu6:mh,Reshape:np,ResizeBilinear:rp,ResizeBilinearGrad:Wg,ResizeNearestNeighbor:sp,ResizeNearestNeighborGrad:Vg,Reverse:ip,RotateWithOffset:rA,Round:gh,Rsqrt:Ah,SGDOptimizer:c1,ScatterNd:Hg,SearchSorted:Yg,Select:op,Selu:yh,Sigmoid:Ch,Sign:vh,Sin:xh,Sinh:bh,Slice:ap,Softmax:hp,Softplus:Ih,SpaceToBatchND:cp,SparseFillEmptyRows:Ix,SparseReshape:wx,SparseSegmentMean:jg,SparseSegmentSum:Xg,SparseToDense:Kg,SplitV:up,Sqrt:wh,Square:Jg,SquaredDifference:Sh,StaticRegexReplace:Zg,Step:kh,StridedSlice:eA,StringNGrams:tA,StringSplit:Sx,StringToHashBucketFast:Ex,Sub:Eh,Sum:lp,Tan:_h,Tanh:Th,Tensor:cn,TensorBuffer:Vs,TensorScatterUpdate:qg,Tile:Bh,TopK:nA,Transform:sA,Transpose:Xl,Unique:_x,Unpack:dp,UnsortedSegmentSum:fp,UpperBound:w6,Variable:Pm,ZerosLike:pp,_FusedMatMul:Gd,abs:Gs,acos:vI,acosh:CI,add:$e,addN:lN,all:kx,any:Om,argMax:yl,argMin:II,asin:wI,asinh:SI,atan:EI,atan2:_I,atanh:TI,avgPool:cA,avgPool3d:kI,backend:Al,backend_util:JR,basicLSTMCell:cN,batchNorm:mp,batchNorm2d:NI,batchNorm3d:RI,batchNorm4d:MI,batchToSpaceND:uA,bincount:DI,bitwiseAnd:uN,booleanMaskAsync:qN,broadcastArgs:hN,broadcastTo:pu,broadcast_util:r9,browser:IX,buffer:rn,cast:Ze,ceil:FI,clipByValue:$r,clone:Ia,complex:gl,concat:ps,concat1d:$I,concat2d:PI,concat3d:LI,concat4d:OI,conv1d:Nx,conv2d:xl,conv2dTranspose:Rx,conv3d:UI,conv3dTranspose:zI,copyRegisteredKernels:T6,cos:hA,cosh:Mx,cosineWindow:s1,cumprod:zm,cumsum:Dx,customGrad:Na,denseBincount:E0,deprecationWarn:cH,depthToSpace:GI,depthwiseConv2d:gp,device_util:sH,diag:fN,dilation2d:VI,disableDeprecationWarnings:lH,dispose:zt,disposeVariables:uH,div:rt,divNoNan:WI,dot:HI,dropout:bw,einsum:Zc,elu:Ap,enableDebugMode:aH,enableProdMode:oH,enclosingPowerOfTwo:vw,engine:lr,ensureShape:pN,env:xe,equal:zi,erf:Fx,euclideanNorm:YI,exp:xr,expandDims:Kn,expm1:jI,eye:$x,fft:SA,fill:Nh,findBackend:pH,findBackendFactory:mH,floor:xp,floorDiv:Bx,fused:nR,gather:bp,gatherND:KN,gather_util:wX,getBackend:Cu,getGradient:Lv,getKernel:$m,getKernelsForBackend:S0,grad:U9,grads:z9,greater:ii,greaterEqual:_l,ifft:Zd,imag:dA,image:Is,inTopKAsync:JN,io:Mw,irfft:Kx,isFinite:XI,isInf:KI,isNaN:JI,keep:Xs,kernel_impls:DX,leakyRelu:fA,less:Xd,lessEqual:xc,linalg:ww,linspace:AN,localResponseNormalization:ZI,log:Gi,log1p:pA,logSigmoid:ew,logSoftmax:Lx,logSumExp:mA,logicalAnd:Ko,logicalNot:gA,logicalOr:Ox,logicalXor:tw,losses:cR,lowerBound:xN,matMul:An,math:mX,max:lo,maxPool:AA,maxPool3d:nw,maxPoolWithArgmax:bN,maximum:Qa,mean:_s,memory:Hv,meshgrid:vN,min:jd,minimum:vl,mirrorPad:yA,mod:sw,moments:xA,movingAverage:YN,mul:ne,multiRNNCell:CN,multinomial:IN,neg:ms,nextFrame:$w,norm:yp,notEqual:Eu,oneHot:_u,ones:Ai,onesLike:Vi,op:ie,outerProduct:wN,pad:co,pad1d:SN,pad2d:EN,pad3d:rw,pad4d:_N,pool:iw,pow:ka,prelu:vA,print:bI,prod:ow,profile:hH,raggedGather:TN,raggedRange:BN,raggedTensorToTensor:kN,rand:NN,randomGamma:DN,randomNormal:zx,randomStandardNormal:FN,randomUniform:bc,randomUniformInt:$N,range:Cl,ready:qk,real:Kd,reciprocal:uw,registerBackend:Tx,registerGradient:Rk,registerKernel:iA,relu:oa,relu6:Gx,removeBackend:fH,reshape:ae,reverse:uo,reverse1d:PN,reverse2d:LN,reverse3d:ON,reverse4d:QN,rfft:EA,round:Vx,rsqrt:Wx,scalar:Bt,scatterND:jN,scatter_util:H7,searchSorted:Qx,selu:Hx,separableConv2d:qx,serialization:qj,setBackend:Hk,setPlatform:gH,setdiff1dAsync:UN,sigmoid:Tr,sign:hw,signal:lR,sin:Yx,sinh:jx,slice:Rt,slice1d:CA,slice2d:Xx,slice3d:IA,slice4d:Jd,slice_util:_R,softmax:wA,softplus:Rh,spaceToBatchND:bA,sparse:uR,sparseToDense:XN,spectral:aR,split:yi,sqrt:yr,square:Jn,squaredDifference:Jx,squeeze:Ht,stack:Ci,step:Mh,stridedSlice:dw,string:hR,sub:gt,sum:Mt,sumOutType:aA,tan:fw,tanh:oc,tensor:ao,tensor1d:fs,tensor2d:ni,tensor3d:pw,tensor4d:zN,tensor5d:GN,tensor6d:VN,tensorScatterUpdate:WN,tensor_util:J6,test_util:i7,tidy:ue,tile:so,time:dH,topk:gw,train:qc,transpose:Sn,truncatedNormal:e1,unique:Aw,unregisterGradient:_6,unregisterKernel:E6,unsortedSegmentSum:t1,unstack:ho,upcastType:tr,upperBound:HN,util:O6,valueAndGrad:G9,valueAndGrads:V9,variable:yw,variableGrads:yN,version_core:BX,where:Br,whereAsync:xw,zeros:Rs,zerosLike:_n},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eM={kernelName:pf,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>ne(n,Mh(Ze(t,"float32"),-1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FX={kernelName:$u,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>{const s=Jn(Ze(t,"float32")),r=yr(gt(Bt(1),s));return ms(rt(n,r))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $X={kernelName:Pu,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>{const s=yr(gt(Jn(Ze(t,"float32")),1));return rt(n,s)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PX={kernelName:mc,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,r=jt(t.shape,s.shape);return{a:()=>{let a=n;const l=Hs(t.shape,r);return l.length>0&&(a=Mt(a,l)),ae(a,t.shape)},b:()=>{let a=n;const l=Hs(s.shape,r);return l.length>0&&(a=Mt(a,l)),ae(a,s.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LX={kernelName:mf,saveAllInputs:!0,gradFunc:(n,e)=>{const t={};return e.forEach((s,r)=>{t[r]=()=>n.clone()}),t}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OX={kernelName:gf,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>_n(t)}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QX={kernelName:Af,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>_n(t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UX={kernelName:Lu,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>rt(n,yr(gt(Bt(1),Jn(Ze(t,"float32")))))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zX={kernelName:Ou,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>{const s=yr($e(Bt(1),Jn(Ze(t,"float32"))));return rt(n,s)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GX={kernelName:zu,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,r=jt(t.shape,s.shape);return{a:()=>{const a=$e(Jn(t),Jn(s));let l=ne(n,rt(s,a));const c=Hs(t.shape,r);return c.length>0&&(l=Mt(l,c)),ae(l,t.shape)},b:()=>{const a=$e(Jn(t),Jn(s));let l=ms(ne(n,rt(t,a)));const c=Hs(s.shape,r);return c.length>0&&(l=Mt(l,c)),ae(l,s.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VX={kernelName:Qu,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>rt(n,$e(Jn(Ze(t,"float32")),1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WX={kernelName:Uu,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>rt(n,gt(Bt(1),Jn(Ze(t,"float32"))))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HX(n,e,t,s,r,i){const o=q(n,"dy","avgPool3dGrad"),a=q(e,"input","avgPool3dGrad");let l=o,c=a,u=!1;a.rank===4&&(u=!0,l=ae(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),c=ae(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),z(l.rank===5,()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`),z(c.rank===5,()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${c.rank}.`),ri("avgPool3dGrad",r,i);const h={dy:l,input:c},d={filterSize:t,strides:s,pad:r,dimRoundingMode:i},f=re.runKernel(ug,h,d);return u?ae(f,[f.shape[1],f.shape[2],f.shape[3],f.shape[4]]):f}const qX=ie({avgPool3dGrad_:HX});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YX={kernelName:xf,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{filterSize:r,strides:i,pad:o,dimRoundingMode:a}=t;return{x:()=>qX(n,s,r,i,o,a)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jX(n,e,t,s,r){const i=q(n,"dy","avgPoolGrad"),o=q(e,"input","avgPoolGrad");z(o.rank===i.rank,()=>`Rank of input (${o.rank}) does not match rank of dy (${i.rank})`);let a=o,l=i,c=!1;o.rank===3&&(c=!0,a=ae(o,[1,o.shape[0],o.shape[1],o.shape[2]]),l=ae(i,[1,i.shape[0],i.shape[1],i.shape[2]])),z(l.rank===4,()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${l.rank}.`),z(a.rank===4,()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${a.rank}.`);const u={dy:l,input:a},h={filterSize:t,strides:s,pad:r},d=re.runKernel(cg,u,h);return c?ae(d,[d.shape[1],d.shape[2],d.shape[3]]):d}const XX=ie({avgPoolGrad_:jX});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KX={kernelName:yf,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{filterSize:r,strides:i,pad:o}=t;return{x:()=>XX(n,s,r,i,o)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JX={kernelName:bf,inputsToSave:["a","b"],gradFunc:(n,e,t)=>{const[s,r]=e,{transposeA:i,transposeB:o}=t;return!i&&!o?{a:()=>An(n,r,!1,!0),b:()=>An(s,n,!0,!1)}:!i&&o?{a:()=>An(n,r,!1,!1),b:()=>An(n,s,!0,!1)}:i&&!o?{a:()=>An(r,n,!1,!0),b:()=>An(s,n,!1,!1)}:{a:()=>An(r,n,!0,!0),b:()=>An(n,s,!0,!0)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZX={kernelName:vf,gradFunc:(n,e,t)=>{const{blockShape:s,crops:r}=t;return{x:()=>bA(n,s,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eK={kernelName:kk,gradFunc:(n,e,t)=>{const s=t,r=s.inputShape,i=s.shape,o=Array.from(i);for(let l=r.length-1;l>=0;l--)if(r[l]===i[l])o[l]=1;else if(r[l]!==1)throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${i}].`);const a=[];for(let l=0;l<o.length;l++)o[l]>1&&a.push(l);return{x:()=>Mt(n,a,!0)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tK={kernelName:Gu,gradFunc:n=>({x:()=>n.clone()})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nK={kernelName:Vu,gradFunc:n=>({x:()=>_n(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sK={kernelName:Wu,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{clipValueMin:r,clipValueMax:i}=t;return{x:()=>Br(Ko(_l(s,r),xc(s,i)),n,_n(n))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rK={kernelName:Cf,inputsToSave:["x"],gradFunc:eM.gradFunc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iK={kernelName:If,saveAllInputs:!0,gradFunc:(n,e,t)=>{const s=e.map(l=>l.shape),{axis:r}=t,i=an(r,e[0].shape)[0],o=s.map(l=>l[i]);return yi(n,o,i).map(l=>()=>l)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oK={kernelName:wf,inputsToSave:["x","filter"],gradFunc:(n,e,t)=>{const[s,r]=e,{dilations:i,strides:o,pad:a,dataFormat:l}=t;return z(ic(i),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${i}'`),{x:()=>QI(s.shape,n,r,o,a,l),filter:()=>Cw(s,n,r.shape,o,a,l)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aK={kernelName:Sf,inputsToSave:["dy","filter"],gradFunc:(n,e,t)=>{const[s,r]=e,{strides:i,pad:o,dataFormat:a,dimRoundingMode:l}=t;return{dy:()=>xl(n,r,i,o,a,1,l),filter:()=>Cw(n,s,r.shape,i,o,a,l)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lK(n,e,t,s,r){let i=n;n.rank===4&&(i=ae(n,[1,n.shape[0],n.shape[1],n.shape[2],n.shape[3]]));let o=e;o.rank===4&&(o=ae(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]])),z(i.rank===5,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${i.shape}.`),z(o.rank===5,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${o.shape}.`),z(t.length===5,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${t}.`),z(i.shape[4]===t[3],()=>`Error in conv3dDerFilter: depth of input ${i.shape[4]}) must match input depth in filter (${t[3]}.`),z(o.shape[4]===t[4],()=>`Error in conv3dDerFilter: depth of dy (${o.shape[4]}) must match output depth for filter (${t[4]}).`);const a={x:i,dy:o},l={strides:s,pad:r,filterShape:t};return re.runKernel(gg,a,l)}const cK=ie({conv3DBackpropFilter_:lK});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uK={kernelName:Ef,inputsToSave:["x","filter"],gradFunc:(n,e,t)=>{const{dilations:s,strides:r,pad:i}=t;z(ic(s),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`);const[o,a]=e;return{x:()=>dN(o.shape,n,a,r,i),filter:()=>cK(o,n,a.shape,r,i)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hK={kernelName:Hu,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>ne(ms(Yx(Ze(t,"float32"))),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dK={kernelName:qu,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>ne(jx(Ze(t,"float32")),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fK={kernelName:_f,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{axis:r,exclusive:i,reverse:o}=t;return{x:()=>{const a=ss([r],s.rank);let l=Dx(n,r,i,!o);return a!=null&&(l=Sn(l,a)),l}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pK={kernelName:Tf,inputsToSave:["x","filter"],gradFunc:(n,e,t)=>{const{dilations:s,strides:r,pad:i,dimRoundingMode:o}=t,a=s??[1,1];z(ic(a),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${a}'`);const[l,c]=e;return z(l.rank===4,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`),z(c.rank===4,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${c.rank}.`),z(l.shape[3]===c.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${c.shape[2]}.`),z(nr(r,a),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${r} and dilations '${a}'.`),ri("depthwiseConv2d",i,o),{x:()=>tR(l.shape,n,c,r,i,a,o),filter:()=>eR(l,n,c.shape,r,i,a,o)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mK={kernelName:Bf,inputsToSave:["x","filter"],gradFunc:(n,e,t)=>{const[s,r]=e,i={x:s,filter:r,dy:n},o={x:s,filter:r,dy:n};return{x:()=>re.runKernel(Rm,i,t),filter:()=>re.runKernel(Mm,o,t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gK={kernelName:ju,outputsToSave:[!0],gradFunc:(n,e)=>{const[t]=e,s={dy:n,y:t};return{x:()=>re.runKernel(_g,s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AK={kernelName:Xu,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e,s=ne(xr(ms(Jn(t))),2/Math.sqrt(Math.PI));return{x:()=>ne(n,s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yK={kernelName:Ku,outputsToSave:[!0],gradFunc:(n,e)=>{const[t]=e;return{x:()=>ne(n,t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xK={kernelName:Nf,inputsToSave:["input"],gradFunc:(n,e)=>{const[t]=e;return{input:()=>ae(n,t.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bK={kernelName:Ju,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>ne(n,xr(t))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vK={kernelName:Zu,gradFunc:n=>({x:()=>_n(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CK={kernelName:eh,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,r=jt(t.shape,s.shape);return{a:()=>{const a=rt(n,Ze(s,"float32")),l=Hs(t.shape,r);return l.length>0?ae(Mt(a,l),t.shape):a},b:()=>{let a=ne(n,Ze(t,"float32"));const l=Hs(s.shape,r);l.length>0&&(a=ae(Mt(a,l),s.shape));const c=Jn(s);return ms(rt(a,Ze(c,"float32")))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IK={kernelName:Rf,inputsToSave:["x","mean","variance","scale"],gradFunc:(n,e,t)=>{const{varianceEpsilon:s}=t,[r,i,o,a]=e,l=a??Bt(1),c=Hs(i.shape,r.shape),u=[];if(i.rank===1){for(let b=0;b<r.shape.length-1;++b)u.push(r.shape[b]);u.push(1)}const h=gt(r,i),d=ne(n,l),f=Wx($e(o,Bt(s))),p=ne(ne(ne(f,f),f),Bt(-.5));return{x:()=>i.rank===1?ae(ne(ne(n,so(ae(f,[1,1,1,i.shape[0]]),u)),l),r.shape):ae(ne(ne(n,f),l),r.shape),mean:()=>{let b=ne(ne(f,Bt(-1)),d);return i.rank===1&&(b=Mt(b,c)),ae(b,i.shape)},variance:()=>{let b=ne(ne(p,h),d);return i.rank===1&&(b=Mt(b,c)),ae(b,i.shape)},scale:()=>{const b=ne(h,f);let w=ne(n,b);return i.rank===1&&(w=Mt(w,c)),ae(w,i.shape)},offset:()=>{let b=n;return i.rank===1&&(b=Mt(b,c)),ae(b,i.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wK={kernelName:Mf,inputsToSave:["x","indices"],gradFunc:(n,e,t)=>{const[s,r]=e,{axis:i,batchDims:o}=t,a=an(i,s.shape)[0],l=(c,u,h)=>()=>{const d=c.shape,f=u.size,p=d.slice(0,a),A=p.length,m=d.slice(i,d.length).slice(1),g=m.length,x=b_(0,A),v=b_(A+1,A+1+g),b=v_([p,[f],m]),w=ae(h,b),_=ae(u,[f]),N=v_([[A],x,v]),M=Sn(w,N);let T=t1(M,_,c.shape[a]);const k=Oa(N);return T=Sn(T,k),T};if(o===1){const c=s.shape[0],u=s.split(c,0);return{x:()=>Ci(u.map((f,p)=>l(f,r.slice(p,1),n.slice(p,1))())).reshape(s.shape),indices:()=>r}}else return{x:l(s,r,n),indices:()=>r}}};function b_(n,e){const t=[];for(let s=n;s<e;++s)t.push(s);return t}function v_(n){const e=[];for(let t=0;t<n.length;++t)for(let s=0;s<n[t].length;++s)e.push(n[t][s]);return e}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SK={kernelName:th,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e;return{a:()=>_n(t),b:()=>_n(s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EK={kernelName:nh,gradFunc:n=>({x:()=>Ze(n,"float32")})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _K={kernelName:sh,gradFunc:n=>({x:()=>_n(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TK={kernelName:rh,gradFunc:n=>({x:()=>_n(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BK={kernelName:ih,gradFunc:n=>({x:()=>_n(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kK={kernelName:Ff,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{alpha:r}=t,i=ii(s,0);return{x:()=>Br(i,n,ne(n,r))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NK={kernelName:ah,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>rt(n,$e(t,1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RK={kernelName:oh,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>rt(n,Ze(t,"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MK={kernelName:Nk,inputsToSave:[],outputsToSave:[!0],gradFunc:(n,e,t)=>{const[s]=e,{axis:r}=t;return{logits:()=>{const o=xr(s);return gt(n,ne(Mt(n,r,!0),o))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DK(n,e,t,s=5,r=1,i=1,o=.5){const a={x:n,y:e,dy:t},l={depthRadius:s,bias:r,alpha:i,beta:o};return re.runKernel(Fg,a,l)}const FK=ie({localResponseNormalizationBackprop_:DK});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $K={kernelName:Uf,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,e,t)=>{const[s,r]=e,{depthRadius:i,bias:o,alpha:a,beta:l}=t;return{x:()=>FK(s,r,n,i,o,a,l)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tM(n,e,t,s){return e.rank<t.rank&&(e=ae(e,Ms(e.shape,s))),n.rank<t.rank&&(n=ae(n,Ms(n.shape,s))),{x:()=>ne(n,Ze(zi(t,e),n.dtype))}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const C_={kernelName:zf,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,e,t)=>{const s=t,{reductionIndices:r}=s,i=e[0],o=e[1],a=an(r,i.shape),l=tM(n,o,i,a);return{x:()=>l.x()}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PK={kernelName:lh,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e;return{a:()=>ne(n,Ze(_l(t,s),"float32")),b:()=>ne(n,Ze(Xd(t,s),"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LK(n,e,t,s,r,i,o){const a=q(n,"dy","maxPool3dGrad"),l=q(e,"input","maxPool3dGrad"),c=q(t,"output","maxPool3dGrad");let u=a,h=l,d=c,f=!1;l.rank===4&&(f=!0,u=ae(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]]),h=ae(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),d=ae(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]])),z(u.rank===5,()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${u.rank}.`),z(h.rank===5,()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${h.rank}.`),z(d.rank===5,()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${d.rank}.`),ri("maxPool3dGrad",i,o);const p={dy:u,input:h,output:d},A={filterSize:s,strides:r,pad:i,dimRoundingMode:o},m=re.runKernel(Pg,p,A);return f?ae(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}const OK=ie({maxPool3dGrad_:LK});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QK={kernelName:Vf,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,e,t)=>{const[s,r]=e,{filterSize:i,strides:o,pad:a,dimRoundingMode:l}=t;return{x:()=>OK(n,s,r,i,o,a,l)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UK(n,e,t,s,r,i,o){const a=q(n,"dy","maxPoolGrad"),l=q(e,"input","maxPoolGrad"),c=q(t,"output","maxPoolGrad");z(l.rank===a.rank,()=>`Rank of input (${l.rank}) does not match rank of dy (${a.rank})`),z(a.rank===4,()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${a.rank}.`),z(l.rank===4,()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${l.rank}.`),ri("maxPoolGrad",i,o);const u={dy:a,input:l,output:c},h={filterSize:s,strides:r,pad:i,dimRoundingMode:o};return re.runKernel($g,u,h)}const zK=ie({maxPoolGrad_:UK});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GK={kernelName:Gf,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,e,t)=>{const[s,r]=e,{filterSize:i,strides:o,pad:a}=t;return{x:()=>zK(n,s,r,i,o,a)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VK={kernelName:Wf,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{axis:r}=t,i=an(r,s.shape),a=$s(s.shape,i)[1],l=ye(a);return{x:()=>{const u=s.shape.slice();i.forEach(f=>{u[f]=1});const h=ae(n,u);return rt(ne(h,Ai(s.shape,"float32")),l)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WK={kernelName:Hf,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,e,t)=>{const s=t,{axis:r}=s,[i,o]=e,a=an(r,i.shape),l=tM(n,o,i,a);return{x:()=>l.x()}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HK={kernelName:ch,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e;return{a:()=>ne(n,Ze(xc(t,s),"float32")),b:()=>ne(n,Ze(ii(t,s),"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qK={kernelName:qf,inputsToSave:["x"],gradFunc:(n,e,t)=>{const s=e[0],{paddings:r}=t,i=r.map(o=>o[0]);return{x:()=>Rt(n,i,s.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YK={kernelName:uh,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,r=jt(t.shape,s.shape);return{a:()=>{const a=Hs(t.shape,r);return a.length>0?ae(Mt(n,a),t.shape):n},b:()=>{const a=ne(n,ms(xp(rt(t,s)))),l=Hs(s.shape,r);return l.length>0?ae(Mt(a,l),s.shape):a}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jK={kernelName:hh,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,r=jt(t.shape,s.shape);return{a:()=>{const a=ne(n,Ze(s,"float32")),l=Hs(t.shape,r);return l.length>0?ae(Mt(a,l),t.shape):a},b:()=>{const a=ne(n,Ze(t,"float32")),l=Hs(s.shape,r);return l.length>0?ae(Mt(a,l),s.shape):a}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const XK={kernelName:Yf,gradFunc:n=>({x:()=>ms(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KK={kernelName:Kf,inputsToSave:["indices"],gradFunc:(n,e)=>{const t=e[0];return{indices:()=>Rs(t.shape,"float32")}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JK={kernelName:Xf,gradFunc:n=>({x:()=>_n(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZK={kernelName:Jf,saveAllInputs:!0,gradFunc:(n,e,t)=>{const{axis:s}=t;return ho(n,s).map(i=>()=>i)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const I_={kernelName:Zf,inputsToSave:["x"],gradFunc:(n,e,t)=>{const s=e[0],{paddings:r}=t,i=r.map(o=>o[0]);return{x:()=>Rt(n,i,s.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eJ={kernelName:dh,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(n,e)=>{const[t,s,r]=e,i=t,o=s,a=jt(i.shape,o.shape);return{a:()=>{const u=Ze(o,"float32");let h=ne(n,ne(u,ka(i,gt(u,Bt(1)))));const d=Hs(i.shape,a);return d.length>0&&(h=Mt(h,d)),ae(h,i.shape)},b:()=>{const u=ii(i,0),h=Br(u,Gi(i),_n(i));let d=ne(n,ne(r,h));const f=Hs(o.shape,a);return f.length>0&&(d=Mt(d,f)),ae(d,o.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tJ={kernelName:ep,inputsToSave:["x","alpha"],gradFunc:(n,e)=>{const[t,s]=e,r=ii(t,0);return{x:()=>Br(r,n,ne(n,s)),alpha:()=>{let i=Br(r,_n(n),ne(n,t));const o=Hs(s.shape,n.shape);return o.length>0&&(i=Mt(i,o)),ae(i,s.shape)}}}};/**
 * @license
 * Copyright 2022 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nJ(n,e,t){const s=n.shape.slice();s[t]=1;const r=ae(e,s),i=zm(n,t,!0,!1),o=zm(n,t,!0,!0),a=ne(i,o);return ne(r,a)}function sJ(n,e,t){const s=n.shape.length,r=s-t.length,i=ss(t,s);let o=n;i!=null&&(o=Sn(n,i));const a=o.shape.slice(),c=a.splice(s-t.length,t.length).reduce((d,f)=>d*f,1);a.push(c);const u=o.reshape(a);let h=nJ(u,e,r);if(h=h.reshape(o.shape),i!=null){const d=Oa(i);h=Sn(h,d)}return h}const rJ={kernelName:tp,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{axis:r}=t;let i=[];return r==null?i=s.shape.map((o,a)=>a):typeof r=="number"?i=[r]:i=r,{x:()=>sJ(s,n,i)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iJ={kernelName:Yu,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,r=jt(t.shape,s.shape);return{a:()=>{const a=rt(n,Ze(s,"float32")),l=Hs(t.shape,r);return l.length>0?ae(Mt(a,l),t.shape):a},b:()=>{let a=ne(n,Ze(t,"float32"));const l=Hs(s.shape,r);l.length>0&&(a=ae(Mt(a,l),s.shape));const c=Jn(s);return ms(rt(a,Ze(c,"float32")))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oJ={kernelName:fh,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>rt(n,ms(Jn(t)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aJ={kernelName:mh,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e,s=ne(xc(t,6),Mh(t));return{x:()=>ne(n,Ze(s,"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lJ={kernelName:ph,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>ne(n,Ze(Mh(t),"float32"))}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cJ={kernelName:np,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>ae(n,t.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uJ={kernelName:rp,inputsToSave:["images"],gradFunc:(n,e,t)=>{const[s]=e,r={dy:n,images:s};return{images:()=>re.runKernel(Wg,r,t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hJ={kernelName:sp,inputsToSave:["images"],gradFunc:(n,e,t)=>{const[s]=e,r={dy:n,images:s};return{images:()=>re.runKernel(Vg,r,t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dJ={kernelName:ip,gradFunc:(n,e,t)=>{const{dims:s}=t,r=an(s,n.shape);return{x:()=>uo(n,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fJ={kernelName:gh,gradFunc:n=>({x:()=>_n(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pJ={kernelName:Ah,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>ms(rt(n,ne(ka(t,1.5),2)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mJ={kernelName:op,inputsToSave:["condition"],gradFunc:(n,e)=>{const[t]=e;return{condition:()=>Ze(_n(t),"float32"),t:()=>ne(n,Ze(t,n.dtype)),e:()=>ne(n,Ze(gA(t),n.dtype))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gJ={kernelName:yh,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>{const s=ii(t,Bt(0)),r=Bt(NA),i=Bt(RA),o=ne(n,i),a=ne(ne(n,r),xr(Ze(t,"float32")));return Br(s,o,a)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AJ={kernelName:Ch,outputsToSave:[!0],gradFunc:(n,e)=>{const[t]=e;return{x:()=>ne(n,ne(t,gt(Bt(1),t)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yJ={kernelName:vh,gradFunc:n=>({x:()=>_n(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xJ={kernelName:xh,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>ne(hA(Ze(t,"float32")),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bJ={kernelName:bh,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>ne(Mx(Ze(t,"float32")),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vJ={kernelName:ap,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{begin:r,size:i}=t,o=s.shape,[a,l]=kA(s,r,i),c=[];for(let u=0;u<n.rank;u++)c.push([a[u],o[u]-a[u]-l[u]]);return{x:()=>co(n,c)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CJ={kernelName:hp,outputsToSave:[!0],gradFunc:(n,e,t)=>{const[s]=e,{dim:r}=t,i=!0,o=ne(n,s);return{logits:()=>gt(o,ne(Mt(o,[r],i),s))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IJ={kernelName:Ih,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>ne(n,Tr(t))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const w_={kernelName:cp,gradFunc:(n,e,t)=>{const{blockShape:s,paddings:r}=t;return{x:()=>uA(n,s,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const S_={kernelName:up,gradFunc:(n,e,t)=>{const{axis:s}=t;return{x:()=>ps(n,s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wJ={kernelName:wh,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>rt(n,ne(yr(Ze(t,"float32")),2))}}};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SJ={kernelName:Jg,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>ne(n,ne(Ze(t,"float32"),2))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EJ={kernelName:Sh,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,r=Bt(2);return{a:()=>ne(n,ne(r,gt(t,s))),b:()=>ne(n,ne(r,gt(s,t)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _J={kernelName:kh,gradFunc:n=>({x:()=>_n(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TJ={kernelName:Eh,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,r=jt(t.shape,s.shape);return{a:()=>{let a=n;const l=Hs(t.shape,r);return l.length>0&&(a=Mt(a,l)),ae(a,t.shape)},b:()=>{let a=n;const l=Hs(s.shape,r);return l.length>0&&(a=Mt(a,l)),ae(ms(a),s.shape)}}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BJ={kernelName:lp,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,r=s.shape.slice(),{axis:i}=t;an(i,s.shape).forEach(c=>{r[c]=1});const a=ae(n,r),l=ne(a,Ai(s.shape,"float32"));return{x:()=>l}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kJ={kernelName:_h,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>rt(n,Jn(hA(t)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NJ={kernelName:Th,outputsToSave:[!0],gradFunc:(n,e)=>{const[t]=e;return{x:()=>ne(gt(Bt(1),Jn(t)),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RJ={kernelName:Bh,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{reps:r}=t;return{x:()=>{let o=_n(s);if(s.rank===1)for(let a=0;a<r[0];++a)o=$e(o,Rt(n,[a*s.shape[0]],[s.shape[0]]));else if(s.rank===2)for(let a=0;a<r[0];++a)for(let l=0;l<r[1];++l)o=$e(o,Rt(n,[a*s.shape[0],l*s.shape[1]],[s.shape[0],s.shape[1]]));else if(s.rank===3)for(let a=0;a<r[0];++a)for(let l=0;l<r[1];++l)for(let c=0;c<r[2];++c)o=$e(o,Rt(n,[a*s.shape[0],l*s.shape[1],c*s.shape[2]],[s.shape[0],s.shape[1],s.shape[2]]));else if(s.rank===4)for(let a=0;a<r[0];++a)for(let l=0;l<r[1];++l)for(let c=0;c<r[2];++c)for(let u=0;u<r[3];++u)o=$e(o,Rt(n,[a*s.shape[0],l*s.shape[1],c*s.shape[2],u*s.shape[3]],[s.shape[0],s.shape[1],s.shape[2],s.shape[3]]));else throw new Error(`Gradient for tile operation is not implemented for rank-${s.rank} tensors yet.`);return o}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MJ={kernelName:Xl,gradFunc:(n,e,t)=>{const s=t,{perm:r}=s,i=Oa(r);return{x:()=>Sn(n,i)}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DJ={kernelName:dp,gradFunc:(n,e,t)=>{const s=t,{axis:r}=s;return{value:()=>Ci(n,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FJ={kernelName:fp,inputsToSave:["segmentIds"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>$J(n,t)}}};function $J(n,e){const t=Qa(e,_n(e)),s=bp(n,t);let r=_l(e,Bt(0,"int32"));const i=s.rank-r.rank;for(let a=0;a<i;++a)r=Kn(r,a+1);r=Ko(r,Ai(s.shape,"bool"));const o=_n(s);return Br(r,s,o)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PJ={kernelName:pp,gradFunc:n=>({x:()=>_n(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LJ=[eM,FX,$X,PX,LX,OX,QX,UX,zX,GX,VX,WX,YX,KX,JX,ZX,eK,tK,nK,sK,rK,iK,aK,oK,uK,hK,dK,fK,pK,mK,iJ,gK,AK,yK,xK,bK,CK,vK,IK,wK,SK,EK,_K,TK,BK,kK,NK,RK,MK,$K,C_,C_,PK,QK,GK,VK,WK,HK,qK,YK,jK,XK,KK,JK,ZK,I_,I_,eJ,tJ,rJ,oJ,aJ,lJ,cJ,uJ,hJ,dJ,fJ,pJ,mJ,gJ,AJ,yJ,xJ,bJ,vJ,CJ,IJ,w_,w_,S_,S_,wJ,EJ,SJ,_J,TJ,BJ,kJ,NJ,RJ,MJ,DJ,FJ,PJ];for(const n of LJ)Rk(n);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Me().prototype.abs=function(){return this.throwIfDisposed(),Gs(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Me().prototype.acos=function(){return this.throwIfDisposed(),vI(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Me().prototype.acosh=function(){return this.throwIfDisposed(),CI(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Me().prototype.add=function(n){return this.throwIfDisposed(),$e(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Me().prototype.all=function(n,e){return this.throwIfDisposed(),kx(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Me().prototype.any=function(n,e){return this.throwIfDisposed(),Om(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Me().prototype.argMax=function(n){return this.throwIfDisposed(),yl(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Me().prototype.argMin=function(n){return this.throwIfDisposed(),II(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Me().prototype.asScalar=function(){return this.throwIfDisposed(),z(this.size===1,()=>"The array must have only 1 element."),ae(this,[])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Me().prototype.asType=function(n){return this.throwIfDisposed(),Ze(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Me().prototype.as1D=function(){return this.throwIfDisposed(),ae(this,[this.size])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Me().prototype.as2D=function(n,e){return this.throwIfDisposed(),ae(this,[n,e])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Me().prototype.as3D=function(n,e,t){return this.throwIfDisposed(),ae(this,[n,e,t])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Me().prototype.as4D=function(n,e,t,s){return this.throwIfDisposed(),ae(this,[n,e,t,s])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Me().prototype.as5D=function(n,e,t,s,r){return this.throwIfDisposed(),ae(this,[n,e,t,s,r])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Me().prototype.asin=function(){return this.throwIfDisposed(),wI(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Me().prototype.asinh=function(){return this.throwIfDisposed(),SI(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Me().prototype.atan=function(){return this.throwIfDisposed(),EI(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Me().prototype.atan2=function(n){return this.throwIfDisposed(),_I(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Me().prototype.atanh=function(){return this.throwIfDisposed(),TI(this)};Me().prototype.avgPool=function(n,e,t,s){return this.throwIfDisposed(),cA(this,n,e,t,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Me().prototype.batchToSpaceND=function(n,e){return this.throwIfDisposed(),uA(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Me().prototype.batchNorm=function(n,e,t,s,r){return this.throwIfDisposed(),mp(this,n,e,t,s,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Me().prototype.broadcastTo=function(n){return this.throwIfDisposed(),pu(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Me().prototype.cast=function(n){return this.throwIfDisposed(),Ze(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Me().prototype.ceil=function(){return this.throwIfDisposed(),FI(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Me().prototype.clipByValue=function(n,e){return this.throwIfDisposed(),$r(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Me().prototype.concat=function(n,e){return this.throwIfDisposed(),n instanceof cn&&(n=[n]),ps([this,...n],e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Me().prototype.conv1d=function(n,e,t,s,r,i){return this.throwIfDisposed(),Nx(this,n,e,t,s,r,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Me().prototype.conv2dTranspose=function(n,e,t,s,r){return this.throwIfDisposed(),Rx(this,n,e,t,s,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Me().prototype.conv2d=function(n,e,t,s,r,i){return this.throwIfDisposed(),xl(this,n,e,t,s,r,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Me().prototype.cos=function(){return this.throwIfDisposed(),hA(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Me().prototype.cosh=function(){return this.throwIfDisposed(),Mx(this)};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Me().prototype.cumprod=function(n,e,t){return this.throwIfDisposed(),zm(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Me().prototype.cumsum=function(n,e,t){return this.throwIfDisposed(),Dx(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Me().prototype.depthToSpace=function(n,e){return this.throwIfDisposed(),GI(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Me().prototype.depthwiseConv2d=function(n,e,t,s,r,i){return this.throwIfDisposed(),gp(this,n,e,t,s,r,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Me().prototype.dilation2d=function(n,e,t,s,r){return this.throwIfDisposed(),VI(this,n,e,t,s,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Me().prototype.divNoNan=function(n){return this.throwIfDisposed(),WI(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Me().prototype.div=function(n){return this.throwIfDisposed(),rt(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Me().prototype.dot=function(n){return this.throwIfDisposed(),HI(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Me().prototype.elu=function(){return this.throwIfDisposed(),Ap(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Me().prototype.equal=function(n){return this.throwIfDisposed(),zi(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Me().prototype.erf=function(){return this.throwIfDisposed(),Fx(this)};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Me().prototype.euclideanNorm=function(n,e){return this.throwIfDisposed(),YI(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Me().prototype.exp=function(){return this.throwIfDisposed(),xr(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Me().prototype.expandDims=function(n){return this.throwIfDisposed(),Kn(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Me().prototype.expm1=function(){return this.throwIfDisposed(),jI(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Me().prototype.fft=function(){return this.throwIfDisposed(),SA(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Me().prototype.flatten=function(){return this.throwIfDisposed(),ae(this,[this.size])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Me().prototype.floor=function(){return this.throwIfDisposed(),xp(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Me().prototype.floorDiv=function(n){return this.throwIfDisposed(),Bx(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Me().prototype.gather=function(n,e,t){return this.throwIfDisposed(),bp(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Me().prototype.greaterEqual=function(n){return this.throwIfDisposed(),_l(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Me().prototype.greater=function(n){return this.throwIfDisposed(),ii(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Me().prototype.ifft=function(){return this.throwIfDisposed(),Zd(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Me().prototype.irfft=function(){return this.throwIfDisposed(),Kx(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Me().prototype.isFinite=function(){return this.throwIfDisposed(),XI(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Me().prototype.isInf=function(){return this.throwIfDisposed(),KI(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Me().prototype.isNaN=function(){return this.throwIfDisposed(),JI(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Me().prototype.leakyRelu=function(n){return this.throwIfDisposed(),fA(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Me().prototype.lessEqual=function(n){return this.throwIfDisposed(),xc(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Me().prototype.less=function(n){return this.throwIfDisposed(),Xd(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Me().prototype.localResponseNormalization=function(n,e,t,s){return this.throwIfDisposed(),ZI(this,n,e,t,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Me().prototype.logSigmoid=function(){return this.throwIfDisposed(),ew(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Me().prototype.logSoftmax=function(n){return this.throwIfDisposed(),Lx(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Me().prototype.logSumExp=function(n,e){return this.throwIfDisposed(),mA(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Me().prototype.log=function(){return this.throwIfDisposed(),Gi(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Me().prototype.log1p=function(){return this.throwIfDisposed(),pA(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Me().prototype.logicalAnd=function(n){return this.throwIfDisposed(),Ko(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Me().prototype.logicalNot=function(){return this.throwIfDisposed(),gA(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Me().prototype.logicalOr=function(n){return this.throwIfDisposed(),Ox(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Me().prototype.logicalXor=function(n){return this.throwIfDisposed(),tw(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Me().prototype.matMul=function(n,e,t){return this.throwIfDisposed(),An(this,n,e,t)};Me().prototype.maxPool=function(n,e,t,s){return this.throwIfDisposed(),AA(this,n,e,t,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Me().prototype.max=function(n,e){return this.throwIfDisposed(),lo(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Me().prototype.maximum=function(n){return this.throwIfDisposed(),Qa(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Me().prototype.mean=function(n,e){return this.throwIfDisposed(),_s(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Me().prototype.min=function(n,e){return this.throwIfDisposed(),jd(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Me().prototype.minimum=function(n){return this.throwIfDisposed(),vl(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Me().prototype.mirrorPad=function(n,e){return this.throwIfDisposed(),yA(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Me().prototype.mod=function(n){return this.throwIfDisposed(),sw(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Me().prototype.mul=function(n){return this.throwIfDisposed(),ne(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Me().prototype.neg=function(){return this.throwIfDisposed(),ms(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Me().prototype.norm=function(n,e,t){return this.throwIfDisposed(),yp(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Me().prototype.notEqual=function(n){return this.throwIfDisposed(),Eu(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Me().prototype.oneHot=function(n,e=1,t=0){return this.throwIfDisposed(),_u(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Me().prototype.onesLike=function(){return this.throwIfDisposed(),Vi(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Me().prototype.pad=function(n,e){return this.throwIfDisposed(),co(this,n,e)};Me().prototype.pool=function(n,e,t,s,r,i){return this.throwIfDisposed(),iw(this,n,e,t,s,r,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Me().prototype.pow=function(n){return this.throwIfDisposed(),ka(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Me().prototype.prelu=function(n){return this.throwIfDisposed(),vA(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Me().prototype.prod=function(n,e){return this.throwIfDisposed(),ow(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Me().prototype.reciprocal=function(){return this.throwIfDisposed(),uw(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Me().prototype.relu=function(){return this.throwIfDisposed(),oa(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Me().prototype.relu6=function(){return this.throwIfDisposed(),Gx(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Me().prototype.reshapeAs=function(n){return this.throwIfDisposed(),ae(this,n.shape)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Me().prototype.reshape=function(n){return this.throwIfDisposed(),ae(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Me().prototype.resizeBilinear=function(n,e,t){return this.throwIfDisposed(),iR(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Me().prototype.resizeNearestNeighbor=function(n,e,t){return this.throwIfDisposed(),oR(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Me().prototype.reverse=function(n){return this.throwIfDisposed(),uo(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Me().prototype.rfft=function(){return this.throwIfDisposed(),EA(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Me().prototype.round=function(){return this.throwIfDisposed(),Vx(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Me().prototype.rsqrt=function(){return this.throwIfDisposed(),Wx(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Me().prototype.selu=function(){return this.throwIfDisposed(),Hx(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Me().prototype.separableConv2d=function(n,e,t,s,r,i){return this.throwIfDisposed(),qx(this,n,e,t,s,r,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Me().prototype.sigmoid=function(){return this.throwIfDisposed(),Tr(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Me().prototype.sign=function(){return this.throwIfDisposed(),hw(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Me().prototype.sin=function(){return this.throwIfDisposed(),Yx(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Me().prototype.sinh=function(){return this.throwIfDisposed(),jx(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Me().prototype.slice=function(n,e){return this.throwIfDisposed(),Rt(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Me().prototype.softmax=function(n){return this.throwIfDisposed(),wA(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Me().prototype.softplus=function(){return this.throwIfDisposed(),Rh(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Me().prototype.spaceToBatchND=function(n,e){return this.throwIfDisposed(),bA(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Me().prototype.split=function(n,e){return this.throwIfDisposed(),yi(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Me().prototype.sqrt=function(){return this.throwIfDisposed(),yr(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Me().prototype.square=function(){return this.throwIfDisposed(),Jn(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Me().prototype.squaredDifference=function(n){return this.throwIfDisposed(),Jx(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Me().prototype.squeeze=function(n){return this.throwIfDisposed(),Ht(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Me().prototype.stack=function(n,e){this.throwIfDisposed();const t=n instanceof cn?[this,n]:[this,...n];return Ci(t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Me().prototype.step=function(n){return this.throwIfDisposed(),Mh(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Me().prototype.stridedSlice=function(n,e,t,s,r,i,o,a){return this.throwIfDisposed(),dw(this,n,e,t,s,r,i,o,a)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Me().prototype.sub=function(n){return this.throwIfDisposed(),gt(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Me().prototype.sum=function(n,e){return this.throwIfDisposed(),Mt(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Me().prototype.tan=function(){return this.throwIfDisposed(),fw(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Me().prototype.tanh=function(){return this.throwIfDisposed(),oc(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Me().prototype.tile=function(n){return this.throwIfDisposed(),so(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Me().prototype.toBool=function(){return this.throwIfDisposed(),Ze(this,"bool")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Me().prototype.toFloat=function(){return this.throwIfDisposed(),Ze(this,"float32")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Me().prototype.toInt=function(){return this.throwIfDisposed(),Ze(this,"int32")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Me().prototype.topk=function(n,e){return this.throwIfDisposed(),gw(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Me().prototype.transpose=function(n){return this.throwIfDisposed(),Sn(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Me().prototype.unique=function(n){return this.throwIfDisposed(),Aw(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Me().prototype.unsortedSegmentSum=function(n,e){return this.throwIfDisposed(),t1(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Me().prototype.unstack=function(n){return this.throwIfDisposed(),ho(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Me().prototype.where=function(n,e){return this.throwIfDisposed(),Br(n,this,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Me().prototype.zerosLike=function(){return this.throwIfDisposed(),_n(this)};/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class ga extends Error{constructor(e){super(e),Object.setPrototypeOf(this,ga.prototype)}}class Io extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Io.prototype)}}class pe extends Error{constructor(e){super(e),Object.setPrototypeOf(this,pe.prototype)}}class xn extends Error{constructor(e){super(e),Object.setPrototypeOf(this,xn.prototype)}}class Qw extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Qw.prototype)}}/**
 * @license
 * Copyright 2022 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class nM{constructor(e){this.maxEntries=e||100,this.cache=new Map}get(e){let t;return this.cache.has(e)&&(t=this.cache.get(e),this.cache.delete(e),this.cache.set(e,t)),t}put(e,t){if(this.cache.has(e))this.cache.delete(e);else if(this.cache.size>=this.maxEntries){const s=this.cache.keys().next().value;this.cache.delete(s)}this.cache.set(e,t)}getMaxEntries(){return this.maxEntries}setMaxEntries(e){if(e<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${e}.`);if(this.maxEntries>e)for(let t=0;t<this.maxEntries-e;t++){const s=this.cache.keys().next().value;this.cache.delete(s)}this.maxEntries=e}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Bu(n,e){if(Array.isArray(n)){let t=[];for(let s=0;s<e;s++)t=t.concat(n);return t}else{const t=new Array(e);return t.fill(n),t}}function Aa(n,e){if(!n)throw new Qw(e)}function E_(n,e){let t=0;for(const s of n)s===e&&t++;return t}function gi(n){return n.length===1?n[0]:n}function Xn(n){return Array.isArray(n)?n:[n]}function el(n){const t=n.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return t[0]!=="_"?t:"private"+t}function eu(n){return n.length<=1||n.indexOf("_")===-1?n:n.replace(/[_]+(\w|$)/g,(e,t)=>t.toUpperCase())}let yo={};function Uw(n){if(n==null)return null;const e={};return e.className=n.getClassName(),e.config=n.getConfig(),e}function iC(n){if(!(n==null||typeof n!="object"))if(Array.isArray(n))n.forEach(e=>iC(e));else{const e=Object.keys(n);for(const t of e){const s=n[t];s!=null&&typeof s=="object"&&(!Array.isArray(s)&&s.type==="ndarray"&&typeof s.value=="number"?n[t]=s.value:iC(s))}}}function MA(n,e={},t={},s="object",r=!1){if(typeof n=="string"){const i=n;let o;if(i in t)o=t[i];else if(i in yo)o=yo[i];else if(o=e[i],o==null)throw new pe(`Unknown ${s}: ${n}. This may be due to one of the following reasons:
1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return o}else{const i=n;if(i.className==null||i.config==null)throw new pe(`${s}: Improper config format: ${JSON.stringify(i)}.
'className' and 'config' must set.`);const o=i.className;let a,l;if(o in t?[a,l]=t[o]:o in yo?[a,l]=yo.className:o in e&&([a,l]=e[o]),a==null)throw new pe(`Unknown ${s}: ${o}. This may be due to one of the following reasons:
1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(l!=null){const c={};for(const f of Object.keys(yo))c[f]=yo[f];for(const f of Object.keys(t))c[f]=t[f];const u=i.config;u.customObjects=c;const h=Object.assign({},yo);for(const f of Object.keys(t))yo[f]=t[f];iC(i.config);const d=l(a,i.config,t,r);return yo=Object.assign({},h),d}else{const c=Object.assign({},yo);for(const h of Object.keys(t))yo[h]=t[h];const u=new a(i.config);return yo=Object.assign({},c),u}}}function OJ(n,e){return n<e?-1:n>e?1:0}function Iy(n,e){return-1*OJ(n,e)}function Jl(n){if(n==null)return n;const e=[];for(const t of n)e.indexOf(t)===-1&&e.push(t);return e}function QJ(n){if(n==null)throw new pe(`Invalid value in obj: ${JSON.stringify(n)}`);for(const e in n)if(n.hasOwnProperty(e))return!1;return!0}function Oh(n,e,t){if(t!=null&&n.indexOf(t)<0)throw new pe(`${t} is not a valid ${e}.  Valid values are ${n} or null/undefined.`)}function zw(n,e,t=0,s=1/0){return Aa(t>=0),Aa(s>=t),Array.isArray(n)&&n.length>=t&&n.length<=s&&n.every(r=>typeof r===e)}function dr(n,e){Array.isArray(n)?(z(n.length>0,()=>`${e} is unexpectedly an empty array.`),n.forEach((t,s)=>dr(t,`element ${s+1} of ${e}`))):z(Number.isInteger(n)&&n>0,()=>`Expected ${e} to be a positive integer, but got ${sM(n)}.`)}function sM(n){return n===null?"null":Array.isArray(n)?"["+n.map(e=>sM(e)).join(",")+"]":typeof n=="string"?`"${n}"`:`${n}`}function UJ(n,e,t){let s=t!=null?t():Kr(),r;return(...o)=>{const a=t!=null?t():Kr();return a-s<e||(s=a,r=n(...o)),r}}function rM(n){return n==="relu"?"relu":n==="linear"?"linear":n==="elu"?"elu":null}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let zJ=0;function iM(){return zJ++}const wy={};function N1(n=""){return n in wy||(wy[n]=0),wy[n]+=1,n+wy[n].toString()}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const GJ=["channelsFirst","channelsLast"],VJ=["nearest","bilinear"],WJ=["valid","same","causal"],HJ=["max","avg"],qJ=["sum","mul","concat","ave"];/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const xd=new Map;function Ps(n){Oh(GJ,"DataFormat",n)}function YJ(n){Oh(VJ,"InterpolationFormat",n)}function po(n){Oh(WJ,"PaddingMode",n)}function oM(n){Oh(HJ,"PoolMode",n)}const xm=[],__="/";function mu(n,e){xm.push(n);try{const t=e();return xm.pop(),t}catch(t){throw xm.pop(),t}}function jJ(){return xm.length===0?"":xm.join(__)+__}function aM(n){if(!cM(n))throw new Error("Not a valid tensor name: '"+n+"'");return jJ()+n}function lM(n){if(!cM(n))throw new Error("Not a valid tensor name: '"+n+"'");xd.has(n)||xd.set(n,0);const e=xd.get(n);if(xd.set(n,xd.get(n)+1),e>0){const t=`${n}_${e}`;return xd.set(t,1),t}else return n}const XJ=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function cM(n){return!!n.match(XJ)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function KJ(n){return n===parseInt(n.toString(),10)}function Zl(n,e,t){e==null&&(e=0),t==null&&(t=n.length);let s=1;for(let r=e;r<t;++r)s*=n[r];return s}function ef(n){if(n.length===0)return Number.NaN;let e=Number.POSITIVE_INFINITY;for(let t=0;t<n.length;t++){const s=n[t];s<e&&(e=s)}return e}function ac(n){if(n.length===0)return Number.NaN;let e=Number.NEGATIVE_INFINITY;for(let t=0;t<n.length;t++){const s=n[t];s>e&&(e=s)}return e}function ea(n,e){if(e<n)throw new pe(`end (${e}) < begin (${n}) is forbidden.`);const t=[];for(let s=n;s<e;++s)t.push(s);return t}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let tb;function Ks(){return tb==null&&(tb=Al().epsilon()),tb}function ta(){return"channelsLast"}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function wa(n,e){return Ze(n,e)}function DA(n,e=-1){const t=n.shape.slice();return e<0&&(e=t.length+e+1),t.splice(e,0,1),ae(n,t)}function JJ(n,e){return ue(()=>{if(n.shape.length!==2)throw new pe(`repeat() expects a rank-2 tensor, but received a rank-${n.shape.length} tensor.`);const t=DA(n,1);return oC(t,[1,e,1])})}function ZJ(n){const e=[Zl(n.shape)];return ae(n,e)}function eZ(n){if(n.rank<=1)throw new pe(`batchFlatten requires a minimum rank of 2. Got rank: ${n.rank}.`);const e=[n.shape[0],Zl(n.shape,1)];return ae(n,e)}function gu(n,e,t){return ue(()=>{switch(n.rank){case 1:return CA(n,e,t);case 2:return Xx(n,[e,0],[t,n.shape[1]]);case 3:return IA(n,[e,0,0],[t,n.shape[1],n.shape[2]]);case 4:return Jd(n,[e,0,0,0],[t,n.shape[1],n.shape[2],n.shape[3]]);case 5:return Rt(n,[e,0,0,0,0],[t,n.shape[1],n.shape[2],n.shape[3],n.shape[4]]);case 6:return Rt(n,[e,0,0,0,0,0],[t,n.shape[1],n.shape[2],n.shape[3],n.shape[4],n.shape[5]]);default:throw new pe(`sliceAlongFirstAxis() received an unsupported tensor rank: ${n.rank}`)}})}function nb(n,e,t){return ue(()=>{switch(n.rank){case 1:return CA(n,e,t);case 2:return Xx(n,[0,e],[n.shape[0],t]);case 3:return IA(n,[0,0,e],[n.shape[0],n.shape[1],t]);case 4:return Jd(n,[0,0,0,e],[n.shape[0],n.shape[1],n.shape[2],t]);default:throw new pe(`sliceAlongLastAxis() received an unsupported tensor rank: ${n.rank}`)}})}function Sy(n,e,t,s){return ue(()=>{switch(n.rank){case 1:return CA(n,e,t);case 2:switch(s){case 1:return gu(n,e,t);case 2:return nb(n,e,t);default:throw new pe(`The axis is not within the rank of the tensor ${s}`)}case 3:switch(s){case 1:return gu(n,e,t);case 2:return IA(n,[0,e,0],[n.shape[0],t,n.shape[2]]);case 3:return nb(n,e,t);default:throw new pe(`The axis is not within the rank of the tensor ${s}`)}case 4:switch(s){case 1:return gu(n,e,t);case 2:return Jd(n,[0,e,0,0],[n.shape[0],t,n.shape[2],n.shape[3]]);case 3:return Jd(n,[0,0,e,0],[n.shape[0],n.shape[1],t,n.shape[3]]);case 4:return nb(n,e,t);default:throw new pe(`The axis is not within the rank of the tensor ${s}`)}default:throw new pe(`sliceAlongLastAxis() received an unsupported tensor rank: ${n.rank}`)}})}function Gw(n,e=-1){let t;return e<0&&(t=n[0].rank,t!==0?e=t:e=0),e===n[0].rank&&(e=-1),ps(n,e)}function T_(n,e){switch(n.rank){case 1:return $I([n,e]);case 2:return PI([n,e],0);case 3:return LI([n,e],0);case 4:return OI([n,e],0);default:throw new pe(`concatAlongFirstAxis() received an unsupported tensor rank: ${n.rank}`)}}function oC(n,e){if(Array.isArray(e)||(e=[e]),n.rank!==e.length)throw new pe(`The length of input n (${e.length}) does not match the number of dimensions in input x (${n.rank})`);return so(n,e)}function R1(n,e=0,t=1,s,r){return zx(n,e,t,s,r)}function Sa(n,e,t,s){if(n.rank<2||e.rank<2)throw new xn(`dot requires both inputs to be rank >= 2 but got x shape = ${n.shape} and y shape = ${e.shape}`);if(e.rank>=3){const r=n.shape.slice(-1)[0],i=e.shape.slice(-2)[0];if(r!==i)throw new xn(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${n.shape} and  y shape = ${e.shape}`)}if(n.rank===2&&e.rank===2)return eC({a:n,b:e,transposeA:!1,transposeB:!1,bias:s?aC(n.rank,s,ta()):null,activation:t});{const r=n.shape.slice(),i=r.pop();n=ae(n,[-1,i]);const o=e.shape.slice(),a=o.pop(),l=o.pop(),c=[...o,a],u=Array.from({length:e.rank},(p,A)=>A===0?e.rank-2:A<=e.rank-2?A-1:A);e=ae(Sn(e,u),[l,-1]);const h=[...r,...c];return ae(eC({a:n,b:e,transposeA:!1,transposeB:!1,bias:s?aC(n.rank,s,ta()):null,activation:t}),h)}}function uM(n,e,t){return ue(()=>(Array.isArray(e)?e=fs(e,"int32"):e=Ze(e,"int32"),bp(n,e,t)))}function FA(n){return ne(n,n)}function aC(n,e,t){const s=e.shape;if(e.rank!==1&&e.rank!==n)throw new pe(`Unexpected bias dimensions: ${e.rank}; expected it to be 1 or ${n}`);if(n===5){if(t==="channelsFirst")return s.length===1?ae(e,[1,s[0],1,1,1]):ae(e,[1,s[3],s[0],s[1],s[2]]);if(t==="channelsLast")return s.length===1?ae(e,[1,1,1,1,s[0]]):ae(e,[1].concat(s))}else if(n===4){if(t==="channelsFirst")return s.length===1?ae(e,[1,s[0],1,1]):ae(e,[1,s[2],s[0],s[1]]);if(t==="channelsLast")return s.length===1?ae(e,[1,1,1,s[0]]):ae(e,[1].concat(s))}else if(n===3){if(t==="channelsFirst")return s.length===1?ae(e,[1,s[0],1]):ae(e,[1,s[1],s[0]]);if(t==="channelsLast")return s.length===1?ae(e,[1,1,s[0]]):ae(e,[1].concat(s))}else if(n<3)return e;throw new pe(`Unsupported input rank by biasAdd: ${e.rank}`)}function la(n,e,t){return ue(()=>(t==null&&(t=ta()),Ps(t),$e(n,aC(n.rank,e,t))))}function tZ(n,e=1){if(e!==1)throw new xn(`Support for alpha values other than 1 (${e}) is not implemented yet.`);return Ap(n)}function nZ(n){return ue(()=>rt(n,$e(Gs(n),1)))}function hM(n,e,t,s){return ue(()=>bw(n,e,t,s))}function sZ(n){return ue(()=>{const e=$e(.5,ne(.2,n));return $r(e,0,1)})}function $A(n,e,t=!1){return t?n():e()}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const rZ=["fanIn","fanOut","fanAvg"],iZ=["normal","uniform","truncatedNormal"];/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function oZ(n){Oh(rZ,"FanMode",n)}function aZ(n){Oh(iZ,"Distribution",n)}class To extends Dh{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class dM extends To{apply(e,t){return Rs(e,t)}}dM.className="Zeros";He(dM);class Vw extends To{apply(e,t){return Ai(e,t)}}Vw.className="Ones";He(Vw);class fM extends To{constructor(e){if(super(),typeof e!="object")throw new pe(`Expected argument of type ConstantConfig but got ${e}`);if(e.value===void 0)throw new pe(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return ue(()=>ne(Bt(this.value),Ai(e,t)))}getConfig(){return{value:this.value}}}fM.className="Constant";He(fM);class pM extends To{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return bc(e,this.minval,this.maxval,t,this.seed)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}pM.className="RandomUniform";He(pM);class mM extends To{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32",t!=="float32"&&t!=="int32")throw new xn(`randomNormal does not support dType ${t}.`);return R1(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}mM.className="RandomNormal";He(mM);class gM extends To{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32",t!=="float32"&&t!=="int32")throw new xn(`truncatedNormal does not support dType ${t}.`);return e1(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}gM.className="TruncatedNormal";He(gM);class AM extends To{constructor(e){super(),this.gain=e.gain!=null?e.gain:1}apply(e,t){return ue(()=>{if(e.length!==2||e[0]!==e[1])throw new pe("Identity matrix initializer can only be used for 2D square matrices.");return ne(this.gain,$x(e[0]))})}getConfig(){return{gain:this.gain}}}AM.className="Identity";He(AM);function lZ(n,e="channelsLast"){let t,s;if(Ps(e),n.length===2)t=n[0],s=n[1];else if([3,4,5].indexOf(n.length)!==-1){if(e==="channelsFirst"){const r=Zl(n,2);t=n[1]*r,s=n[0]*r}else if(e==="channelsLast"){const r=Zl(n,0,n.length-2);t=n[n.length-2]*r,s=n[n.length-1]*r}}else{const r=Zl(n);t=Math.sqrt(r),s=Math.sqrt(r)}return[t,s]}class Wi extends To{constructor(e){if(super(),e.scale<0)throw new pe(`scale must be a positive float. Got: ${e.scale}`);this.scale=e.scale==null?1:e.scale,this.mode=e.mode==null?"fanIn":e.mode,oZ(this.mode),this.distribution=e.distribution==null?"normal":e.distribution,aZ(this.distribution),this.seed=e.seed}apply(e,t){const s=lZ(e),r=s[0],i=s[1];let o=this.scale;if(this.mode==="fanIn"?o/=Math.max(1,r):this.mode==="fanOut"?o/=Math.max(1,i):o/=Math.max(1,(r+i)/2),this.distribution==="normal"){const a=Math.sqrt(o);if(t=t||"float32",t!=="float32"&&t!=="int32")throw new xn(`${this.getClassName()} does not support dType ${t}.`);return e1(e,0,a,t,this.seed)}else{const a=Math.sqrt(3*o);return bc(e,-a,a,t,this.seed)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}Wi.className="VarianceScaling";He(Wi);class Ww extends Wi{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return Wi.className}}Ww.className="GlorotUniform";He(Ww);class Hw extends Wi{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return Wi.className}}Hw.className="GlorotNormal";He(Hw);class qw extends Wi{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return Wi.className}}qw.className="HeNormal";He(qw);class Yw extends Wi{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return Wi.className}}Yw.className="HeUniform";He(Yw);class jw extends Wi{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return Wi.className}}jw.className="LeCunNormal";He(jw);class Xw extends Wi{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return Wi.className}}Xw.className="LeCunUniform";He(Xw);class yM extends To{constructor(e){super(),this.DEFAULT_GAIN=1,this.ELEMENTS_WARN_SLOW=2e3,this.gain=e.gain==null?this.DEFAULT_GAIN:e.gain,this.seed=e.seed}apply(e,t){return ue(()=>{if(e.length<2)throw new xn("Shape must be at least 2D.");if(t!=="int32"&&t!=="float32"&&t!==void 0)throw new TypeError(`Unsupported data type ${t}.`);t=t;const s=ye(e.slice(0,-1)),r=e[e.length-1],i=s*r;i>this.ELEMENTS_WARN_SLOW&&console.warn(`Orthogonal initializer is being called on a matrix with more than ${this.ELEMENTS_WARN_SLOW} (${i}) elements: Slowness may result.`);const o=[Math.max(r,s),Math.min(r,s)],a=R1(o,0,1,t,this.seed),l=ww.qr(a,!1);let c=l[0];const h=l[1].flatten().stridedSlice([0],[Math.min(r,s)*Math.min(r,s)],[Math.min(r,s)+1]);return c=ne(c,h.sign()),s<r&&(c=c.transpose()),ne(Bt(this.gain),c.reshape(e))})}getConfig(){return{gain:this.gain,seed:this.seed}}}yM.className="Orthogonal";He(yM);const B_={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function k_(n,e={}){return MA(n,no.getMap().classNameMap,e,"initializer")}function Bs(n){return Uw(n)}function ws(n){if(typeof n=="string"){const e=n in B_?B_[n]:n;if(e==="GlorotNormal")return new Hw;if(e==="GlorotUniform")return new Ww;if(e==="HeNormal")return new qw;if(e==="HeUniform")return new Yw;if(e==="LeCunNormal")return new jw;if(e==="LeCunUniform")return new Xw;{const t={};return t.className=e,t.config={},k_(t)}}else return n instanceof To?n:k_(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function lC(n){return Array.isArray(n)&&Array.isArray(n[0])}function _0(n){return n.length===0?[]:Array.isArray(n[0])?n:[n]}function nn(n){let e;if(Array.isArray(n)){if(n.length!==1)throw new pe(`Expected Tensor length to be 1; got ${n.length}`);e=n[0]}else e=n;return e}function On(n){if(Array.isArray(n)&&Array.isArray(n[0])){if(n.length===1)return n=n,n[0];throw new pe(`Expected exactly 1 Shape; got ${n.length}`)}else return n}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function T0(n){let e=0;for(const t of n)t.shape.length===0?e+=1:e+=t.shape.reduce((s,r)=>s*r);return e}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const N_="Variable";class cZ{constructor(e,t="float32",s=N_,r=!0,i=null){this.dtype=t??"float32",this.shape=e.shape,this.id=iM(),s=s??N_,this.originalName=aM(s),this.name=lM(this.originalName),this.trainable_=r,this.constraint=i,this.val=yw(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),uZ(this.val,e),this.val.id!==e.id&&(this.val.assign(e),this.constraint!=null&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}}function uZ(n,e){if(n.shape.toString()!==e.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(n.shape)+" vs. "+JSON.stringify(e.shape))}function cC(n){return n.map(e=>e.read())}function Kw(n){n.forEach(e=>{e[0].write(e[1])})}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Js{constructor(e){this.dtype=e.dtype,this.shape=e.shape,e.shape!=null?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}}class Ra{constructor(e,t,s,r,i,o,a){this.dtype=e,this.shape=t,this.sourceLayer=s,this.inputs=r,this.callArgs=i,this.outputTensorIndex=a,this.id=iM(),o!=null&&(this.originalName=aM(o),this.name=lM(this.originalName)),this.rank=t.length}}let hZ=0;class M1{constructor(e,t){this.callArgs=t,this.id=hZ++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(const s of e.inboundLayers)s?.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){const e=[];for(const t of this.inboundLayers)t!=null?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let dZ=0;class vn extends Dh{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=dZ++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){const s=this.getClassName();t=el(s)+"_"+N1(s)}if(this.name=t,this.trainable_=e.trainable==null?!0:e.trainable,e.inputShape!=null||e.batchInputShape!=null){let s;if(e.batchInputShape!=null)s=e.batchInputShape;else if(e.inputShape!=null){let i=null;e.batchSize!=null&&(i=e.batchSize),s=[i].concat(e.inputShape)}this.batchInputShape=s;let r=e.dtype;r==null&&(r=e.inputDType),r==null&&(r="float32"),this.dtype=r}e.weights!=null?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(this.inboundNodes.length===0)throw new Io(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new pe(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return gi(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return gi(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new ga(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(this.inboundNodes.length===0)throw new ga(`Layer ${this.name} is not connected, no input to return.`);return gi(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(this.inboundNodes.length===0)throw new ga(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new ga(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return gi(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(e=>e())}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach(t=>t.trainable=e),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(e=>e.trainable):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(e=>!e.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){const t=Xn(e);if(this.inputSpec==null||this.inputSpec.length===0)return;const s=Xn(this.inputSpec);if(t.length!==s.length)throw new pe(`Layer ${this.name} expects ${s.length} inputs, but it received ${t.length} input tensors. Input received: ${e}`);for(let r=0;r<t.length;r++){const i=t[r],o=s[r];if(o==null)continue;const a=i.rank;if(o.ndim!=null&&a!==o.ndim)throw new pe(`Input ${r} is incompatible with layer ${this.name}: expected ndim=${o.ndim}, found ndim=${a}`);if(o.maxNDim!=null&&a>o.maxNDim)throw new pe(`Input ${r} is incompatible with layer ${this.name}: expected max_ndim=${o.maxNDim}, found ndim=${a}`);if(o.minNDim!=null&&a<o.minNDim)throw new pe(`Input ${r} is incompatible with layer ${this.name}: expected min_ndim=${o.minNDim}, found ndim=${a}.`);if(o.dtype!=null&&i.dtype!==o.dtype)throw new pe(`Input ${r} is incompatible with layer ${this.name} : expected dtype=${o.dtype}, found dtype=${i.dtype}.`);if(o.axes){const l=i.shape;for(const c in o.axes){const u=Number(c),h=o.axes[c],d=u>=0?l[u]:l[l.length+u];if(h!=null&&[h,null].indexOf(d)===-1)throw new pe(`Input ${r} is incompatible with layer ${this.name}: expected axis ${u} of input shape to have value ${h} but got shape ${l}.`)}}if(o.shape!=null)for(let l=0;l<o.shape.length;++l){const c=o.shape[l],u=i.shape[l];if(c!=null&&u!=null&&c!==u)throw new pe(`Input ${r} is incompatible with layer ${this.name}: expected shape=${o.shape}, found shape=${i.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){this._callHook!=null&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();const s=Xn(e),r=mZ(e),i=gZ(e);if(r===i)throw new pe("Arguments to apply() must be all SymbolicTensors or all Tensors");return mu(this.name,()=>{if(!this.built){this.assertInputCompatibility(e);const o=[];for(const a of Xn(e))o.push(a.shape);this.build(gi(o)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),this._refCount===null&&i&&(this._refCount=1)}if(this.assertInputCompatibility(e),i){let o=this.call(e,t);this.supportsMasking&&this.setMaskMetadata(e,o);const a=Xn(o),l=[];for(let c of a)s.indexOf(c)!==-1&&(c=c.clone()),l.push(c);if(o=gi(l),this.activityRegularizer!=null)throw new xn("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return o}else{const o=fZ(e),a=this.computeOutputShape(o);let l;const c=pZ(e);if(this.warnOnIncompatibleInputShape(Array.isArray(e)?o[0]:o),a!=null&&a.length>0&&Array.isArray(a[0])?l=a.map((u,h)=>new Ra(c,u,this,Xn(e),t,this.name,h)):l=new Ra(c,a,this,Xn(e),t,this.name),this.addInboundNode(e,l,null,null,o,a,t),this._refCount++,this.activityRegularizer!=null)throw new xn("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return l}})}warnOnIncompatibleInputShape(e){if(this.batchInputShape!=null)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach((s,r)=>{s!=null&&e[r]!=null&&e[r]!==s&&(t=!0)}),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(this.inboundNodes==null||this.inboundNodes.length===0)throw new ga(`The layer ${this.name} has never been called and thus has no defined output shape.`);const e=[];for(const t of this.inboundNodes){const s=JSON.stringify(t.outputShapes);e.indexOf(s)===-1&&e.push(s)}if(e.length===1){const t=this.inboundNodes[0].outputShapes;return Array.isArray(t)&&Array.isArray(t[0])&&t.length===1?t[0]:t}else throw new ga(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new Io(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return T0(this.weights)}build(e){this.built=!0}getWeights(e=!1){return cC(e?this.trainableWeights:this.weights)}setWeights(e){ue(()=>{const t=this.weights;if(t.length!==e.length)throw new pe(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(t.length===0)return;const s=[],r=cC(t);for(let i=0;i<r.length;++i){const o=r[i],a=t[i],l=e[i];if(!dn(o.shape,l.shape))throw new pe(`Layer weight shape ${o.shape} not compatible with provided weight shape ${l.shape}`);s.push([a,l])}Kw(s)})}addWeight(e,t,s,r,i,o,a,l){if(this._addedWeightNames.indexOf(e)!==-1)throw new pe(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),s==null&&(s="float32"),this.fastWeightInitDuringBuild&&(r=l!=null?l():ws("zeros"));const c=r.apply(t,s),u=new cZ(c,s,e,o,a);return c.dispose(),i!=null&&this.addLoss(()=>i.apply(u.read())),o==null&&(o=!0),o?this._trainableWeights.push(u):this._nonTrainableWeights.push(u),u}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){e==null||Array.isArray(e)&&e.length===0||(e=Xn(e),this._losses!==void 0&&this._losses!==null&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(t!=null)if(Array.isArray(t))t.forEach(s=>{if(s!=null)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)});else throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);return null}return t}setMaskMetadata(e,t,s){if(!this.supportsMasking)return;const r=this.computeMask(e,s),i=Xn(t),o=Xn(r);if(i.length!==o.length)throw new Error(`${this.name} outputs ${i.length} tensors but ${i.length} masks for those tensors`);for(let a=0;a<i.length;a++)i[a].kerasMask=o[a]}addInboundNode(e,t,s,r,i,o,a=null){const l=Xn(e);t=Xn(t),s=Xn(s),r=Xn(r),i=_0(i),o=_0(o);const c=[],u=[],h=[];for(const d of l)c.push(d.sourceLayer),u.push(d.nodeIndex),h.push(d.tensorIndex);new M1({outboundLayer:this,inboundLayers:c,nodeIndices:u,tensorIndices:h,inputTensors:l,outputTensors:t,inputMasks:s,outputMasks:r,inputShapes:i,outputShapes:o},a);for(let d=0;d<t.length;d++)t[d].sourceLayer=this,t[d].nodeIndex=this.inboundNodes.length-1,t[d].tensorIndex=d}getConfig(){const e={name:this.name,trainable:this.trainable};return this.batchInputShape!=null&&(e.batchInputShape=this.batchInputShape),this.dtype!=null&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach(e=>e.dispose()),this.weights.length}assertNotDisposed(){if(this._refCount===0)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(this._refCount===null)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return--this._refCount===0&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}}function fZ(n){n=Xn(n);const e=[];for(const t of n)e.push(t.shape);return gi(e)}function pZ(n){return"float32"}function xM(n,e,t){if((e==null||t!=null&&t>0)&&(e=n.sourceLayer,t=n.nodeIndex),e.inboundNodes.length===0)return[n];{const s=e.inboundNodes[t];if(s.inboundLayers.length===0)return s.inputTensors;{const r=[];for(let i=0;i<s.inboundLayers.length;i++){const o=s.inputTensors[i],a=s.inboundLayers[i],l=s.nodeIndices[i],c=xM(o,a,l);for(const u of c)r.indexOf(u)===-1&&r.push(u)}return r}}}function mZ(n){let e=!0;for(const t of Xn(n))if(!(t instanceof Ra)){e=!1;break}return e}function gZ(n){let e=!0;for(const t of Xn(n))if(t instanceof Ra){e=!1;break}return e}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class PA extends vn{constructor(e){if(super({dtype:e.dtype,name:e.name!=null?e.name:N1("input").toString()}),e.batchSize==null&&(e.batchSize=null),e.sparse==null&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,e.inputShape!=null&&e.batchInputShape!=null)throw new pe("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(t==null){if(e.inputShape==null)throw new pe("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(e.batchSize!=null)throw new pe("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const s=e.dtype||"float32";this.batchInputShape=t,this.dtype=s,this.inputSpec=[{shape:t}];const r=new Ra(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new M1({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new pe(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}PA.className="InputLayer";He(PA);function AZ(n){if(n.batchShape==null&&n.shape==null)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(n.batchShape!=null&&n.shape!=null)throw new pe("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let e=n.batchShape;n.shape!=null&&e==null&&(e=[null].concat(n.shape));let t=n.dtype;return t==null&&(t="float32"),new PA({batchInputShape:e,name:n.name,dtype:t,sparse:n.sparse}).inboundNodes[0].outputTensors[0]}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function yZ(n,e){if(n.dtype==null||n.dtype===e.dtype)return e;try{return Ze(e,n.dtype)}catch{throw new pe(`The dtype of the feed (${e.dtype}) can not be cast to the dtype of the key '${n.name}' (${n.dtype}).`)}}class Wl{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof Wl)for(const t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(e==null)return;for(const t of e)this.add(t.key,t.value)}}add(e,t,s){if(this.id2Value[e.id]==null)this.id2Value[e.id]=yZ(e,t),this.name2Id[e.name]=e.id,s!=null&&(this.id2Mask[e.id]=s);else throw new pe(`Duplicate key: name=${e.name}, id=${e.id}`);return this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return this.id2Value[e.id]!=null}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof Ra){if(this.id2Value[e.id]==null)throw new pe(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}else{const t=this.name2Id[e];if(t==null)throw new pe(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof Ra){if(this.id2Value[e.id]==null)throw new pe(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}else{const t=this.name2Id[e];if(t==null)throw new pe(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){this.id2Mask!=null&&zt(this.id2Mask)}}const B0=new nM,k0=new nM;function xZ(n){B0?.setMaxEntries(n),k0?.setMaxEntries(n)}function im(n,e,t,s){const r=t==null?!1:t.training,i=Array.isArray(n),o=i?n:[n],a=o.map(p=>p.name),l=[],c=e.names();for(const p of a)c.indexOf(p)!==-1?l.push(e.getValue(p)):l.push(null);const u=a.join(",")+"|"+e.names().sort().join(",");let h=B0.get(u),d;if(h==null){const p=bZ(o,e);h=p.sorted,d=p.recipientCounts,B0.put(u,h),k0.put(u,d)}d={},r||Object.assign(d,k0.get(u));const f=new Wl(e);for(let p=0;p<h.length;++p){const A=h[p],m=A.sourceLayer;if(m instanceof PA)continue;const g=[],x=[],v=[];let b=!1;for(const T of A.inputs){const k=f.getValue(T),B=f.getMask(T);g.push(k),x.push(B),B!=null&&(b=!0),r||(d[T.name]--,d[T.name]===0&&!e.hasKey(T)&&a.indexOf(T.name)===-1&&!k.isDisposed&&T.sourceLayer.stateful!==!0&&v.push(k))}b&&(t=t||{},t.mask=x[0]);const w=Xn(m.apply(g,t));let _=null;m.supportsMasking&&(_=m.computeMask(g,x));const N=CZ(A),M=Array.isArray(N)?N:[N];for(let T=0;T<M.length;++T){f.hasKey(M[T])||f.add(M[T],w[T],Array.isArray(_)?_[0]:_);const k=a.indexOf(M[T].name);k!==-1&&(l[k]=w[T])}r||zt(v)}return f.disposeMasks(),i?l:l[0]}function bZ(n,e){z(n!=null&&n.length>0,()=>"Expected at least one fetch, got none");let t=[],s={};if(n.length===1){const r=R_(n[0],e);t=r.sorted,s=r.recipientMap}else{const r=new Set;for(const i of n){const{sorted:o,recipientMap:a}=R_(i,e);for(const l of o)r.has(l.name)||(t.push(l),r.add(l.name));for(const l in a)s[l]==null&&(s[l]=new Set),a[l].forEach(c=>s[l].add(c))}}return{sorted:t,recipientCounts:vZ(s)}}function vZ(n){const e={};for(const t in n)e[t]=n[t].size;return e}function R_(n,e){const t=new Set,s=[],r={};for(const a of e.names())t.add(a);const i=[],o=[];for(i.push(n);i.length>0;){const a=i[i.length-1];if(t.has(a.name)){i.pop();continue}const l=o[o.length-1]===i.length-1;if(a.inputs.length===0||l)i.pop(),s.push(a),t.add(a.name),l&&o.pop();else{o.push(i.length-1);for(const c of a.inputs)r[c.name]==null&&(r[c.name]=new Set),r[c.name].add(a.name),!t.has(c.name)&&i.push(c)}}return{sorted:s,recipientMap:r}}function CZ(n){let e;if(n.sourceLayer.inboundNodes.length===1)e=n.sourceLayer.output;else{let t=null;for(let s=0;s<n.sourceLayer.inboundNodes.length;++s)for(const r of n.sourceLayer.inboundNodes[s].outputTensors)if(r.id===n.id){t=s;break}e=n.sourceLayer.getOutputAt(t)}return e}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IZ=xe();IZ.registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",()=>100,xZ);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Jw(n,e){return ue(()=>yr(Mt(ne(n,n),e,!0)))}class LA extends Dh{getConfig(){return{}}}class bM extends LA{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return ue(()=>{const t=Jw(e,this.axis),s=$r(t,0,this.maxValue);return ne(e,rt(s,$e(Ks(),t)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}bM.className="MaxNorm";He(bM);class vM extends LA{constructor(e){super(),this.defaultAxis=0,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return ue(()=>rt(e,$e(Ks(),Jw(e,this.axis))))}getConfig(){return{axis:this.axis}}}vM.className="UnitNorm";He(vM);class CM extends LA{apply(e){return oa(e)}}CM.className="NonNeg";He(CM);class IM extends LA{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=e.minValue!=null?e.minValue:this.defaultMinValue,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.rate=e.rate!=null?e.rate:this.defaultRate,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return ue(()=>{const t=Jw(e,this.axis),s=$e(ne(this.rate,$r(t,this.minValue,this.maxValue)),ne(1-this.rate,t));return ne(e,rt(s,$e(Ks(),t)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}IM.className="MinMaxNorm";He(IM);const M_={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function Zs(n){return Uw(n)}function D_(n,e={}){return MA(n,no.getMap().classNameMap,e,"constraint")}function er(n){if(n==null)return null;if(typeof n=="string"){const t={className:n in M_?M_[n]:n,config:{}};return D_(t)}else return n instanceof LA?n:D_(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */async function Uc(n){if(n==null)return;const e=[],t=[],s=[];for(const r in n){const i=n[r];if(typeof i!="number"){const o=i;e.push(o.data()),t.push(r),s.push(o)}}if(e.length>0){const r=await Promise.all(e);for(let i=0;i<r.length;++i)n[t[i]]=r[i][0];zt(s)}}function wM(n){if(n!=null)for(const e in n){const t=n[e];typeof t!="number"&&t.dispose()}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var F_;(function(n){n[n.SILENT=0]="SILENT",n[n.VERBOSE=1]="VERBOSE"})(F_||(F_={}));const wZ=125;class Gm{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}}class SZ{constructor(e,t=10){e==null&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(const t of this.callbacks)t.setParams(e)}setModel(e){for(const t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){t==null&&(t={});for(const s of this.callbacks)await s.onEpochBegin(e,t)}async onEpochEnd(e,t){t==null&&(t={});for(const s of this.callbacks)await s.onEpochEnd(e,t)}async onBatchBegin(e,t){t==null&&(t={});for(const s of this.callbacks)await s.onBatchBegin(e,t)}async onBatchEnd(e,t){t==null&&(t={});for(const s of this.callbacks)await s.onBatchEnd(e,t)}async onTrainBegin(e){e==null&&(e={});for(const t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){e==null&&(e={});for(const t of this.callbacks)await t.onTrainEnd(e)}}class EZ extends Gm{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){t==null&&(t={});const s=t.size==null?0:t.size;this.seen+=s;for(const r in t){const i=t[r];if(typeof i=="number")this.totals.hasOwnProperty(r)||(this.totals[r]=0),this.totals[r]=this.totals[r]+i*s;else{let o;r in this.totals?o=this.totals[r]:this.totals[r]=0;const a=ue(()=>$e(this.totals[r],ne(i,s)));this.totals[r]=a,o?.dispose()}}}async onEpochEnd(e,t){if(t!=null)for(const s of this.params.metrics)this.totals[s]!=null&&(typeof this.totals[s]=="number"?t[s]=this.totals[s]/this.seen:ue(()=>{const r=ne(rt(1,this.seen),this.totals[s]);t[s]=r,this.totals[s].dispose(),Xs(t[s])}))}}class _Z extends Gm{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){t==null&&(t={}),this.epoch.push(e);for(const s in t)this.history[s]==null&&(this.history[s]=[]),this.history[s].push(t[s])}async syncData(){const e=[],t=[],s=[];for(const i in this.history){const o=this.history[i];for(let a=0;a<o.length;++a)if(typeof o[a]!="number"){const l=o[a];e.push(l.data()),t.push(i),s.push(a)}}const r=await Promise.all(e);for(let i=0;i<r.length;++i)this.history[t[i]][s[i]].dispose(),this.history[t[i]][s[i]]=r[i][0]}}class TZ extends Gm{constructor(e,t){if(super(),this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||$w,this.yieldEvery=t||"auto",this.yieldEvery==="auto"&&(this.yieldEvery=wZ),this.yieldEvery==="never"&&e.onYield!=null)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");I0(this.yieldEvery)&&(this.maybeWait=UJ(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,s){const r=[];this.yield!=null&&(await Uc(s),r.push(this.yield(e,t,s))),r.push(this.nextFrameFunc()),await Promise.all(r)}async onEpochBegin(e,t){this.currentEpoch=e,this.epochBegin!=null&&(await Uc(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){const s=[];this.epochEnd!=null&&(await Uc(t),s.push(this.epochEnd(e,t))),this.yieldEvery==="epoch"&&s.push(this.nextFrameFunc()),await Promise.all(s)}async onBatchBegin(e,t){this.batchBegin!=null&&(await Uc(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){const s=[];this.batchEnd!=null&&(await Uc(t),s.push(this.batchEnd(e,t))),this.yieldEvery==="batch"?s.push(this.nextFrameFunc()):I0(this.yieldEvery)&&s.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(s)}async onTrainBegin(e){this.trainBegin!=null&&(await Uc(e),await this.trainBegin(e))}async onTrainEnd(e){this.trainEnd!=null&&(await Uc(e),await this.trainEnd(e))}}function SM(n,e){return n==null&&(n={}),n instanceof Gm?[n]:Array.isArray(n)&&n[0]instanceof Gm?n:Xn(n).map(s=>new TZ(s,e))}class bo{constructor(){}static registerCallbackConstructor(e,t){z(e>=0&&Number.isInteger(e),()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`),bo.checkForDuplicate(t),bo.constructors[e]==null&&(bo.constructors[e]=[]),bo.constructors[e].push(t)}static checkForDuplicate(e){for(const t in bo.constructors)bo.constructors[+t].forEach(r=>{if(r===e)throw new pe("Duplicate callback constructor.")})}static clear(){bo.constructors={}}static createCallbacks(e){const t=[];for(const s in bo.constructors){const r=+s;e>=r&&t.push(...bo.constructors[r])}return t.map(s=>new s)}}bo.constructors={};function EM(n,e,t,s,r,i,o,a,l){const c=new _Z,u=[new EZ,...bo.createCallbacks(e)];n!=null&&u.push(...n),u.push(c);const h=new SZ(u);return h.setParams({epochs:t,initialEpoch:s,samples:r,steps:i,batchSize:o,verbose:e,doValidation:a,metrics:l}),{callbackList:h,history:c}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function hl(n,e={},t=!1){return MA(n,no.getMap().classNameMap,e,"layer",t)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function N0(n,e){return ue(()=>{n.dtype!=="float32"&&(n=Ze(n,"float32"));const t=Mt(FA(n),e,!0),s=Nh(t.shape,Ks()),r=yr(Qa(t,s));return rt(n,r)})}function D1(n,e){return ue(()=>_s(FA(gt(e,n)),-1))}function Zw(n,e){return ue(()=>_s(Gs(gt(e,n)),-1))}function eS(n,e){return ue(()=>{const t=gt(n,e),s=$r(Gs(n),Ks(),Number.MAX_VALUE),r=Gs(rt(t,s));return ne(100,_s(r,-1))})}function BZ(n,e){return ue(()=>{const t=$r(e,Ks(),Number.MAX_VALUE),s=Gi($e(1,t)),r=$r(n,Ks(),Number.MAX_VALUE),i=Gi($e(1,r));return _s(FA(gt(s,i)),-1)})}function kZ(n,e){return ue(()=>{const t=Qa(0,gt(1,ne(n,e)));return _s(FA(t),-1)})}function NZ(n,e){return ue(()=>{const t=Qa(0,gt(1,ne(n,e)));return _s(t,-1)})}function RZ(n,e){return ue(()=>{const t=Mt(ne(n,e),-1),s=lo(ne(gt(1,n),e),-1);return Qa(0,$e(1,gt(s,t)))})}function MZ(n,e){return ue(()=>{const t=Math.log(2),s=gt(e,n),r=gt($e(s,Rh(ne(-2,s))),t);return _s(r,-1)})}function Vm(n,e,t=!1){return ue(()=>{if(t)e=wA(e);else{const s=Mt(e,e.shape.length-1,!0);e=rt(e,s)}return e=$r(e,Ks(),1-Ks()),ms(Mt(ne(Ze(n,"float32"),Gi(e)),e.shape.length-1))})}function R0(n,e,t=!1){return ue(()=>{const s=Ze(xp(ZJ(n)),"int32");e=$r(e,Ks(),1-Ks());const r=e.shape,i=ae(_u(s,r[r.length-1]),r);return Vm(i,e,t)})}function DZ(n,e){if(!dn(n.shape,e.shape))throw new pe(`logits and labels must have the same shape, but got shapes ${JSON.stringify(n.shape)} and ${JSON.stringify(e.shape)}`);return ue(()=>{const t=oa(e),s=ms(Gs(e));return $e(gt(t,ne(e,n)),pA(xr(s)))})}function F1(n,e){return ue(()=>{let t;return t=$r(e,Ks(),1-Ks()),t=Gi(rt(t,gt(1,t))),_s(DZ(n,t),-1)})}function FZ(n,e){return ue(()=>{const t=$r(n,Ks(),1),s=$r(e,Ks(),1);return Mt(ne(n,Gi(rt(t,s))),-1)})}function $Z(n,e){return ue(()=>{const t=Gi($e(Ks(),e));return _s(gt(e,ne(n,t)),-1)})}function _M(n,e){return ue(()=>{const t=N0(n,-1),s=N0(e,-1),r=ne(t,s);return ms(Mt(r,-1))})}const M0={meanSquaredError:D1,meanAbsoluteError:Zw,meanAbsolutePercentageError:eS,meanSquaredLogarithmicError:BZ,squaredHinge:kZ,hinge:NZ,categoricalHinge:RZ,logcosh:MZ,categoricalCrossentropy:Vm,sparseCategoricalCrossentropy:R0,binaryCrossentropy:F1,kullbackLeiblerDivergence:FZ,poisson:$Z,cosineProximity:_M};function sb(n){if(typeof n=="string"){if(n in M0)return M0[n];let e=`Unknown loss ${n}`;throw n.toLowerCase().includes("softmaxcrossentropy")&&(e=`Unknown loss ${n}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new pe(e)}else return n}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function TM(n,e){return ue(()=>{const t=ne(.5,Vi(e)),s=wa(ii(e,t),n.dtype);return _s(zi(n,s),-1)})}function BM(n,e){return ue(()=>wa(zi(yl(n,-1),yl(e,-1)),"float32"))}function PZ(n,e){return ue(()=>Ze(Mt(Ko(zi(n,1),zi(e,1))),"float32"))}function LZ(n,e){return ue(()=>Ze(Mt(Ko(zi(n,0),zi(e,1))),"float32"))}function OZ(n,e){return ue(()=>{const t=PZ(n,e),s=LZ(n,e),r=$e(t,s);return Ze(Br(ii(r,0),rt(t,r),0),"float32")})}function QZ(n,e){return F1(n,e)}function UZ(n,e){return n.rank===e.rank&&(n=Ht(n,[n.rank-1])),e=yl(e,-1),e.dtype!==n.dtype&&(e=Ze(e,n.dtype)),Ze(zi(n,e),"float32")}const zZ=D1,GZ=D1,VZ=Zw,WZ=Zw,HZ=eS,qZ=eS,kM=Vm,YZ=_M,NM=R0,D0={binaryAccuracy:TM,categoricalAccuracy:BM,precision:OZ,categoricalCrossentropy:kM,sparseCategoricalCrossentropy:NM,mse:zZ,MSE:GZ,mae:VZ,MAE:WZ,mape:HZ,MAPE:qZ,cosine:YZ};function jZ(n){if(typeof n=="string"&&n in D0)return D0[n];if(typeof n!="string"&&n!=null)return n;throw new pe(`Unknown metric ${n}`)}function Ey(n){if(Aa(n!==null,`Unknown LossOrMetricFn ${n}`),typeof n=="string")return n;{let e;for(const t of Object.keys(M0))if(M0[t]===n){e=t;break}if(e!==void 0)return e;for(const t of Object.keys(D0))if(D0[t]===n){e=t;break}return e!==void 0?e:n.name}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function XZ(n){const e={Adagrad:()=>qc.adagrad(.01),Adadelta:()=>qc.adadelta(1,.95,Ks()),Adam:()=>qc.adam(.001,.9,.999,Ks()),Adamax:()=>qc.adamax(.002,.9,.999,Ks(),0),RMSProp:()=>qc.rmsprop(.001,.9,0,Ks()),SGD:()=>qc.sgd(.01)};if(e.adagrad=e.Adagrad,e.adadelta=e.Adadelta,e.adam=e.Adam,e.adamax=e.Adamax,e.rmsprop=e.RMSProp,e.sgd=e.SGD,n in e)return e[n]();throw new pe(`Unknown Optimizer ${n}`)}/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const $_=1*1024*1024;function P_(n,e,t=!1){if(n==null||typeof n!="object"||Object.getPrototypeOf(n)!==Object.prototype||!uC(n))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(t){const s=JSON.stringify(n);s.length>$_&&console.warn(`User-defined metadata of model "${e}" is too large in size (length=${s.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= ${$_}.`)}}function uC(n){if(n===null)return!0;if(typeof n=="object")if(Object.getPrototypeOf(n)===Object.prototype){const e=Object.keys(n);for(const t of e)if(typeof t!="string"||!uC(n[t]))return!1;return!0}else if(Array.isArray(n)){for(const e of n)if(!uC(e))return!1;return!0}else return!1;else{const e=typeof n;return e==="string"||e==="number"||e==="boolean"}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function KZ(n,e,t,s=console.log){const r=ZZ(n),i=["Layer (type)","Input Shape","Output shape","Param #"];r?(e=e||90,t=t||[.32,.61,.89,1]):(e=e||115,t=t||[.24,.48,.7,.8,1]),t[t.length-1]<=1&&(t=t.map(u=>Math.floor(e*u)));let o;if(!r){i.push("Receives inputs"),o=[];for(const u in n.nodesByDepth)o.push(...n.nodesByDepth[u])}s("_".repeat(e)),F0(i,t,s),s("=".repeat(e));const a=n.layers;for(let u=0;u<a.length;++u)r?eee(a[u],t,s):tee(a[u],t,o,s),s((u===a.length-1?"=":"_").repeat(e));n.checkTrainableWeightsConsistency();const l=JZ(n),c=T0(n.nonTrainableWeights);s(`Total params: ${l+c}`),s(`Trainable params: ${l}`),s(`Non-trainable params: ${c}`),s("_".repeat(e))}function JZ(n){let e;return n.collectedTrainableWeights!=null?e=T0(n.collectedTrainableWeights):e=T0(n.trainableWeights),e}function ZZ(n){let e=!0;const t=[],s=[];for(const r in n.nodesByDepth)t.push(n.nodesByDepth[r]);for(const r of t){if(r.length>1||r.length===1&&r[0].inboundLayers.length>1){e=!1;break}s.push(...r)}if(e)for(const r of n.layers){let i=!1;for(const o of r.inboundNodes)if(s.indexOf(o)!==-1)if(i){e=!1;break}else i=!0;if(!e)break}return e}function F0(n,e,t=console.log){let s="";for(let r=0;r<n.length;++r)r>0&&(s=s.slice(0,s.length-1)+" "),s+=n[r],s=s.slice(0,e[r]),s+=" ".repeat(e[r]-s.length);t(s)}function eee(n,e,t){let s,r;try{r=n.inboundNodes.map(l=>JSON.stringify(l.inputShapes)).join(",")}catch{r="multiple"}try{s=JSON.stringify(n.outputShape)}catch{s="multiple"}const i=n.name,o=n.getClassName(),a=[`${i} (${o})`,r,s,n.countParams().toString()];F0(a,e,t)}function tee(n,e,t,s){let r,i;try{i=n.inboundNodes.map(h=>JSON.stringify(h.inputShapes)).join(",")}catch{i="multiple"}try{r=JSON.stringify(n.outputShape)}catch{r="multiple"}const o=[];for(const h of n.inboundNodes)if(!(t!=null&&t.length>0&&t.indexOf(h)===-1))for(let d=0;d<h.inboundLayers.length;++d){const f=h.inboundLayers[d].name,p=h.nodeIndices[d],A=h.tensorIndices[d];o.push(`${f}[${p}][${A}]`)}const a=n.name,l=n.getClassName(),c=o.length===0?"":o[0],u=[`${a} (${l})`,i,r,n.countParams().toString(),c];F0(u,e,s);for(let h=1;h<o.length;++h)F0(["","","","",o[h]],e,s)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function RM(n,e,t){return(n==="inboundNodes"||n==="outputLayers"||n==="inputLayers")&&e===0&&typeof t=="string"}function hC(n,e){if(n===null)return null;if(typeof n=="string")return eu(n);if(typeof n=="number"||typeof n=="boolean")return n;if(n instanceof Array){const t=[],s=n.length;for(let r=0;r<s;++r){const i=n[r];RM(e,r,i)?t.push(i):t.push(hC(i,e))}return t}else{const t={};for(const s of Object.keys(n)){const r=n[s];if(s==="name"&&typeof r=="string")t[s]=r;else{const i=eu(s);t[i]=hC(r,i)}}return t}}function dC(n,e){if(n==null)return null;if(typeof n=="string")return el(n);if(typeof n=="number"||typeof n=="boolean")return n;if(n instanceof Array){const t=[],s=n.length;for(let r=0;r<s;++r){const i=n[r];RM(e,r,i)?t.push(i):t.push(dC(i,e))}return t}else{const t={};for(const s of Object.keys(n)){const r=n[s],i=el(s);(s==="name"||s==="className")&&typeof r=="string"?t[i]=r:t[i]=dC(r,s)}return t}}/** @license See the LICENSE file. */const MM="4.22.0";/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const nee=n=>{const e=Object.keys(n);if(e.length===0)return!1;const t=e[0].split("/");return!isNaN(parseInt(t[t.length-1],10))};class Po extends vn{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,this.name==null){const x=this.getClassName().toLowerCase();this.name=N1(x)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],Jl(this.inputs).length!==this.inputs.length)throw new pe(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map(x=>x.name)}`);Jl(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map(x=>x.name)}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const x of this.outputs){const v=x.sourceLayer,b=x.nodeIndex,w=x.tensorIndex;this.outputLayers.push(v),this.outputLayersNodeIndices.push(b),this.outputLayersTensorIndices.push(w)}for(const x of this.inputs){const v=x.sourceLayer,b=x.nodeIndex,w=x.tensorIndex;Aa(b===0,"input layer has >1 nodes"),Aa(w===0,"input layer has >1 tensors"),this.inputLayers.push(v),this.inputLayersNodeIndices.push(b),this.inputLayersTensorIndices.push(w)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let x=0;x<this.inputLayers.length;x++){const v=this.inputLayers[x];if(!(v instanceof PA))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${x} (0-based) originates from layer type ${v.getClassName()}.`);this.inputNames.push(v.name),this.feedInputShapes.push(v.batchInputShape),this.feedInputNames.push(v.name)}for(const x of this.outputLayers)this.outputNames.push(x.name);this.internalInputShapes=this.inputs.map(x=>x.shape),this.internalOutputShapes=this.outputs.map(x=>x.shape);const t={},s={},r={},i={},o={},a=[],l=(x,v,b,w,_,N)=>{(w==null||_==null||N==null)&&(w=x.sourceLayer,_=x.nodeIndex,N=x.tensorIndex);const M=w.inboundNodes[_];if(b.indexOf(M)!==-1)throw new Io(`The tensor ${x.name} at layer "${w.name}" is part of a cycle.`);if(v.indexOf(M)!==-1)return;this.containerNodes.add(Po.nodeKey(w,_)),w.id in o||(o[w.id]=Object.keys(o).length),b.indexOf(M)===-1&&b.push(M);const T=M.inboundLayers.length;for(let k=0;k<T;k++){const B=M.inputTensors[k],L=M.inboundLayers[k],U=M.nodeIndices[k],V=M.tensorIndices[k];l(B,v,b,L,U,V)}for(v.push(M);b.indexOf(M)>=0;)b.splice(b.indexOf(M),1);a.push(M)},c=[],u=[];for(const x of this.outputs)l(x,c,u);const h=a.slice().reverse();for(const x of h){s[x.id]=x,x.id in t||(t[x.id]=0);let v=t[x.id];const b=r[x.outboundLayer.id]==null?0:r[x.outboundLayer.id];v=Math.max(v,b),r[x.outboundLayer.id]=v,i[x.outboundLayer.id]=x.outboundLayer,t[x.id]=v;for(let w=0;w<x.inboundLayers.length;w++){const _=x.inboundLayers[w],N=x.nodeIndices[w],M=_.inboundNodes[N],T=t[M.id]==null?0:t[M.id];t[M.id]=Math.max(v+1,T),s[M.id]=M}}const d={};for(const x in t){const v=t[x];v in d||(d[v]=[]),d[v].push(s[x])}const f={};for(const x in r){const v=r[x];v in f||(f[v]=[]),f[v].push(i[x])}let p=Object.keys(f).map(x=>parseInt(x,10)).sort(Iy);this.layers=[];for(const x of p){const v=f[x];v.sort((b,w)=>{const _=o[b.id],N=o[w.id];return _<N?-1:_>N?1:0});for(const b of v)b instanceof Po&&this.internalContainerRefs.push(b),this.layers.push(b)}this.layersByDepth=f,p=Object.keys(d).map(x=>parseInt(x,10)).sort(Iy);const A=this.inputs.slice(),m=[];for(const x of p)for(const v of d[x]){const b=v.outboundLayer;if(b!=null){for(const w of v.inputTensors)if(A.indexOf(w)===-1)throw new Io(`Graph disconnected: cannot obtain value for tensor ${w} at layer "${b.name}". The following previous layers were accessed without issue: ${m}`);for(const w of v.outputTensors)A.push(w);m.push(b.name)}}this.nodesByDepth=d;const g=this.layers.map(x=>x.name);for(const x of g){const v=g.filter(b=>b===x).length;if(v!==1)throw new Io(`The name "${x}" is used ${v} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new M1({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(x=>null),outputMasks:this.outputs.map(x=>null),inputShapes:this.inputs.map(x=>x.shape),outputShapes:this.outputs.map(x=>x.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(this._refCount===0)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const e={refCountAfterDispose:null,numDisposedVariables:0};if(--this._refCount===0){for(const t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(const t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach(t=>{t._trainableWeights.forEach(s=>s.trainable=e)}),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new pe("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(const t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const s of this.layers)t.push(...s.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){const s={};let r=0;const i=nee(e);i&&this.parseWeights(e);for(const a of this.layers)for(const[l,c]of a.weights.entries()){const u=i?`${c.name.split("/").slice(0,-1).join("/")+"/"}${l}`:c.originalName;if(s[u]!=null)throw new pe(`Duplicate weight name: ${u}`);s[u]=c,r++}const o=[];for(const a in e){let l=a;if(s[a]==null){const c=a.split("/");l=c.slice(0,-2).concat([c[c.length-1]]).join("/")}if(s[l]!=null)o.push([s[l],e[a]]);else if(t)throw new pe(`Provided weight data has no target variable: ${a}`);delete s[l]}if(t){const a=[];for(const l in s)a.push(l);if(a.length>0)throw new pe(`${a.length} of ${r} weights are not set: ${a}`)}Kw(o)}parseWeights(e){for(const t in Object.keys(e)){const s=t.split("/"),r=["vars","layer_checkpoint_dependencies"],i=s.map(o=>o.startsWith("_")?o.slice(1):o).filter(o=>!r.includes(o)).join("/");i!==t&&(e[i]=e[t],delete e[t])}}updatedConfig(){const e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion=`tfjs-layers ${MM}`,t.backend="TensorFlow.js",t}toJSON(e,t=!0){const s=dC(this.updatedConfig());return t?JSON.stringify(s):s}call(e,t){return ue(()=>{e=Xn(e);const s=new Wl;for(let r=0;r<this.inputs.length;++r)s.add(this.inputs[r],e[r]);return im(this.outputs,s,t)})}computeMask(e,t){return ue(()=>{e=Xn(e);let s;return t==null?s=Bu(null,e.length):s=Xn(t),this.runInternalGraph(e,s)[1]})}computeOutputShape(e){const t=_0(e);if(t.length!==this.inputLayers.length)throw new pe(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);const s={};for(let a=0;a<t.length;a++){const l=this.inputLayers[a],c=t[a],u=l.name+"_0_0";s[u]=c}const r=Object.keys(this.nodesByDepth).map(a=>parseInt(a,10)).sort(Iy);if(r.length>1)for(const a of r){const l=this.nodesByDepth[a];for(const c of l){const u=c.outboundLayer;if(this.inputLayers.map(A=>A.id).indexOf(u.id)!==-1)continue;const h=[];for(let A=0;A<c.inboundLayers.length;A++){const m=c.inboundLayers[A],g=c.nodeIndices[A],x=c.tensorIndices[A],v=`${m.name}_${g}_${x}`,b=s[v];h.push(b)}const d=u.computeOutputShape(gi(h)),f=_0(d),p=u.inboundNodes.indexOf(c);for(let A=0;A<f.length;A++){const m=`${u.name}_${p}_${A}`;s[m]=f[A]}}}const i=[],o=[];for(let a=0;a<this.outputLayers.length;a++){const l=this.outputLayers[a],c=this.outputLayersNodeIndices[a],u=this.outputLayersTensorIndices[a],h=`${l.name}_${c}_${u}`;o.push(h)}for(let a=0;a<o.length;a++){const l=o[a];Aa(l in s),i.push(s[l])}return gi(i)}runInternalGraph(e,t){t==null&&(t=Bu(null,e.length));const s={};for(let l=0;l<this.inputs.length;++l){const c=this.inputs[l],u=e[l],h=t[l];s[c.id]=[u,h]}const r=Object.keys(this.nodesByDepth).map(l=>parseInt(l,10)).sort(Iy);for(const l of r){const c=this.nodesByDepth[l];for(const u of c){const h=u.outboundLayer,d=u.inputTensors,f=u.outputTensors,p=new Array;for(const A of d)A.id in s&&p.push(s[A.id]);if(p.length===d.length){let A={},m,g,x,v;if(u.callArgs!=null&&(A=u.callArgs),p.length===1){const[b,w]=p[0];A.mask==null&&(A.mask=w),x=Xn(h.call(b,A)),v=Xn(h.computeMask(b,w)),m=[b],g=[w]}else m=p.map(b=>b[0]),g=p.map(b=>b[1]),A.mask==null&&(A.mask=g),x=Xn(h.call(m,A)),v=Xn(h.computeMask(m,g));if(h.activityRegularizer)throw new xn("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let b=0;b<f.length;++b){const w=f[b],_=x[b],N=v[b];s[w.id]=[_,N]}}}}const i=[],o=[],a=[];for(const l of this.outputs){Aa(l.id in s,`Could not compute output ${l.name} : ${l.id}`);const[c,u]=s[l.id];a.push(c.shape),i.push(c),o.push(u)}return[i,o,a]}buildNodeConversionMap(e){const t={};let s;for(const r of this.layers){s=r instanceof Po?1:0;for(let i=0;i<r.inboundNodes.length;i++){const o=Po.nodeKey(r,i);this.containerNodes.has(o)&&(t[o]=s,s+=1)}}return t}getLayer(e,t){if(t!=null)return this.findLayer(t);if(e==null)throw new pe("Provide either a layer name or layer index");if(typeof e=="number")return this.findLayer(e);for(const s of this.layers)if(s.name===e)return s;throw new pe(`No such layer: ${e}`)}findLayer(e){if(this.layers.length<=e)throw new pe(`Was asked to retrieve layer at index ${e}, but model only has ${this.layers.length} layer(s).`);return this.layers[e]}calculateLosses(){return ue(()=>{const e=[];for(const t of this.layers)for(let s=0;s<t.inboundNodes.length;++s){const r=Po.nodeKey(t,s);this.containerNodes.has(r)&&e.push(...t.calculateLosses())}return e})}getConfig(){const e={name:this.name},t=this.buildNodeConversionMap(this.layers),s=[];for(const o of this.layers){const a=o.getClassName(),l=o.getConfig(),c=[];for(let h=0;h<o.inboundNodes.length;h++){const d=o.inboundNodes[h],f=Po.nodeKey(o,h);let p={};if(this.containerNodes.has(f)){if(d.callArgs)try{JSON.stringify(d.callArgs),p=d.callArgs}catch{console.warn(`Layer ${o.name} was passed non-serializable keyword arguments: ${d.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),p={}}if(d.inboundLayers.length>0){const A=[];for(let m=0;m<d.inboundLayers.length;m++){const g=d.inboundLayers[m],x=d.nodeIndices[m],v=d.tensorIndices[m],b=Po.nodeKey(g,x);let w=t[b];w==null&&(w=0),A.push([g.name,w,v,p])}c.push(A)}}}const u={};u.name=o.name,u.className=a,u.config=l,u.inboundNodes=c,s.push(u)}e.layers=s;const r=[];for(let o=0;o<this.inputLayers.length;o++){const a=this.inputLayers[o],l=this.inputLayersNodeIndices[o],c=Po.nodeKey(a,l);if(!this.containerNodes.has(c))continue;let u=t[c];u==null&&(u=0);const h=this.inputLayersTensorIndices[o];r.push([a.name,u,h])}e.inputLayers=r;const i=[];for(let o=0;o<this.outputLayers.length;o++){const a=this.outputLayers[o],l=this.outputLayersNodeIndices[o],c=Po.nodeKey(a,l);if(!this.containerNodes.has(c))continue;let u=t[c];u==null&&(u=0);const h=this.outputLayersTensorIndices[o];i.push([a.name,u,h])}return e.outputLayers=i,e}static fromConfig(e,t,s={},r=!1){const i={},o={};function a(m,g){m.name in o?o[m.name].push(g):o[m.name]=[g]}function l(m,g){const x=[];let v;for(const b of g){const w=b[0],_=b[1],N=b[2];if(v=b[3]==null?{}:b[3],!(w in i)){a(m,g);return}const M=i[w];if(M.inboundNodes.length<=_){a(m,g);return}const T=M.inboundNodes[_];x.push(T.outputTensors[N])}x.length>0&&m.apply(gi(x),v)}function c(m){const g=m.name,x=hl(m,t.customObjects!=null?t.customObjects:{});x.setFastWeightInitDuringBuild(r),i[g]=x,m.inboundNodes.forEach(b=>{if(!(b instanceof Array))throw new pe(`Corrupted configuration, expected array for nodeData: ${b}`);a(x,b)})}const u=t.name,h=t.layers;for(const m of h)c(m);for(;!QJ(o);)for(const m of h){const g=i[m.name];if(g.name in o){const x=o[g.name];delete o[g.name];for(const v of x)l(g,v)}}const d=[],f=[],p=t.inputLayers;for(const m of p){const g=m[0],x=m[1],v=m[2];Aa(g in i);const w=i[g].inboundNodes[x].outputTensors;d.push(w[v])}const A=t.outputLayers;for(const m of A){const g=m[0],x=m[1],v=m[2];Aa(g in i);const w=i[g].inboundNodes[x].outputTensors;f.push(w[v])}return new e({inputs:d,outputs:f,name:u})}get stateful(){if(this._stateful)throw new pe("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const e of this.layers)if(e.stateful)return!0;return!1}resetStates(){ue(()=>{this.layers.forEach(e=>{e.stateful&&e.resetStates()})})}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function see(n,e,t){const s=e.length;if(n==null||Array.isArray(n)&&n.length===0)return e.map(r=>null);if(s===1)return Array.isArray(n)&&n.length===1?n:typeof n=="object"&&e[0]in n?[n[e[0]]]:[n];if(Array.isArray(n)){if(n.length!==s)throw new Error(`Provided ${t} is an array of ${n.length} element(s), but the model has ${s} outputs. Make sure a set of weights is provided for each model output.`);return n}else if(typeof n=="object"&&Object.keys(n).length>0&&typeof n[Object.keys(n)[0]]=="object"){const r=[];return e.forEach(i=>{i in n?r.push(n[i]):r.push(null)}),r}else throw new Error(`The model has multiple (${s}) outputs, so ${t} must be either an array with ${s} elements or an object with ${e} keys. Provided ${t} not understood: ${JSON.stringify(n)}`)}function DM(n,e){return see(n,e,"classWeight")}async function FM(n,e,t,s){if(t!=null){const r=ue(()=>{if(n.shape.length===1)return Ia(n);if(n.shape.length===2){if(n.shape[1]>1)return yl(n,1);if(n.shape[1]===1)return ae(n,[n.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${n.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}else throw new Error(`Unexpected rank of target (y) tensor (${n.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),i=Array.from(await r.data());zt(r);const o=[];return i.forEach(a=>{if(t[a]==null)throw new Error(`classWeight must contain all classes in the training data. The class ${a} exists in the data but not in classWeight`);o.push(t[a])}),fs(o,"float32")}else return null}function ree(n,e){return ne(n,e)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const iee=32;function $M(n,e){let t,s;const r=e;t=r.xs,s=r.ys,z(t!=null&&s!=null,()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${e}`);const i=L_("input",n.inputNames,t),o=L_("output",n.outputNames,s),a=i[0].shape[0];z(i.length===n.inputs.length,()=>`LayersModel has ${n.inputs.length} inputs, but the dataset provides ${i.length} inputs.  (Expected input keys: ${JSON.stringify(n.inputNames)})`),z(o.length===n.outputs.length,()=>`LayersModel has ${n.outputs.length} outputs, but the dataset provides ${o.length} outputs.  (Expected output keys: ${JSON.stringify(n.outputNames)})`);for(let l=0;l<i.length;l++)z(i[l].shape[0]===a,()=>`Batch size mismatch: input ${n.inputNames[l]} has ${i[l].shape[0]}; expected  ${a} based on input ${n.inputNames[0]}.`);for(let l=0;l<o.length;l++)z(o[l].shape[0]===a,()=>`Batch size mismatch: output ${n.outputNames[l]} has ${o[l].shape[0]}; expected  ${a} based on input ${n.inputNames[0]}.`);return{xs:i,ys:o}}function L_(n,e,t){if(t instanceof cn)return[t];if(Array.isArray(t))return z(t.length===e.length,()=>`Received an array of ${t.length} Tensors, but expected ${e.length} to match the ${n} keys ${e}.`),t;{const s=[];for(const r of e){if(t[r]==null)throw new pe(`The feature data generated by the dataset lacks the required ${n} key '${r}'.`);s.push(t[r])}return s}}function oee(n){if(n.length===3)throw new xn("Validation with sample weights is not implemented yet.");return{xs:n[0],ys:n[1]}}async function aee(n,e,t){const s=t.batchesPerEpoch!=null;if(z(n.optimizer!=null,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),z(t!=null,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),z(t.epochs!=null&&t.epochs>0&&Number.isInteger(t.epochs),()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${t.epochs}`),z(!s||t.batchesPerEpoch>0&&Number.isInteger(t.batchesPerEpoch),()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${t.batchesPerEpoch}`),z(t.validationSplit==null,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),n.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");n.isTraining=!0;try{const r=t.validationData!=null;let i,o;if(r)if(O_(t.validationData))z(t.validationBatches==null||t.validationBatches>0&&Number.isInteger(t.validationBatches),()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${t.validationBatches}`);else{const m=oee(t.validationData);i=m.xs,o=m.ys}const a=n.makeTrainFunction(),l=n.getDedupedMetricsNames();let c;r?c=l.slice().concat(l.map(m=>"val_"+m)):c=l.slice();const u=SM(t.callbacks,t.yieldEvery),h=t.verbose==null?1:t.verbose,{callbackList:d,history:f}=EM(u,h,t.epochs,null,null,lee(e,t),null,r,c);d.setModel(n),n.history=f,await d.onTrainBegin(),n.stopTraining_=!1;let p=t.initialEpoch==null?0:t.initialEpoch,A=await e.iterator();for(;p<t.epochs;){const m={};await d.onEpochBegin(p);let g=0,x=0;for(s||(A=await e.iterator());!s||g<t.batchesPerEpoch;){const v=await A.next();if(s&&v.done){console.warn(`You provided \`batchesPerEpoch\` as ${t.batchesPerEpoch}, but your dataset iterator ran out of data after ${g} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, ${t.batchesPerEpoch*t.epochs} batches). You may need to use the repeat() function when building your dataset.`);break}if(v.value!=null){const{xs:b,ys:w}=$M(n,v.value),_={};_.batch=x,_.size=b[0].shape[0],await d.onBatchBegin(x,_);const N=[];if(t.classWeight!=null){const k=DM(t.classWeight,n.outputNames);for(let B=0;B<k.length;++B)N.push(await FM(w[B],null,k[B]))}const M=b.concat(w).concat(N),T=a(M);zt(M);for(let k=0;k<l.length;++k){const B=l[k],L=T[k];_[B]=L,Xs(L)}await d.onBatchEnd(x,_),wM(_),x++,g++}if(s?g>=t.batchesPerEpoch:v.done){if(r){let b;O_(t.validationData)?b=Xn(await n.evaluateDataset(t.validationData,{batches:t.validationBatches})):b=Xn(n.evaluate(i,o,{batchSize:t.validationBatchSize==null?iee:t.validationBatchSize,verbose:0}));for(let w=0;w<n.metricsNames.length;++w)m[`val_${n.metricsNames[w]}`]=b[w]}break}if(n.stopTraining_)break}if(await d.onEpochEnd(p,m),p++,n.stopTraining_)break}return await d.onTrainEnd(),await n.history.syncData(),n.history}finally{n.isTraining=!1}}function lee(n,e){let t=null;return e.batchesPerEpoch!=null?t=e.batchesPerEpoch:Number.isFinite(n.size)&&(t=n.size),t}function O_(n){return typeof n.iterator=="function"}function cee(n){return typeof n.next=="function"}async function uee(n,e,t){t=t||{};const s=t.batches!=null,r=n.testFunction;let i=[];if(t.verbose>0)throw new xn("Verbose mode is not implemented yet.");z(!s||t.batches>0&&Number.isInteger(t.batches),()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(t.batches)}`);const o=cee(e)?e:await e.iterator();let a=0,l=0;for(;!s||l<t.batches;){const c=await o.next();if(i=ue(()=>{if(c.value){const{xs:u,ys:h}=$M(n,c.value),d=u.concat(h),f=ue(()=>r(d));if(zt(d),l===0)for(let A=0;A<f.length;++A)i.push(Bt(0));const p=d[0].shape[0];for(let A=0;A<f.length;++A){const m=f[A],g=i[A];i[A]=ue(()=>$e(i[A],ne(p,m))),l>0&&zt(g)}zt(f),a+=p,++l}return i}),c.done){s&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${t.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let c=0;c<i.length;++c){const u=i[c];i[c]=rt(i[c],a),zt(u)}return gi(i)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function rb(n){z(n>0&&Number.isInteger(n),()=>`batchSize is required to be a positive integer, but got ${n}`)}function qp(n,e,t){return n==null?[null]:Array.isArray(n)?n.map(s=>gu(s,e,t-e)):gu(n,e,t-e)}function fC(n,e){return ue(()=>n==null?null:Array.isArray(n)?n.map(t=>fC(t,e)):uM(n,e.dtype==="int32"?e:Ze(e,"int32")))}function ib(n,e){const t=[];let s=0,r=null;for(;s<n;)r=s+e,r>=n&&(r=n),t.push([s,r]),s=r;return t}function PM(n){const e=[];n instanceof cn&&(n=[n]);for(let t=0;t<n.length;++t){const s=n[t];if(s.rank===1)e.push(DA(s,1));else{if(s.rank===0)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");e.push(s)}}return e}function $o(n,e){if(n==null)return;const t=[];if(e instanceof cn)t.push(e.id);else if(Array.isArray(e))e.forEach(r=>t.push(r.id));else if(e!=null)for(const r in e){const i=e[r];t.push(i.id)}const s=[];if(n instanceof cn)t.indexOf(n.id)===-1&&s.push(n);else if(Array.isArray(n))n.forEach(r=>{t.indexOf(r.id)===-1&&s.push(r)});else if(n!=null)for(const r in n){const i=n[r];t.indexOf(i.id)===-1&&s.push(i)}s.forEach(r=>{r.isDisposed||r.dispose()})}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function hee(n){return n instanceof cn}function pC(n){return Array.isArray(n)}function Q_(n){return!hee(n)&&!pC(n)}function U_(n,e,t,s=!0,r=""){if(e==null||e.length===0){if(n!=null){let o=!1;if(pC(n)&&n.length>0)o=!0;else if(Q_(n)){for(const a in n)if(n.hasOwnProperty(a)){o=!0;break}}else o=!0;if(o)throw new pe(`Error when checking model ${r} expected no data, but got ${n}`)}return[]}if(n==null)return e.map(o=>null);let i;if(Q_(n)){n=n,i=[];for(const o of e){if(n[o]==null)throw new pe(`No data provided for "${o}". Need data for each key in: ${e}`);i.push(n[o])}}else if(pC(n)){if(n=n,n.length!==e.length)throw new pe(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${e.length} Tensor(s), but instead got the following list of Tensor(s): ${n}`);i=n}else{if(n=n,e.length>1)throw new pe(`The model ${r} expects ${e.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${n.shape}`);i=[n]}if(i=PM(i),t!=null)for(let o=0;o<e.length;++o){if(t[o]==null)continue;const a=i[o];if(a.shape.length!==t[o].length)throw new pe(`Error when checking ${r}: expected ${e[o]} to have ${t[o].length} dimension(s). but got array with shape ${a.shape}`);for(let l=0;l<t[o].length;++l){if(l===0&&!s)continue;const c=a.shape[l],u=t[o][l];if(u!=null&&u>=0&&c!==u)throw new pe(`${r} expected a batch of elements where each example has shape [${t[o].slice(1,t[o].length)}] (i.e.,tensor shape [*,${t[o].slice(1,t[o].length)}]) but the ${r} received an input with ${a.shape[0]} examples, each with shape [${a.shape.slice(1,a.shape.length)}] (tensor shape [${a.shape}])`)}}return i}function dee(n,e,t){const s=Jl(n.map(i=>i.shape[0]));s.sort();const r=Jl(e.map(i=>i.shape[0]));if(r.sort(),s.length>1)throw new pe(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(n.map(i=>i.shape))}`);if(r.length>1)throw new pe(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map(i=>i.shape))}`);if(s.length>0&&r.length>0&&!dn(s,r))throw new pe(`Input Tensors should have the same number of samples as target Tensors. Found ${s[0]} input sample(s) and ${r[0]} target sample(s).`)}function fee(n,e,t){const s=[D1,F1,Vm];for(let r=0;r<n.length;++r){const i=n[r],o=e[r],a=t[r];if(o!=null){if(o===Vm&&i.shape[i.shape.length-1]===1)throw new pe(`You are passing a target array of shape ${i.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(s.indexOf(o)!==-1){const l=i.shape.slice(1),c=a.slice(1);for(let u=0;u<l.length;++u){const h=l[u],d=c[u];if(d!=null&&h!==d)throw new pe(`A target Tensor with shape ${i.shape} was passed for an output of shape ${a}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}function z_(n,e,t,s=!0,r=""){let i;if(Array.isArray(n)){if(n.length!==e.length)throw new pe(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${e.length} Tensor(s), but instead got ${n.length} Tensors(s).`);i=n}else{if(e.length>1)throw new pe(`The model expects ${e.length} ${r} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(n.shape)}.`);i=[n]}if(t!=null)for(let o=0;o<e.length;++o){if(t[o]==null)continue;const a=i[o];if(a.shape.length!==t[o].length)throw new pe(`Error when checking ${r}: expected ${e[o]} to have ${t[o].length} dimension(s), but got array with shape ${JSON.stringify(a.shape)}`);for(let l=0;l<t[o].length;++l){if(l===0&&!s)continue;const c=a.shape[l],u=t[o][l];if(u!=null&&u!==c)throw new pe(`Error when checking ${r}: expected ${e[o]} to have shape ${JSON.stringify(t[o])} but got array with shape ${JSON.stringify(a.shape)}.`)}}}function pee(n,e){if(n==null||Array.isArray(n)&&n.length===0)return e.map(s=>[]);let t;if(typeof n=="string"||typeof n=="function")t=[n];else if(Array.isArray(n)||typeof n=="object")t=n;else throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${n}`);if(Array.isArray(t))return e.map(s=>t);{const s=[];for(const r of e){let i=t.hasOwnProperty(r)?t[r]:[];Array.isArray(i)||(i=[i]),s.push(i)}return s}}const mee="layers-model";class $d extends Po{constructor(e){super(e),this.isTraining=!1}summary(e,t,s=console.log){if(!this.built)throw new pe("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");KZ(this,e,t,s)}compile(e){if(e.loss==null&&(e.loss=[]),this.loss=e.loss,typeof e.optimizer=="string")this.optimizer_=XZ(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof Bl))throw new pe("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(!Array.isArray(e.loss)&&typeof e.loss!="string"&&typeof e.loss!="function"){e.loss=e.loss;for(const o in e.loss)if(this.outputNames.indexOf(o)===-1)throw new pe(`Unknown entry in loss dictionary: "${o}". Only expected the following keys: ${this.outputNames}`);for(const o of this.outputNames)e.loss[o]==null&&console.warn(`Output "${o}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${o} during training`),t.push(sb(e.loss[o]))}else if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new pe(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);t=e.loss.map(a=>sb(a))}else{const o=sb(e.loss);this.outputs.forEach(a=>{t.push(o)})}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let o=0;o<this.outputs.length;++o){const a=this.internalOutputShapes[o],l=this.outputNames[o];this.feedOutputNames.push(l),this.feedOutputShapes.push(a),this.feedLossFns.push(this.lossFunctions[o])}const s=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],mu("loss",()=>{for(let o=0;o<this.outputs.length;++o){if(s.indexOf(o)!==-1)continue;const a=this.lossFunctions[o];this.outputs.length>1&&(this.metricsTensors.push([a,o]),this.metricsNames.push(this.outputNames[o]+"_loss"))}});const r=pee(e.metrics,this.outputNames),i=(o,a,l)=>{this.outputNames.length>1&&(a=this.outputNames[o]+"_"+a),this.metricsNames.push(a),this.metricsTensors.push([l,o])};mu("metric",()=>{for(let o=0;o<this.outputs.length;++o){if(s.indexOf(o)!==-1)continue;const a=r[o];(c=>{let h,d,f;for(const p of c){if(typeof p=="string"&&["accuracy","acc","crossentropy","ce"].indexOf(p)!==-1){const m=this.internalOutputShapes[o];m[m.length-1]===1||this.lossFunctions[o]===F1?["accuracy","acc"].indexOf(p)!==-1?d=TM:["crossentropy","ce"].indexOf(p)!==-1&&(d=QZ):this.lossFunctions[o]===R0?["accuracy","acc"].indexOf(p)!==-1?d=UZ:["crossentropy","ce"].indexOf(p)!==-1&&(d=NM):["accuracy","acc"].indexOf(p)!==-1?d=BM:["crossentropy","ce"].indexOf(p)!==-1&&(d=kM);let g;["accuracy","acc"].indexOf(p)!==-1?g="acc":["crossentropy","ce"].indexOf(p)!==-1&&(g="ce"),f=d,h=""+g}else f=jZ(p),h=""+Ey(p);let A;mu(h,()=>{A=f}),i(o,h,A)}})(a)}}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){this.collectedTrainableWeights!=null&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,s={}){const r=s.batchSize==null?32:s.batchSize;rb(r);const o=this.standardizeUserDataXY(e,t,!0,r);try{const a=o[0].concat(o[1]);this.makeTestFunction();const l=this.testFunction,c=this.testLoop(l,a,r,s.verbose,s.steps);return gi(c)}finally{$o(o[0],e),$o(o[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),uee(this,e,t)}checkNumSamples(e,t,s,r="steps"){let i;if(s!=null){if(i=null,t!=null)throw new pe(`If ${r} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else if(e!=null)Array.isArray(e)?i=e[0].shape[0]:i=e.shape[0];else throw new pe(`Either the input data should have a defined shape, or ${r} shoud be specified.`);return i}execute(e,t){if(Array.isArray(t)&&t.length===0)throw new pe("`outputs` is an empty Array, which is not allowed.");const s=Array.isArray(t),r=s?t:[t],i=this.retrieveSymbolicTensors(r),o=new Wl;if(e instanceof cn&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new pe(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let l=0;l<this.inputs.length;++l)o.add(this.inputs[l],e[l])}else for(const l of this.inputs){const c=e[l.name];if(c==null)throw new pe(`No value is provided for the model's input ${l.name}`);o.add(l,c)}const a=im(i,o);return s?a:a[0]}retrieveSymbolicTensors(e){const t=Bu(null,e.length);let s=e.length;for(const r of this.layers){const i=Array.isArray(r.output)?r.output:[r.output],o=i.map(a=>a.name);for(let a=0;a<e.length;++a){const l=o.indexOf(e[a]);if(l!==-1&&(t[a]=i[l],s--),s===0)break}if(s===0)break}if(s>0){const r=[];throw t.forEach((i,o)=>{i==null&&r.push(e[o])}),new pe(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(r)}`)}return t}predictLoop(e,t=32,s=!1){return ue(()=>{const r=this.checkNumSamples(e);if(s)throw new xn("Verbose predictLoop() is not implemented yet.");const i=ib(r,t),o=this.outputs.map(a=>[]);for(let a=0;a<i.length;++a)ue(()=>{const c=i[a][0],u=i[a][1],h=qp(e,c,u),d=[];if(Array.isArray(h))for(let p=0;p<h.length;++p)d.push({key:this.inputs[p],value:h[p]});else d.push({key:this.inputs[0],value:h});const f=new Wl(d);return im(this.outputs,f)}).forEach((c,u)=>o[u].push(c));return gi(o.map(a=>ps(a,0)))})}predict(e,t={}){const s=PM(e);z_(s,this.inputNames,this.feedInputShapes,!1);try{const r=t.batchSize==null?32:t.batchSize;return rb(r),this.predictLoop(s,r)}finally{$o(s,e)}}predictOnBatch(e){z_(e,this.inputNames,this.feedInputShapes,!0);const t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,s=!0,r){if(this.optimizer_==null)throw new Io("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const i=[];for(let o=0;o<this.feedOutputShapes.length;++o){const a=this.feedOutputShapes[o];this.feedLossFns[o]===R0?i.push(a.slice(0,a.length-1).concat([1])):i.push(a)}if(e=U_(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=U_(t,this.feedOutputNames,i,!1,"target"),dee(e,t),fee(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&r!=null&&r>0&&e[0].shape[0]%r!==0)throw new pe(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${r}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,s,r,i=!0,o){const[a,l]=this.standardizeUserDataXY(e,t,i,o);if(s!=null)throw new Error("sample weight is not supported yet.");let c=null;if(r!=null){const u=DM(r,this.outputNames);c=[];for(let h=0;h<u.length;++h)c.push(await FM(l[h],null,u[h]))}return[a,l,c]}testLoop(e,t,s,r=0,i){return ue(()=>{const o=this.checkNumSamples(t,s,i,"steps"),a=[];if(r>0)throw new xn("Verbose mode is not implemented yet.");if(i!=null)throw new xn("steps mode in testLoop() is not implemented yet");{const l=ib(o,s),c=fs(ea(0,o));for(let u=0;u<l.length;++u){const h=l[u][0],d=l[u][1],f=gu(c,h,d-h),p=fC(t,f),A=e(p);if(u===0)for(let m=0;m<A.length;++m)a.push(Bt(0));for(let m=0;m<A.length;++m){const g=A[m];a[m]=$e(a[m],ne(d-h,g))}}for(let u=0;u<a.length;++u)a[u]=rt(a[u],o)}return a})}getDedupedMetricsNames(){const e=this.metricsNames,t=[];for(let s=0;s<e.length;++s){const r=e[s];let i=r;if(E_(e,r)>1){const o=E_(e.slice(0,s),r);i+=`_${o}`}t.push(i)}return t}makeTrainFunction(){return e=>{const t=[],s=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),i=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+this.outputs.length*2),o=[],a=()=>{const h=[];for(let A=0;A<this.inputs.length;++A)h.push({key:this.inputs[A],value:s[A]});const d=new Wl(h),f=im(this.outputs,d,{training:!0});let p;for(let A=0;A<this.lossFunctions.length;++A){const m=this.lossFunctions[A];let g=m(r[A],f[A]);i[A]!=null&&(g=ree(g,i[A]));const x=_s(g);t.push(x),A===0?p=g:p=$e(p,g)}for(let A=0;A<this.metricsTensors.length;++A){let m;if(this.outputs.length>1&&A<this.outputs.length)m=t[A];else{const g=this.metricsTensors[A][0],x=this.metricsTensors[A][1];m=_s(g(r[x],f[x]))}Xs(m),o.push(m)}return p=_s(p),this.calculateLosses().forEach(A=>{p=$e(p,A)}),p},l=this.collectedTrainableWeights.map(h=>h.read());return[this.optimizer_.minimize(a,!0,l)].concat(o)}}makeTestFunction(){this.testFunction=e=>ue(()=>{const t=[];let s;const r=e.slice(0,this.inputs.length),i=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),o=[];for(let c=0;c<this.inputs.length;++c)o.push({key:this.inputs[c],value:r[c]});const a=new Wl(o),l=im(this.outputs,a);for(let c=0;c<this.lossFunctions.length;++c){const u=this.lossFunctions[c],h=_s(u(i[c],l[c]));c===0?s=h:s=$e(s,h),t.push(s)}for(let c=0;c<this.metricsTensors.length;++c){const u=this.metricsTensors[c][0],h=this.metricsTensors[c][1],d=_s(u(i[h],l[h]));t.push(d)}return t})}async fit(e,t,s={}){if(this.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");this.isTraining=!0;let r,i,o,a,l,c,u,h,d;try{const f=s.batchSize==null?32:s.batchSize;rb(f);const A=await this.standardizeUserData(e,t,s.sampleWeight,s.classWeight,!1,f);r=A[0],i=A[1],d=A[2];let m=!1,g;if(s.validationData!=null&&s.validationData.length>0){if(m=!0,s.validationData.length===2)l=s.validationData[0],c=s.validationData[1];else throw s.validationData.length===3?new xn("validationData including sample weights is not supported yet."):new pe(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${s.validationData} is invalid.`);const k=await this.standardizeUserData(l,c,null,null,!0,f);u=k[0],h=k[1],g=u.concat(h)}else if(s.validationSplit!=null&&s.validationSplit>0&&s.validationSplit<1){m=!0;const T=Math.floor(r[0].shape[0]*(1-s.validationSplit)),k=r[0].shape[0];u=qp(r,T,k),o=r,r=qp(r,0,T),h=qp(i,T,k),a=i,i=qp(i,0,T),g=u.concat(h)}else s.validationSteps!=null&&(m=!0);const x=r.concat(i).concat(d);this.checkTrainableWeightsConsistency();const v=this.makeTrainFunction(),b=this.getDedupedMetricsNames();let w,_;m?(this.makeTestFunction(),w=this.testFunction,_=b.slice().concat(b.map(T=>"val_"+T))):(w=null,g=[],_=b.slice());const N=SM(s.callbacks,s.yieldEvery);return await this.fitLoop(v,x,b,f,s.epochs,s.verbose,N,w,g,s.shuffle,_,s.initialEpoch,null,null)}finally{this.isTraining=!1,$o(r,e),$o(i,t),$o(o,e),$o(a,t),$o(u,l),$o(h,c),d!=null&&zt(d)}}async fitLoop(e,t,s,r,i,o,a,l,c,u,h,d,f,p){r==null&&(r=32),i==null&&(i=1),u==null&&(u=!0),d==null&&(d=0);let A=!1;if(l!=null&&c!=null&&(A=!0),p!=null&&(A=!0,f==null))throw new pe("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const m=this.checkNumSamples(t,r,f,"steps_per_epoch");let g;m!=null&&(g=ea(0,m)),o==null&&(o=1);const{callbackList:x,history:v}=EM(a,o,i,d,m,f,r,A,h);x.setModel(this),this.history=v,await x.onTrainBegin(),this.stopTraining_=!1;for(let b=d;b<i;++b){await x.onEpochBegin(b);const w={};if(f!=null)throw new xn("stepsPerEpoch mode is not implemented yet.");{if(u==="batch")throw new xn("batch shuffling is not implemneted yet");u&&lI(g);const _=fs(g),N=ib(m,r);for(let M=0;M<N.length;++M){const T={};if(await x.onBatchBegin(M,T),ue(()=>{const k=N[M][0],B=N[M][1],L=gu(_,k,B-k);T.batch=M,T.size=B-k;const U=fC(t,L),V=e(U);for(let W=0;W<s.length;++W){const H=s[W],ee=V[W];T[H]=ee,Xs(ee)}if(M===N.length-1&&A){const W=this.testLoop(l,c,r);for(let H=0;H<s.length;++H){const ee=s[H],K=W[H];Xs(K),w["val_"+ee]=K}}}),await x.onBatchEnd(M,T),wM(T),this.stopTraining_)break}_.dispose()}if(await x.onEpochEnd(b,w),this.stopTraining_)break}return await x.onTrainEnd(),await this.history.syncData(),this.history}async fitDataset(e,t){return aee(this,e,t)}async trainOnBatch(e,t){const s=await this.standardizeUserData(e,t),r=s[0],i=s[1],a=this.makeTrainFunction()(r.concat(i)),l=[];for(const c of a){const u=await c.data();l.push(u[0])}return zt(a),$o(s[0],e),$o(s[1],t),gi(l)}getNamedWeights(e){const t=[],s=e!=null&&e.trainableOnly,r=s?this.trainableWeights:this.weights,i=this.getWeights(s);for(let o=0;o<r.length;++o)s&&!r[o].trainable||t.push({name:r[o].originalName,tensor:i[o]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(e.refCountAfterDispose===0&&this.optimizer!=null&&this.isOptimizerOwned){const t=Hv().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-Hv().numTensors}return e}getLossIdentifiers(){let e;if(typeof this.loss=="string")e=el(this.loss);else if(Array.isArray(this.loss)){for(const t of this.loss)if(typeof t!="string")throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map(t=>el(t))}else{const t=Object.keys(this.loss);e={};const s=this.loss;for(const r of t)if(typeof s[r]=="string")e[r]=el(s[r]);else throw new Error("Serialization of non-string loss is not supported.")}return e}getMetricIdentifiers(){if(typeof this.metrics=="string"||typeof this.metrics=="function")return[el(Ey(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(e=>el(Ey(e)));{const e={};for(const t in this.metrics)e[t]=el(Ey(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(e.weighted_metrics!=null)throw new Error("Loading weight_metrics is not supported yet.");if(e.loss_weights!=null)throw new Error("Loading loss_weights is not supported yet.");if(e.sample_weight_mode!=null)throw new Error("Loading sample_weight_mode is not supported yet.");const t=hC(e.optimizer_config),s=hl(t);let r;if(typeof e.loss=="string")r=eu(e.loss);else if(Array.isArray(e.loss))r=e.loss.map(o=>eu(o));else if(e.loss!=null){r={};for(const o in e.loss)r[o]=eu(e.loss[o])}let i;if(Array.isArray(e.metrics))i=e.metrics.map(o=>eu(o));else if(e.metrics!=null){i={};for(const o in e.metrics)i[o]=eu(e.metrics[o])}this.compile({loss:r,metrics:i,optimizer:s})}async save(e,t){if(typeof e=="string"){const c=eN(e);if(c.length===0)throw new pe(`Cannot find any save handlers for URL '${e}'`);if(c.length>1)throw new pe(`Found more than one (${c.length}) save handlers for URL '${e}'`);e=c[0]}if(e.save==null)throw new pe("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const s=await qv(this.getNamedWeights(t)),a={modelTopology:this.toJSON(null,!1),format:mee,generatedBy:`TensorFlow.js tfjs-layers v${MM}`,convertedBy:null};if((t==null?!1:t.includeOptimizer)&&this.optimizer!=null){a.trainingConfig=this.getTrainingConfig();const c="optimizer",{data:u,specs:h}=await qv(await this.optimizer.getWeights(),c);s.specs.push(...h),s.data=Kk([s.data,u])}return this.userDefinedMetadata!=null&&(P_(this.userDefinedMetadata,this.name,!0),a.userDefinedMetadata=this.userDefinedMetadata),a.weightData=s.data,a.weightSpecs=s.specs,e.save(a)}setUserDefinedMetadata(e){P_(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}}$d.className="Model";He($d);class LM extends $d{}LM.className="Functional";He(LM);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Wm extends $d{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=e.name!=null?e.name:N1("sequential_"),e.layers!=null)for(const t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some(s=>s<0))throw new pe(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){const t=e instanceof Wm||e instanceof $d;let s;if(t){if(s=e,s.outputs.length!==1)throw new pe("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(s.inputs.length!==1)throw new pe("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(this.outputs.length===0){if(e.inboundNodes.length===0){if(e.batchInputShape==null)throw new pe("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const r=AZ({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(r)}if(t)this.outputs=s.outputs,this.inputs=s.inputs;else{if(e.inboundNodes.length!==1)throw new pe(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(e.inboundNodes[0].outputTensors.length!==1)throw new pe("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=xM(this.outputs[0])}this.inboundNodes=[],new M1({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:Bu(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(r=>r.shape),outputShapes:this.outputs[0].shape})}else{const r=e.apply(this.outputs[0]);if(Array.isArray(r))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[r],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(this.layers.length===0)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),this.layers.length===0)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return this.model==null&&this.build(),this.model.call(e,t)}build(e){if(On(e),this.inputs.length===0||this.outputs.length===0)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new $d({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,s=console.log){this.built||this.build(),super.summary(e,t,s)}setWeights(e){this.model==null&&this.build(),this.model.setWeights(e)}evaluate(e,t,s={}){if(!this.built)throw new Io("The model needs to be compiled before being used.");return this.model.evaluate(e,t,s)}async evaluateDataset(e,t){if(!this.built)throw new Io("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return this.model==null&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return this.model==null&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return this.model==null?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,s={}){if(!this.built)throw new Io("The model needs to be compiled before being used.");return this.model.fit(e,t,s)}async fitDataset(e,t){if(!this.built)throw new Io("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,s={},r=!1){let i,o={};if(t instanceof Array){if(t[0].className==null||t[0].className==="Merge")throw new pe("Legacy serialization format not supported yet.");i=t}else z(t.layers!=null,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),i=t.layers,delete t.layers,o=t;const a=new e(o);if(!(a instanceof Wm))throw new xn(`Sequential.fromConfig called on non-Sequential input: ${a}`);for(const l of i){const u=hl(l,void 0,r);r&&u.setFastWeightInitDuringBuild(!0),a.add(u)}return a}set stopTraining(e){if(this.model==null)throw new pe("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(this.model==null)throw new pe("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const t of this.layers){const s={};s.className=t.getClassName(),s.config=t.getConfig(),e.push(s)}return{name:this.name,layers:e}}}Wm.className="Sequential";He(Wm);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let Lr=class extends Dh{getConfig(){return{}}};class OM extends Lr{apply(e,t=1){return tZ(e,t)}}OM.className="elu";He(OM);class QM extends Lr{apply(e){return Hx(e)}}QM.className="selu";He(QM);class UM extends Lr{apply(e){return oa(e)}}UM.className="relu";He(UM);class zM extends Lr{apply(e){return ue(()=>vl(6,oa(e)))}}zM.className="relu6";He(zM);class GM extends Lr{apply(e){return e}}GM.className="linear";He(GM);class VM extends Lr{apply(e){return Tr(e)}}VM.className="sigmoid";He(VM);class WM extends Lr{apply(e){return sZ(e)}}WM.className="hardSigmoid";He(WM);class HM extends Lr{apply(e){return Rh(e)}}HM.className="softplus";He(HM);class qM extends Lr{apply(e){return nZ(e)}}qM.className="softsign";He(qM);class YM extends Lr{apply(e){return oc(e)}}YM.className="tanh";He(YM);let tS=class extends Lr{apply(e,t=-1){return wA(e,t)}};tS.className="softmax";He(tS);class jM extends Lr{apply(e,t=-1){return Lx(e,t)}}jM.className="logSoftmax";He(jM);class XM extends Lr{apply(e){return ue(()=>ue(()=>{const t=Math.sqrt(2),s=ne(.5,$e(1,Fx(rt(e,t))));return ne(e,s)}))}}XM.className="gelu";He(XM);class KM extends Lr{apply(e){return ue(()=>ne(.5,ne(e,$e(1,oc(ne(yr(rt(2,Math.PI)),$e(e,ne(.044715,ka(e,3)))))))))}}KM.className="gelu_new";He(KM);class JM extends Lr{apply(e){return ue(()=>ne(e,oc(Rh(e))))}}JM.className="mish";He(JM);class ZM extends Lr{apply(e,t=1){return ue(()=>ne(Tr(ne(e,t)),e))}}ZM.className="swish";He(ZM);function lc(n){return n.getClassName()}function ob(n,e={}){return MA(n,no.getMap().classNameMap,e,"activation")}function cc(n){if(n==null){const e={};return e.className="linear",e.config={},ob(e)}if(typeof n=="string"){const e={};return e.className=n,e.config={},ob(e)}else return n instanceof Lr?n:ob(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function gee(n){if(n!=null&&typeof n!="object")throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${n}`)}class eD extends Dh{}class tD extends eD{constructor(e){super(),gee(e),this.l1=e==null||e.l1==null?.01:e.l1,this.l2=e==null||e.l2==null?.01:e.l2,this.hasL1=this.l1!==0,this.hasL2=this.l2!==0}apply(e){return ue(()=>{let t=Rs([1]);return this.hasL1&&(t=$e(t,Mt(ne(this.l1,Gs(e))))),this.hasL2&&(t=$e(t,Mt(ne(this.l2,FA(e))))),ae(t,[])})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}}tD.className="L1L2";He(tD);const G_={l1l2:"L1L2"};function os(n){return Uw(n)}function V_(n,e={}){return MA(n,no.getMap().classNameMap,e,"regularizer")}function Ss(n){if(n==null)return null;if(typeof n=="string"){const t={className:n in G_?G_[n]:n,config:{}};return V_(t)}else return n instanceof eD?n:V_(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class nD extends vn{constructor(e){super(e??{}),this.supportsMasking=!0,e!=null&&(this.maxValue=e.maxValue)}call(e,t){e=nn(e);let s=oa(e);return this.maxValue!=null&&(s=$r(s,0,this.maxValue)),s}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}}nD.className="ReLU";He(nD);class sD extends vn{constructor(e){super(e??{}),this.DEFAULT_ALPHA=.3,e==null&&(e={}),this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,t){const s=nn(e);return fA(s,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}sD.className="LeakyReLU";He(sD);class rD extends vn{constructor(e){if(super(e??{}),this.DEFAULT_ALPHA_INITIALIZER="zeros",e==null&&(e={}),this.supportsMasking=!0,this.alphaInitializer=ws(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=Ss(e.alphaRegularizer),this.alphaConstraint=er(e.alphaConstraint),e.sharedAxes==null)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else if(typeof e.sharedAxes=="number")this.sharedAxes=[e.sharedAxes];else throw new pe(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`)}build(e){e=On(e);const t=e.slice(1);if(this.sharedAxes!=null)for(const r of this.sharedAxes)t[r-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const s={};if(this.sharedAxes!=null)for(let r=1;r<e.length;++r)s[r]=e[r];this.inputSpec=[new Js({ndim:e.length,axes:s})],this.built=!0}call(e,t){return e=nn(e),vA(e,this.alpha.read())}getConfig(){const e={alphaInitializer:Bs(this.alphaInitializer),alphaRegularizer:os(this.alphaRegularizer),alphaConstraint:Zs(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}}rD.className="PReLU";He(rD);let iD=class extends vn{constructor(e){if(super(e??{}),this.DEFAULT_ALPHA=1,e==null&&(e={}),e.alpha!=null&&e.alpha!==this.DEFAULT_ALPHA)throw new xn(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,t){const s=nn(e);return Ap(s)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};iD.className="ELU";He(iD);class oD extends vn{constructor(e){super(e??{}),this.DEFAULT_THETA=1,e==null&&(e={}),this.theta=e.theta==null?this.DEFAULT_THETA:e.theta}call(e,t){const s=nn(e);return ne(s,Ze(ii(s,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}}oD.className="ThresholdedReLU";He(oD);class aD extends vn{constructor(e){super(e??{}),this.DEFAULT_AXIS=1,e==null&&(e={}),this.softmax=new tS().apply,this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis}call(e,t){return ue(()=>{let s=nn(e);const r=t.mask;if(r!=null){const i=ne(gt(Ai(s.shape),Ze(r,s.dtype)),Bt(-1e9));s=$e(s,i)}return this.axis instanceof Array?this.axis.length>1?xr(gt(s,mA(s,this.axis,!0))):this.softmax(s,this.axis[0]):this.softmax(s,this.axis)})}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}aD.className="Softmax";He(aD);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Pd(n,e,t){if(typeof n=="number")return Bu(n,e);if(n.length!==e)throw new pe(`The ${t} argument must be an integer or tuple of ${e} integers. Received: ${n.length} elements.`);for(let s=0;s<e;++s){const r=n[s];if(!KJ(r))throw new pe(`The ${t} argument must be an integer or tuple of ${e} integers. Received: ${JSON.stringify(n)} including a non-integer number ${r}`)}return n}function jo(n,e,t,s,r=1){if(n==null)return n;const i=e+(e-1)*(r-1);let o;return t==="same"?o=n:o=n-i+1,Math.floor((o+s-1)/s)}function ya(n,e,t,s){if(n==null)return null;if(s==="valid")n=n*e+ac([t-e,0]);else if(s==="same")n=n*e;else throw new pe(`Unsupport padding mode: ${s}.`);return n}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function nS(n,e){return ue(()=>(Ps(e),e==="channelsFirst"?Sn(n,[0,2,3,1]):n))}function lD(n,e){return ue(()=>(Ps(e),e==="channelsFirst"?Sn(n,[0,2,3,4,1]):n))}function Aee(n,e,t,s=1,r="valid",i,o=1){return ue(()=>{if(i==null&&(i=ta()),Ps(i),n.shape.length!==3)throw new pe(`The input of a conv1dWithBias operation should be 3, but is ${n.shape.length} instead.`);if(e.shape.length!==3)throw new pe(`The kernel for a conv1dWithBias operation should be 3, but is ${e.shape.length} instead`);if(t!=null&&t.shape.length!==1)throw new pe(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if(i==="channelsFirst"&&(n=Sn(n,[0,2,1])),r==="causal")throw new xn("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let a=Nx(n,e,s,r==="same"?"same":"valid","NWC",o);return t!=null&&(a=la(a,t)),a})}function W_(n,e,t,s=[1,1],r="valid",i,o,a=null){return ue(()=>{if(i==null&&(i=ta()),Ps(i),n.rank!==3&&n.rank!==4)throw new pe(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${n.rank}.`);if(e.rank!==3&&e.rank!==4)throw new pe(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${n.rank}.`);let l=nS(n,i);if(r==="causal")throw new xn("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=ZN({x:l,filter:e,strides:s,pad:r==="same"?"same":"valid",dilations:o,dataFormat:"NHWC",bias:t,activation:a}),i==="channelsFirst"&&(l=Sn(l,[0,3,1,2])),l})}function yee(n,e,t,s=[1,1,1],r="valid",i,o){return ue(()=>{if(i==null&&(i=ta()),Ps(i),n.rank!==4&&n.rank!==5)throw new pe(`conv3dWithBias expects input to be of rank 4 or 5, but received ${n.rank}.`);if(e.rank!==4&&e.rank!==5)throw new pe(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${n.rank}.`);let a=lD(n,i);if(r==="causal")throw new xn("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return a=UI(a,e,s,r==="same"?"same":"valid","NDHWC",o),t!=null&&(a=la(a,t)),i==="channelsFirst"&&(a=Sn(a,[0,4,1,2,3])),a})}class $1 extends vn{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",$1.verifyArgs(t),this.rank=e,dr(this.rank,"rank"),this.rank!==1&&this.rank!==2&&this.rank!==3)throw new xn(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=Pd(t.kernelSize,e,"kernelSize"),this.strides=Pd(t.strides==null?1:t.strides,e,"strides"),this.padding=t.padding==null?"valid":t.padding,po(this.padding),this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,Ps(this.dataFormat),this.activation=cc(t.activation),this.useBias=t.useBias==null?!0:t.useBias,this.biasInitializer=ws(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=er(t.biasConstraint),this.biasRegularizer=Ss(t.biasRegularizer),this.activityRegularizer=Ss(t.activityRegularizer),this.dilationRate=Pd(t.dilationRate==null?1:t.dilationRate,e,"dilationRate"),this.rank===1&&Array.isArray(this.dilationRate)&&this.dilationRate.length!==1)throw new pe(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(this.rank===2){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==2)throw new pe(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(this.rank===3){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==3)throw new pe(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}}static verifyArgs(e){if(Aa("kernelSize"in e,"required key 'kernelSize' not in config"),typeof e.kernelSize!="number"&&!zw(e.kernelSize,"number",1,3))throw new pe(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){const e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:lc(this.activation),useBias:this.useBias,biasInitializer:Bs(this.biasInitializer),biasRegularizer:os(this.biasRegularizer),activityRegularizer:os(this.activityRegularizer),biasConstraint:Zs(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}class Cp extends $1{constructor(e,t){super(e,t),this.kernel=null,Cp.verifyArgs(t),this.filters=t.filters,dr(this.filters,"filters"),this.kernelInitializer=ws(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=er(t.kernelConstraint),this.kernelRegularizer=Ss(t.kernelRegularizer)}build(e){e=On(e);const t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new pe(`The channel dimension of the input should be defined. Found ${e[t]}`);const s=e[t],r=this.kernelSize.concat([s,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:s}}],this.built=!0}call(e,t){return ue(()=>{e=nn(e);let s;const r=this.bias==null?null:this.bias.read(),i=rM(this.activation.getClassName());if(i!=null&&this.rank===2)s=W_(e,this.kernel.read(),r,this.strides,this.padding,this.dataFormat,this.dilationRate,i);else{if(this.rank===1)s=Aee(e,this.kernel.read(),r,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(this.rank===2)s=W_(e,this.kernel.read(),r,this.strides,this.padding,this.dataFormat,this.dilationRate);else if(this.rank===3)s=yee(e,this.kernel.read(),r,this.strides,this.padding,this.dataFormat,this.dilationRate);else throw new xn("convolutions greater than 3D are not implemented yet.");this.activation!=null&&(s=this.activation.apply(s))}return s})}computeOutputShape(e){e=On(e);const t=[],s=this.dataFormat==="channelsLast"?e.slice(1,e.length-1):e.slice(2);for(let i=0;i<s.length;++i){const o=jo(s[i],this.kernelSize[i],this.padding,this.strides[i],typeof this.dilationRate=="number"?this.dilationRate:this.dilationRate[i]);t.push(o)}let r=[e[0]];return this.dataFormat==="channelsLast"?(r=r.concat(t),r.push(this.filters)):(r.push(this.filters),r=r.concat(t)),r}getConfig(){const e={filters:this.filters,kernelInitializer:Bs(this.kernelInitializer),kernelRegularizer:os(this.kernelRegularizer),kernelConstraint:Zs(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||typeof e.filters!="number"||e.filters<1)throw new pe(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}}class OA extends Cp{constructor(e){super(2,e),OA.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!zw(e.kernelSize,"number",1,2))throw new pe(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}}OA.className="Conv2D";He(OA);class QA extends Cp{constructor(e){super(3,e),QA.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!(Array.isArray(e.kernelSize)&&(e.kernelSize.length===1||e.kernelSize.length===3)))throw new pe(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}}QA.className="Conv3D";He(QA);class cD extends OA{constructor(e){if(super(e),this.inputSpec=[new Js({ndim:4})],this.padding!=="same"&&this.padding!=="valid")throw new pe(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=On(e),e.length!==4)throw new pe("Input should have rank 4; Received input shape: "+JSON.stringify(e));const t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new pe("The channel dimension of the inputs should be defined. Found `None`.");const s=e[t],r=this.kernelSize.concat([this.filters,s]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Js({ndim:4,axes:{[t]:s}})],this.built=!0}call(e,t){return ue(()=>{let s=nn(e);if(s.shape.length!==4)throw new pe(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${s.shape.length}`);const r=s.shape,i=r[0];let o,a;this.dataFormat==="channelsFirst"?(o=2,a=3):(o=1,a=2);const l=r[o],c=r[a],u=this.kernelSize[0],h=this.kernelSize[1],d=this.strides[0],f=this.strides[1],p=ya(l,d,u,this.padding),A=ya(c,f,h,this.padding),m=[i,p,A,this.filters];this.dataFormat!=="channelsLast"&&(s=Sn(s,[0,2,3,1]));let g=Rx(s,this.kernel.read(),m,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(g=Sn(g,[0,3,1,2])),this.bias!=null&&(g=la(g,this.bias.read(),this.dataFormat)),this.activation!=null&&(g=this.activation.apply(g)),g})}computeOutputShape(e){e=On(e);const t=e.slice();let s,r,i;this.dataFormat==="channelsFirst"?(s=1,r=2,i=3):(s=3,r=1,i=2);const o=this.kernelSize[0],a=this.kernelSize[1],l=this.strides[0],c=this.strides[1];return t[s]=this.filters,t[r]=ya(t[r],l,o,this.padding),t[i]=ya(t[i],c,a,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}cD.className="Conv2DTranspose";He(cD);class uD extends QA{constructor(e){if(super(e),this.inputSpec=[new Js({ndim:5})],this.padding!=="same"&&this.padding!=="valid")throw new pe(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=On(e),e.length!==5)throw new pe("Input should have rank 5; Received input shape: "+JSON.stringify(e));const t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new pe("The channel dimension of the inputs should be defined. Found `None`.");const s=e[t],r=this.kernelSize.concat([this.filters,s]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Js({ndim:5,axes:{[t]:s}})],this.built=!0}call(e,t){return ue(()=>{let s=nn(e);if(s.shape.length!==5)throw new pe(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${s.shape.length}`);const r=s.shape,i=r[0];let o,a,l;this.dataFormat==="channelsFirst"?(l=2,o=3,a=4):(l=1,o=2,a=3);const c=r[l],u=r[o],h=r[a],d=this.kernelSize[0],f=this.kernelSize[1],p=this.kernelSize[2],A=this.strides[0],m=this.strides[1],g=this.strides[2],x=ya(c,A,d,this.padding),v=ya(u,m,f,this.padding),b=ya(h,g,p,this.padding),w=[i,x,v,b,this.filters];this.dataFormat!=="channelsLast"&&(s=Sn(s,[0,2,3,4,1]));let _=zI(s,this.kernel.read(),w,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(_=Sn(_,[0,4,1,2,3])),this.bias!==null&&(_=la(_,this.bias.read(),this.dataFormat)),this.activation!==null&&(_=this.activation.apply(_)),_})}computeOutputShape(e){e=On(e);const t=e.slice();let s,r,i,o;this.dataFormat==="channelsFirst"?(s=1,r=2,i=3,o=4):(s=4,r=1,i=2,o=3);const a=this.kernelSize[0],l=this.kernelSize[1],c=this.kernelSize[2],u=this.strides[0],h=this.strides[1],d=this.strides[2];return t[s]=this.filters,t[r]=ya(t[r],u,a,this.padding),t[i]=ya(t[i],h,l,this.padding),t[o]=ya(t[o],d,c,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}uD.className="Conv3DTranspose";He(uD);class hD extends Cp{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,t.filters==null)throw new pe("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(t.kernelInitializer!=null||t.kernelRegularizer!=null||t.kernelConstraint!=null)throw new pe("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(t.padding!=null&&t.padding!=="same"&&t.padding!=="valid")throw new pe(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=t.depthMultiplier==null?1:t.depthMultiplier,this.depthwiseInitializer=ws(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=Ss(t.depthwiseRegularizer),this.depthwiseConstraint=er(t.depthwiseConstraint),this.pointwiseInitializer=ws(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=Ss(t.pointwiseRegularizer),this.pointwiseConstraint=er(t.pointwiseConstraint)}build(e){if(e=On(e),e.length<this.rank+2)throw new pe(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);const t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null||e[t]<0)throw new pe(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);const s=e[t],r=this.kernelSize.concat([s,this.depthMultiplier]),i=[];for(let a=0;a<this.rank;++a)i.push(1);i.push(s*this.depthMultiplier,this.filters);const o=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,o,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",i,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,o,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,o,this.biasConstraint):this.bias=null,this.inputSpec=[new Js({ndim:this.rank+2,axes:{[t]:s}})],this.built=!0}call(e,t){return ue(()=>{e=nn(e);let s;if(this.rank===1)throw new xn("1D separable convolution is not implemented yet.");return this.rank===2&&(this.dataFormat==="channelsFirst"&&(e=Sn(e,[0,2,3,1])),s=qx(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(s=la(s,this.bias.read(),this.dataFormat)),this.activation!=null&&(s=this.activation.apply(s)),this.dataFormat==="channelsFirst"&&(s=Sn(s,[0,3,1,2])),s})}getConfig(){const e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=Bs(this.depthwiseInitializer),e.pointwiseInitializer=Bs(this.pointwiseInitializer),e.depthwiseRegularizer=os(this.depthwiseRegularizer),e.pointwiseRegularizer=os(this.pointwiseRegularizer),e.depthwiseConstraint=Zs(this.depthwiseConstraint),e.pointwiseConstraint=Zs(this.pointwiseConstraint),e}}hD.className="SeparableConv";class dD extends hD{constructor(e){super(2,e)}}dD.className="SeparableConv2D";He(dD);class P1 extends Cp{constructor(e){super(1,e),P1.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!zw(e.kernelSize,"number",1,1))throw new pe(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}}P1.className="Conv1D";He(P1);class fD extends vn{constructor(e){super(e),typeof e.cropping=="number"?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:typeof e.cropping[0]=="number"?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=e.dataFormat===void 0?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return this.dataFormat==="channelsFirst"?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return ue(()=>{if(e=nn(e),this.dataFormat==="channelsLast"){const s=Sy(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return Sy(s,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}else{const s=Sy(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return Sy(s,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){const e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}fD.className="Cropping2D";He(fD);class pD extends vn{constructor(e){super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=e.size==null?this.DEFAULT_SIZE:e.size,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Ps(this.dataFormat),this.interpolation=e.interpolation==null?"nearest":e.interpolation,YJ(this.interpolation)}computeOutputShape(e){if(this.dataFormat==="channelsFirst"){const t=e[2]==null?null:this.size[0]*e[2],s=e[3]==null?null:this.size[1]*e[3];return[e[0],e[1],t,s]}else{const t=e[1]==null?null:this.size[0]*e[1],s=e[2]==null?null:this.size[1]*e[2];return[e[0],t,s,e[3]]}}call(e,t){return ue(()=>{let s=nn(e);const r=s.shape;if(this.dataFormat==="channelsFirst"){s=Sn(s,[0,2,3,1]);const i=this.size[0]*r[2],o=this.size[1]*r[3],a=this.interpolation==="nearest"?Is.resizeNearestNeighbor(s,[i,o]):Is.resizeBilinear(s,[i,o]);return Sn(a,[0,3,1,2])}else{const i=this.size[0]*r[1],o=this.size[1]*r[2];return this.interpolation==="nearest"?Is.resizeNearestNeighbor(s,[i,o]):Is.resizeBilinear(s,[i,o])}})}getConfig(){const e={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}}pD.className="UpSampling2D";He(pD);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function xee(n,e,t=[1,1],s="valid",r,i){return ue(()=>{r==null&&(r=ta()),Ps(r);let o=nS(n,r);if(n.rank!==4)throw new pe(`Input for depthwiseConv2d is required to be 4-D, but is instead ${n.rank}-D`);if(e.rank!==4)throw new pe(`depthwiseKernel is required to be 4-D, but is instead ${e.rank}-D`);return o=gp(o,e,t,s==="same"?"same":"valid","NHWC",i),r==="channelsFirst"&&(o=Sn(o,[0,3,1,2])),o})}class mD extends $1{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=e.depthMultiplier==null?1:e.depthMultiplier,this.depthwiseInitializer=ws(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=er(e.depthwiseConstraint),this.depthwiseRegularizer=Ss(e.depthwiseRegularizer)}build(e){if(e=On(e),e.length<4)throw new pe(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);const t=this.dataFormat==="channelsFirst"?1:3;if(e[t]==null||e[t]<0)throw new pe(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);const s=e[t],r=[this.kernelSize[0],this.kernelSize[1],s,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",r,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[s*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return ue(()=>{e=nn(e);let s=xee(e,this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(s=la(s,this.bias.read(),this.dataFormat)),this.activation!=null&&(s=this.activation.apply(s)),s})}computeOutputShape(e){e=On(e);const t=this.dataFormat==="channelsFirst"?e[2]:e[1],s=this.dataFormat==="channelsFirst"?e[3]:e[2],r=this.dataFormat==="channelsFirst"?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,i=jo(t,this.kernelSize[0],this.padding,this.strides[0]),o=jo(s,this.kernelSize[1],this.padding,this.strides[1]);return this.dataFormat==="channelsFirst"?[e[0],r,i,o]:[e[0],i,o,r]}getConfig(){const e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=Bs(this.depthwiseInitializer),e.depthwiseRegularizer=os(this.depthwiseRegularizer),e.depthwiseConstraint=Zs(this.depthwiseRegularizer),e}}mD.className="DepthwiseConv2D";He(mD);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function gD(n,e,t,s){if(Array.isArray(n)){if(e!=null||t!=null)throw new pe("When inputs is an array, neither initialState or constants should be provided");s!=null&&(t=n.slice(n.length-s,n.length),n=n.slice(0,n.length-s)),n.length>1&&(e=n.slice(1,n.length)),n=n[0]}function r(i){return i==null||Array.isArray(i)?i:[i]}return e=r(e),t=r(t),{inputs:n,initialState:e,constants:t}}function AD(n,e,t,s=!1,r,i,o=!1,a=!1){return ue(()=>{const l=e.shape.length;if(l<3)throw new pe(`Input should be at least 3D, but is ${l}D.`);const c=[1,0].concat(ea(2,l));e=Sn(e,c),o&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),r!=null&&(r=Ze(Ze(r,"bool"),"float32"),r.rank===l-1&&(r=Kn(r,-1)),r=Sn(r,c)),s&&(e=uo(e,0),r!=null&&(r=uo(r,0)));const u=[];let h,d=t;const f=e.shape[0],p=ho(e);let A;r!=null&&(A=ho(r));for(let g=0;g<f;++g){const x=p[g],v=ue(()=>n(x,d));if(r==null)h=v[0],d=v[1];else{const b=ue(()=>{const w=A[g],_=gt(Vi(w),w),N=$e(ne(v[0],w),ne(d[0],_)),M=d.map((T,k)=>$e(ne(v[1][k],w),ne(T,_)));return{output:N,newStates:M}});h=b.output,d=b.newStates}a&&u.push(h)}let m;return a&&(m=Ci(u,1)),[h,m,d]})}class Cc extends vn{constructor(e){super(e);let t;if(e.cell==null)throw new pe("cell property is missing for the constructor of RNN.");if(Array.isArray(e.cell)?t=new iS({cells:e.cell}):t=e.cell,t.stateSize==null)throw new pe("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=e.returnSequences==null?!1:e.returnSequences,this.returnState=e.returnState==null?!1:e.returnState,this.goBackwards=e.goBackwards==null?!1:e.goBackwards,this._stateful=e.stateful==null?!1:e.stateful,this.unroll=e.unroll==null?!1:e.unroll,this.supportsMasking=!0,this.inputSpec=[new Js({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(this.states_==null){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;return ea(0,e).map(t=>null)}else return this.states_}setStates(e){this.states_=e}computeOutputShape(e){lC(e)&&(e=e[0]),e=e;let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);const s=t[0];let r;if(this.returnSequences?r=[e[0],e[1],s]:r=[e[0],s],this.returnState){const i=[];for(const o of t)i.push([e[0],o]);return[r].concat(i)}else return r}computeMask(e,t){return ue(()=>{Array.isArray(t)&&(t=t[0]);const s=this.returnSequences?t:null;if(this.returnState){const r=this.states.map(i=>null);return[s].concat(r)}else return s})}get states(){if(this.states_==null){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let s=0;s<e;++s)t.push(null);return t}else return this.states_}set states(e){this.states_=e}build(e){if(this.numConstants!=null)throw new xn("Constants support is not implemented in RNN yet.");lC(e)&&(e=e[0]),e=e;const t=this.stateful?e[0]:null,s=e.slice(2);this.inputSpec[0]=new Js({shape:[t,null,...s]});const r=[e[0]].concat(e.slice(2));this.cell.build(r);let i;if(Array.isArray(this.cell.stateSize)?i=this.cell.stateSize:i=[this.cell.stateSize],this.stateSpec!=null){if(!dn(this.stateSpec.map(o=>o.shape[o.shape.length-1]),i))throw new pe(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=i.map(o=>new Js({shape:[null,o]}));this.stateful&&this.resetStates()}resetStates(e,t=!1){ue(()=>{if(!this.stateful)throw new ga("Cannot call resetStates() on an RNN Layer that is not stateful.");const s=this.inputSpec[0].shape[0];if(s==null)throw new pe("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.states_==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(r=>Rs([s,r])):this.states_=[Rs([s,this.cell.stateSize])];else if(e==null)zt(this.states_),this.keptStates!=null&&(zt(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(r=>Rs([s,r])):this.states_[0]=Rs([s,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new pe(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t===!0?this.keptStates.push(this.states_.slice()):zt(this.states_);for(let r=0;r<this.states_.length;++r){const i=e[r],o=Array.isArray(this.cell.stateSize)?this.cell.stateSize[r]:this.cell.stateSize,a=[s,o];if(!dn(i.shape,a))throw new pe(`State ${r} is incompatible with layer ${this.name}: expected shape=${a}, received shape=${i.shape}`);this.states_[r]=i}}this.states_=this.states_.map(r=>Xs(r.clone()))})}apply(e,t){let s=t==null?null:t.initialState,r=t==null?null:t.constants;t==null&&(t={});const i=gD(e,s,r,this.numConstants);e=i.inputs,s=i.initialState,r=i.constants;let o=[],a=[];if(s!=null){t.initialState=s,o=o.concat(s),this.stateSpec=[];for(const c of s)this.stateSpec.push(new Js({shape:c.shape}));a=a.concat(this.stateSpec)}if(r!=null&&(t.constants=r,o=o.concat(r),this.numConstants=r.length),o[0]instanceof Ra){const c=[e].concat(o),u=this.inputSpec.concat(a),h=this.inputSpec;this.inputSpec=u;const d=super.apply(c,t);return this.inputSpec=h,d}else return super.apply(e,t)}call(e,t){return ue(()=>{const s=t==null?null:t.mask,r=t==null?null:t.training;let i=t==null?null:t.initialState;e=nn(e),i==null&&(this.stateful?i=this.states_:i=this.getInitialState(e));const o=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(i.length!==o)throw new pe(`RNN Layer has ${o} state(s) but was passed ${i.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const a={training:r},c=AD((p,A)=>{const m=this.cell.call([p].concat(A),a);return[m[0],m.slice(1)]},e,i,this.goBackwards,s,null,this.unroll,this.returnSequences),u=c[0],h=c[1],d=c[2];this.stateful&&this.resetStates(d,r);const f=this.returnSequences?h:u;return this.returnState?[f].concat(d):f})}getInitialState(e){return ue(()=>{let t=Rs(e.shape);return t=Mt(t,[1,2]),t=DA(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(s=>s>1?oC(t,[1,s]):t):this.cell.stateSize>1?[oC(t,[1,this.cell.stateSize])]:[t]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.cell!=null&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){const e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};this.numConstants!=null&&(t.numConstants=this.numConstants);const s=this.cell.getConfig();return this.getClassName()===Cc.className&&(t.cell={className:this.cell.getClassName(),config:s}),Object.assign(Object.assign(Object.assign({},s),e),t)}static fromConfig(e,t,s={}){const r=t.cell,i=hl(r,s);return new e(Object.assign(t,{cell:i}))}}Cc.className="RNN";He(Cc);class L1 extends vn{}class sS extends L1{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,dr(this.units,"units"),this.activation=cc(e.activation==null?this.DEFAULT_ACTIVATION:e.activation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=ws(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=ws(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=ws(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Ss(e.kernelRegularizer),this.recurrentRegularizer=Ss(e.recurrentRegularizer),this.biasRegularizer=Ss(e.biasRegularizer),this.kernelConstraint=er(e.kernelConstraint),this.recurrentConstraint=er(e.recurrentConstraint),this.biasConstraint=er(e.biasConstraint),this.dropout=ef([1,ac([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=ef([1,ac([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=On(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return ue(()=>{if(e=e,e.length!==2)throw new pe(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let s=e[1];e=e[0];const r=t.training==null?!1:t.training;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=uc({ones:()=>Vi(e),rate:this.dropout,training:r,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=uc({ones:()=>Vi(s),rate:this.recurrentDropout,training:r,dropoutFunc:this.dropoutFunc}));let i;const o=this.dropoutMask,a=this.recurrentDropoutMask;o!=null?i=Sa(ne(e,o),this.kernel.read()):i=Sa(e,this.kernel.read()),this.bias!=null&&(i=la(i,this.bias.read())),a!=null&&(s=ne(s,a));let l=$e(i,Sa(s,this.recurrentKernel.read()));return this.activation!=null&&(l=this.activation.apply(l)),[l,l]})}getConfig(){const e=super.getConfig(),t={units:this.units,activation:lc(this.activation),useBias:this.useBias,kernelInitializer:Bs(this.kernelInitializer),recurrentInitializer:Bs(this.recurrentInitializer),biasInitializer:Bs(this.biasInitializer),kernelRegularizer:os(this.kernelRegularizer),recurrentRegularizer:os(this.recurrentRegularizer),biasRegularizer:os(this.biasRegularizer),activityRegularizer:os(this.activityRegularizer),kernelConstraint:Zs(this.kernelConstraint),recurrentConstraint:Zs(this.recurrentConstraint),biasConstraint:Zs(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign(Object.assign({},e),t)}}sS.className="SimpleRNNCell";He(sS);class yD extends Cc{constructor(e){e.cell=new sS(e),super(e)}call(e,t){return ue(()=>{this.cell.dropoutMask!=null&&(zt(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(zt(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const s=t==null?null:t.mask,r=t==null?null:t.training,i=t==null?null:t.initialState;return super.call(e,{mask:s,training:r,initialState:i})})}static fromConfig(e,t){return new e(t)}}yD.className="SimpleRNN";He(yD);class rS extends L1{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new pe("GRUCell does not support reset_after parameter set to true.");this.units=e.units,dr(this.units,"units"),this.activation=cc(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=cc(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=ws(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=ws(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=ws(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Ss(e.kernelRegularizer),this.recurrentRegularizer=Ss(e.recurrentRegularizer),this.biasRegularizer=Ss(e.biasRegularizer),this.kernelConstraint=er(e.kernelConstraint),this.recurrentConstraint=er(e.recurrentConstraint),this.biasConstraint=er(e.biasConstraint),this.dropout=ef([1,ac([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=ef([1,ac([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=On(e);const t=e[e.length-1];this.kernel=this.addWeight("kernel",[t,this.units*3],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*3],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units*3],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return ue(()=>{if(e=e,e.length!==2)throw new pe(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);const s=t.training==null?!1:t.training;let r=e[1];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=uc({ones:()=>Vi(e),rate:this.dropout,training:s,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=uc({ones:()=>Vi(r),rate:this.recurrentDropout,training:s,count:3,dropoutFunc:this.dropoutFunc}));const i=this.dropoutMask,o=this.recurrentDropoutMask;let a,l,c;0<this.dropout&&this.dropout<1&&(e=ne(e,i[0]));let u=Sa(e,this.kernel.read());this.useBias&&(u=la(u,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(r=ne(r,o[0]));const h=this.recurrentKernel.read(),[d,f]=yi(h,[2*this.units,this.units],h.rank-1),p=Sa(r,d),[A,m,g]=yi(u,3,u.rank-1),[x,v]=yi(p,2,p.rank-1);a=this.recurrentActivation.apply($e(A,x)),l=this.recurrentActivation.apply($e(m,v));const b=Sa(ne(l,r),f);c=this.activation.apply($e(g,b));const w=$e(ne(a,r),ne($e(1,ms(a)),c));return[w,w]})}getConfig(){const e=super.getConfig(),t={units:this.units,activation:lc(this.activation),recurrentActivation:lc(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Bs(this.kernelInitializer),recurrentInitializer:Bs(this.recurrentInitializer),biasInitializer:Bs(this.biasInitializer),kernelRegularizer:os(this.kernelRegularizer),recurrentRegularizer:os(this.recurrentRegularizer),biasRegularizer:os(this.biasRegularizer),activityRegularizer:os(this.activityRegularizer),kernelConstraint:Zs(this.kernelConstraint),recurrentConstraint:Zs(this.recurrentConstraint),biasConstraint:Zs(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign(Object.assign({},e),t)}}rS.className="GRUCell";He(rS);class xD extends Cc{constructor(e){e.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new rS(e),super(e)}call(e,t){return ue(()=>{this.cell.dropoutMask!=null&&(zt(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(zt(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const s=t==null?null:t.mask,r=t==null?null:t.training,i=t==null?null:t.initialState;return super.call(e,{mask:s,training:r,initialState:i})})}static fromConfig(e,t){return t.implmentation===0&&(t.implementation=1),new e(t)}}xD.className="GRU";He(xD);class O1 extends L1{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,dr(this.units,"units"),this.activation=cc(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=cc(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=ws(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=ws(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=ws(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=Ss(e.kernelRegularizer),this.recurrentRegularizer=Ss(e.recurrentRegularizer),this.biasRegularizer=Ss(e.biasRegularizer),this.kernelConstraint=er(e.kernelConstraint),this.recurrentConstraint=er(e.recurrentConstraint),this.biasConstraint=er(e.biasConstraint),this.dropout=ef([1,ac([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=ef([1,ac([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;e=On(e);const s=e[e.length-1];this.kernel=this.addWeight("kernel",[s,this.units*4],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*4],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint);let r;if(this.useBias){if(this.unitForgetBias){const i=this.biasInitializer,o=this.units;r=new(t=class extends To{apply(l,c){const u=i.apply([o]),h=new Vw().apply([o]),d=i.apply([o*2]);return T_(T_(u,h),d)}},t.className="CustomInit",t)}else r=this.biasInitializer;this.bias=this.addWeight("bias",[this.units*4],null,r,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return ue(()=>{const s=t.training==null?!1:t.training;if(e=e,e.length!==3)throw new pe(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let r=e[1];const i=e[2];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=uc({ones:()=>Vi(e),rate:this.dropout,training:s,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=uc({ones:()=>Vi(r),rate:this.recurrentDropout,training:s,count:4,dropoutFunc:this.dropoutFunc}));const o=this.dropoutMask,a=this.recurrentDropoutMask;let l,c,u,h;0<this.dropout&&this.dropout<1&&(e=ne(e,o[0]));let d=Sa(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(r=ne(r,a[0])),d=$e(d,Sa(r,this.recurrentKernel.read())),this.useBias&&(d=la(d,this.bias.read()));const[f,p,A,m]=yi(d,4,d.rank-1);l=this.recurrentActivation.apply(f),c=this.recurrentActivation.apply(p),u=$e(ne(c,i),ne(l,this.activation.apply(A))),h=this.recurrentActivation.apply(m);const g=ne(h,this.activation.apply(u));return[g,g,u]})}getConfig(){const e=super.getConfig(),t={units:this.units,activation:lc(this.activation),recurrentActivation:lc(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Bs(this.kernelInitializer),recurrentInitializer:Bs(this.recurrentInitializer),biasInitializer:Bs(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:os(this.kernelRegularizer),recurrentRegularizer:os(this.recurrentRegularizer),biasRegularizer:os(this.biasRegularizer),activityRegularizer:os(this.activityRegularizer),kernelConstraint:Zs(this.kernelConstraint),recurrentConstraint:Zs(this.recurrentConstraint),biasConstraint:Zs(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign(Object.assign({},e),t)}}O1.className="LSTMCell";He(O1);class bD extends Cc{constructor(e){e.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new O1(e),super(e)}call(e,t){return ue(()=>{this.cell.dropoutMask!=null&&(zt(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(zt(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const s=t==null?null:t.mask,r=t==null?null:t.training,i=t==null?null:t.initialState;return super.call(e,{mask:s,training:r,initialState:i})})}static fromConfig(e,t){return t.implmentation===0&&(t.implementation=1),new e(t)}}bD.className="LSTM";He(bD);class iS extends L1{constructor(e){super(e),this.cells=e.cells}get stateSize(){const e=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return ue(()=>{e=e;let s=e.slice(1);const r=[];for(const a of this.cells.slice().reverse())Array.isArray(a.stateSize)?r.push(s.splice(0,a.stateSize.length)):r.push(s.splice(0,1));r.reverse();const i=[];let o;for(let a=0;a<this.cells.length;++a){const l=this.cells[a];s=r[a],a===0?o=[e[0]].concat(s):o=[o[0]].concat(s),o=l.call(o,t),i.push(o.slice(1))}s=[];for(const a of i.slice().reverse())s.push(...a);return[o[0]].concat(s)})}build(e){lC(e)&&(e=e[0]),e=e;let t;this.cells.forEach((s,r)=>{mu(`RNNCell_${r}`,()=>{s.build(e),Array.isArray(s.stateSize)?t=s.stateSize[0]:t=s.stateSize,e=[e[0],t]})}),this.built=!0}getConfig(){const e=super.getConfig(),t=i=>({className:i.getClassName(),config:i.getConfig()}),r={cells:this.cells.map(t)};return Object.assign(Object.assign({},e),r)}static fromConfig(e,t,s={}){const r=[];for(const i of t.cells)r.push(hl(i,s));return new e({cells:r})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const s of this.cells)t.push(...s.trainableWeights);return t.concat(e)}return e}getWeights(){const e=[];for(const t of this.cells)e.push(...t.weights);return cC(e)}setWeights(e){const t=[];for(const s of this.cells){const r=s.weights.length,i=e.splice(r);for(let o=0;o<s.weights.length;++o)t.push([s.weights[o],i[o]])}Kw(t)}}iS.className="StackedRNNCells";He(iS);function uc(n){const{ones:e,rate:t,training:s=!1,count:r=1,dropoutFunc:i}=n,o=()=>i!=null?i(e(),t):hM(e(),t),a=()=>$A(o,e,s);return!r||r<=1?Xs(a().clone()):Array(r).fill(void 0).map(a).map(c=>Xs(c.clone()))}/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var bee=function(n,e){var t={};for(var s in n)Object.prototype.hasOwnProperty.call(n,s)&&e.indexOf(s)<0&&(t[s]=n[s]);if(n!=null&&typeof Object.getOwnPropertySymbols=="function")for(var r=0,s=Object.getOwnPropertySymbols(n);r<s.length;r++)e.indexOf(s[r])<0&&Object.prototype.propertyIsEnumerable.call(n,s[r])&&(t[s[r]]=n[s[r]]);return t};class vD extends Cc{constructor(e){if(e.unroll)throw new xn("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new xn("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new Js({ndim:5})]}call(e,t){return ue(()=>{if(this.cell.dropoutMask!=null&&(zt(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(zt(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new pe("ConvRNN2D cell does not support constants");const s=t==null?null:t.mask,r=t==null?null:t.training,i=t==null?null:t.initialState;return super.call(e,{mask:s,training:r,initialState:i})})}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return ue(()=>{const{stateSize:t}=this.cell,s=e.shape,r=this.computeSingleOutputShape(s),i=[r[0],...r.slice(2)],o=Rs(i);return Array.isArray(t)?Array(t.length).fill(o):[o]})}resetStates(e,t=!1){ue(()=>{if(!this.stateful)throw new ga("Cannot call resetStates() on an RNN Layer that is not stateful.");const s=this.inputSpec[0].shape,r=this.computeSingleOutputShape(s),i=[r[0],...r.slice(2)];if(s[0]==null)throw new pe("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.getStates()==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>Rs(i)):this.states_=[Rs(i)];else if(e==null)zt(this.states_),this.keptStates!=null&&(zt(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>Rs(i)):this.states_[0]=Rs(i);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new pe(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):zt(this.states_);for(let a=0;a<this.states_.length;++a){const l=e[a],c=i;if(!dn(l.shape,c))throw new pe(`State ${a} is incompatible with layer ${this.name}: expected shape=${c}, received shape=${l.shape}`);this.states_[a]=l}}this.states_=this.states_.map(a=>Xs(a.clone()))})}computeSingleOutputShape(e){const{dataFormat:t,filters:s,kernelSize:r,padding:i,strides:o,dilationRate:a}=this.cell,l=t==="channelsFirst",c=e[l?3:2],u=e[l?4:3],h=jo(c,r[0],i,o[0],a[0]),d=jo(u,r[1],i,o[1],a[1]);return[...e.slice(0,2),...l?[s,h,d]:[h,d,s]]}}vD.className="ConvRNN2D";class oS extends O1{constructor(e){const{filters:t,kernelSize:s,strides:r,padding:i,dataFormat:o,dilationRate:a}=e;super(Object.assign(Object.assign({},e),{units:t})),this.filters=t,dr(this.filters,"filters"),this.kernelSize=Pd(s,2,"kernelSize"),this.kernelSize.forEach(l=>dr(l,"kernelSize")),this.strides=Pd(r||1,2,"strides"),this.strides.forEach(l=>dr(l,"strides")),this.padding=i||"valid",po(this.padding),this.dataFormat=o||"channelsLast",Ps(this.dataFormat),this.dilationRate=Pd(a||1,2,"dilationRate"),this.dilationRate.forEach(l=>dr(l,"dilationRate"))}build(e){var t;e=On(e);const s=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[s]==null)throw new pe(`The channel dimension of the input should be defined. Found ${e[s]}`);const r=e[s],i=4,o=this.kernelSize.concat([r,this.filters*i]);this.kernel=this.addWeight("kernel",o,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const a=this.kernelSize.concat([this.filters,this.filters*i]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",a,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let l;if(this.unitForgetBias){const c=this.biasInitializer,u=this.filters;l=new(t=class extends To{apply(d,f){const p=c.apply([u]),A=Ai([u]),m=c.apply([u*2]);return Gw([p,A,m])}},t.className="CustomInit",t)}else l=this.biasInitializer;this.bias=this.addWeight("bias",[this.filters*i],null,l,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return ue(()=>{if(e.length!==3)throw new pe(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);const s=t.training||!1,r=e[0],i=e[1],o=e[2],a=4;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=uc({ones:()=>Vi(r),rate:this.dropout,training:s,count:a,dropoutFunc:this.dropoutFunc}));const l=this.dropoutMask,c=(le,fe,Ie)=>!fe||!fe[Ie]?le:ne(fe[Ie],le);let u=c(r,l,0),h=c(r,l,1),d=c(r,l,2),f=c(r,l,3);0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=uc({ones:()=>Vi(i),rate:this.recurrentDropout,training:s,count:a,dropoutFunc:this.dropoutFunc}));const p=this.recurrentDropoutMask;let A=c(i,p,0),m=c(i,p,1),g=c(i,p,2),x=c(i,p,3);const v=3,[b,w,_,N]=yi(this.kernel.read(),a,v),[M,T,k,B]=this.useBias?yi(this.bias.read(),a):[null,null,null,null];u=this.inputConv(u,b,M,this.padding),h=this.inputConv(h,w,T,this.padding),d=this.inputConv(d,_,k,this.padding),f=this.inputConv(f,N,B,this.padding);const[L,U,V,W]=yi(this.recurrentKernel.read(),a,v);A=this.recurrentConv(A,L),m=this.recurrentConv(m,U),g=this.recurrentConv(g,V),x=this.recurrentConv(x,W);const H=this.recurrentActivation.apply($e(u,A)),ee=this.recurrentActivation.apply($e(h,m)),K=$e(ne(ee,o),ne(H,this.activation.apply($e(d,g)))),te=ne(this.recurrentActivation.apply($e(f,x)),this.activation.apply(K));return[te,te,K]})}getConfig(){const e=super.getConfig(),{units:t}=e,s=bee(e,["units"]),r={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign(Object.assign({},s),r)}inputConv(e,t,s,r){const i=xl(e,t,this.strides,r||"valid",this.dataFormat==="channelsFirst"?"NCHW":"NHWC",this.dilationRate);return s?la(i,s,this.dataFormat):i}recurrentConv(e,t){return xl(e,t,1,"same",this.dataFormat==="channelsFirst"?"NCHW":"NHWC")}}oS.className="ConvLSTM2DCell";He(oS);class CD extends vD{constructor(e){const t=new oS(e);super(Object.assign(Object.assign({},e),{cell:t}))}static fromConfig(e,t){return new e(t)}}CD.className="ConvLSTM2D";He(CD);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class aS extends vn{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(this.noiseShape==null)return this.noiseShape;const t=e.shape,s=[];for(let r=0;r<this.noiseShape.length;++r)s.push(this.noiseShape[r]==null?t[r]:this.noiseShape[r]);return s}call(e,t){return ue(()=>{this.invokeCallHook(e,t);const s=nn(e);if(0<this.rate&&this.rate<1){const r=t.training==null?!1:t.training,i=this.getNoiseShape(s);return $A(()=>hM(s,this.rate,i,this.seed),()=>s,r)}return e})}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}}aS.className="Dropout";He(aS);class ID extends aS{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){const t=e.shape;return[t[0],1,t[2]]}}ID.className="SpatialDropout1D";He(ID);class wD extends vn{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.batchInputShape==null&&e.inputShape==null&&e.inputDim!=null){let t=null;e.batchSize!=null&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,dr(this.units,"units"),this.activation=cc(e.activation),e.useBias!=null&&(this.useBias=e.useBias),this.kernelInitializer=ws(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=ws(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=er(e.kernelConstraint),this.biasConstraint=er(e.biasConstraint),this.kernelRegularizer=Ss(e.kernelRegularizer),this.biasRegularizer=Ss(e.biasRegularizer),this.activityRegularizer=Ss(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){e=On(e);const t=e[e.length-1];this.kernel==null&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){e=On(e);const t=e.slice();return t[t.length-1]=this.units,t}call(e,t){return ue(()=>{this.invokeCallHook(e,t);const s=nn(e),r=rM(this.activation.getClassName());let i;return r!=null?i=Sa(s,this.kernel.read(),r,this.bias?this.bias.read():null):(i=Sa(s,this.kernel.read()),this.bias!=null&&(i=la(i,this.bias.read())),this.activation!=null&&(i=this.activation.apply(i))),i})}getConfig(){const e={units:this.units,activation:lc(this.activation),useBias:this.useBias,kernelInitializer:Bs(this.kernelInitializer),biasInitializer:Bs(this.biasInitializer),kernelRegularizer:os(this.kernelRegularizer),biasRegularizer:os(this.biasRegularizer),activityRegularizer:os(this.activityRegularizer),kernelConstraint:Zs(this.kernelConstraint),biasConstraint:Zs(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}wD.className="Dense";He(wD);class SD extends vn{constructor(e){e=e||{},super(e),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=On(e);for(const t of e.slice(1))if(t==null)throw new pe(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],Zl(e,1)]}call(e,t){return ue(()=>{this.invokeCallHook(e,t);let s=nn(e);if(this.dataFormat==="channelsFirst"&&s.rank>1){const r=[0];for(let i=2;i<s.rank;++i)r.push(i);r.push(1),s=Sn(s,r)}return eZ(s)})}getConfig(){const e={};this.dataFormat!=null&&(e.dataFormat=this.dataFormat);const t=super.getConfig();return Object.assign(e,t),e}}SD.className="Flatten";He(SD);class ED extends vn{constructor(e){super(e),this.supportsMasking=!0,this.activation=cc(e.activation)}call(e,t){return ue(()=>{this.invokeCallHook(e,t);const s=nn(e);return this.activation.apply(s)})}getConfig(){const e={activation:lc(this.activation)},t=super.getConfig();return Object.assign(e,t),e}}ED.className="Activation";He(ED);class _D extends vn{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return ue(()=>(e=nn(e),JJ(e,this.n)))}getConfig(){const e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}}_D.className="RepeatVector";He(_D);class TD extends vn{constructor(e){super(e),this.targetShape=e.targetShape;for(let t=0;t<this.targetShape.length;++t)this.isUnknown(this.targetShape[t])&&(this.targetShape[t]=null)}isUnknown(e){return e<0||e==null}fixUnknownDimension(e,t){const s="Total size of new array must be unchanged.",r=t.slice();let i=1,o=null;for(let l=0;l<r.length;++l){const c=r[l];if(this.isUnknown(c))if(o===null)o=l;else throw new pe("Can only specifiy one unknown dimension.");else i*=c}const a=Zl(e);if(o!==null){if(i===0||a%i!==0)throw new pe(s);r[o]=a/i}else if(a!==i)throw new pe(s);return r}computeOutputShape(e){let t=!1;for(let s=0;s<e.length;++s)if(this.isUnknown(e[s])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return ue(()=>{this.invokeCallHook(e,t);const s=nn(e),r=s.shape,i=r.slice(0,1).concat(this.fixUnknownDimension(r.slice(1),this.targetShape));return ae(s,i)})}getConfig(){const e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}}TD.className="Reshape";He(TD);class BD extends vn{constructor(e){if(super(e),e.dims==null)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);const t=ea(1,e.dims.length+1);if(!dn(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new Js({ndim:this.dims.length+1})]}computeOutputShape(e){e=On(e);const t=e.slice();return this.dims.forEach((s,r)=>{t[r+1]=e[s]}),t}call(e,t){return Sn(nn(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}}BD.className="Permute";He(BD);class kD extends vn{constructor(e){super(e??{}),this.supportsMasking=!0,e!=null?this.maskValue=e.maskValue==null?0:e.maskValue:this.maskValue=0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){const s=nn(e);return Om(Eu(s,this.maskValue),-1)}call(e,t){return ue(()=>{this.invokeCallHook(e,t);const s=nn(e),o=Om(Eu(s,this.maskValue),-1,!0);return ne(s,Ze(o,s.dtype))})}}kD.className="Masking";He(kD);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class ND extends vn{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",e.batchInputShape==null&&e.inputShape==null){let t=null;e.batchSize!=null&&(t=e.batchSize),e.inputLength==null?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(Xn(e.inputLength))}this.inputDim=e.inputDim,dr(this.inputDim,"inputDim"),this.outputDim=e.outputDim,dr(this.outputDim,"outputDim"),this.embeddingsInitializer=ws(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=Ss(e.embeddingsRegularizer),this.activityRegularizer=Ss(e.activityRegularizer),this.embeddingsConstraint=er(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return ue(()=>this.maskZero?(e=nn(e),Eu(e,_n(e))):null)}computeOutputShape(e){if(e=On(e),this.inputLength==null)return[...e,this.outputDim];const t=Xn(this.inputLength);if(t.length!==e.length-1)throw new pe(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let s=0;for(let r=0;r<t.length;++r){const i=t[r],o=e[r+1];if(i!=null&&o!=null&&i!==o)throw new pe(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);i==null&&(t[s]=o),s++}}return[e[0],...t,this.outputDim]}call(e,t){return ue(()=>{this.invokeCallHook(e,t);let s=nn(e);s.dtype!=="int32"&&(s=wa(s,"int32"));const r=uM(this.embeddings.read(),ae(s,[s.size]));return ae(r,On(this.computeOutputShape(s.shape)))})}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:Bs(this.embeddingsInitializer),embeddingsRegularizer:os(this.embeddingsRegularizer),activityRegularizer:os(this.activityRegularizer),embeddingsConstraint:Zs(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}}ND.className="Embedding";He(ND);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Qh extends vn{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new xn}computeElementwiseOpOutputShape(e,t){if(e==null||t==null)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(t.length===0)return e;const s=e.slice(0,e.length-t.length);for(let r=0;r<t.length;++r){const i=e[e.length-t.length+r],o=t[r];if(i==null||o==null||i<0||o<0)s.push(null);else if(i===1)s.push(o);else if(o===1)s.push(i);else{if(i!==o)throw new pe("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));s.push(i)}}return s}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[On(e)]),e=e,e.length<2)throw new pe(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(const i of e)i!=null&&i[0]!==null&&t.push(i[0]);if(t=Jl(t),t.length>1)throw new pe(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let s=e[0]==null?null:e[0].slice(1);for(let i=1;i<e.length;++i){const o=e[i]==null?null:e[i].slice(1);s=this.computeElementwiseOpOutputShape(s,o)}const r=e.map(i=>i.length);e.indexOf(null)===-1&&Jl(r).length===1?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return ue(()=>{if(e=e,this.reshapeRequired){const s=[],r=e.map(i=>i.rank);if(r.indexOf(null)===-1){const i=ac(r);for(let o of e){const a=o.rank;for(let l=0;l<i-a;++l)o=DA(o,1);s.push(o)}return this.mergeFunction(s)}else{let i=!1;for(const l of e){const c=l.rank;if(c==null){const u=l.shape,h=u[0],d=u.slice(1).concat([h]);let f=ae(l,[h].concat(Zl(u.slice(1))));f=Sn(f,[1,0]),f=ae(f,d),s.push(f),i=!0}else if(c>1){const u=ea(1,c).concat([0]);s.push(Sn(l,u)),i=!0}else s.push(l)}let o=this.mergeFunction(s);const a=o.rank;if(i){if(a==null){const l=o.shape,c=l.length,u=l[c-1],h=[u].concat(l.slice(0,l.length-1));o=ae(Sn(ae(o,[-1,u]),[1,0]),h)}else if(a>1){const l=[a-1].concat(ea(0,a-1));o=Sn(o,l)}}return o}}else return this.mergeFunction(e)})}computeOutputShape(e){e=e;let t;e[0]==null?t=null:t=e[0].slice(1);for(let r=1;r<e.length;++r){const i=e[r]==null?null:e[r].slice(1);t=this.computeElementwiseOpOutputShape(t,i)}let s=[];for(const r of e)r!=null&&r[0]!==null&&s.push(r[0]);return s=Jl(s),s.length===1?t=s.concat(t):t=[null].concat(t),t}computeMask(e,t){return ue(()=>{if(t==null)return null;if(!Array.isArray(t))throw new pe("`mask` should be an Array");if(!Array.isArray(e))throw new pe("`inputs` should be an Array");if(t.length!==e.length)throw new pe(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every(r=>r==null))return null;t=t.map(r=>r==null?r:Kn(r,0));let s=t[0];for(let r=1;r<t.length-1;++r)s=Ko(s,t[r]);return s})}}class RD extends Qh{constructor(e){super(e)}mergeFunction(e){return ue(()=>{let t=e[0].clone();for(let s=1;s<e.length;++s)t=$e(t,e[s]);return t})}}RD.className="Add";He(RD);class MD extends Qh{constructor(e){super(e)}mergeFunction(e){return ue(()=>{let t=e[0].clone();for(let s=1;s<e.length;++s)t=ne(t,e[s]);return t})}}MD.className="Multiply";He(MD);class DD extends Qh{constructor(e){super(e)}mergeFunction(e){return ue(()=>{let t=e[0].clone();for(let s=1;s<e.length;++s)t=$e(t,e[s]);return ne(1/e.length,t)})}}DD.className="Average";He(DD);class FD extends Qh{constructor(e){super(e)}mergeFunction(e){return ue(()=>{let t=e[0];for(let s=1;s<e.length;++s)t=Qa(t,e[s]);return t})}}FD.className="Maximum";He(FD);class $D extends Qh{constructor(e){super(e)}mergeFunction(e){return ue(()=>{let t=e[0];for(let s=1;s<e.length;++s)t=vl(t,e[s]);return t})}}$D.className="Minimum";He($D);class PD extends Qh{constructor(e){super(e),this.DEFAULT_AXIS=-1,e==null&&(e={}),this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!(Array.isArray(e)&&Array.isArray(e[0]))||e.length===1)throw new pe("A `Concatenate` layer should be called on a list of at least 2 inputs");e=e;let t=!0;for(const r of e)if(r!=null){t=!1;break}if(t)return;const s=[];for(let r=0;r<e.length;++r){const i=e[r].slice();i.splice(this.axis,1);let o=!1;for(const a of s)if(dn(a,i)){o=!0;break}o||s.push(i)}if(s.length>1)throw new pe("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return ue(()=>Gw(e,this.axis))}computeOutputShape(e){if(!(Array.isArray(e)&&Array.isArray(e[0])))throw new pe("A `Concatenate` layer should be called on a list of inputs.");const t=e,s=t[0].slice(),r=this.axis<0?s.length+this.axis:this.axis;for(const i of t.slice(1)){if(s[r]==null||i[r]==null){s[r]=null;break}s[r]+=i[r]}return s}computeMask(e,t){if(t==null)return null;if(!Array.isArray(t))throw new pe("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new pe("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new pe(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return ue(()=>{let s=!0;if(t.forEach(o=>{if(o!=null){s=!1;return}}),s)return null;const r=[];for(let o=0;o<e.length;++o)t[o]==null?r.push(Ze(Vi(e[o]),"bool")):t[o].rank<e[o].rank?r.push(Kn(t[o],-1)):r.push(t[o]);const i=ps(r,this.axis);return kx(i,-1,!1)})}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}PD.className="Concatenate";He(PD);function Yp(n,e){for(;n<0;)n+=e;return n}function vee(n,e,t){if(n.shape.length>3||e.shape.length>3)throw new xn("batchDot is not implemented for tensors of 4D or higher rank yet");if(z(n.shape.length>=2,()=>`batchDot requires the rank of x to be >= 2, but got ${n.shape.length}`),z(n.shape.length>=2,()=>`batchDot requires the rank of y to be >= 2, but got ${e.shape.length}`),typeof t=="number"&&(t=[t,t]),n.dtype==="complex64"||e.dtype==="complex64")throw new xn("batchDot is not implemented for complex64-type Tensors yet.");const s=n.shape.length,r=e.shape.length;t==null&&(t=[s-1,r-2]);const i=t;return ue(()=>{let o;if(s>r){o=s-r;const l=[];for(let c=0;c<o;++c)l.push(1);e=ae(e,e.shape.concat(l))}else if(r>s){o=r-s;const l=[];for(let c=0;c<o;++c)l.push(1);n=ae(n,n.shape.concat(l))}else o=0;let a;if(n.shape.length===2&&e.shape.length===2)i[0]===i[1]?a=Mt(ne(n,e),i[0]):a=Mt(ne(Sn(n,[1,0]),e),i[1]);else{const l=i[0]!==n.shape.length-1,c=i[1]===e.shape.length-1;a=An(n,e,l,c)}if(o>0){let l;s>r?l=s+r-3:l=s-1;const c=[];for(let u=l;u<l+o;++u)c.push(u);a=Ht(a,c)}return a.shape.length===1&&(a=Kn(a,1)),a})}class LD extends Qh{constructor(e){super(e),this.axes=e.axes,this.normalize=e.normalize==null?!1:e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){z(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const t=e[0],s=e[1];if(t.length>3||s.length>3)throw new xn("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,s);if(t[r[0]]!==s[r[1]])throw new pe(`Dimension incompatibility: ${t[r[0]]} !== ${s[r[1]]}`)}mergeFunction(e){if(e.length!==2)throw new pe(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t=e[0],s=e[1],r;return Array.isArray(this.axes)?r=this.axes.map((i,o)=>Yp(i,e[o].shape.length)):r=[Yp(this.axes,t.shape.length),Yp(this.axes,s.shape.length)],this.normalize&&(t=N0(t,r[0]),s=N0(s,r[1])),vee(t,s,r)}interpretAxes(e,t){let s;return Array.isArray(this.axes)?s=this.axes:s=[Yp(this.axes,e.length),Yp(this.axes,t.length)],s}computeOutputShape(e){z(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const t=e[0].slice(),s=e[1].slice();if(t.length>3||s.length>3)throw new xn("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,s);t.splice(r[0],1),s.splice(r[1],1),s.splice(0,1);const i=t.concat(s);return i.length===1&&i.push(1),i}computeMask(e,t){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}}LD.className="Dot";He(LD);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class OD extends vn{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return ue(()=>{this.invokeCallHook(e,t);const s=nn(e);return $A(()=>$e(R1(s.shape,0,this.stddev),s),()=>s,t.training||!1)})}}OD.className="GaussianNoise";He(OD);class QD extends vn{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return ue(()=>{this.invokeCallHook(e,t);const s=nn(e);return this.rate>0&&this.rate<1?$A(()=>{const i=Math.sqrt(this.rate/(1-this.rate));return ne(s,R1(s.shape,1,i))},()=>s,t.training||!1):s})}}QD.className="GaussianDropout";He(QD);class UD extends vn{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||nn(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return ue(()=>{if(this.rate<1&&this.rate>0){const s=this._getNoiseShape(e);return $A(()=>{const i=nn(e),a=-1.6732632423543772*1.0507009873554805;let l=_l(bc(s),this.rate);l=wa(l,"float32");const c=((1-this.rate)*(1+this.rate*a**2))**-.5,u=-c*a*this.rate,h=$e(ne(i,l),ne($e(l,-1),a));return $e(ne(h,c),u)},()=>nn(e),t.training||!1)}return e})}}UD.className="AlphaDropout";He(UD);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Hm(n,e,t,s,r,i=.001){let o;if(n.rank===2)o=NI(n,e,t,s,r,i);else if(n.rank===3)o=RI(n,e,t,s,r,i);else if(n.rank===4)o=MI(n,e,t,s,r,i);else throw new xn(`batchNormalization is not implemented for array of rank ${n.rank} yet`);return o}function Cee(n,e,t,s,r=.001){return ue(()=>{const i=xA(n,s),o=i.mean,a=i.variance;return[Hm(n,o,a,t,e,r),o,a]})}function Iee(n,e,t,s,r=.001){return ue(()=>{const i=xA(n,s),o=i.mean,a=i.variance,l=[];for(const p of ea(0,n.rank))s.indexOf(p)!==-1?l.push(1):l.push(n.shape[p]);const c=ae(o,l),u=ae(a,l),h=e==null?null:ae(e,l),d=t==null?null:ae(t,l);return[Hm(n,c,u,d,h,r),o,a]})}function wee(n,e,t,s,r=.001){return dn(s.slice().sort(),ea(0,n.rank-1))?Cee(n,e,t,s,r):Iee(n,e,t,s,r)}class zD extends vn{constructor(e){e==null&&(e={}),super(e),this.supportsMasking=!0,this.axis=e.axis==null?-1:e.axis,this.momentum=e.momentum==null?.99:e.momentum,this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=ws(e.betaInitializer||"zeros"),this.gammaInitializer=ws(e.gammaInitializer||"ones"),this.movingMeanInitializer=ws(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=ws(e.movingVarianceInitializer||"ones"),this.betaConstraint=er(e.betaConstraint),this.gammaConstraint=er(e.gammaConstraint),this.betaRegularizer=Ss(e.betaRegularizer),this.gammaRegularizer=Ss(e.gammaRegularizer)}build(e){e=On(e);const t=this.axis>=0?this.axis:this.axis+e.length,s=e[t];if(s==null)throw new pe(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new Js({ndim:e.length,axes:{[t]:s}})];const r=[s];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return ue(()=>{const s=t.training==null?!1:t.training,r=nn(e),i=r.shape,o=i.length,a=ea(0,o),l=this.axis>=0?this.axis:this.axis+o;a.splice(l,1);const c=Bu(1,o);c[l]=i[l];const u=a.slice();u.sort();const h=!dn(u,ea(0,o).slice(0,o-1)),d=()=>{if(h){const x=ae(this.movingMean.read(),c),v=ae(this.movingVariance.read(),c),b=this.center?ae(this.beta.read(),c):null,w=this.scale?ae(this.gamma.read(),c):null;return Hm(r,x,v,b,w,this.epsilon)}else return Hm(r,this.movingMean.read(),this.movingVariance.read(),this.beta==null?null:this.beta.read(),this.gamma==null?null:this.gamma.read(),this.epsilon)};if(!s)return d();const[f,p,A]=wee(r,this.gamma.read(),this.beta.read(),a,this.epsilon),m=(x,v,b)=>{ue(()=>{const w=1-b,_=x.read(),N=ne(gt(_,v),w);x.write(gt(_,N))})};return(()=>{m(this.movingMean,p,this.momentum),m(this.movingVariance,A,this.momentum)})(),f})}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Bs(this.betaInitializer),gammaInitializer:Bs(this.gammaInitializer),movingMeanInitializer:Bs(this.movingMeanInitializer),movingVarianceInitializer:Bs(this.movingVarianceInitializer),betaRegularizer:os(this.betaRegularizer),gammaRegularizer:os(this.gammaRegularizer),betaConstraint:Zs(this.betaConstraint),gammaConstraint:Zs(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}}zD.className="BatchNormalization";He(zD);class GD extends vn{constructor(e){if(e==null&&(e={}),super(e),this.axis=e.axis==null?-1:e.axis,typeof this.axis=="number"){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else if(Array.isArray(this.axis)){for(const t of this.axis)if(!Number.isInteger(t))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}else throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=ws(e.betaInitializer||"zeros"),this.gammaInitializer=ws(e.gammaInitializer||"ones"),this.betaRegularizer=Ss(e.betaRegularizer),this.gammaRegularizer=Ss(e.gammaRegularizer),this.supportsMasking=!0}build(e){e=On(e);const t=e.length;typeof this.axis=="number"&&(this.axis=[this.axis]);for(let i=0;i<this.axis.length;++i)this.axis[i]<0&&(this.axis[i]+=t);for(const i of this.axis)if(i<0||i>=t)throw new Error(`Invalid axis: ${i}`);if(this.axis.length!==Jl(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const s=this.axis.map(i=>e[i]),r=!0;this.scale?this.gamma=this.addWeight("gamma",s,"float32",this.gammaInitializer,this.gammaRegularizer,r):this.gamma=null,this.center?this.beta=this.addWeight("beta",s,"float32",this.betaInitializer,this.betaRegularizer,r):this.beta=null,this.built=!0}call(e,t){const s=nn(e),r=s.shape,i=r.length;return ue(()=>{let{mean:a,variance:l}=xA(s,this.axis,!0);const c=Bu(1,i);for(const A of this.axis)c[A]=r[A];const u=A=>A!=null&&A.shape.length!==i?ae(A,c):A;let h=this.scale?u(this.gamma.read()):null,d=this.center?u(this.beta.read()):null;const f=[],p=[];for(let A=0;A<i;++A)this.axis.indexOf(A)!==-1?(f.push(r[A]),p.push(1)):(f.push(1),p.push(r[A]));return a=so(a,f),l=so(l,f),h!=null&&(h=so(h,p)),d!=null&&(d=so(d,p)),Hm(s,a,l,d,h,this.epsilon)})}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Bs(this.betaInitializer),gammaInitializer:Bs(this.gammaInitializer),betaRegularizer:os(this.betaRegularizer),gammaRegularizer:os(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}}GD.className="LayerNormalization";He(GD);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function See(n,e,t){return ue(()=>{if(n.rank!==4)throw new pe(`temporalPadding expects input tensor to be 4-D, but received a ${n.rank}-D tensor.`);if(e==null&&(e=[[1,1],[1,1]]),e.length!==2||e[0].length!==2||e[1].length!==2)throw new pe("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(t==null&&(t=ta()),t!=="channelsLast"&&t!=="channelsFirst")throw new pe(`Unknown data format: ${t}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let s;return t==="channelsFirst"?s=[[0,0],[0,0],e[0],e[1]]:s=[[0,0],e[0],e[1],[0,0]],co(n,s)})}class VD extends vn{constructor(e){if(e==null&&(e={}),super(e),this.dataFormat=e.dataFormat==null?ta():e.dataFormat,e.padding==null)this.padding=[[1,1],[1,1]];else if(typeof e.padding=="number")this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,e.padding.length!==2)throw new pe(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,s;if(typeof e.padding[0]=="number")t=[e.padding[0],e.padding[0]],s=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,e.padding[0].length!==2)throw new pe(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],e.padding[1].length!==2)throw new pe(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);s=e.padding[1]}this.padding=[t,s]}this.inputSpec=[new Js({ndim:4})]}computeOutputShape(e){e=On(e);let t,s;return this.dataFormat==="channelsFirst"?(e[2]!=null&&e[2]>=0?t=e[2]+this.padding[0][0]+this.padding[0][1]:t=null,e[3]!=null&&e[3]>=0?s=e[3]+this.padding[1][0]+this.padding[1][1]:s=null,[e[0],e[1],t,s]):(e[1]!=null&&e[1]>=0?t=e[1]+this.padding[0][0]+this.padding[0][1]:t=null,e[2]!=null&&e[2]>=0?s=e[2]+this.padding[1][0]+this.padding[1][1]:s=null,[e[0],t,s,e[3]])}call(e,t){return ue(()=>See(nn(e),this.padding,this.dataFormat))}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}VD.className="ZeroPadding2D";He(VD);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Q1(n,e,t,s,r,i){return ue(()=>{Ps(r),oM(i),po(s),t==null&&(t=[1,1]),s==null&&(s="valid"),r==null&&(r=ta()),i==null&&(i="max"),n=nS(n,r);let o;const a=s==="same"?"same":"valid";return i==="max"?o=AA(n,e,t,a):o=cA(n,e,t,a),r==="channelsFirst"&&(o=Sn(o,[0,3,1,2])),o})}function WD(n,e,t,s,r,i){return ue(()=>{Ps(r),oM(i),po(s),t==null&&(t=[1,1,1]),s==null&&(s="valid"),r==null&&(r=ta()),i==null&&(i="max"),n=lD(n,r);let o;const a=s==="same"?"same":"valid";return i==="max"?o=nw(n,e,t,a):o=kI(n,e,t,a),r==="channelsFirst"&&(o=Sn(o,[0,4,1,2,3])),o})}class HD extends vn{constructor(e){if(e.poolSize==null&&(e.poolSize=2),super(e),typeof e.poolSize=="number")this.poolSize=[e.poolSize];else if(Array.isArray(e.poolSize)&&e.poolSize.length===1&&typeof e.poolSize[0]=="number")this.poolSize=e.poolSize;else throw new pe(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);if(dr(this.poolSize,"poolSize"),e.strides==null)this.strides=this.poolSize;else if(typeof e.strides=="number")this.strides=[e.strides];else if(Array.isArray(e.strides)&&e.strides.length===1&&typeof e.strides[0]=="number")this.strides=e.strides;else throw new pe(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);dr(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,po(this.padding),this.inputSpec=[new Js({ndim:3})]}computeOutputShape(e){e=On(e);const t=jo(e[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return ue(()=>{this.invokeCallHook(e,t),e=DA(nn(e),2);const s=this.poolingFunction(nn(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return Ht(s,[2])})}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}}class qD extends HD{constructor(e){super(e)}poolingFunction(e,t,s,r,i){return Ps(i),po(r),Q1(e,t,s,r,i,"max")}}qD.className="MaxPooling1D";He(qD);class YD extends HD{constructor(e){super(e)}poolingFunction(e,t,s,r,i){return Ps(i),po(r),Q1(e,t,s,r,i,"avg")}}YD.className="AveragePooling1D";He(YD);class jD extends vn{constructor(e){if(e.poolSize==null&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==2)throw new pe(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];dr(this.poolSize,"poolSize"),dr(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Ps(this.dataFormat),po(this.padding),this.inputSpec=[new Js({ndim:4})]}computeOutputShape(e){e=On(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],s=this.dataFormat==="channelsFirst"?e[3]:e[2];return t=jo(t,this.poolSize[0],this.padding,this.strides[0]),s=jo(s,this.poolSize[1],this.padding,this.strides[1]),this.dataFormat==="channelsFirst"?[e[0],e[1],t,s]:[e[0],t,s,e[3]]}call(e,t){return ue(()=>(this.invokeCallHook(e,t),this.poolingFunction(nn(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class XD extends jD{constructor(e){super(e)}poolingFunction(e,t,s,r,i){return Ps(i),po(r),Q1(e,t,s,r,i,"max")}}XD.className="MaxPooling2D";He(XD);class KD extends jD{constructor(e){super(e)}poolingFunction(e,t,s,r,i){return Ps(i),po(r),Q1(e,t,s,r,i,"avg")}}KD.className="AveragePooling2D";He(KD);class JD extends vn{constructor(e){if(e.poolSize==null&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==3)throw new pe(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];dr(this.poolSize,"poolSize"),dr(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Ps(this.dataFormat),po(this.padding),this.inputSpec=[new Js({ndim:5})]}computeOutputShape(e){e=On(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],s=this.dataFormat==="channelsFirst"?e[3]:e[2],r=this.dataFormat==="channelsFirst"?e[4]:e[3];return t=jo(t,this.poolSize[0],this.padding,this.strides[0]),s=jo(s,this.poolSize[1],this.padding,this.strides[1]),r=jo(r,this.poolSize[2],this.padding,this.strides[2]),this.dataFormat==="channelsFirst"?[e[0],e[1],t,s,r]:[e[0],t,s,r,e[4]]}call(e,t){return ue(()=>(this.invokeCallHook(e,t),this.poolingFunction(nn(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class ZD extends JD{constructor(e){super(e)}poolingFunction(e,t,s,r,i){return Ps(i),po(r),WD(e,t,s,r,i,"max")}}ZD.className="MaxPooling3D";He(ZD);class eF extends JD{constructor(e){super(e)}poolingFunction(e,t,s,r,i){return Ps(i),po(r),WD(e,t,s,r,i,"avg")}}eF.className="AveragePooling3D";He(eF);class tF extends vn{constructor(e){super(e),this.inputSpec=[new Js({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new xn}}class nF extends tF{constructor(e){super(e||{})}call(e,t){return ue(()=>{const s=nn(e);return _s(s,1)})}}nF.className="GlobalAveragePooling1D";He(nF);class sF extends tF{constructor(e){super(e||{})}call(e,t){return ue(()=>{const s=nn(e);return lo(s,1)})}}sF.className="GlobalMaxPooling1D";He(sF);class rF extends vn{constructor(e){super(e),this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Ps(this.dataFormat),this.inputSpec=[new Js({ndim:4})]}computeOutputShape(e){return e=e,this.dataFormat==="channelsLast"?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new xn}getConfig(){const e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class iF extends rF{call(e,t){return ue(()=>{const s=nn(e);return this.dataFormat==="channelsLast"?_s(s,[1,2]):_s(s,[2,3])})}}iF.className="GlobalAveragePooling2D";He(iF);class oF extends rF{call(e,t){return ue(()=>{const s=nn(e);return this.dataFormat==="channelsLast"?lo(s,[1,2]):lo(s,[2,3])})}}oF.className="GlobalMaxPooling2D";He(oF);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class aF extends vn{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return this.layer!=null?this.layer.trainable:!1}set trainable(e){this.layer!=null&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){const e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.layer!=null&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,s={}){const r=t.layer,i=hl(r,s);delete t.layer;const o={layer:i};return Object.assign(o,t),new e(o)}}class lF extends aF{constructor(e){super(e),this.supportsMasking=!0}build(e){if(e=On(e),e.length<3)throw new pe(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];const t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){e=On(e);const t=[e[0]].concat(e.slice(2)),s=this.layer.computeOutputShape(t),r=e[1];return[s[0],r].concat(s.slice(1))}call(e,t){return ue(()=>(e=nn(e),AD((o,a)=>[nn(this.layer.call(o,t)),[]],e,[],!1,null,null,!1,!0)[1]))}}lF.className="TimeDistributed";He(lF);function Eee(n){Oh(qJ,"BidirectionalMergeMode",n)}const _ee="concat";class cF extends aF{constructor(e){super(e);const t=e.layer.getConfig(),s={};s.className=e.layer.getClassName(),s.config=t,this.forwardLayer=hl(s),t.goBackwards=t.goBackwards!==!0;const r={};if(r.className=e.layer.getClassName(),r.config=t,this.backwardLayer=hl(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=e.mergeMode===void 0?_ee:e.mergeMode,Eee(this.mergeMode),e.weights)throw new xn("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,this.forwardLayer!=null&&(this.forwardLayer.trainable=e),this.backwardLayer!=null&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const t=e.length,s=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,s)),this.backwardLayer.setWeights(e.slice(s))}computeOutputShape(e){let t=this.forwardLayer.computeOutputShape(e);Array.isArray(t)&&Array.isArray(t[0])||(t=[t]),t=t;let s,r,i;return this.returnState&&(i=t.slice(1)),s=t[0],s=s,this.mergeMode==="concat"?(s[s.length-1]*=2,r=[s]):this.mergeMode==null?r=[s,s.slice()]:r=[s],this.returnState?this.mergeMode==null?r.concat(i).concat(i.slice()):[s].concat(i).concat(i.slice()):gi(r)}apply(e,t){let s=t==null?null:t.initialState,r=t==null?null:t.constants;t==null&&(t={});const i=gD(e,s,r,this.numConstants);if(e=i.inputs,s=i.initialState,r=i.constants,Array.isArray(e)&&(s=e.slice(1),e=e[0]),(s==null||s.length===0)&&r==null)return super.apply(e,t);const o=[],a=[];if(s!=null){const c=s.length;if(c%2>0)throw new pe("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=s,o.push(...s);const u=s.map(h=>new Js({shape:h.shape}));this.forwardLayer.stateSpec=u.slice(0,c/2),this.backwardLayer.stateSpec=u.slice(c/2),a.push(...u)}if(r!=null)throw new xn("Support for constants in Bidirectional layers is not implemented yet.");const l=o[0]instanceof Ra;for(const c of o)if(c instanceof Ra!==l)throw new pe("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(l){const c=[e].concat(o),u=this.inputSpec.concat(a),h=this.inputSpec;this.inputSpec=u;const d=super.apply(c,t);return this.inputSpec=h,d}else return super.apply(e,t)}call(e,t){return ue(()=>{const s=t.initialState;let r,i;if(s==null)r=this.forwardLayer.call(e,t),i=this.backwardLayer.call(e,t);else{const l=s.slice(0,s.length/2),c=s.slice(s.length/2);r=this.forwardLayer.call(e,Object.assign(t,{initialState:l})),i=this.backwardLayer.call(e,Object.assign(t,{initialState:c}))}let o;this.returnState&&(Array.isArray(r)&&(o=r.slice(1).concat(i.slice(1))),r=r[0],i=i[0]),this.returnSequences&&(i=uo(i,1));let a;return this.mergeMode==="concat"?a=Gw([r,i]):this.mergeMode==="sum"?a=$e(r,i):this.mergeMode==="ave"?a=ne(.5,$e(r,i)):this.mergeMode==="mul"?a=ne(r,i):this.mergeMode==null&&(a=[r,i]),this.returnState?this.mergeMode==null?a.concat(o):[a].concat(o):a})}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){mu(this.forwardLayer.name,()=>{this.forwardLayer.build(e)}),mu(this.backwardLayer.name,()=>{this.backwardLayer.build(e)}),this.built=!0}computeMask(e,t){Array.isArray(t)&&(t=t[0]);let s;if(this.returnSequences?this.mergeMode==null?s=[t,t]:s=t:this.mergeMode==null?s=[null,null]:s=null,this.returnState){const i=this.forwardLayer.states.map(o=>null);return Array.isArray(s)?s.concat(i).concat(i):[s].concat(i).concat(i)}else return s}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.forwardLayer!=null&&this.forwardLayer.setFastWeightInitDuringBuild(e),this.backwardLayer!=null&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){const s=hl(t.layer);if(delete t.layer,t.numConstants!=null)throw new xn("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const r=t;return r.layer=s,new e(r)}}cF.className="Bidirectional";He(cF);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class uF extends vn{constructor(e){super(e),this.scale=e.scale,e.offset?this.offset=e.offset:this.offset=0}getConfig(){const e={scale:this.scale,offset:this.offset},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return ue(()=>(e=nn(e),e.dtype!=="float32"&&(e=wa(e,"float32")),$e(ne(e,this.scale),this.offset)))}}uF.className="Rescaling";He(uF);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const{resizeBilinear:Tee,cropAndResize:Bee}=Is;class hF extends vn{constructor(e){super(e),this.height=e.height,this.width=e.width}centerCrop(e,t,s,r,i,o,a,l){return ue(()=>{let c,u=!1;const h=t/o,d=s/a,f=(r+t)/o,p=(i+s)/a,A=[h,d,f,p],m=[];e.rank===3?(u=!0,c=Ci([e])):c=e;for(let w=0;w<c.shape[0];w++)m.push(A);const g=ao(m,[m.length,4]),x=Cl(0,m.length,1,"int32"),b=Bee(c,g,x,[r,i],"nearest");return wa(u?nn(ho(b)):b,l)})}upsize(e,t,s,r){return ue(()=>{const i=Tee(e,[t,s]);return wa(i,r)})}call(e,t){return ue(()=>{const s=nn(e),r=s.dtype,i=s.shape,o=i[i.length-3],a=i[i.length-2];let l=0;o!==this.height&&(l=Math.floor((o-this.height)/2));let c=0;return a!==this.width&&(c=Math.floor((a-this.width)/2),c===0&&(c=1)),l>=0&&c>=0?this.centerCrop(s,l,c,this.height,this.width,o,a,r):this.upsize(e,this.height,this.width,r)})}getConfig(){const e={height:this.height,width:this.width},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){e=On(e);const t=e.length-3,s=e.length-2;return e[t]=this.height,e[s]=this.width,e}}hF.className="CenterCrop";He(hF);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function kee(n,e,t,s){let r=nn(n);if(r.dtype!=="int32"&&(r=wa(r,"int32")),e==="int")return r;const i=r.shape;if(r.rank===0&&(r=Kn(r,-1)),e==="oneHot"&&r.shape[r.shape.length-1]!==1&&(r=Kn(r,-1)),r.rank>2)throw new pe(`When outputMode is not int, maximum output rank is 2 Received outputMode ${e} and input shape ${i} which would result in output rank ${r.rank}.`);const o=["multiHot","oneHot"].includes(e),a=r;let l;if(typeof s<"u"&&e==="count"?l=E0(a,s,t,o):l=E0(a,[],t,o),e!=="tfIdf")return l;if(s)return ne(l,s);throw new pe("When outputMode is 'tfIdf', weights must be provided.")}/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class dF extends vn{constructor(e){super(e),this.numTokens=e.numTokens,e.outputMode?this.outputMode=e.outputMode:this.outputMode="multiHot"}getConfig(){const e={numTokens:this.numTokens,outputMode:this.outputMode},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){return e=On(e),e==null?[this.numTokens]:this.outputMode==="oneHot"&&e[e.length-1]!==1?(e.push(this.numTokens),e):(e[e.length-1]=this.numTokens,e)}call(e,t){return ue(()=>{e=nn(e),e.dtype!=="int32"&&(e=wa(e,"int32"));let s;if(typeof t.countWeights<"u"){if(this.outputMode!=="count")throw new pe(`countWeights is not used when outputMode !== count.
              Received countWeights=${t.countWeights}`);s=nn(t.countWeights)}const r=lo(e),i=jd(e),o=ii(this.numTokens,r).bufferSync().get(0),a=_l(i,0).bufferSync().get(0);if(!(o&&a))throw new pe(`Input values must be between 0 < values <= numTokens with numTokens=${this.numTokens}`);return kee(e,this.outputMode,this.numTokens,s)})}}dF.className="CategoryEncoding";He(dF);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const Nee=["bilinear","nearest"],H_=new Set(Nee);class fF extends vn{constructor(e){if(super(e),this.height=e.height,this.width=e.width,e.interpolation)if(H_.has(e.interpolation))this.interpolation=e.interpolation;else throw new pe(`Invalid interpolation parameter: ${e.interpolation} is not implemented`);else this.interpolation="bilinear";this.cropToAspectRatio=!!e.cropToAspectRatio}computeOutputShape(e){e=On(e);const t=e[2];return[this.height,this.width,t]}getConfig(){const e={height:this.height,width:this.width,interpolation:this.interpolation,cropToAspectRatio:this.cropToAspectRatio},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return ue(()=>{const s=[this.height,this.width];if(this.interpolation==="bilinear")return Is.resizeBilinear(e,s,!this.cropToAspectRatio);if(this.interpolation==="nearest")return Is.resizeNearestNeighbor(e,s,!this.cropToAspectRatio);throw new Error(`Interpolation is ${this.interpolation} but only ${[...H_]} are supported`)})}}fF.className="Resizing";He(fF);/**
 * @license
 * Copyright 2023 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class pF{constructor(e){this.seed=e}next(){if(this.seed!==void 0)return this.seed++}}pF.className="RandomSeed";/**
 * @license
 * Copyright 2023 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class mF extends vn{constructor(e){super(e),this.randomGenerator=new pF(e.seed)}getConfig(){const e={seed:this.randomGenerator.seed},t=super.getConfig();return Object.assign(e,t),e}}mF.className="BaseRandomLayer";/**
 * @license
 * Copyright 2023 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const Ree=["bilinear","nearest"],q_=new Set(Ree);class gF extends mF{constructor(e){super(e);const{factor:t,interpolation:s="bilinear"}=e;if(this.factor=t,Array.isArray(this.factor)&&this.factor.length===2)this.widthLower=this.factor[0],this.widthUpper=this.factor[1];else if(!Array.isArray(this.factor)&&this.factor>0)this.widthLower=-this.factor,this.widthUpper=this.factor;else throw new pe(`Invalid factor: ${this.factor}. Must be positive number or tuple of 2 numbers`);if(this.widthLower<-1||this.widthUpper<-1)throw new pe(`factor must have values larger than -1. Got: ${this.factor}`);if(this.widthUpper<this.widthLower)throw new pe(`factor cannot have upper bound less than lower bound.
        Got upper bound: ${this.widthUpper}.
        Got lower bound: ${this.widthLower}
      `);if(s)if(q_.has(s))this.interpolation=s;else throw new pe(`Invalid interpolation parameter: ${s} is not implemented`)}getConfig(){const e={factor:this.factor,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){e=On(e);const t=e[2];return[this.imgHeight,-1,t]}call(e,t){return ue(()=>{const s=nn(e);this.imgHeight=s.shape[s.shape.length-3];const r=s.shape[s.shape.length-2];this.widthFactor=bc([1],1+this.widthLower,1+this.widthUpper,"float32",this.randomGenerator.next());let i=this.widthFactor.dataSync()[0]*r;i=Math.round(i);const o=[this.imgHeight,i];switch(this.interpolation){case"bilinear":return Is.resizeBilinear(e,o);case"nearest":return Is.resizeNearestNeighbor(e,o);default:throw new Error(`Interpolation is ${this.interpolation}
          but only ${[...q_]} are supported`)}})}}gF.className="RandomWidth";He(gF);/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mee=xe();Mee.registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,n=>{n&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */var Mi;(function(n){n[n.DT_INVALID=0]="DT_INVALID",n[n.DT_FLOAT=1]="DT_FLOAT",n[n.DT_DOUBLE=2]="DT_DOUBLE",n[n.DT_INT32=3]="DT_INT32",n[n.DT_UINT8=4]="DT_UINT8",n[n.DT_INT16=5]="DT_INT16",n[n.DT_INT8=6]="DT_INT8",n[n.DT_STRING=7]="DT_STRING",n[n.DT_COMPLEX64=8]="DT_COMPLEX64",n[n.DT_INT64=9]="DT_INT64",n[n.DT_BOOL=10]="DT_BOOL",n[n.DT_QINT8=11]="DT_QINT8",n[n.DT_QUINT8=12]="DT_QUINT8",n[n.DT_QINT32=13]="DT_QINT32",n[n.DT_BFLOAT16=14]="DT_BFLOAT16",n[n.DT_QINT16=15]="DT_QINT16",n[n.DT_QUINT16=16]="DT_QUINT16",n[n.DT_UINT16=17]="DT_UINT16",n[n.DT_COMPLEX128=18]="DT_COMPLEX128",n[n.DT_HALF=19]="DT_HALF",n[n.DT_RESOURCE=20]="DT_RESOURCE",n[n.DT_VARIANT=21]="DT_VARIANT",n[n.DT_UINT32=22]="DT_UINT32",n[n.DT_UINT64=23]="DT_UINT64",n[n.DT_FLOAT_REF=101]="DT_FLOAT_REF",n[n.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",n[n.DT_INT32_REF=103]="DT_INT32_REF",n[n.DT_UINT8_REF=104]="DT_UINT8_REF",n[n.DT_INT16_REF=105]="DT_INT16_REF",n[n.DT_INT8_REF=106]="DT_INT8_REF",n[n.DT_STRING_REF=107]="DT_STRING_REF",n[n.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",n[n.DT_INT64_REF=109]="DT_INT64_REF",n[n.DT_BOOL_REF=110]="DT_BOOL_REF",n[n.DT_QINT8_REF=111]="DT_QINT8_REF",n[n.DT_QUINT8_REF=112]="DT_QUINT8_REF",n[n.DT_QINT32_REF=113]="DT_QINT32_REF",n[n.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",n[n.DT_QINT16_REF=115]="DT_QINT16_REF",n[n.DT_QUINT16_REF=116]="DT_QUINT16_REF",n[n.DT_UINT16_REF=117]="DT_UINT16_REF",n[n.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",n[n.DT_HALF_REF=119]="DT_HALF_REF",n[n.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",n[n.DT_VARIANT_REF=121]="DT_VARIANT_REF",n[n.DT_UINT32_REF=122]="DT_UINT32_REF",n[n.DT_UINT64_REF=123]="DT_UINT64_REF"})(Mi||(Mi={}));var Y_;(function(n){(function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"})(n.CheckpointFormatVersion||(n.CheckpointFormatVersion={}))})(Y_||(Y_={}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Dee={};function AF(n){return Dee[n]}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function D(n,e,t,s,r){const i=e.inputParams[n];if(i&&i.inputIndexStart!==void 0){const a=i.inputIndexStart,l=i.inputIndexEnd===0?void 0:i.inputIndexEnd===void 0?a+1:i.inputIndexEnd,c=a<0?e.inputNames.length+a:a;if(i.type==="tensor")return wr(e.inputNames[c],t,s,r);if(i.type==="tensors"){const d=e.inputs.slice(a,l);return e.inputNames.slice(a,l).filter((p,A)=>{var m;return((m=d[A])===null||m===void 0?void 0:m.op)!=="NoOp"}).map(p=>wr(p,t,s,r))}const u=wr(e.inputNames[c],t,s,r),h=u.dataSync();return i.type==="number"?h[0]:oo(u.shape,h)}const o=e.attrParams[n];return o&&o.value}function wr(n,e,t,s){const[r,i]=Di(n,t);if(s!=null){const a=s.getHashTableHandleByName(r);if(a!=null)return a}const o=t.currentContextIds.find(a=>!!e[$0(r,a)]);return o!==void 0?e[$0(r,o)][i]:void 0}function j_(n,e,t){return e[$0(n,t.currentContextId)]}function tl(n,e){const[t,s,r]=Di(n,e);return[$0(t,e&&e.currentContextId),s,r]}function $0(n,e){return e?`${n}-${e}`:n}function Di(n,e){if(n==="")return["",0,void 0];const t=e!=null&&e.parseNodeNameCache!=null;if(t){const i=e.parseNodeNameCache.get(n);if(i!=null)return i}const s=n.split(":");let r;if(s.length===1)r=[n,0,void 0];else{const i=s[0],o=s.length===3?s[1]:void 0,a=Number(s[s.length-1]);r=[i,a,o]}return t&&e.parseNodeNameCache.set(n,r),r}function a0(n,e,t){let s=D("pad",n,e,t);if(s==="explicit"){s=D("explicitPaddings",n,e,t);const r=[[0,0],[0,0],[0,0],[0,0]];for(let i=0;i<4;i++)r[i][0]=s[i*2],r[i][1]=s[i*2+1];return r}return s}function nl(n){return n.kept?n:Ia(n)}/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Fee=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],$ee=Object.freeze(Object.defineProperty({__proto__:null,json:Fee},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Pee=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsFinite",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsInf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],Lee=Object.freeze(Object.defineProperty({__proto__:null,json:Pee},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Oee=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}],Qee=Object.freeze(Object.defineProperty({__proto__:null,json:Oee},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Uee=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],zee=Object.freeze(Object.defineProperty({__proto__:null,json:Uee},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Gee=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomStandardNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniformInt",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number"},{tfName:"maxval",name:"maxval",type:"number"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],Vee=Object.freeze(Object.defineProperty({__proto__:null,json:Gee},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wee=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],Hee=Object.freeze(Object.defineProperty({__proto__:null,json:Wee},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qee=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],Yee=Object.freeze(Object.defineProperty({__proto__:null,json:qee},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jee=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],Xee=Object.freeze(Object.defineProperty({__proto__:null,json:jee},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Kee=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"InitializeTable",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]},{tfOpName:"InitializeTableV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],Jee=Object.freeze(Object.defineProperty({__proto__:null,json:Kee},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Zee=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}],ete=Object.freeze(Object.defineProperty({__proto__:null,json:Zee},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tte=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BitwiseAnd",category:"logical",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}]}],nte=Object.freeze(Object.defineProperty({__proto__:null,json:tte},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ste=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"MatrixBandPart",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"numLower",type:"tensor"},{start:1,name:"numUpper",type:"tensor"}]}],rte=Object.freeze(Object.defineProperty({__proto__:null,json:ste},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ite=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]}],ote=Object.freeze(Object.defineProperty({__proto__:null,json:ite},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ate=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],lte=Object.freeze(Object.defineProperty({__proto__:null,json:ate},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cte=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]},{tfOpName:"TensorScatterUpdate",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],ute=Object.freeze(Object.defineProperty({__proto__:null,json:cte},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hte=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],dte=Object.freeze(Object.defineProperty({__proto__:null,json:hte},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fte=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],pte=Object.freeze(Object.defineProperty({__proto__:null,json:fte},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mte=[{tfOpName:"StaticRegexReplace",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"pattern",name:"pattern",type:"string"},{tfName:"rewrite",name:"rewrite",type:"string"},{tfName:"replace_global",name:"replaceGlobal",type:"bool"}]},{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],gte=Object.freeze(Object.defineProperty({__proto__:null,json:mte},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ate=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"EnsureShape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}],yte=Object.freeze(Object.defineProperty({__proto__:null,json:Ate},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class X_{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const e=[$ee,Lee,Qee,zee,Vee,Hee,Yee,Xee,Jee,ete,nte,rte,ote,lte,ute,dte,pte,gte,yte],t=[].concat(...e.map(s=>s.json));this.opMappers=t.reduce((s,r)=>(s[r.tfOpName]=r,s),{})}transformGraph(e,t={}){const s=e.node,r=[],i=[],o=[],a=s.reduce((A,m)=>(A[m.name]=this.mapNode(m),m.op.startsWith("Placeholder")?r.push(A[m.name]):m.op==="Const"?i.push(A[m.name]):(m.input==null||m.input.length===0)&&o.push(A[m.name]),A),{});let l=[];const c=[];let u={},h={};t!=null&&(u=this.mapSignatureEntries(t.inputs),h=this.mapSignatureEntries(t.outputs));const d=Object.keys(a);d.forEach(A=>{const m=a[A];m.inputNames.forEach((g,x)=>{const[v,,b]=tl(g),w=a[v];if(w.outputs!=null){const _=w.outputs.indexOf(b);if(_!==-1){const N=`${v}:${_}`;m.inputNames[x]=N}}m.inputs.push(w),w.children.push(m)})}),Object.keys(h).length===0?d.forEach(A=>{const m=a[A];m.children.length===0&&c.push(m)}):Object.keys(h).forEach(A=>{const[m]=tl(A),g=a[m];g!=null&&(g.signatureKey=h[A],c.push(g))}),Object.keys(u).length>0?Object.keys(u).forEach(A=>{const[m]=tl(A),g=a[m];g&&(g.signatureKey=u[A],l.push(g))}):l=r;let f={};e.library!=null&&e.library.function!=null&&(f=e.library.function.reduce((A,m)=>(A[m.signature.name]=this.mapFunction(m),A),{}));const p={nodes:a,inputs:l,outputs:c,weights:i,placeholders:r,signature:t,functions:f};return o.length>0&&(p.initNodes=o),p}mapSignatureEntries(e){return Object.keys(e||{}).reduce((t,s)=>(t[e[s].name]=s,t),{})}mapNode(e){const t=AF(e.op)||this.opMappers[e.op]||{};e.attr==null&&(e.attr={});const s={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map(r=>r.startsWith("^")?r.slice(1):r),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return t.inputs!=null&&(s.inputParams=t.inputs.reduce((r,i)=>(r[i.name]={type:i.type,inputIndexStart:i.start,inputIndexEnd:i.end},r),{})),t.attrs!=null&&(s.attrParams=t.attrs.reduce((r,i)=>{const o=i.type;let a;switch(i.type){case"string":a=mC(e.attr,i.tfName,i.defaultValue),a===void 0&&i.tfDeprecatedName&&(a=mC(e.attr,i.tfDeprecatedName,i.defaultValue));break;case"string[]":a=CC(e.attr,i.tfName,i.defaultValue),a===void 0&&i.tfDeprecatedName&&(a=CC(e.attr,i.tfDeprecatedName,i.defaultValue));break;case"number":a=AC(e.attr,i.tfName,i.defaultValue||0),a===void 0&&i.tfDeprecatedName&&(a=AC(e.attr,i.tfDeprecatedName,i.defaultValue));break;case"number[]":a=vC(e.attr,i.tfName,i.defaultValue),a===void 0&&i.tfDeprecatedName&&(a=vC(e.attr,i.tfDeprecatedName,i.defaultValue));break;case"bool":a=gC(e.attr,i.tfName,i.defaultValue),a===void 0&&i.tfDeprecatedName&&(a=gC(e.attr,i.tfDeprecatedName,i.defaultValue));break;case"bool[]":a=wC(e.attr,i.tfName,i.defaultValue),a===void 0&&i.tfDeprecatedName&&(a=wC(e.attr,i.tfDeprecatedName,i.defaultValue));break;case"shape":a=bC(e.attr,i.tfName,i.defaultValue),a===void 0&&i.tfDeprecatedName&&(a=bC(e.attr,i.tfDeprecatedName,i.defaultValue));break;case"shape[]":a=IC(e.attr,i.tfName,i.defaultValue),a===void 0&&i.tfDeprecatedName&&(a=IC(e.attr,i.tfDeprecatedName,i.defaultValue));break;case"dtype":a=yC(e.attr,i.tfName,i.defaultValue),a===void 0&&i.tfDeprecatedName&&(a=yC(e.attr,i.tfDeprecatedName,i.defaultValue));break;case"dtype[]":a=xC(e.attr,i.tfName,i.defaultValue),a===void 0&&i.tfDeprecatedName&&(a=xC(e.attr,i.tfDeprecatedName,i.defaultValue));break;case"func":a=K_(e.attr,i.tfName,i.defaultValue),a===void 0&&i.tfDeprecatedName&&(a=K_(e.attr,i.tfDeprecatedName,i.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${i.type} for op: ${e.op}`)}return r[i.name]={value:a,type:o},r},{})),s}mapFunction(e){const t=e.nodeDef,s=[],r=[];let i={};t!=null&&(i=t.reduce((h,d)=>(h[d.name]=this.mapNode(d),d.op==="Const"&&r.push(h[d.name]),h),{}));const o=[],a=[];e.signature.inputArg.forEach(h=>{const[d]=tl(h.name),f={name:d,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:lS(h.type),type:"dtype"}},children:[]};f.signatureKey=h.name,o.push(f),i[d]=f}),Object.keys(i).forEach(h=>{const d=i[h];d.inputNames.forEach((f,p)=>{const[A,,m]=tl(f),g=i[A];if(g.outputs!=null){const x=g.outputs.indexOf(m);if(x!==-1){const v=`${A}:${x}`;d.inputNames[p]=v}}d.inputs.push(g),g.children.push(d)})});const c=e.ret;e.signature.outputArg.forEach(h=>{const[d,f]=tl(c[h.name]),p=i[d];p!=null&&(p.defaultOutput=f,a.push(p))});const u=this.mapArgsToSignature(e);return{nodes:i,inputs:o,outputs:a,weights:r,placeholders:s,signature:u}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce((t,s)=>(t[s.name]=this.mapArgToTensorInfo(s),t),{}),outputs:e.signature.outputArg.reduce((t,s)=>(t[s.name]=this.mapArgToTensorInfo(s,e.ret),t),{})}}mapArgToTensorInfo(e,t){let s=e.name;return t!=null&&(s=t[s]),{name:s,dtype:e.type}}}function xte(n){const e=xe().global;if(typeof e.atob<"u")return e.atob(n);if(typeof Buffer<"u")return new Buffer(n,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}function yF(n,e){const t=Array.isArray(n)?String.fromCharCode.apply(null,n):xte(n);return e?t:t.toLowerCase()}function mC(n,e,t,s=!1){const r=n[e];return r!=null?yF(r.s,s):t}function gC(n,e,t){const s=n[e];return s?s.b:t}function AC(n,e,t){const s=n[e]||{},r=s.i!=null?s.i:s.f!=null?s.f:t;return typeof r=="number"?r:parseInt(r,10)}function lS(n){switch(typeof n=="string"&&(n=Mi[n]),n){case Mi.DT_FLOAT:case Mi.DT_HALF:return"float32";case Mi.DT_INT32:case Mi.DT_INT64:case Mi.DT_INT8:case Mi.DT_UINT8:return"int32";case Mi.DT_BOOL:return"bool";case Mi.DT_DOUBLE:return"float32";case Mi.DT_STRING:return"string";case Mi.DT_COMPLEX64:case Mi.DT_COMPLEX128:return"complex64";default:return null}}function K_(n,e,t){const s=n[e];return s&&s.func?s.func.name:t}function yC(n,e,t){const s=n[e];return s&&s.type?lS(s.type):t}function xC(n,e,t){const s=n[e];return s&&s.list&&s.list.type?s.list.type.map(r=>lS(r)):t}function xF(n){if(!n.unknownRank)return n.dim!=null?n.dim.map(e=>typeof e.size=="number"?e.size:parseInt(e.size,10)):[]}function bC(n,e,t){const s=n[e];return s&&s.shape?xF(s.shape):t}function vC(n,e,t){const s=n[e];return s?((s.list.f&&s.list.f.length?s.list.f:s.list.i)||[]).map(r=>typeof r=="number"?r:parseInt(r,10)):t}function CC(n,e,t,s=!1){const r=n[e];return r&&r.list&&r.list.s?r.list.s.map(i=>yF(i,s)):t}function IC(n,e,t){const s=n[e];return s&&s.list&&s.list.shape?s.list.shape.map(r=>xF(r)):t}function wC(n,e,t){const s=n[e];return s&&s.list&&s.list.b?s.list.b:t}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class bte{constructor(e,t,s){this.node=e,this.tensorMap=t,this.context=s,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map(r=>this.getInput(r)),e.rawAttrs!=null&&(this.attrs=Object.keys(e.rawAttrs).reduce((r,i)=>(r[i]=this.getAttr(i),r),{}))}getInput(e){return wr(e,this.tensorMap,this.context)}getAttr(e,t){const s=this.node.rawAttrs[e];if(s.tensor!=null)return wr(e,this.tensorMap,this.context);if(s.i!=null||s.f!=null)return AC(this.node.rawAttrs,e,t);if(s.s!=null)return mC(this.node.rawAttrs,e,t);if(s.b!=null)return gC(this.node.rawAttrs,e,t);if(s.shape!=null)return bC(this.node.rawAttrs,e,t);if(s.type!=null)return yC(this.node.rawAttrs,e,t);if(s.list!=null){if(s.list.i!=null||s.list.f!=null)return vC(this.node.rawAttrs,e,t);if(s.list.s!=null)return CC(this.node.rawAttrs,e,t);if(s.list.shape!=null)return IC(this.node.rawAttrs,e,t);if(s.list.b!=null)return wC(this.node.rawAttrs,e,t);if(s.list.type!=null)return xC(this.node.rawAttrs,e,t)}return t}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Nr=Object.freeze(Object.defineProperty({__proto__:null,OP_SCOPE_SUFFIX:AI,abs:Gs,acos:vI,acosh:CI,add:$e,addN:lN,all:kx,any:Om,argMax:yl,argMin:II,asin:wI,asinh:SI,atan:EI,atan2:_I,atanh:TI,avgPool:cA,avgPool3d:kI,basicLSTMCell:cN,batchNorm:mp,batchNorm2d:NI,batchNorm3d:RI,batchNorm4d:MI,batchToSpaceND:uA,bincount:DI,bitwiseAnd:uN,booleanMaskAsync:qN,broadcastArgs:hN,broadcastTo:pu,buffer:rn,cast:Ze,ceil:FI,clipByValue:$r,clone:Ia,complex:gl,concat:ps,concat1d:$I,concat2d:PI,concat3d:LI,concat4d:OI,conv1d:Nx,conv2d:xl,conv2dTranspose:Rx,conv3d:UI,conv3dTranspose:zI,cos:hA,cosh:Mx,cosineWindow:s1,cumprod:zm,cumsum:Dx,denseBincount:E0,depthToSpace:GI,depthwiseConv2d:gp,diag:fN,dilation2d:VI,div:rt,divNoNan:WI,dot:HI,dropout:bw,einsum:Zc,elu:Ap,enclosingPowerOfTwo:vw,ensureShape:pN,equal:zi,erf:Fx,euclideanNorm:YI,exp:xr,expandDims:Kn,expm1:jI,eye:$x,fft:SA,fill:Nh,floor:xp,floorDiv:Bx,fused:nR,gather:bp,gatherND:KN,greater:ii,greaterEqual:_l,ifft:Zd,imag:dA,image:Is,inTopKAsync:JN,irfft:Kx,isFinite:XI,isInf:KI,isNaN:JI,leakyRelu:fA,less:Xd,lessEqual:xc,linalg:ww,linspace:AN,localResponseNormalization:ZI,log:Gi,log1p:pA,logSigmoid:ew,logSoftmax:Lx,logSumExp:mA,logicalAnd:Ko,logicalNot:gA,logicalOr:Ox,logicalXor:tw,losses:cR,lowerBound:xN,matMul:An,max:lo,maxPool:AA,maxPool3d:nw,maxPoolWithArgmax:bN,maximum:Qa,mean:_s,meshgrid:vN,min:jd,minimum:vl,mirrorPad:yA,mod:sw,moments:xA,movingAverage:YN,mul:ne,multiRNNCell:CN,multinomial:IN,neg:ms,norm:yp,notEqual:Eu,oneHot:_u,ones:Ai,onesLike:Vi,op:ie,outerProduct:wN,pad:co,pad1d:SN,pad2d:EN,pad3d:rw,pad4d:_N,pool:iw,pow:ka,prelu:vA,print:bI,prod:ow,raggedGather:TN,raggedRange:BN,raggedTensorToTensor:kN,rand:NN,randomGamma:DN,randomNormal:zx,randomStandardNormal:FN,randomUniform:bc,randomUniformInt:$N,range:Cl,real:Kd,reciprocal:uw,relu:oa,relu6:Gx,reshape:ae,reverse:uo,reverse1d:PN,reverse2d:LN,reverse3d:ON,reverse4d:QN,rfft:EA,round:Vx,rsqrt:Wx,scalar:Bt,scatterND:jN,searchSorted:Qx,selu:Hx,separableConv2d:qx,setdiff1dAsync:UN,sigmoid:Tr,sign:hw,signal:lR,sin:Yx,sinh:jx,slice:Rt,slice1d:CA,slice2d:Xx,slice3d:IA,slice4d:Jd,softmax:wA,softplus:Rh,spaceToBatchND:bA,sparse:uR,sparseToDense:XN,spectral:aR,split:yi,sqrt:yr,square:Jn,squaredDifference:Jx,squeeze:Ht,stack:Ci,step:Mh,stridedSlice:dw,string:hR,sub:gt,sum:Mt,tan:fw,tanh:oc,tensor:ao,tensor1d:fs,tensor2d:ni,tensor3d:pw,tensor4d:zN,tensor5d:GN,tensor6d:VN,tensorScatterUpdate:WN,tile:so,topk:gw,transpose:Sn,truncatedNormal:e1,unique:Aw,unsortedSegmentSum:t1,unstack:ho,upperBound:HN,variable:yw,where:Br,whereAsync:xw,zeros:Rs,zerosLike:_n},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vte=(n,e,t,s=Nr)=>{switch(n.op){case"BiasAdd":case"AddV2":case"Add":return[s.add(D("a",n,e,t),D("b",n,e,t))];case"AddN":return[s.addN(D("tensors",n,e,t))];case"FloorMod":case"Mod":return[s.mod(D("a",n,e,t),D("b",n,e,t))];case"Mul":return[s.mul(D("a",n,e,t),D("b",n,e,t))];case"RealDiv":case"Div":return[s.div(D("a",n,e,t),D("b",n,e,t))];case"DivNoNan":return[s.divNoNan(D("a",n,e,t),D("b",n,e,t))];case"FloorDiv":return[s.floorDiv(D("a",n,e,t),D("b",n,e,t))];case"Sub":return[s.sub(D("a",n,e,t),D("b",n,e,t))];case"Minimum":return[s.minimum(D("a",n,e,t),D("b",n,e,t))];case"Maximum":return[s.maximum(D("a",n,e,t),D("b",n,e,t))];case"Pow":return[s.pow(D("a",n,e,t),D("b",n,e,t))];case"SquaredDifference":return[s.squaredDifference(D("a",n,e,t),D("b",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Cte=(n,e,t,s=Nr)=>{switch(n.op){case"Abs":case"ComplexAbs":return[s.abs(D("x",n,e,t))];case"Acos":return[s.acos(D("x",n,e,t))];case"Acosh":return[s.acosh(D("x",n,e,t))];case"Asin":return[s.asin(D("x",n,e,t))];case"Asinh":return[s.asinh(D("x",n,e,t))];case"Atan":return[s.atan(D("x",n,e,t))];case"Atan2":return[s.atan2(D("x",n,e,t),D("y",n,e,t))];case"Atanh":return[s.atanh(D("x",n,e,t))];case"Ceil":return[s.ceil(D("x",n,e,t))];case"Complex":return[s.complex(D("real",n,e,t),D("imag",n,e,t))];case"Cos":return[s.cos(D("x",n,e,t))];case"Cosh":return[s.cosh(D("x",n,e,t))];case"Elu":return[s.elu(D("x",n,e,t))];case"Erf":return[s.erf(D("x",n,e,t))];case"Exp":return[s.exp(D("x",n,e,t))];case"Expm1":return[s.expm1(D("x",n,e,t))];case"Floor":return[s.floor(D("x",n,e,t))];case"Log":return[s.log(D("x",n,e,t))];case"Log1p":return[s.log1p(D("x",n,e,t))];case"Imag":return[s.imag(D("x",n,e,t))];case"Neg":return[s.neg(D("x",n,e,t))];case"Reciprocal":return[s.reciprocal(D("x",n,e,t))];case"Real":return[s.real(D("x",n,e,t))];case"Relu":return[s.relu(D("x",n,e,t))];case"Round":return[s.round(D("x",n,e,t))];case"Selu":return[s.selu(D("x",n,e,t))];case"Sigmoid":return[s.sigmoid(D("x",n,e,t))];case"Sin":return[s.sin(D("x",n,e,t))];case"Sign":return[s.sign(D("x",n,e,t))];case"Sinh":return[s.sinh(D("x",n,e,t))];case"Softplus":return[s.softplus(D("x",n,e,t))];case"Sqrt":return[s.sqrt(D("x",n,e,t))];case"Square":return[s.square(D("x",n,e,t))];case"Tanh":return[s.tanh(D("x",n,e,t))];case"Tan":return[s.tan(D("x",n,e,t))];case"ClipByValue":return[s.clipByValue(D("x",n,e,t),D("clipValueMin",n,e,t),D("clipValueMax",n,e,t))];case"Relu6":return[s.relu6(D("x",n,e,t))];case"Rsqrt":return[s.rsqrt(wr(n.inputNames[0],e,t))];case"LeakyRelu":return[s.leakyRelu(D("x",n,e,t),D("alpha",n,e,t))];case"Prelu":return[s.prelu(D("x",n,e,t),D("alpha",n,e,t))];case"IsNan":return[s.isNaN(wr(n.inputNames[0],e,t))];case"IsInf":return[s.isInf(wr(n.inputNames[0],e,t))];case"IsFinite":return[s.isFinite(wr(n.inputNames[0],e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vo(n,e,t=""){if(!(typeof n=="number"||typeof e=="number")){z(n.length===e.length,()=>t+` Shapes ${n} and ${e} must match`);for(let s=0;s<n.length;s++){const r=n[s],i=e[s];z(r<0||i<0||r===i,()=>t+` Shapes ${n} and ${e} must match`)}}}function J_(n){return!(typeof n=="number"||n.some(e=>e<0))}function jp(n,e,t){let s=SC(n,t);const r=!J_(s);if(r&&e.length===0)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${s}`);if(r&&e.forEach(i=>{s=SC(i.shape,s)}),!J_(s))throw new Error(`Non-fully-defined elementShape: ${s}`);return s}function SC(n,e){if(typeof n=="number")return e;if(typeof e=="number")return n;if(n.length!==e.length)throw new Error(`Incompatible ranks during merge: ${n} vs. ${e}`);const t=[];for(let s=0;s<n.length;++s){const r=n[s],i=e[s];if(r>=0&&i>=0&&r!==i)throw new Error(`Incompatible shape during merge: ${n} vs. ${e}`);t[s]=r>=0?r:i}return t}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ite{constructor(e,t,s,r,i,o,a){this.name=e,this.dtype=t,this.maxSize=s,this.elementShape=r,this.identicalElementShapes=i,this.dynamicSize=o,this.clearAfterRead=a,this.tensors=[],this.closed_=!1,this.idTensor=Bt(0),Xs(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach(t=>{(e==null||!e.has(t.tensor.id))&&t.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);const t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map(t=>this.read(t))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);const s=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},
          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(this.size()===0&&(this.elementShape==null||this.elementShape.length===0)&&(this.elementShape=t.shape),vo(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),s.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(s.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);s.tensor=t,Xs(t),s.written=!0,this.tensors[e]=s}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach((s,r)=>this.write(s,t[r]))}gather(e,t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let r=0;r<this.size();r++)e.push(r)}if(e.length===0)return ao([],[0].concat(this.elementShape));const s=this.readMany(e);return vo(this.elementShape,s[0].shape,"TensorArray shape mismatch: "),Ci(s,0)}concat(e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(this.size()===0)return ao([],[0].concat(this.elementShape));const t=[];for(let r=0;r<this.size();r++)t.push(r);const s=this.readMany(t);return vo(this.elementShape,s[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${s[0].shape})`),ps(s,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);const s=Math.max(...e);if(!this.dynamicSize&&s>=this.maxSize)throw new Error(`Max index must be < array size (${s}  vs. ${this.maxSize})`);this.writeMany(e,ho(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let s=0;const r=e.map(l=>(s+=l,s));if(s!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${s}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);const i=s===0?0:t.size/s,o=[];ue(()=>{t=ae(t,[1,s,i]);for(let l=0;l<e.length;++l){const u=[0,l===0?0:r[l-1],0],h=[1,e[l],i];o[l]=ae(Rt(t,u,h),this.elementShape)}return o});const a=[];for(let l=0;l<e.length;l++)a[l]=l;this.writeMany(a,o)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ku{get id(){return this.idTensor.id}constructor(e,t,s,r=-1){this.tensors=e,this.elementShape=t,this.elementDtype=s,e?.forEach(i=>{if(s!==i.dtype)throw new Error(`Invalid data types; op elements ${s}, but list elements ${i.dtype}`);vo(t,i.shape,"TensorList shape mismatch: "),Xs(i)}),this.idTensor=Bt(0),this.maxNumElements=r,Xs(this.idTensor)}copy(){return new ku([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach(t=>{(e==null||!e.has(t.id))&&t.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,s=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(s!==-1&&this.tensors.length!==s)throw new Error(`Operation expected a list with ${s} elements but got a list with ${this.tensors.length} elements.`);vo(e,this.elementShape,"TensorList shape mismatch: ");const r=jp(this.elementShape,this.tensors,e);return ue(()=>{const i=this.tensors.map(o=>ae(o,r));return Ci(i,0)})}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(this.size()===0)throw new Error("Trying to pop from an empty list.");const s=jp(this.elementShape,this.tensors,e),r=this.tensors.pop();return r.kept=!1,vo(r.shape,e,"TensorList shape mismatch: "),ae(r,s)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(vo(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");Xs(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(this.maxNumElements!==-1&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);const t=new ku([],this.elementShape,this.elementDtype,this.maxNumElements);t.tensors.length=e;for(let s=0;s<Math.min(this.tensors.length,e);++s)t.tensors[s]=this.tensors[s];return t}getItem(e,t,s){if(s!==this.elementDtype)throw new Error(`Invalid data types; op elements ${s}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(this.tensors[e]==null)throw new Error(`element at index ${e} is null.`);vo(this.tensors[e].shape,t,"TensorList shape mismatch: ");const r=jp(this.elementShape,this.tensors,t);return ae(this.tensors[e],r)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||this.maxNumElements!==-1&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);vo(this.elementShape,t.shape,"TensorList shape mismatch: "),Xs(t),this.tensors[e]!=null&&(this.tensors[e].kept=!1),this.tensors[e]=t}gather(e,t,s){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);vo(this.elementShape,s,"TensorList shape mismatch: "),e=e.slice(0,this.size());const r=jp(this.elementShape,this.tensors,s);return e.length===0?ao([],[0].concat(r)):ue(()=>{const i=e.map(o=>ae(this.tensors[o],r));return Ci(i,0)})}concat(e,t){if(e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);vo(this.elementShape,t,"TensorList shape mismatch: ");const s=jp(this.elementShape,this.tensors,t);return this.size()===0?ao([],[0].concat(s)):ue(()=>{const r=this.tensors.map(i=>ae(i,s));return ps(r,0)})}}function wte(n,e,t){const s=n.dtype;if(n.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${n.shape}`);if(n.dtype!==t)throw new Error(`Invalid data types; op elements ${n.dtype}, but list elements ${t}`);const r=n.shape.slice(1);vo(r,e,"TensorList shape mismatch: ");const i=ho(n);return new ku(i,e,s)}function Ste(n,e,t,s){return new ku([],n,e,s)}function Ete(n,e,t,s){if(e.length!==n.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${n.shape[0]}`);const r=Math.max(...e);if(s!=null&&s!==-1&&r>=s)throw new Error(`Max index must be < array size (${r}  vs. ${s})`);const i=new ku([],t,n.dtype,s),o=ho(n,0);return e.forEach((a,l)=>{i.setItem(a,o[l])}),i}function _te(n,e,t){let s=0;const r=e.map(u=>(s+=u,s));if(s!==n.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${s}, and tensor's shape is: ${n.shape}`);const i=n.shape.slice(1),o=SC(i,t),a=s===0?0:n.size/s,l=ue(()=>{const u=[];n=ae(n,[1,s,a]);for(let h=0;h<e.length;++h){const f=[0,h===0?0:r[h-1],0],p=[1,e[h],a];u[h]=ae(Rt(n,f,p),o)}return n.dispose(),u}),c=new ku([],t,n.dtype,e.length);for(let u=0;u<l.length;u++)c.setItem(u,l[u]);return c}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Tte=async(n,e,t)=>{switch(n.op){case"If":case"StatelessIf":{const s=D("thenBranch",n,e,t),r=D("elseBranch",n,e,t),i=D("cond",n,e,t),o=D("args",n,e,t);return(await i.data())[0]?t.functionMap[s].executeFunctionAsync(o,t.tensorArrayMap,t.tensorListMap):t.functionMap[r].executeFunctionAsync(o,t.tensorArrayMap,t.tensorListMap)}case"While":case"StatelessWhile":{const s=D("body",n,e,t),r=D("cond",n,e,t),i=D("args",n,e,t),o=await t.functionMap[r].executeFunctionAsync(i,t.tensorArrayMap,t.tensorListMap),a=i.map(u=>u.id);let l=await o[0].data();o.forEach(u=>{!u.kept&&a.indexOf(u.id)===-1&&u.dispose()});let c=i;for(;l[0];){const u=c;c=await t.functionMap[s].executeFunctionAsync(c,t.tensorArrayMap,t.tensorListMap);const h=c.map(f=>f.id);u.forEach(f=>{!f.kept&&a.indexOf(f.id)===-1&&h.indexOf(f.id)===-1&&f.dispose()});const d=await t.functionMap[r].executeFunctionAsync(c,t.tensorArrayMap,t.tensorListMap);l=await d[0].data(),d.forEach(f=>{!f.kept&&a.indexOf(f.id)===-1&&h.indexOf(f.id)===-1&&f.dispose()})}return c}case"LoopCond":{const s=D("pred",n,e,t);return[nl(s)]}case"Switch":{const s=D("pred",n,e,t);let r=D("data",n,e,t);return r.kept||(r=nl(r)),(await s.data())[0]?[void 0,r]:[r,void 0]}case"Merge":{const s=n.inputNames.find(r=>wr(r,e,t)!==void 0);if(s){const r=wr(s,e,t);return[nl(r)]}return}case"Enter":{const s=D("frameName",n,e,t),r=D("tensor",n,e,t);return t.enterFrame(s),[nl(r)]}case"Exit":{const s=D("tensor",n,e,t);return t.exitFrame(),[nl(s)]}case"NextIteration":{const s=D("tensor",n,e,t);return t.nextIteration(),[nl(s)]}case"TensorArrayV3":{const s=D("size",n,e,t),r=D("dtype",n,e,t),i=D("elementShape",n,e,t),o=D("dynamicSize",n,e,t),a=D("clearAfterRead",n,e,t),l=D("identicalElementShapes",n,e,t),c=D("name",n,e,t),u=new Ite(c,r,s,i,l,o,a);return t.addTensorArray(u),[u.idTensor,Bt(1)]}case"TensorArrayWriteV3":{const s=D("tensorArrayId",n,e,t),r=D("index",n,e,t),i=D("tensor",n,e,t),o=t.getTensorArray(s.id);return o.write(r,i),[o.idTensor]}case"TensorArrayReadV3":{const s=D("tensorArrayId",n,e,t),r=D("index",n,e,t);return[t.getTensorArray(s.id).read(r)]}case"TensorArrayGatherV3":{const s=D("tensorArrayId",n,e,t),r=D("indices",n,e,t),i=D("dtype",n,e,t);return[t.getTensorArray(s.id).gather(r,i)]}case"TensorArrayScatterV3":{const s=D("tensorArrayId",n,e,t),r=D("indices",n,e,t),i=D("tensor",n,e,t),o=t.getTensorArray(s.id);return o.scatter(r,i),[o.idTensor]}case"TensorArrayConcatV3":{const s=D("tensorArrayId",n,e,t),r=t.getTensorArray(s.id),i=D("dtype",n,e,t);return[r.concat(i)]}case"TensorArraySplitV3":{const s=D("tensorArrayId",n,e,t),r=D("tensor",n,e,t),i=D("lengths",n,e,t),o=t.getTensorArray(s.id);return o.split(i,r),[o.idTensor]}case"TensorArraySizeV3":{const s=D("tensorArrayId",n,e,t),r=t.getTensorArray(s.id);return[Bt(r.size(),"int32")]}case"TensorArrayCloseV3":{const s=D("tensorArrayId",n,e,t),r=t.getTensorArray(s.id);return r.clearAndClose(),[r.idTensor]}case"TensorListSetItem":{const s=D("tensorListId",n,e,t),r=D("index",n,e,t),i=D("tensor",n,e,t),o=t.getTensorList(s.id);return o.setItem(r,i),[o.idTensor]}case"TensorListGetItem":{const s=D("tensorListId",n,e,t),r=D("index",n,e,t),i=D("elementShape",n,e,t),o=D("elementDType",n,e,t);return[t.getTensorList(s.id).getItem(r,i,o)]}case"TensorListScatterV2":case"TensorListScatter":{const s=D("indices",n,e,t),r=D("tensor",n,e,t),i=D("elementShape",n,e,t),o=D("numElements",n,e,t),a=Ete(r,s,i,o);return t.addTensorList(a),[a.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const s=D("elementShape",n,e,t),r=D("elementDType",n,e,t);let i;n.op==="TensorListReserve"?i="numElements":i="maxNumElements";const o=D(i,n,e,t),a=n.op==="TensorListReserve"?-1:o,l=Ste(s,r,o,a);return t.addTensorList(l),[l.idTensor]}case"TensorListGather":{const s=D("tensorListId",n,e,t),r=D("indices",n,e,t),i=D("elementShape",n,e,t),o=D("elementDType",n,e,t);return[t.getTensorList(s.id).gather(r,o,i)]}case"TensorListStack":{const s=D("tensorListId",n,e,t),r=D("elementShape",n,e,t),i=D("elementDType",n,e,t),o=D("numElements",n,e,t);return[t.getTensorList(s.id).stack(r,i,o)]}case"TensorListFromTensor":{const s=D("tensor",n,e,t),r=D("elementShape",n,e,t),i=D("elementDType",n,e,t),o=wte(s,r,i);return t.addTensorList(o),[o.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{const s=D("tensorListId",n,e,t),r=t.getTensorList(s.id),i=D("dtype",n,e,t),o=D("elementShape",n,e,t);return[r.concat(i,o)]}case"TensorListPushBack":{const s=D("tensorListId",n,e,t),r=D("tensor",n,e,t),i=t.getTensorList(s.id);return i.pushBack(r),[i.idTensor]}case"TensorListPopBack":{const s=D("tensorListId",n,e,t),r=D("elementShape",n,e,t),i=D("elementDType",n,e,t);return[t.getTensorList(s.id).popBack(r,i)]}case"TensorListSplit":{const s=D("tensor",n,e,t),r=D("elementShape",n,e,t),i=D("lengths",n,e,t),o=_te(s,i,r);return t.addTensorList(o),[o.idTensor]}case"TensorListLength":{const s=D("tensorListId",n,e,t),r=t.getTensorList(s.id);return[Bt(r.size(),"int32")]}case"TensorListResize":{const s=D("tensorListId",n,e,t),r=D("size",n,e,t),o=t.getTensorList(s.id).resize(r);return t.addTensorList(o),[o.idTensor]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Z_(n,e,t){const[s,r]=D("fusedOps",n,e,t),i=s==="biasadd",o=!i,a=r==="prelu",l=s==="fusedbatchnorm",c=D("numArgs",n,e,t);if(i){if(a&&c!==2)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!a&&i&&c!==1)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(l)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");const u=D("strides",n,e,t),h=a0(n,e,t),d=D("dataFormat",n,e,t).toUpperCase(),f=D("dilations",n,e,t);let[p,A]=D("args",n,e,t);o&&(A=p,p=void 0);const m=D("leakyreluAlpha",n,e,t);return{stride:u,pad:h,dataFormat:d,dilations:f,biasArg:p,preluArg:A,activationFunc:r,leakyreluAlpha:m}}const Bte=(n,e,t,s=Nr)=>{switch(n.op){case"Conv1D":{const r=D("stride",n,e,t),i=D("pad",n,e,t),o=D("dataFormat",n,e,t).toUpperCase(),a=D("dilation",n,e,t);return[s.conv1d(D("x",n,e,t),D("filter",n,e,t),r,i,o,a)]}case"Conv2D":{const r=D("strides",n,e,t),i=a0(n,e,t),o=D("dataFormat",n,e,t).toUpperCase(),a=D("dilations",n,e,t);return[s.conv2d(D("x",n,e,t),D("filter",n,e,t),[r[1],r[2]],i,o,[a[1],a[2]])]}case"_FusedConv2D":{const{stride:r,pad:i,dataFormat:o,dilations:a,biasArg:l,preluArg:c,activationFunc:u,leakyreluAlpha:h}=Z_(n,e,t);return[s.fused.conv2d({x:D("x",n,e,t),filter:D("filter",n,e,t),strides:[r[1],r[2]],pad:i,dataFormat:o,dilations:[a[1],a[2]],bias:l,activation:u,preluActivationWeights:c,leakyreluAlpha:h})]}case"FusedDepthwiseConv2dNative":{const{stride:r,pad:i,dataFormat:o,dilations:a,biasArg:l,preluArg:c,activationFunc:u,leakyreluAlpha:h}=Z_(n,e,t);return[s.fused.depthwiseConv2d({x:D("x",n,e,t),filter:D("filter",n,e,t),strides:[r[1],r[2]],pad:i,dataFormat:o,dilations:[a[1],a[2]],bias:l,activation:u,preluActivationWeights:c,leakyreluAlpha:h})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const r=D("outputShape",n,e,t),i=D("strides",n,e,t),o=a0(n,e,t);return[s.conv2dTranspose(D("x",n,e,t),D("filter",n,e,t),r,[i[1],i[2]],o)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const r=D("strides",n,e,t),i=a0(n,e,t),o=D("dilations",n,e,t),a=D("dataFormat",n,e,t).toUpperCase();return[s.depthwiseConv2d(D("input",n,e,t),D("filter",n,e,t),[r[1],r[2]],i,a,[o[1],o[2]])]}case"Conv3D":{const r=D("strides",n,e,t),i=D("pad",n,e,t),o=D("dataFormat",n,e,t).toUpperCase(),a=D("dilations",n,e,t);return[s.conv3d(D("x",n,e,t),D("filter",n,e,t),[r[1],r[2],r[3]],i,o,[a[1],a[2],a[3]])]}case"AvgPool":{const r=D("strides",n,e,t),i=D("pad",n,e,t),o=D("kernelSize",n,e,t);return[s.avgPool(D("x",n,e,t),[o[1],o[2]],[r[1],r[2]],i)]}case"MaxPool":{const r=D("strides",n,e,t),i=D("pad",n,e,t),o=D("kernelSize",n,e,t);return[s.maxPool(D("x",n,e,t),[o[1],o[2]],[r[1],r[2]],i)]}case"MaxPoolWithArgmax":{const r=D("strides",n,e,t),i=D("pad",n,e,t),o=D("kernelSize",n,e,t),a=D("includeBatchInIndex",n,e,t),{result:l,indexes:c}=s.maxPoolWithArgmax(D("x",n,e,t),[o[1],o[2]],[r[1],r[2]],i,a);return[l,c]}case"AvgPool3D":{const r=D("strides",n,e,t),i=D("pad",n,e,t),o=D("kernelSize",n,e,t);return[s.avgPool3d(D("x",n,e,t),[o[1],o[2],o[3]],[r[1],r[2],r[3]],i)]}case"MaxPool3D":{const r=D("strides",n,e,t),i=D("pad",n,e,t),o=D("kernelSize",n,e,t);return[s.maxPool3d(D("x",n,e,t),[o[1],o[2],o[3]],[r[1],r[2],r[3]],i)]}case"Dilation2D":{const r=D("strides",n,e,t),i=D("pad",n,e,t),o=D("dilations",n,e,t),a=r[1],l=r[2],c=o[1],u=o[2];return[s.dilation2d(D("x",n,e,t),D("filter",n,e,t),[a,l],i,[c,u],"NHWC")]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kte=(n,e,t,s=Nr)=>{switch(n.op){case"Fill":{const r=D("shape",n,e,t),i=D("dtype",n,e,t),o=D("value",n,e,t);return[s.fill(r,o,i)]}case"LinSpace":{const r=D("start",n,e,t),i=D("stop",n,e,t),o=D("num",n,e,t);return[s.linspace(r,i,o)]}case"Multinomial":{const r=D("logits",n,e,t),i=D("numSamples",n,e,t),o=D("seed",n,e,t);return[s.multinomial(r,i,o)]}case"OneHot":{const r=D("indices",n,e,t),i=D("depth",n,e,t),o=D("onValue",n,e,t),a=D("offValue",n,e,t),l=D("dtype",n,e,t);return[s.oneHot(r,i,o,a,l)]}case"Ones":return[s.ones(D("shape",n,e,t),D("dtype",n,e,t))];case"OnesLike":return[s.onesLike(D("x",n,e,t))];case"RandomStandardNormal":return[s.randomStandardNormal(D("shape",n,e,t),D("dtype",n,e,t),D("seed",n,e,t))];case"RandomUniform":return[s.randomUniform(D("shape",n,e,t),D("minval",n,e,t),D("maxval",n,e,t),D("dtype",n,e,t))];case"RandomUniformInt":return[s.randomUniformInt(D("shape",n,e,t),D("minval",n,e,t),D("maxval",n,e,t),D("seed",n,e,t))];case"Range":{const r=D("start",n,e,t),i=D("stop",n,e,t),o=D("step",n,e,t);return[s.range(r,i,o,D("dtype",n,e,t))]}case"TruncatedNormal":{const r=D("shape",n,e,t),i=D("mean",n,e,t),o=D("stdDev",n,e,t),a=D("seed",n,e,t);return[s.truncatedNormal(r,i,o,D("dtype",n,e,t),a)]}case"Zeros":return[s.zeros(D("shape",n,e,t),D("dtype",n,e,t))];case"ZerosLike":return[s.zerosLike(D("x",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ab(n,e,t){const s=D("boxes",n,e,t),r=D("scores",n,e,t),i=D("maxOutputSize",n,e,t),o=D("iouThreshold",n,e,t),a=D("scoreThreshold",n,e,t),l=D("softNmsSigma",n,e,t);return{boxes:s,scores:r,maxOutputSize:i,iouThreshold:o,scoreThreshold:a,softNmsSigma:l}}const Nte=async(n,e,t,s,r=Nr)=>{switch(n.op){case"NonMaxSuppressionV5":{const{boxes:i,scores:o,maxOutputSize:a,iouThreshold:l,scoreThreshold:c,softNmsSigma:u}=ab(n,e,t),h=await r.image.nonMaxSuppressionWithScoreAsync(i,o,a,l,c,u);return[h.selectedIndices,h.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:i,scores:o,maxOutputSize:a,iouThreshold:l,scoreThreshold:c}=ab(n,e,t),u=D("padToMaxOutputSize",n,e,t),h=await r.image.nonMaxSuppressionPaddedAsync(i,o,a,l,c,u);return[h.selectedIndices,h.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:i,scores:o,maxOutputSize:a,iouThreshold:l,scoreThreshold:c}=ab(n,e,t);return[await r.image.nonMaxSuppressionAsync(i,o,a,l,c)]}case"Where":{const i=r.cast(D("condition",n,e,t),"bool"),o=[await r.whereAsync(i)];return i.dispose(),o}case"ListDiff":return r.setdiff1dAsync(D("x",n,e,t),D("y",n,e,t));default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Rte=(n,e,t,s=Nr)=>{switch(n.op){case"LowerBound":{const r=D("sortedSequence",n,e,t),i=D("values",n,e,t);return[s.lowerBound(r,i)]}case"TopKV2":{const r=D("x",n,e,t),i=D("k",n,e,t),o=D("sorted",n,e,t),a=s.topk(r,i,o);return[a.values,a.indices]}case"UpperBound":{const r=D("sortedSequence",n,e,t),i=D("values",n,e,t);return[s.upperBound(r,i)]}case"Unique":{const r=D("x",n,e,t),i=s.unique(r);return[i.values,i.indices]}case"UniqueV2":{const r=D("x",n,e,t),i=D("axis",n,e,t),o=s.unique(r,i);return[o.values,o.indices]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mte=(n,e,t,s=Nr)=>{switch(n.op){case"Const":return e[n.name];case"PlaceholderWithDefault":const r=D("default",n,e,t);return[wr(n.name,e,t)||r];case"Placeholder":return[wr(n.name,e,t)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":{const u=D("x",n,e,t);return[nl(u)]}case"IdentityN":return D("x",n,e,t).map(u=>nl(u));case"Snapshot":const i=D("x",n,e,t);return[nl(i)];case"Shape":return[s.tensor1d(D("x",n,e,t).shape,"int32")];case"ShapeN":return D("x",n,e,t).map(u=>s.tensor1d(u.shape));case"Size":return[s.scalar(D("x",n,e,t).size,"int32")];case"Rank":return[s.scalar(D("x",n,e,t).rank,"int32")];case"NoOp":return[s.scalar(1)];case"Print":const o=D("x",n,e,t),a=D("data",n,e,t),l=D("message",n,e,t),c=D("summarize",n,e,t);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(l);for(let u=0;u<a.length;u++)console.log(Array.prototype.slice.call(a[u].dataSync()).slice(0,c));return[o];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Dte{get id(){return this.handle.id}constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=Bt(0),this.tensorMap=new Map,Xs(this.handle)}clearAndClose(){this.tensorMap.forEach(e=>e.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return Bt(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);const s=await e.data();return this.tensorMap.forEach(r=>r.dispose()),this.tensorMap.clear(),ue(()=>{const r=ho(t),i=s.length,o=r.length;z(i===o,()=>`The number of elements doesn't match, keys has ${i} elements, the values has ${o} elements.`);for(let a=0;a<i;a++){const l=s[a],c=r[a];Xs(c),this.tensorMap.set(l,c)}return this.handle})}async find(e,t){this.checkKeyAndValueTensor(e,t);const s=await e.data();return ue(()=>{const r=[];for(let i=0;i<s.length;i++){const o=s[i],a=this.findWithDefault(o,t);r.push(a)}return Ci(r)})}findWithDefault(e,t){const s=this.tensorMap.get(e);return s??t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Fte=async(n,e,t,s)=>{switch(n.op){case"HashTable":case"HashTableV2":{const r=s.getHashTableHandleByName(n.name);if(r!=null)return[r];{const i=D("keyDType",n,e,t),o=D("valueDType",n,e,t),a=new Dte(i,o);return s.addHashTable(n.name,a),[a.handle]}}case"InitializeTable":case"InitializeTableV2":case"LookupTableImport":case"LookupTableImportV2":{const r=D("tableHandle",n,e,t,s),i=D("keys",n,e,t),o=D("values",n,e,t);return[await s.getHashTableById(r.id).import(i,o)]}case"LookupTableFind":case"LookupTableFindV2":{const r=D("tableHandle",n,e,t,s),i=D("keys",n,e,t),o=D("defaultValue",n,e,t);return[await s.getHashTableById(r.id).find(i,o)]}case"LookupTableSize":case"LookupTableSizeV2":{const r=D("tableHandle",n,e,t,s);return[s.getHashTableById(r.id).tensorSize()]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $te=(n,e,t,s=Nr)=>{switch(n.op){case"ResizeBilinear":{const r=D("images",n,e,t),i=D("size",n,e,t),o=D("alignCorners",n,e,t),a=D("halfPixelCenters",n,e,t);return[s.image.resizeBilinear(r,[i[0],i[1]],o,a)]}case"ResizeNearestNeighbor":{const r=D("images",n,e,t),i=D("size",n,e,t),o=D("alignCorners",n,e,t),a=D("halfPixelCenters",n,e,t);return[s.image.resizeNearestNeighbor(r,[i[0],i[1]],o,a)]}case"CropAndResize":{const r=D("image",n,e,t),i=D("boxes",n,e,t),o=D("boxInd",n,e,t),a=D("cropSize",n,e,t),l=D("method",n,e,t),c=D("extrapolationValue",n,e,t);return[s.image.cropAndResize(r,i,o,a,l,c)]}case"ImageProjectiveTransformV3":{const r=D("images",n,e,t),i=D("transforms",n,e,t),o=D("outputShape",n,e,t),a=D("fillValue",n,e,t),l=D("interpolation",n,e,t),c=D("fillMode",n,e,t);return[s.image.transform(r,i,l.toLowerCase(),c.toLowerCase(),a,o)]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Pte=(n,e,t,s=Nr)=>{switch(n.op){case"Equal":return[s.equal(D("a",n,e,t),D("b",n,e,t))];case"NotEqual":return[s.notEqual(D("a",n,e,t),D("b",n,e,t))];case"Greater":return[s.greater(D("a",n,e,t),D("b",n,e,t))];case"GreaterEqual":return[s.greaterEqual(D("a",n,e,t),D("b",n,e,t))];case"Less":return[s.less(D("a",n,e,t),D("b",n,e,t))];case"LessEqual":return[s.lessEqual(D("a",n,e,t),D("b",n,e,t))];case"LogicalAnd":return[s.logicalAnd(D("a",n,e,t),D("b",n,e,t))];case"LogicalNot":return[s.logicalNot(D("a",n,e,t))];case"LogicalOr":return[s.logicalOr(D("a",n,e,t),D("b",n,e,t))];case"Select":case"SelectV2":return[s.where(D("condition",n,e,t),D("a",n,e,t),D("b",n,e,t))];case"BitwiseAnd":return[s.bitwiseAnd(D("a",n,e,t),D("b",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Lte=(n,e,t,s=Nr)=>{switch(n.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[s.matMul(D("a",n,e,t),D("b",n,e,t),D("transposeA",n,e,t),D("transposeB",n,e,t))];case"Einsum":return[s.einsum(D("equation",n,e,t),...D("tensors",n,e,t))];case"Transpose":return[s.transpose(D("x",n,e,t),D("perm",n,e,t))];case"_FusedMatMul":const[r,i]=D("fusedOps",n,e,t),o=r==="biasadd",a=i==="prelu",l=D("numArgs",n,e,t),c=D("leakyreluAlpha",n,e,t);if(o){if(a&&l!==2)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!a&&l!==1)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[u,h]=D("args",n,e,t);return[s.fused.matMul({a:D("a",n,e,t),b:D("b",n,e,t),transposeA:D("transposeA",n,e,t),transposeB:D("transposeB",n,e,t),bias:u,activation:i,preluActivationWeights:h,leakyreluAlpha:c})];case"MatrixBandPart":return[s.linalg.bandPart(D("a",n,e,t),D("numLower",n,e,t),D("numUpper",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ote=(n,e,t,s=Nr)=>{switch(n.op){case"EuclideanNorm":return[s.euclideanNorm(D("x",n,e,t),D("axis",n,e,t),D("keepDims",n,e,t))];case"FusedBatchNorm":case"FusedBatchNormV2":return[s.batchNorm(D("x",n,e,t),D("mean",n,e,t),D("variance",n,e,t),D("offset",n,e,t),D("scale",n,e,t),D("epsilon",n,e,t))];case"FusedBatchNormV3":return[s.batchNorm(D("x",n,e,t),D("mean",n,e,t),D("variance",n,e,t),D("offset",n,e,t),D("scale",n,e,t),D("epsilon",n,e,t))];case"LRN":return[s.localResponseNormalization(D("x",n,e,t),D("radius",n,e,t),D("bias",n,e,t),D("alpha",n,e,t),D("beta",n,e,t))];case"Softmax":return[s.softmax(D("x",n,e,t))];case"LogSoftmax":return[s.logSoftmax(D("x",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qte=(n,e,t,s=Nr)=>{switch(n.op){case"RaggedGather":{const{outputNestedSplits:r,outputDenseValues:i}=s.raggedGather(D("paramsNestedSplits",n,e,t),D("paramsDenseValues",n,e,t),D("indices",n,e,t),D("outputRaggedRank",n,e,t));return r.concat(i)}case"RaggedRange":{const{rtNestedSplits:r,rtDenseValues:i}=s.raggedRange(D("starts",n,e,t),D("limits",n,e,t),D("splits",n,e,t));return[r,i]}case"RaggedTensorToTensor":return[s.raggedTensorToTensor(D("shape",n,e,t),D("values",n,e,t),D("defaultValue",n,e,t),D("rowPartitionTensors",n,e,t),D("rowPartitionTypes",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ute=(n,e,t,s=Nr)=>{switch(n.op){case"Max":{const a=D("axis",n,e,t),l=D("keepDims",n,e,t);return[s.max(D("x",n,e,t),a,l)]}case"Mean":{const a=D("axis",n,e,t),l=D("keepDims",n,e,t);return[s.mean(D("x",n,e,t),a,l)]}case"Min":{const a=D("axis",n,e,t),l=D("keepDims",n,e,t);return[s.min(D("x",n,e,t),a,l)]}case"Sum":{const a=D("axis",n,e,t),l=D("keepDims",n,e,t);return[s.sum(D("x",n,e,t),a,l)]}case"All":{const a=D("axis",n,e,t),l=D("keepDims",n,e,t);return[s.all(D("x",n,e,t),a,l)]}case"Any":{const a=D("axis",n,e,t),l=D("keepDims",n,e,t);return[s.any(D("x",n,e,t),a,l)]}case"ArgMax":{const a=D("axis",n,e,t);return[s.argMax(D("x",n,e,t),a)]}case"ArgMin":{const a=D("axis",n,e,t);return[s.argMin(D("x",n,e,t),a)]}case"Prod":{const a=D("axis",n,e,t),l=D("keepDims",n,e,t);return[s.prod(D("x",n,e,t),a,l)]}case"Cumprod":{const a=D("axis",n,e,t),l=D("exclusive",n,e,t),c=D("reverse",n,e,t);return[s.cumprod(D("x",n,e,t),a,l,c)]}case"Cumsum":{const a=D("axis",n,e,t),l=D("exclusive",n,e,t),c=D("reverse",n,e,t);return[s.cumsum(D("x",n,e,t),a,l,c)]}case"Bincount":const r=D("x",n,e,t),i=D("weights",n,e,t),o=D("size",n,e,t);return[s.bincount(r,i,o)];case"DenseBincount":{const a=D("x",n,e,t),l=D("weights",n,e,t),c=D("size",n,e,t),u=D("binaryOutput",n,e,t);return[s.denseBincount(a,l,c,u)]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zte=(n,e,t,s=Nr)=>{switch(n.op){case"ConcatV2":case"Concat":{const r=D("n",n,e,t),i=D("axis",n,e,t);let o=D("tensors",n,e,t);return o=o.slice(0,r),[s.concat(o,i)]}case"Gather":{const r=D("x",n,e,t),i=D("indices",n,e,t);return[s.gather(r,s.cast(i,"int32"),0)]}case"GatherV2":{const r=D("axis",n,e,t),i=D("batchDims",n,e,t),o=D("x",n,e,t),a=D("indices",n,e,t);return[s.gather(o,s.cast(a,"int32"),r,i)]}case"Reverse":{const r=D("dims",n,e,t),i=[];for(let a=0;a<r.length;a++)r[a]&&i.push(a);const o=D("x",n,e,t);return[s.reverse(o,i)]}case"ReverseV2":{const r=D("axis",n,e,t),i=D("x",n,e,t);return[s.reverse(i,r)]}case"Slice":{const r=D("begin",n,e,t),i=D("size",n,e,t);return[s.slice(D("x",n,e,t),r,i)]}case"StridedSlice":{const r=D("begin",n,e,t),i=D("end",n,e,t),o=D("strides",n,e,t),a=D("beginMask",n,e,t),l=D("endMask",n,e,t),c=D("ellipsisMask",n,e,t),u=D("newAxisMask",n,e,t),h=D("shrinkAxisMask",n,e,t),d=D("x",n,e,t);return[s.stridedSlice(d,r,i,o,a,l,c,u,h)]}case"Pack":return ue(()=>{const r=D("axis",n,e,t),i=D("tensors",n,e,t),o=i[0].shape,a=s.squeeze(i[0]).shape,l=i.map(c=>{const u=dn(c.shape,o);if(!u&&!dn(s.squeeze(c).shape,a))throw new Error("the input tensors shape does not match");return u?c:s.reshape(c,o)});return[s.stack(l,r)]});case"Unpack":{const r=D("axis",n,e,t),i=D("tensor",n,e,t);return s.unstack(i,r)}case"Tile":{const r=D("reps",n,e,t);return[s.tile(D("x",n,e,t),r)]}case"Split":case"SplitV":{const r=D("axis",n,e,t),i=D("numOrSizeSplits",n,e,t),o=D("x",n,e,t);return s.split(o,i,r)}case"ScatterNd":{const r=D("indices",n,e,t),i=D("values",n,e,t),o=D("shape",n,e,t);return[s.scatterND(r,i,o)]}case"GatherNd":{const r=D("x",n,e,t),i=D("indices",n,e,t);return[s.gatherND(r,i)]}case"SparseToDense":{const r=D("sparseIndices",n,e,t),i=D("outputShape",n,e,t),o=D("sparseValues",n,e,t),a=D("defaultValue",n,e,t);return[s.sparseToDense(r,o,i,o.dtype===a.dtype?a:s.cast(a,o.dtype))]}case"TensorScatterUpdate":{const r=D("indices",n,e,t),i=D("values",n,e,t),o=D("tensor",n,e,t);return[s.tensorScatterUpdate(o,r,i)]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Gte=(n,e,t,s=Nr)=>{switch(n.op){case"SparseFillEmptyRows":{const{outputIndices:r,outputValues:i,emptyRowIndicator:o,reverseIndexMap:a}=s.sparse.sparseFillEmptyRows(D("indices",n,e,t),D("values",n,e,t),D("denseShape",n,e,t),D("defaultValue",n,e,t));return[r,i,o,a]}case"SparseReshape":{const{outputIndices:r,outputShape:i}=s.sparse.sparseReshape(D("inputIndices",n,e,t),D("inputShape",n,e,t),D("newShape",n,e,t));return[r,i]}case"SparseSegmentMean":return[s.sparse.sparseSegmentMean(D("data",n,e,t),D("indices",n,e,t),D("segmentIds",n,e,t))];case"SparseSegmentSum":return[s.sparse.sparseSegmentSum(D("data",n,e,t),D("indices",n,e,t),D("segmentIds",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vte=(n,e,t,s=Nr)=>{switch(n.op){case"FFT":return[s.fft(D("x",n,e,t))];case"IFFT":return[s.ifft(D("x",n,e,t))];case"RFFT":return[s.rfft(D("x",n,e,t))];case"IRFFT":return[s.irfft(D("x",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wte=(n,e,t,s=Nr)=>{switch(n.op){case"StaticRegexReplace":return[s.string.staticRegexReplace(D("input",n,e,t),D("pattern",n,e,t),D("rewrite",n,e,t),D("replaceGlobal",n,e,t))];case"StringNGrams":{const{nGrams:r,nGramsSplits:i}=s.string.stringNGrams(D("data",n,e,t),D("dataSplits",n,e,t),D("separator",n,e,t),D("nGramWidths",n,e,t),D("leftPad",n,e,t),D("rightPad",n,e,t),D("padWidth",n,e,t),D("preserveShortSequences",n,e,t));return[r,i]}case"StringSplit":{const{indices:r,values:i,shape:o}=s.string.stringSplit(D("input",n,e,t),D("delimiter",n,e,t),D("skipEmpty",n,e,t));return[r,i,o]}case"StringToHashBucketFast":return[s.string.stringToHashBucketFast(D("input",n,e,t),D("numBuckets",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hte=(n,e,t,s=Nr)=>{switch(n.op){case"Cast":return[s.cast(D("x",n,e,t),D("dtype",n,e,t))];case"ExpandDims":{const r=D("axis",n,e,t);return[s.expandDims(D("x",n,e,t),r)]}case"Squeeze":{const r=D("axis",n,e,t);return[s.squeeze(D("x",n,e,t),r)]}case"Reshape":return[s.reshape(D("x",n,e,t),D("shape",n,e,t))];case"EnsureShape":return[s.ensureShape(D("x",n,e,t),D("shape",n,e,t))];case"MirrorPad":return[s.mirrorPad(D("x",n,e,t),D("padding",n,e,t),D("mode",n,e,t))];case"PadV2":case"Pad":return[s.pad(D("x",n,e,t),D("padding",n,e,t),D("constantValue",n,e,t))];case"SpaceToBatchND":{const r=D("blockShape",n,e,t),i=D("paddings",n,e,t);return[s.spaceToBatchND(D("x",n,e,t),r,i)]}case"BatchToSpaceND":{const r=D("blockShape",n,e,t),i=D("crops",n,e,t);return[s.batchToSpaceND(D("x",n,e,t),r,i)]}case"DepthToSpace":{const r=D("blockSize",n,e,t),i=D("dataFormat",n,e,t).toUpperCase();return[s.depthToSpace(D("x",n,e,t),r,i)]}case"BroadcastTo":return[s.broadcastTo(D("x",n,e,t),D("shape",n,e,t))];case"BroadcastArgs":return[s.broadcastArgs(D("s0",n,e,t),D("s1",n,e,t))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function e3(n,e,t,s,r=ue){const i=((o,a,l)=>{switch(o.category){case"arithmetic":return r(()=>vte(o,a,l));case"basic_math":return r(()=>Cte(o,a,l));case"control":return Tte(o,a,l);case"convolution":return r(()=>Bte(o,a,l));case"creation":return r(()=>kte(o,a,l));case"dynamic":return Nte(o,a,l);case"evaluation":return r(()=>Rte(o,a,l));case"image":return r(()=>$te(o,a,l));case"graph":return r(()=>Mte(o,a,l));case"logical":return r(()=>Pte(o,a,l));case"matrices":return r(()=>Lte(o,a,l));case"normalization":return r(()=>Ote(o,a,l));case"ragged":return r(()=>Qte(o,a,l));case"reduction":return r(()=>Ute(o,a,l));case"slice_join":return r(()=>zte(o,a,l));case"sparse":return r(()=>Gte(o,a,l));case"spectral":return r(()=>Vte(o,a,l));case"string":return r(()=>Wte(o,a,l));case"transformation":return r(()=>Hte(o,a,l));case"hash_table":return Fte(o,a,l,s);case"custom":const c=AF(o.op);if(c&&c.customExecutor)return c.customExecutor(new bte(o,a,l));throw TypeError(`Custom op ${o.op} is not registered.`);default:throw TypeError(`Unknown op '${o.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(n,e,t);return sc(i)?i.then(o=>[].concat(o)):[].concat(i)}class t3{constructor(e={},t={},s={},r={},i){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=s,this.functionMap=r,this.parseNodeNameCache=i,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const e=[];for(let t=0;t<this.contexts.length-1;t++){const s=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(s))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map(t=>t.id===0&&t.iterationId===0?"":`${t.frameName}-${t.iterationId}`).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(this.contexts&&this.contexts.length>1)this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift();else throw new Error("Cannot exit frame, the context is empty")}nextIteration(){if(this.contexts&&this.contexts.length>0){this.contexts=this.contexts.slice(),this.lastId++;const e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}else throw new Error("Cannot increase frame iteration, the context is empty")}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(const t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(const t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function n3(n,e,t,s){const r=new Set,i=[];let o=null,a=null;const l=new Set,c=new Set(Object.keys(n).map(d=>Di(d)[0]));s=s||[];const u=new Set(s.map(d=>Di(d.name)[0])),h=[...e];for(;h.length>0;){const d=h.pop();if((tu(d)||ene(d)||tne(d))&&o==null&&(o=d,a=o.children.map(f=>f.name).filter(f=>r.has(f))),r.add(d.name),t[d.name]==null&&!c.has(d.name)&&!u.has(d.name)){if(d.inputs.length===0){i.push(d.name);continue}d.inputs.forEach(f=>{l.has(f.name)||(l.add(f.name),h.push(f))})}}return{inputs:n,outputs:e,usedNodes:r,missingInputs:i,dynamicNode:o,syncInputs:a}}function qte(n,e){const{usedNodes:t,inputs:s}=e,r=Object.keys(s).map(m=>Di(m)[0]).map(m=>n.nodes[m]),i=n.initNodes||[],o=m=>t.has(typeof m=="string"?m:m.name);function a(m){return[...new Map(m.map(g=>[g.name,g])).values()]}const l=a([...r,...n.weights,...i]).filter(o),c=a([...l,...Object.values(n.nodes)]).filter(o),u=new Map(c.map(m=>[m.name,m])),h={};for(const m of c){h[m.name]=h[m.name]||0;for(const g of m.children)o(g)||(h[g.name]=Number.POSITIVE_INFINITY),h[g.name]=(h[g.name]||0)+1}const d=Object.entries(h).filter(([,m])=>m===0).map(([m])=>m),f=[...d];for(;d.length>0;){const m=d.pop(),g=u.get(m);for(const x of g.children.filter(o))--h[x.name]===0&&(f.push(x.name),d.push(x.name))}const p=f.map(m=>u.get(m)),A=Yte(p,l);return jte(A,l),A}function Yte(n,e){const t=new Map(n.map(o=>[o.name,o])),s=e.map(o=>o.name),r=new Set(s);for(;s.length>0;){const o=s.pop(),a=t.get(o);for(const l of a.children)!t.has(l.name)||r.has(l.name)||(r.add(l.name),s.push(l.name))}return n.filter(o=>r.has(o.name))}class _y extends Error{constructor(e){super(`NodesExecutionOrderError: ${e}`)}}function jte(n,e){const t=new Map(n.map((a,l)=>[a.name,l])),s=new Set(e.map(a=>a.name)),r=a=>s.has(typeof a=="string"?a:a.name),i=new Set(n.map(a=>a.name)),o=a=>i.has(typeof a=="string"?a:a.name);for(const a of n){for(const l of a.children.filter(o)){if(!t.has(l.name))throw new _y(`Child ${l.name} of node ${a.name} is unreachable.`);if(t.get(a.name)>t.get(l.name))throw new _y(`Node ${a.name} is scheduled to run after its child ${l.name}.`)}if(!r(a))for(const l of a.inputs){if(!t.has(l.name))throw new _y(`Input ${l.name} of node ${a.name} is unreachable.`);if(t.get(l.name)>t.get(a.name))throw new _y(`Node ${a.name} is scheduled to run before its input ${l.name}.`)}}}function Xte(n){const e=new Map(n.map((a,l)=>[a.name,l])),t=Number.MAX_SAFE_INTEGER,s=n.map((a,l)=>tu(a)?t:l),r=a=>{const l=s[e.get(a.name)];return l??-1},i=n.map((a,l)=>a.children.map(r).reduce((c,u)=>Math.max(c,u),s[l])),o=new Map;for(let a=0;a<n.length;++a){const l=i[a];if(l===t)continue;const c=n[a],u=n[l];o.has(u.name)||o.set(u.name,[]),o.get(u.name).push(c)}return o}const Kte=new Set(["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"]),Jte=new Set(["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"]),Zte=new Set(["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"]);function tu(n){return Kte.has(n.op)}function ene(n){return Jte.has(n.op)}function tne(n){return Zte.has(n.op)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class P0{get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){const t=Object.keys(e).map(s=>e[s].map(r=>r.id));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(e=>e.signatureKey||e.name)}get outputNodes(){return this._outputs.map(e=>{const t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t})}get functions(){return Object.keys(this._functions).reduce((e,t)=>(e[t]=this._functions[t].signature,e),{})}constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this.parseNodeNameCache=new Map,this._weightMap={},this.SEPARATOR=",",this._functions={},this._functionExecutorMap={},this.keepIntermediateTensors=!1,this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,e.functions!=null&&Object.keys(e.functions).forEach(s=>{this._functionExecutorMap[s]=new P0(e.functions[s],this)})}getCompilationKey(e,t){const s=e.map(i=>i.name).sort(),r=t.map(i=>i.name).sort();return s.join(this.SEPARATOR)+"--"+r.join(this.SEPARATOR)}compile(e,t){const s=n3(e,t,this.weightMap,this._initNodes),{missingInputs:r,dynamicNode:i,syncInputs:o}=s;if(i!=null)throw new Error(`This execution contains the node '${i.name}', which has the dynamic op '${i.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${o}]`);if(r.length>0){const c=t.map(h=>h.name),u=Object.keys(e);throw new Error(`Cannot compute the outputs [${c}] from the provided inputs [${u}]. Missing the following inputs: [${r}]`)}const a=qte(this.graph,s),l=Xte(a);return{orderedNodes:a,nodeLiveUntilMap:l}}cloneAndKeepTensor(e){if(e==null)return null;const t=e.clone();return Xs(t),t}cloneTensorList(e){return e?e.map(s=>this.cloneAndKeepTensor(s)):null}cloneTensorMap(e){return Object.fromEntries(Object.entries(e).map(([t,s])=>[t,this.cloneTensorList(s)]))}execute(e,t){this.disposeIntermediateTensors(),e=this.mapInputs(e);const s=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);const r=s.map(d=>this.graph.nodes[Di(d)[0]]),i=t.map(d=>Di(d)[0]),o=new Set(i);let a=i.map(d=>this.graph.nodes[d]);a.length===0&&(a=this._outputs);const l=this.getCompilationKey(r,a);let c=this.compiledMap.get(l);c==null&&(c=this.compile(e,a),this.compiledMap.set(l,c));try{this.keepIntermediateTensors=xe().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(d){this.keepIntermediateTensors=!1,console.warn(d.message)}const u={},h={};return ue(()=>{const d=new t3(this.weightMap,u,h,this.functionExecutorMap,this.parseNodeNameCache),f=Object.assign({},this.weightMap);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap)),Object.keys(e).forEach(g=>{const[x,v]=Di(g,d),b=[];b[v]=e[g],f[x]=b,this.keepIntermediateTensors&&(this.clonedTensorsMap[x]=this.cloneTensorList(b))});const p=this.getFrozenTensorIds(f),{orderedNodes:A,nodeLiveUntilMap:m}=c;for(const g of A){if(f[g.name])continue;const x=e3(g,f,d,this._resourceManager);if(sc(x))throw new Error(`The execution of the op '${g.op}' returned a promise. Please use model.executeAsync() instead.`);f[g.name]=x,this.keepIntermediateTensors&&(this.clonedTensorsMap[g.name]=this.cloneTensorList(x)),this.checkTensorForDisposalWithNodeLiveUntilInfo(g,f,d,p,o,m.get(g.name))}return this.parent==null&&d.dispose(p),t.map(g=>wr(g,f,d))})}getFrozenTensorIds(e){const t=[].concat.apply([],Object.keys(e).map(s=>e[s]).map(s=>s.map(r=>r.id)));return new Set(t)}checkTensorForDisposal(e,t,s,r,i,o,a){if(!(tu(t)||o.has(e))){for(const l of s[e])l!=null&&(a[l.id]=(a[l.id]||0)+t.children.length);for(const l of t.inputs){if(tu(l))continue;const c=j_(l.name,s,r);if(c!=null)for(const u of c){if(!u||u.kept||i.has(u.id))continue;const h=a[u.id];h===1?(u.dispose(),delete a[u.id]):h!=null&&a[u.id]--}}}}checkTensorForDisposalWithNodeLiveUntilInfo(e,t,s,r,i,o){function a(l){return tu(l)||i.has(l.name)}if(!(tu(e)||o==null))for(const l of o){if(a(l))continue;const c=j_(l.name,t,s);for(const u of c)!u||u.kept||r.has(u.id)||u.dispose()}}async executeAsync(e,t){return this._executeAsync(e,t)}disposeIntermediateTensors(){this.clonedTensorsMap&&(Object.values(this.clonedTensorsMap).forEach(e=>{for(const t of e)t&&!t.isDisposed&&t.dispose()}),this.clonedTensorsMap=null)}getIntermediateTensors(){return this.clonedTensorsMap}async _executeAsync(e,t,s=!1,r={},i={}){this.disposeIntermediateTensors(),s||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));try{this.keepIntermediateTensors=xe().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(d){this.keepIntermediateTensors=!1,console.warn(d.message)}const o=new t3(this.weightMap,r,i,this.functionExecutorMap,this.parseNodeNameCache);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap));const a=await this.executeWithControlFlow(e,o,t,s),l=t.map(d=>wr(d,a,o)),c=l.map(d=>d.id),u=Object.keys(e).map(d=>e[d].id),h=new Set([...c,...u,...this.weightIds]);return Object.values(a).forEach(d=>{d.forEach(f=>{f&&!f.isDisposed&&!h.has(f.id)&&f.dispose()})}),this.parent==null&&o.dispose(h),l}async executeFunctionAsync(e,t,s){const r=e.reduce((i,o,a)=>(i[this.inputs[a].name]=o,i),{});return this._executeAsync(r,this.outputNodes,!0,t,s)}async executeWithControlFlow(e,t,s,r){const i=Object.keys(e),o=i.map(b=>this.graph.nodes[Di(b)[0]]),a=s.map(b=>Di(b)[0]),l=new Set(a);let c=a.map(b=>this.graph.nodes[b]);c.length===0&&(c=this._outputs);const{usedNodes:u,missingInputs:h,dynamicNode:d,syncInputs:f}=n3(e,c,this.weightMap,this._initNodes),p=[...o,...this.graph.weights,...this._initNodes||[]].map(b=>({node:b,contexts:t.currentContext})),A=Object.assign({},this.weightMap);Object.keys(e).forEach(b=>{const[w,_]=Di(b),N=[];N[_]=e[b],A[w]=N});const m={},g=this.getFrozenTensorIds(A),x={};for(;p.length>0;){const b=this.processStack(o,p,t,A,x,g,l,m,u);await Promise.all(b)}d==null&&!r&&console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const v=c.filter(b=>!tu(b)&&!wr(b.name,A,t)).map(b=>b.name);if(v.length>0){let b="";throw d!=null&&(b=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${f}]`),new Error(`Cannot compute the outputs [${v}] from the provided inputs [${i}]. Consider providing the following inputs: [${h}]. ${b}`)}return A}processStack(e,t,s,r,i,o,a,l,c){const u=[];for(;t.length>0;){const h=t.pop();s.currentContext=h.contexts;let d="";if(h.node.op==="Enter"&&D("isConstant",h.node,r,s)&&([d]=tl(h.node.name,s)),r[h.node.name]==null){const f=e3(h.node,r,s,this._resourceManager);d||([d]=tl(h.node.name,s));const p=s.currentContext;sc(f)?u.push(f.then(A=>(r[d]=A,this.keepIntermediateTensors&&(this.clonedTensorsMap[d]=this.cloneTensorList(A)),s.currentContext=p,this.checkTensorForDisposal(d,h.node,r,s,o,a,l),this.processChildNodes(h.node,t,s,r,i,c),A))):(r[d]=f,this.keepIntermediateTensors&&(this.clonedTensorsMap[d]=this.cloneTensorList(f)),this.checkTensorForDisposal(d,h.node,r,s,o,a,l),this.processChildNodes(h.node,t,s,r,i,c))}else this.processChildNodes(h.node,t,s,r,i,c)}return u}processChildNodes(e,t,s,r,i,o){e.children.forEach(a=>{const[l]=tl(a.name,s);i[l]||!o.has(a.name)||(a.op==="Merge"?a.inputNames.some(c=>!!wr(c,r,s))&&(i[l]=!0,t.push({contexts:s.currentContext,node:a})):a.inputNames.every(c=>!!wr(c,r,s))&&(i[l]=!0,t.push({contexts:s.currentContext,node:a})))})}dispose(){Object.keys(this.weightMap).forEach(e=>this.weightMap[e].forEach(t=>t.dispose()))}checkInputShapeAndType(e){Object.keys(e).forEach(t=>{const s=e[t],[r]=Di(t),i=this.graph.nodes[r];if(i.attrParams.shape&&i.attrParams.shape.value){const o=i.attrParams.shape.value,a=o.length===s.shape.length&&s.shape.every((l,c)=>o[c]===-1||o[c]===l);z(a,()=>`The shape of dict['${i.name}'] provided in model.execute(dict) must be [${o}], but was [${s.shape}]`)}i.attrParams.dtype&&i.attrParams.dtype.value&&z(s.dtype===i.attrParams.dtype.value,()=>`The dtype of dict['${i.name}'] provided in model.execute(dict) must be ${i.attrParams.dtype.value}, but was ${s.dtype}`)})}mapInputs(e){var t,s;const r={};for(const i in e){const o=(s=(t=this._signature)===null||t===void 0?void 0:t.inputs)===null||s===void 0?void 0:s[i];o!=null?r[o.name]=e[i]:r[i]=e[i]}return r}checkInputs(e){const t=Object.keys(e).filter(s=>{const[r]=Di(s);return this.graph.nodes[r]==null});if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map(t=>{var s,r;const i=(r=(s=this._signature)===null||s===void 0?void 0:s.outputs)===null||r===void 0?void 0:r[t];return i!=null?i.name:t},{})}checkOutputs(e){e.forEach(t=>{const[s]=Di(t);if(!this.graph.nodes[s])throw new Error(`The output '${t}' is not found in the graph`)})}}class nne{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(const e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(const e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sne="?tfjs-format=file",rne="model.json";class ine{get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}get modelStructuredOutputKeys(){return this.structuredOutputKeys}constructor(e,t={},s=Mw){this.modelUrl=e,this.loadOptions=t,this.version="n/a",this.io=s,t==null&&(this.loadOptions={}),this.resourceManager=new nne}findIOHandler(){const e=this.modelUrl;if(e.load!=null)this.handler=e;else if(this.loadOptions.requestInit!=null)this.handler=this.io.browserHTTPRequest(e,this.loadOptions);else{const t=this.io.getLoadHandlers(e,this.loadOptions);if(t.length===0)t.push(this.io.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}load(){if(this.findIOHandler(),this.handler.load==null)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const e=this.handler.load();return sc(e)?e.then(t=>t.getWeightStream==null?this.loadSync(t):this.loadStreaming(t)):this.loadSync(e)}loadSync(e){const t=this.io.decodeWeights(e.weightData,e.weightSpecs);return this.loadWithWeightMap(e,t)}async loadStreaming(e){if(e.getWeightStream==null)throw new Error("Model artifacts missing streamWeights function");const t=await Xk(e.getWeightStream(),e.weightSpecs);return this.loadWithWeightMap(e,t)}loadWithWeightMap(e,t){this.artifacts=e;const s=this.artifacts.modelTopology;let r=this.artifacts.signature;if(this.artifacts.userDefinedMetadata!=null){const i=this.artifacts.userDefinedMetadata;i.signature!=null&&(r=i.signature),i.structuredOutputKeys!=null&&(this.structuredOutputKeys=i.structuredOutputKeys)}if(this.signature=r,this.version=`${s.versions.producer}.${s.versions.minConsumer}`,this.executor=new P0(X_.Instance.transformGraph(s,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(t),this.executor.resourceManager=this.resourceManager,e.modelInitializer!=null&&e.modelInitializer.node!=null){const i=X_.Instance.transformGraph(e.modelInitializer);this.initializer=new P0(i),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializerSignature=e.initializerSignature}return!0}async save(e,t){if(typeof e=="string"){const s=this.io.getSaveHandlers(e);if(s.length===0)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(s.length>1)throw new Error(`Found more than one (${s.length}) save handlers for URL '${e}'`);e=s[0]}if(e.save==null)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}addStructuredOutputNames(e){if(this.structuredOutputKeys){const t=e instanceof cn?[e]:e,s={};return t.forEach((r,i)=>s[this.structuredOutputKeys[i]]=r),s}return e}predict(e,t){const s=this.execute(e,this.outputNodes);return this.addStructuredOutputNames(s)}async predictAsync(e,t){const s=await this.executeAsync(e,this.outputNodes);return this.addStructuredOutputNames(s)}normalizeInputs(e){var t;if(!(e instanceof cn)&&!Array.isArray(e)){const i=(t=this.signature)===null||t===void 0?void 0:t.inputs;if(i!=null)for(const o in i){const a=i[o];a.resourceId!=null&&(e[o]=this.resourceIdToCapturedInput[a.resourceId])}return e}e=Array.isArray(e)?e:[e];const s=Object.keys(this.resourceIdToCapturedInput).length;if(e.length+s!==this.inputNodes.length)throw new Error(`Input tensor count mismatch, the graph model has ${this.inputNodes.length-s} non-resource placeholders, while there are ${e.length} input tensors provided.`);let r=0;return this.inputNodes.reduce((i,o)=>{var a,l,c;const u=(c=(l=(a=this.signature)===null||a===void 0?void 0:a.inputs)===null||l===void 0?void 0:l[o])===null||c===void 0?void 0:c.resourceId;return u!=null?i[o]=this.resourceIdToCapturedInput[u]:i[o]=e[r++],i},{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}executeInitializerGraph(){return this.initializer==null?[]:this.initializerSignature==null?this.initializer.execute({},[]):this.initializer.execute({},Object.keys(this.initializerSignature.outputs))}async executeInitializerGraphAsync(){return this.initializer==null?[]:this.initializerSignature==null?this.initializer.executeAsync({},[]):this.initializer.executeAsync({},Object.keys(this.initializerSignature.outputs))}setResourceIdToCapturedInput(e){if(this.resourceIdToCapturedInput={},this.initializerSignature){const t=this.initializerSignature.outputs,s=Object.keys(t);for(let r=0;r<s.length;r++){const i=s[r],o=t[i];this.resourceIdToCapturedInput[o.resourceId]=e[r]}}}execute(e,t){this.resourceIdToCapturedInput==null&&this.setResourceIdToCapturedInput(this.executeInitializerGraph()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const s=this.executor.execute(e,t);return s.length>1?s:s[0]}async executeAsync(e,t){this.resourceIdToCapturedInput==null&&this.setResourceIdToCapturedInput(await this.executeInitializerGraphAsync()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const s=await this.executor.executeAsync(e,t);return s.length>1?s:s[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce((t,s)=>(t[s]=[e[s]],t),{})}dispose(){this.executor.dispose(),this.initializer&&(this.initializer.dispose(),this.resourceIdToCapturedInput&&zt(this.resourceIdToCapturedInput)),this.resourceManager.dispose()}}async function Ma(n,e={},t=Mw){if(n==null)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");e==null&&(e={}),e.fromTFHub&&typeof n=="string"&&(n=one(n));const s=new ine(n,e,t);return await s.load(),s}function one(n){return n.endsWith("/")||(n=n+"/"),`${n}${rne}${sne}`}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */var s3;(function(n){n[n.FAIL=0]="FAIL",n[n.SHORTEST=1]="SHORTEST",n[n.LONGEST=2]="LONGEST"})(s3||(s3={}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pt(n,e){Array.isArray(n)||(n=[n]),n.forEach(t=>{t!=null&&z(t.dtype!=="complex64",()=>`${e} does not support complex64 tensors in the CPU backend.`)})}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ane=n1;class U1 extends og{nextDataId(){return U1.nextDataId++}constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new px(this,lr())}write(e,t,s){this.firstUse&&(this.firstUse=!1,xe().get("IS_NODE")&&to(`
============================
Hi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. 
============================`));const r={id:this.nextDataId()};return this.data.set(r,{values:e,dtype:s,refCount:1}),r}makeTensorInfo(e,t,s){let r;if(t==="string"&&s!=null&&s.length>0&&Wo(s[0])){const i=s.map(o=>Yo(o));r=this.write(i,e,t)}else r=this.write(s,e,t);return{dataId:r,shape:e,dtype:t}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){const t=this.data.get(e);t.refCount++}decRef(e){if(this.data.has(e)){const t=this.data.get(e);t.refCount--}}move(e,t,s,r,i){this.data.set(e,{values:t,dtype:r,refCount:i})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:s}=this.data.get(e);if(t==="complex64"){const r=this.readSync(s.real.dataId),i=this.readSync(s.imag.dataId);return Jo(r,i)}return ym(this.data.get(e).values,t)}bufferSync(e){const t=this.readSync(e.dataId);if(e.dtype==="string")try{const s=t.map(r=>Eo(r));return rn(e.shape,e.dtype,s)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return rn(e.shape,e.dtype,t)}makeOutput(e,t,s){return lr().makeTensorFromTensorInfo(this.makeTensorInfo(t,s,e),this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;const{complexTensorInfos:s}=this.data.get(e);s!=null&&(this.disposeData(s.real.dataId,!0),this.disposeData(s.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){const t=Kr();return e(),{kernelMs:Kr()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){Pt([e],"where");const t=this.readSync(e.dataId);return ane(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}U1.nextDataId=0;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bF(n){const e=new Float32Array(n.length);for(let t=0;t<n.length;++t)e[t]=Math.abs(n[t]);return e}const lne=n=>{const{x:e}=n.inputs,t=n.backend;Pt(e,"abs");let s=new Float32Array(ye(e.shape));const r=t.data.get(e.dataId).values;return s=bF(r),t.makeOutput(s,e.shape,e.dtype)},cne={kernelName:pf,backendName:"cpu",kernelFunc:lne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ls(n){return(e,t,s,r,i)=>{const o=jt(e,t),a=o.length,l=Ot(o),c=ye(o),u=Ws(i,c),h=e.length,d=t.length,f=Ot(e),p=Ot(t),A=bl(e,o),m=bl(t,o);if(A.length+m.length===0)for(let g=0;g<u.length;++g)u[g]=n(s[g%s.length],r[g%r.length]);else for(let g=0;g<u.length;++g){const x=Fu(g,a,l),v=x.slice(-h);A.forEach(N=>v[N]=0);const b=qo(v,h,f),w=x.slice(-d);m.forEach(N=>w[N]=0);const _=qo(w,d,p);u[g]=n(s[b],r[_])}return[u,o]}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $i(n){const{inputs:e,backend:t}=n,{real:s,imag:r}=e,i=t.data.get(s.dataId).values,o=t.data.get(r.dataId).values,a=t.makeTensorInfo(s.shape,"complex64"),l=t.data.get(a.dataId);return l.complexTensorInfos={real:t.makeTensorInfo(s.shape,"float32",i),imag:t.makeTensorInfo(r.shape,"float32",o)},a}const une={kernelName:pg,backendName:"cpu",kernelFunc:$i};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function L0(n,e,t="float32"){if(t==="complex64"){const r=L0(n,e,"float32"),i=L0(n,e,"float32");return $i({inputs:{real:r,imag:i},backend:n})}const s=Ar(ye(e),t);return n.makeTensorInfo(e,t,s)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Da(n){const{inputs:e,backend:t}=n,{x:s}=e;return t.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}const hne={kernelName:nh,backendName:"cpu",kernelFunc:Da};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nu(n){const{inputs:e,backend:t}=n,{input:s}=e,r=t.data.get(s.dataId).complexTensorInfos.real,i=t.data.get(r.dataId).values;return t.makeTensorInfo(r.shape,r.dtype,i)}const dne={kernelName:Gg,backendName:"cpu",kernelFunc:Nu};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vF(n,e,t,s){if(s==="int32"){const r=Int32Array.from(n);return[e,"int32",r]}if(s==="bool"){const r=gc([0],t),[i,o]=Ls((a,l)=>a!==l?1:0)(e,[],n,r,"bool");return[o,"bool",i]}throw new Error(`Error in Cast: failed to cast ${t} to ${s}`)}function hc(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{dtype:i}=s;if(i==="complex64"){if(r.dtype==="complex64")return Da({inputs:{x:r},backend:t});const u=L0(t,r.shape,r.dtype),h=hc({inputs:{x:r},backend:t,attrs:{dtype:"float32"}}),d=$i({inputs:{real:h,imag:u},backend:t});return t.disposeIntermediateTensorInfo(u),t.disposeIntermediateTensorInfo(h),d}if(r.dtype==="complex64"){const u=Nu({inputs:{input:r},backend:t}),h=hc({inputs:{x:u},backend:t,attrs:{dtype:i}});return t.disposeIntermediateTensorInfo(u),h}if(!Ax(r.dtype,i)){const u=Da({inputs:{x:r},backend:t});return{dataId:u.dataId,shape:u.shape,dtype:i}}const o=t.data.get(r.dataId).values,[a,l,c]=vF(o,r.shape,r.dtype,i);return t.makeTensorInfo(a,l,c)}const fne={kernelName:Gu,backendName:"cpu",kernelFunc:hc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sr(n,e,t,s){return t==null?({inputs:r,backend:i})=>{const{a:o,b:a}=r,l=i;Pt([o,a],n);const c=l.data.get(o.dataId).values,u=l.data.get(a.dataId).values,h=o.dtype==="string"?Zo(c):c,d=o.dtype==="string"?Zo(u):u,f=s||o.dtype,[p,A]=e(o.shape,a.shape,h,d,f);return l.makeTensorInfo(A,f,p)}:({inputs:r,backend:i})=>{const{a:o,b:a}=r,l=i;if(o.dtype==="complex64"||a.dtype==="complex64"){const c=hc({inputs:{x:o},backend:l,attrs:{dtype:"complex64"}}),u=l.data.get(c.dataId),h=u.complexTensorInfos.real,d=u.complexTensorInfos.imag,f=l.data.get(h.dataId).values,p=l.data.get(d.dataId).values,A=hc({inputs:{x:a},backend:l,attrs:{dtype:"complex64"}}),m=l.data.get(A.dataId),g=m.complexTensorInfos.real,x=m.complexTensorInfos.imag,v=l.data.get(g.dataId).values,b=l.data.get(x.dataId).values,[w,_,N]=t(o.shape,a.shape,f,p,v,b),M=l.makeTensorInfo(N,"float32",w),T=l.makeTensorInfo(N,"float32",_),k=$i({inputs:{real:M,imag:T},backend:l});return l.disposeIntermediateTensorInfo(c),l.disposeIntermediateTensorInfo(A),l.disposeIntermediateTensorInfo(M),l.disposeIntermediateTensorInfo(T),k}else{const c=l.data.get(o.dataId).values,u=l.data.get(a.dataId).values,h=s||o.dtype,[d,f]=e(o.shape,a.shape,c,u,h);return l.makeTensorInfo(f,h,d)}}}function cS(n){return(e,t,s,r,i,o)=>{const a=jt(e,t),l=ye(a),c=a.length,u=Ot(a),h=Ws("float32",l),d=Ws("float32",l),f=bl(e,a),p=bl(t,a),A=Jo(s,r),m=Jo(i,o),g=e.length,x=Ot(e),v=t.length,b=Ot(t);if(f.length+p.length===0)for(let w=0;w<h.length;w++){const _=w%A.length,N=w%m.length,M=n(A[_*2],A[_*2+1],m[N*2],m[N*2+1]);h[w]=M.real,d[w]=M.imag}else for(let w=0;w<h.length;w++){const _=Fu(w,c,u),N=_.slice(-g);f.forEach(L=>N[L]=0);const M=qo(N,g,x),T=_.slice(-v);p.forEach(L=>T[L]=0);const k=qo(T,v,b),B=n(A[M*2],A[M*2+1],m[k*2],m[k*2+1]);h[w]=B.real,d[w]=B.imag}return[h,d,a]}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CF=Ls(((n,e)=>n+e)),pne=cS(((n,e,t,s)=>({real:n+t,imag:e+s}))),tf=sr(mc,CF,pne),mne={kernelName:mc,backendName:"cpu",kernelFunc:tf};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uS(n,e,t,s,r){const i=ye(s),o=Ar(r,t);for(let a=0;a<n.length;a++){const l=n[a];if(l<0)throw new Error("Input x must be non-negative!");l>=r||(i>0?o[l]+=e[a]:o[l]+=1)}return o}function IF(n,e,t,s=!1){const r=n.shape[0],i=n.shape[1],o=rn([r,t],e.dtype);for(let a=0;a<r;a++)for(let l=0;l<i;l++){const c=n.get(a,l);if(c<0)throw new Error("Input x must be non-negative!");c>=t||(s?o.set(1,a,c):e.size>0?o.set(o.get(a,c)+e.get(a,l),a,c):o.set(o.get(a,c)+1,a,c))}return o}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wF=Ls(((n,e)=>n&e)),gne=sr(dg,wF),Ane={kernelName:dg,backendName:"cpu",kernelFunc:gne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ua(n){return(e,t,s)=>{const r=Ts(t,e.length);for(let i=0;i<e.length;++i)r[i]=n(e[i],s);return r}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ts(n,e,t){const s=Ua(e);return Ic(n,s,t)}function Ic(n,e,t){return({inputs:s,attrs:r,backend:i})=>{const{x:o}=s;Pt(o,n);const a=i,l=a.data.get(o.dataId).values;let c;if(o.dtype==="string"){if(!Array.isArray(l))throw new Error("String tensor's value was not an instance of Array");c=Zo(l)}else c=l;const u=t||o.dtype,h=e(c,u,r);return a.makeTensorInfo(o.shape,u,h)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SF=Ua(n=>Math.ceil(n)),yne=Ic(Vu,SF),xne={kernelName:Vu,backendName:"cpu",kernelFunc:yne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EF(n,e,t,s){const r=Ts(t,ye(e));if(s&&t!=="string"){let i=0;n.forEach(o=>{const a=ye(o.shape);r.set(o.vals,i),i+=a})}else{let i=0;n.forEach(o=>{const a=t==="string"?Zo(o.vals):o.vals;let l=0;for(let c=0;c<o.shape[0];++c){const u=c*e[1]+i;for(let h=0;h<o.shape[1];++h)r[u+h]=a[l++]}i+=o.shape[1]})}return r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _F=Ls((n,e)=>n===e?1:0),TF=sr(kf,_F,null,"bool"),bne={kernelName:kf,backendName:"cpu",kernelFunc:TF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BF=Ua(n=>Math.exp(n)),kF=Ic(Ku,BF,"float32"),vne={kernelName:Ku,backendName:"cpu",kernelFunc:kF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NF=Ua(n=>Math.expm1(n)),Cne=Ic(Ju,NF),Ine={kernelName:Ju,backendName:"cpu",kernelFunc:Cne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RF=Ua(n=>Math.floor(n)),wne=Ic(Zu,RF),Sne={kernelName:Zu,backendName:"cpu",kernelFunc:wne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MF=Ls((n,e)=>Math.floor(n/e)),Ene=sr(eh,MF,null,"int32"),_ne={kernelName:eh,backendName:"cpu",kernelFunc:Ene};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DF(n,e,t,s,r,i,o,a,l){const c=rn([s,i],t);for(let u=0;u<s;u++){const h=[];let d=0;for(let f=0;f<r;f++){const p=n[u*r+f];d+=p*o[f],h.push(p)}if(d<0||d>=l/i)throw new Error(`Invalid indices: ${h} does not index into ${a}`);for(let f=0;f<i;f++)c.values[u*i+f]=e.get(...e.indexToLoc(d*i+f))}return c}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FF(n,e,t){const s=rn(t,n.dtype);for(let r=0;r<s.size;++r){const o=s.indexToLoc(r).slice(),a=o[0],l=o[2],c=e.locToIndex([a,l]);o[2]=e.values[c];const u=n.locToIndex(o);0<=u&&u<n.values.length&&(s.values[r]=n.values[u])}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $F=Ls((n,e)=>n>e?1:0),Tne=sr(Df,$F,null,"bool"),Bne={kernelName:Df,backendName:"cpu",kernelFunc:Tne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PF=Ls((n,e)=>n>=e?1:0),kne=sr(th,PF,null,"bool"),Nne={kernelName:th,backendName:"cpu",kernelFunc:kne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LF=Ls((n,e)=>n<e?1:0),Rne=sr($f,LF,null,"bool"),Mne={kernelName:$f,backendName:"cpu",kernelFunc:Rne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OF=Ls((n,e)=>n<=e?1:0),Dne=sr(Pf,OF,null,"bool"),Fne={kernelName:Pf,backendName:"cpu",kernelFunc:Dne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QF(n,e,t){const s=(e-n)/(t-1),r=Ar(t,"float32");r[0]=n;for(let i=1;i<r.length;i++)r[i]=r[i-1]+s;return r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UF=Ua(n=>Math.log(n)),$ne=Ic(oh,UF),Pne={kernelName:oh,backendName:"cpu",kernelFunc:$ne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zF(n,e,t,s){const r=Ws(s,ye(t));for(let i=0;i<r.length;++i){const o=i*e;let a=n[o];for(let l=0;l<e;++l){const c=n[o+l];(Number.isNaN(c)||c>a)&&(a=c)}r[i]=a}return r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GF=Ls(((n,e)=>Math.max(n,e))),Lne=sr(lh,GF),One={kernelName:lh,backendName:"cpu",kernelFunc:Lne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VF=Ls(((n,e)=>Math.min(n,e))),Qne=sr(ch,VF),Une={kernelName:ch,backendName:"cpu",kernelFunc:Qne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hS=Ls(((n,e)=>n*e)),zne=cS(((n,e,t,s)=>({real:n*t-e*s,imag:n*s+e*t}))),z1=sr(hh,hS,zne),Gne={kernelName:hh,backendName:"cpu",kernelFunc:z1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WF(n,e,t){const s=El(-1,t);return hS([],e,s,n,t)}function Vne(n){const{inputs:e,backend:t}=n,{x:s}=e;Pt(s,"neg");const r=t.data.get(s.dataId).values,[i,o]=WF(r,s.shape,s.dtype);return t.makeTensorInfo(o,s.dtype,i)}const Wne={kernelName:Yf,backendName:"cpu",kernelFunc:Vne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HF=Ls(((n,e)=>n!==e?1:0)),Hne=sr(jf,HF,null,"bool"),qne={kernelName:jf,backendName:"cpu",kernelFunc:Hne};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dS(n,e,t,s,r){const i=e.length,o=ye(e),a=Ot(e),l=Ot(r),c=Ws(t,ye(r));for(let u=0;u<o;++u){const h=Fu(u,i,a),d=new Array(h.length);for(let p=0;p<d.length;p++)d[p]=h[s[p]];const f=qo(d,i,l);c[f]=n[u]}return c}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ii(n){const{inputs:e,attrs:t,backend:s}=n,{x:r}=e,{perm:i}=t;Pt(r,"transpose");const o=r.shape.length,a=new Array(o);for(let h=0;h<a.length;h++)a[h]=r.shape[i[h]];const l=s.data.get(r.dataId).values,c=dS(l,r.shape,r.dtype,i,a);return{dataId:s.write(c,a,r.dtype),shape:a,dtype:r.dtype}}const Yne={kernelName:Xl,backendName:"cpu",kernelFunc:Ii};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qF(n,e,t,s){const[r,i]=$s(n,s),o=tr(e,"int32"),a=Ar(ye(r),o),l=ye(i);for(let c=0;c<a.length;++c){const u=c*l;let h=1;for(let d=0;d<l;++d)h*=t[u+d];a[c]=h}return{outVals:a,outShape:r,outDtype:o}}function jne(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:i,keepDims:o}=s;Pt(r,"prod");const a=r.shape.length,l=an(i,r.shape),c=ss(l,a);let u=l,h=r;const d=[];c!=null&&(h=Ii({inputs:{x:r},backend:t,attrs:{perm:c}}),d.push(h),u=ys(u.length,a));const f=t.data.get(h.dataId).values,{outVals:p,outShape:A,outDtype:m}=qF(h.shape,h.dtype,f,u);let g=A;return o&&(g=Ms(A,l)),d.forEach(x=>t.disposeIntermediateTensorInfo(x)),t.makeTensorInfo(g,m,p)}const Xne={kernelName:tp,backendName:"cpu",kernelFunc:jne};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kne(n,e,t){n.forEach((s,r)=>{if(s<0||s>=t){const i=Fu(r,e.length,Ot(e)).join(",");throw new Error(`indices[${i}] = ${s} is not in [0, ${t})`)}})}function Jne(n,e){for(let t=0;t<n.length;++t){const s=n[t],r=t===n.length-1?e:n[t+1].length;if(s.length===0)throw new Error("Ragged splits may not be empty");if(s[0]<0)throw new Error("Ragged splits must be non-negative");if(s[s.length-1]>r)throw new Error("Ragged splits must not point past values");for(let i=1;i<s.length;++i)if(s[i-1]>s[i])throw new Error("Ragged splits must be sorted in ascending order")}}function Zne(n,e,t,s){const r=[];let i=0;const o=e.length-1+t.length,a=new Array(o).fill(null).map(()=>[0]);Jne(t,s);let l=1;for(let c=0;c<e.length-1;++c){l*=e[c];const u=e[c+1];for(let h=1;h<l+1;++h)a[c].push(h*u)}for(let c=0;c<n.length;++c){let u=n[c],h=n[c]+1;for(let d=0;d<t.length;++d){const f=t[d],p=d+e.length-1;if(p>=0){const A=a[p],m=A[A.length-1]-f[u];for(let g=u;g<h;++g)a[p].push(f[g+1]+m)}u=f[u],h=f[h]}h!==u&&(r.push([u,h]),i+=h-u)}return{outSplits:a,valueSlices:r,numValues:i}}function ese(n){const e=[];for(let t=0;t<n.length;++t){const s=n[t].length,r=Ts("int32",s);e.push(r),n[t].forEach((i,o)=>r[o]=i)}return e}function r3(n,e){const t=n.slice(0,e);for(;t.length<e;)t.push(1);for(let s=e;s<n.length;s++)t[e-1]*=n[s];return t}function tse(n,e,t,s,r,i){const o=r3(e,2)[1],a=r3(i,2)[1];let l=0;for(const c of t)for(let u=c[0];u<c[1];++u){for(let h=0;h<s;++h)r[l*a+h]=n[u*o+h];++l}}function nse(n,e,t,s,r){const i=e.slice();i[0]=r;const o=Ts(t,ye(i)),a=n.length,l=a===0?0:a/e[0];return tse(n,e,s,l,o,i),[o,i]}function YF(n,e,t,s,r,i,o,a){if(n.length===0)throw new Error("paramsNestedSplits must be non empty");if(e[0].length===0)throw new Error("Split tensors must not be scalars");const l=e[0][0]-1;if(Kne(i,o,l),s.length===0)throw new Error("params.rank must be nonzero");const c=s[0],{outSplits:u,valueSlices:h,numValues:d}=Zne(i,o,n,c),f=ese(u),p=nse(t,s,r,h,d);return[f,p[0],p[1]]}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const i3=2147483647;function jF(n,e,t,s,r,i,o){if(e.length>1)throw new Error("starts must be a scalar or vector");if(r.length>1)throw new Error("limits must be a scalar or vector");if(o.length>1)throw new Error("deltas must be a scalar or vector");const a=e.length===0,l=r.length===0,c=o.length===0,u=[];a||u.push(e[0]),l||u.push(r[0]),c||u.push(o[0]);for(let m=1;m<u.length;++m)if(u[m]!==u[m-1])throw new Error("starts, limits, and deltas must have the same shape");const h=u.length===0?1:u[0],d=Ts("int32",h+1);d[0]=0;for(let m=0;m<h;++m){const g=a?n[0]:n[m],x=l?s[0]:s[m],v=c?i[0]:i[m];if(v===0)throw new Error("Requires delta != 0");let b;if(v>0&&x<g||v<0&&x>g)b=0;else if(b=Math.ceil(Math.abs((x-g)/v)),b>i3)throw new Error(`Requires ((limit - start) / delta) <= ${i3}`);d[m+1]=d[m]+b}const f=d[h],p=Ts(t,f);let A=0;for(let m=0;m<h;++m){const g=d[m+1]-d[m];let x=a?n[0]:n[m];const v=c?i[0]:i[m];for(let b=0;b<g;++b)p[A++]=x,x+=v}return[d,p]}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var xo=Qo;class O0{constructor(e,t,s,r,i,o,a,l,c,u){this.shape=e,this.shapeShape=t,this.values=s,this.valuesShape=r,this.valuesDType=i,this.defaultValue=o,this.defaultValueShape=a,this.rowPartitionValues=l,this.rowPartitionValuesShapes=c,this.rowPartitionTypes=kR(u),this.raggedRank=NR(this.rowPartitionTypes)}getRowPartitionTypeByDimension(e){return this.rowPartitionTypes[0]===xo.FIRST_DIM_SIZE?this.rowPartitionTypes[e+1]:this.rowPartitionTypes[e]}getRowPartitionTensor(e){return this.rowPartitionTypes[0]===xo.FIRST_DIM_SIZE?this.rowPartitionValues[e+1]:this.rowPartitionValues[e]}getMaxWidth(e){const t=this.getRowPartitionTensor(e-1);switch(this.getRowPartitionTypeByDimension(e-1)){case xo.VALUE_ROWIDS:return O0.getMaxWidthValueRowID(t);case xo.ROW_SPLITS:return O0.getMaxWidthRowSplit(t);default:throw new Error(`Cannot handle partition type ${xo[this.getRowPartitionTypeByDimension(e-1)]}`)}}static getMaxWidthRowSplit(e){const t=e.length;if(t===0||t===1)return 0;let s=0;for(let r=0;r<t-1;++r){const i=e[r+1]-e[r];i>s&&(s=i)}return s}static getMaxWidthValueRowID(e){const t=e.length;if(t===0)return 0;let s=0,r=e[0],i=0;for(let o=1;o<t;++o){const a=e[o];a!==r&&(r=a,i=Math.max(o-s,i),s=o)}return Math.max(t-s,i)}tensorShapeFromTensor(e,t,s=!0){if(t.length===0){if(e[0]===-1)return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return a3(e,s)}calculateOutputSize(e){const t=this.valuesShape,s=this.defaultValueShape;RR(s,t);const r=this.tensorShapeFromTensor(this.shape,this.shapeShape),o=BR(this.raggedRank,r,t);o[0]<0&&(o[0]=e);for(let a=1;a<=this.raggedRank;++a)o[a]<0&&(o[a]=this.getMaxWidth(a));return o}calculateFirstParentOutputIndex(e,t,s){const r=Math.min(e,s),i=[];let o=0;for(let a=0;a<r;++a,o+=t)i.push(o);for(let a=r;a<e;++a)i.push(-1);return z(i.length===e,()=>"Final length of result must be equal to firstDimension."),i}calculateOutputIndexRowSplit(e,t,s,r){const i=e.length,o=[];for(let a=0;a<i-1;++a){const l=e[a+1]-e[a];let c=Math.min(r,l),u=t[a];u===-1&&(c=0);for(let h=0;h<c;++h)o.push(u),u+=s;for(let h=0;h<l-c;++h)o.push(-1)}if(i>0&&o.length!==e[i-1])throw new Error("Invalid row split size.");return o}calculateOutputIndexValueRowID(e,t,s,r){const i=e.length,o=[];if(i===0)return[];let a=0,l=e[0];if(l>=t.length)throw new Error(`Got currentValueRowId=${l}, which is not less than ${t.length}`);let c=t[l];o.push(c);for(let u=1;u<i;++u){const h=e[u];if(h===l)c>=0&&(++a,a<r?c+=s:c=-1);else{if(a=0,l=h,h>=t.length)throw new Error(`Got nextValueRowId=${h} which is not less than ${t.length}`);c=t[h]}o.push(c)}if(o.length!==e.length)throw new Error("Invalid row ids.");return o}calculateOutputIndex(e,t,s,r){const i=this.getRowPartitionTensor(e),o=this.getRowPartitionTypeByDimension(e);switch(o){case xo.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(i,t,s,r);case xo.ROW_SPLITS:if(i.length-1>t.length)throw new Error(`Row partition size is greater than output size: ${i.length-1} > ${t.length}`);return this.calculateOutputIndexRowSplit(i,t,s,r);default:throw new Error(`Unsupported partition type: ${xo[o]}`)}}getFirstDimensionSize(){const e=this.rowPartitionValues[0];if(this.rowPartitionTypes.length===0)throw new Error("No row_partition_types given.");const t=this.rowPartitionTypes[0];switch(t){case xo.FIRST_DIM_SIZE:return e[0];case xo.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case xo.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${xo[t]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");const t=this.getFirstDimensionSize(),s=this.calculateOutputSize(t),r=new Array(this.raggedRank+1);r[r.length-1]=1;for(let l=r.length-2;l>=0;--l)r[l]=r[l+1]*s[l+1];const i=a3(s,!1),o=Ts(this.valuesDType,ye(i));if(r[0]*s[0]>0){let l=this.calculateFirstParentOutputIndex(t,r[0],s[0]);for(let c=1;c<=this.raggedRank;++c)l=this.calculateOutputIndex(c-1,l,r[c],s[c]);this.setOutput(this.raggedRank,l,o,i)}return[i,o]}setOutput(e,t,s,r){if(s.length===0)return;const i=this.values,o=s;let a=r.slice();a=a.slice(e+1);const l=ye(a),c=t.length;let u=this.defaultValue;if(u.length!==l&&u.length!==1){const p=this.defaultValueShape;ue(()=>{const A=ae(u,p);u=pu(A,a).dataSync()})}let h=0,d=0,f=0;for(let p=0;p<=c;++p){let A=p<c?t[p]:-1;if(A===f){++f;continue}if(d<f){const m=i.subarray(h*l),g=o.subarray(d*l),x=(f-d)*l;o3(g,m,x)}if(p>=c){const m=s.length;A=Math.floor(m/l)}if(A>f)if(this.defaultValue.length===1)o.subarray(f*l,A*l).fill(this.defaultValue[0]),f=A;else for(;A>f;){const m=o.slice(f*l);o3(m,u,l),++f}A<0?(h=p+1,d=f):(h=p,d=f,f=d+1)}}}function o3(n,e,t){for(let s=0;s<t;s++)n[s]=e[s]}function a3(n,e){const t=[];for(let s of n){if(s<0){if(!e)throw new Error(`Dimension ${s} must be >= 0`);if(s<-1)throw new Error(`Dimension ${s} must be >= -1`);s=-1}t.push(s)}return t}function XF(n,e,t,s,r,i,o,a,l,c){return new O0(n,e,t,s,r,i,o,a,l,c).compute()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KF(n,e,t,s){const r=n===e,i=n<e&&t<0,o=e<n&&t>1;if(r||i||o)return Ar(0,s);const a=Math.abs(Math.ceil((e-n)/t)),l=Ar(a,s);e<n&&t===1&&(t=-1),l[0]=n;for(let c=1;c<l.length;c++)l[c]=l[c-1]+t;return l}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JF=Ua(n=>1/Math.sqrt(n)),sse=Ic(Ah,JF),rse={kernelName:Ah,backendName:"cpu",kernelFunc:sse};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hu(n,e,t,s,r,i,o,a,l,c){const u=[s/r,r],h=n.values,d=e.values;if(s===0)return rn(t,e.dtype);const f=l instanceof Vs?l:rn(u,e.dtype);typeof l=="string"||typeof l=="number"?f.values.fill(l):typeof l=="boolean"&&f.values.fill(+l);for(let p=0;p<i;p++){const A=[];let m=0;for(let g=0;g<o;g++){const x=h[p*o+g];A.push(x),m+=x*a[g]}if(m<0||m>=s/r)throw new Error(`Invalid indices: ${A} does not index into ${t}`);for(let g=0;g<r;g++)c?f.values[m*r+g]+=d[p*r+g]:f.values[m*r+g]=e.rank===0?d[0]:d[p*r+g]}return f}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ise=Ua(n=>1/(1+Math.exp(-n))),ZF=ts(Ch,n=>1/(1+Math.exp(-n))),ose={kernelName:Ch,backendName:"cpu",kernelFunc:ZF};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function e$(n,e,t,s,r){const i=Dw(s,e,t),o=ye(t),a=Ot(s);if(i){const h=Fw(e,a);return r==="string"?n.slice(h,h+o):n.subarray(h,h+o)}const l=r==="string"?Zo(n):n,c=rn(s,r,l),u=rn(t,r);for(let h=0;h<u.size;++h){const d=u.indexToLoc(h),f=d.map((p,A)=>p+e[A]);u.set(c.get(...f),...d)}return r==="string"?KR(u.values):u.values}function Ru(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{begin:i,size:o}=s;Pt(r,"slice");const[a,l]=kA(r,i,o);u1(r,a,l);const c=t.data.get(r.dataId).values,u=e$(c,a,l,r.shape,r.dtype);return t.makeTensorInfo(l,r.dtype,u)}const ase={kernelName:ap,backendName:"cpu",kernelFunc:Ru};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function t$(n,e,t,s,r,i,o){const a=e[0],l=i[0],c=new Array(l),u=new Array(a),h=e[1];if(l===0){if(a!==0)throw new Error(OR(a));const m=Ts(t,0),g=Ts(r,0);return[m,[0,h],g,c,u]}let d=!0,f=0;const p=new Array(l).fill(0);for(let m=0;m<a;++m){const g=n[m*h];if(g<0)throw new Error(QR(m,g));if(g>=l)throw new Error(UR(m,g,l));++p[g],d=d&&g>=f,f=g}let A=!0;for(let m=0;m<l;++m){const g=p[m]===0;c[m]=g,A=A&&!g,p[m]=Math.max(p[m],1),m>0&&(p[m]+=p[m-1])}if(A&&d){const m=n,g=s;for(let x=0;x<a;++x)u[x]=x;return[m,[a,h],g,c,u]}else{const m=p[l-1],g=Ts(t,m*h),x=Ts(r,m),v=new Array(l).fill(0);for(let b=0;b<a;++b){const w=n[b*h],_=v[w],N=(w===0?0:p[w-1])+_;v[w]++;for(let M=0;M<h;++M)g[N*h+M]=n[b*h+M];x[N]=s[b],u[b]=N}for(let b=0;b<l;++b)if(v[b]===0){const _=b===0?0:p[b-1];g[_*h+0]=b;for(let N=1;N<h;++N)g[_*h+N]=0;x[_]=o}return[g,[m,h],x,c,u]}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function n$(n,e,t,s,r){const i=ye(s),o=e[0],a=r.length,l=[];let c=1,u=-1;for(let m=0;m<a;++m){const g=r[m];if(g===-1){if(u!==-1)throw new Error(zR(u,m));u=m,l.push(1)}else{if(g<0)throw new Error(GR(m,g));c*=g,l.push(g)}}if(u!==-1){if(c<=0)throw new Error(VR());const m=Math.trunc(i/c);if(c*m!==i)throw new Error(WR(s,l));l[u]=m}if(ye(l)!==i)throw new Error(HR(s,l));const d=s.length,f=[];if(d>0){f[d-1]=1;for(let m=d-2;m>=0;--m)f[m]=f[m+1]*s[m+1]}const p=[];if(a>0){p[a-1]=1;for(let m=a-2;m>=0;--m)p[m]=p[m+1]*l[m+1]}const A=Ts(t,o*a);for(let m=0;m<o;++m){let g=0;for(let x=0;x<d;++x)g+=n[m*d+x]*f[x];for(let x=0;x<a;++x)A[m*a+x]=Math.trunc(g/p[x]),g%=p[x]}return[A,[o,a],l]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fS(n,e,t,s,r,i=!1,o=0){const a=s.length,l=[e[0],n.length/e[0]],c=l[1],h=a>0?r[a-1]+1:0;if(h<0)throw new Error(rC());const d=e.slice();d[0]=h;const f=d.reduce((v,b)=>v*b,1),p=Ts(t,f);if(a===0)return h>0&&p.fill(o),[p,d];if(h<=0)throw new Error(rC());let A=0,m=1,g=0,x=r[A];for(;;){let v=0;if(m<a){if(v=r[m],x===v){++m;continue}if(x>=v)throw new Error(qR())}if(x<0||x>=h)throw new Error(YR(x,h));x>g&&p.fill(o,g*c,x*c);for(let b=A;b<m;++b){const w=s[b];if(w<0||w>=l[0])throw new Error(jR(b,s[b],l[0]));for(let _=0;_<c;_++)p[x*c+_]+=n[w*c+_]}if(i)for(let b=0;b<c;b++)p[x*c+b]/=m-A;if(A=m,++m,g=x+1,x=v,m>a)break}return g<h&&p.fill(o,g*c,h*c),[p,d]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lse=Ua(n=>Math.sqrt(n)),cse=ts(wh,n=>Math.sqrt(n)),use={kernelName:wh,backendName:"cpu",kernelFunc:cse};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const s$=Ls(((n,e)=>{const t=n-e;return t*t})),hse=sr(Sh,s$),dse={kernelName:Sh,backendName:"cpu",kernelFunc:hse};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const r$=Ua((n,e)=>{const{pattern:t,replaceGlobal:s,rewrite:r}=e;return n.replace(new RegExp(t,s?"g":""),r)}),fse=Ic(Zg,r$),pse={kernelName:Zg,backendName:"cpu",kernelFunc:fse};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function i$(n,e,t,s){const r=rn(n,e.dtype);for(let i=0;i<r.size;i++){const o=r.indexToLoc(i),a=new Array(o.length);for(let l=0;l<a.length;l++)a[l]=o[l]*t[l]+s[l];r.set(e.get(...a),...o)}return r}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class mse{constructor(e,t,s,r,i,o){this.separator=Yo(e),this.nGramWidths=t,this.leftPad=Yo(s),this.rightPad=Yo(r),this.padWidth=i,this.preserveShort=o}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){const s=this.getPadWidth(t);return Math.max(0,e+2*s-t+1)}createNGrams(e,t,s,r,i,o){for(let a=0;a<i;++a){const l=this.getPadWidth(o),c=Math.max(0,l-a),u=Math.max(0,l-(i-(a+1))),h=o-(c+u),d=t+(c>0?0:a-l);let f=0;f+=c*this.leftPad.length;for(let x=0;x<h;++x)f+=e[d+x].length;f+=u*this.rightPad.length;const p=c+u+h-1;f+=p*this.separator.length,s[r+a]=new Uint8Array(f);const A=s[r+a];let m=0;const g=x=>x.forEach(v=>A[m++]=v);for(let x=0;x<c;++x)g(this.leftPad),g(this.separator);for(let x=0;x<h-1;++x)g(e[d+x]),g(this.separator);if(h>0){g(e[d+h-1]);for(let x=0;x<u;++x)g(this.separator),g(this.rightPad)}else{for(let x=0;x<u-1;++x)g(this.rightPad),g(this.separator);g(this.rightPad)}}}compute(e,t){const s=e.length,r=t.length;if(r>0){let l=t[0];if(l!==0)throw new Error(`First split value must be 0, got ${l}`);for(let c=1;c<r;++c){let u=t[c]>=l;if(u=u&&t[c]<=s,!u)throw new Error(`Invalid split value ${t[c]}, must be in [${l}, ${s}]`);l=t[c]}if(l!==s)throw new Error(`Last split value must be data size. Expected ${s}, got ${l}`)}const i=r-1,o=Ts("int32",r);if(s===0||r===0){const l=new Array(s);for(let c=0;c<=i;++c)o[c]=0;return[l,o]}o[0]=0;for(let l=1;l<=i;++l){const c=t[l]-t[l-1];let u=0;this.nGramWidths.forEach(h=>{u+=this.getNumNGrams(c,h)}),this.preserveShort&&c>0&&u===0&&(u=1),o[l]=o[l-1]+u}const a=new Array(o[i]);for(let l=0;l<i;++l){const c=t[l];let u=o[l];if(this.nGramWidths.forEach(h=>{const d=t[l+1]-t[l],f=this.getNumNGrams(d,h);this.createNGrams(e,c,a,u,f,h),u+=f}),this.preserveShort&&u===o[l]){const h=t[l+1]-t[l];if(h===0)continue;const d=h+2*this.padWidth;this.createNGrams(e,c,a,u,1,d)}}return[a,o]}}function o$(n,e,t,s,r,i,o,a){return new mse(t,s,r,i,o,a).compute(n,e)}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gse(n,e,t,s){if(!n.length)return;if(e.length===0){for(let i=0;i<n.length;++i)s.push(n.subarray(i,i+1));return}if(e.length===1){const i=e[0];let o=n.indexOf(i);for(;o!==-1;){const a=n.subarray(0,o);(!t||a.length!==0)&&s.push(a),n=n.subarray(o+1),o=n.indexOf(i)}(!t||n.length!==0)&&s.push(n);return}let r=0;for(let i=0;i<n.length+1;i++)if(i===n.length||e.indexOf(n[i])!==-1){const o=n.subarray(r,i);(!t||o.length!==0)&&s.push(o),r=i+1}}function a$(n,e,t){const s=n.length,r=[];let i=0,o=0;const a=new Array(s);for(let d=0;d<s;++d){const f=r.length;gse(n[d],e,t,r);const p=r.length-f;a[d]=p,i+=p,o=Math.max(o,p)}const l=Ts("int32",i*2),c=new Array(i),u=[s,o];let h=0;for(let d=0;d<s;++d)for(let f=0;f<a[d];++f)l[h*2]=d,l[h*2+1]=f,c[h]=r[h],++h;return[l,c,u]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function l$(n,e){const t=Ts("int32",n.length);for(let s=0;s<n.length;++s)t[s]=Lk(n[s]).modulo(e).getLowBitsUnsigned();return t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const c$=Ls(((n,e)=>n-e)),Ase=cS(((n,e,t,s)=>({real:n-t,imag:e-s}))),pS=sr(Eh,c$,Ase),yse={kernelName:Eh,backendName:"cpu",kernelFunc:pS};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function u$(n,e){const t=new Array(n.rank);for(let r=0;r<t.length;r++)t[r]=n.shape[r]*e[r];const s=rn(t,n.dtype);for(let r=0;r<s.values.length;++r){const i=s.indexToLoc(r),o=new Array(n.rank);for(let l=0;l<o.length;l++)o[l]=i[l]%n.shape[l];const a=n.locToIndex(o);s.values[r]=n.values[a]}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const om=(n,e)=>{const t=e.value-n.value;return t===0?n.index-e.index:t};function h$(n,e,t=0,s=n.length-1){for(;s>t;){if(s-t>600){const a=s-t+1,l=e-t+1,c=Math.log(a),u=.5*Math.exp(2*c/3),h=.5*Math.sqrt(c*u*(a-u)/a)*Math.sign(l-a/2),d=Math.max(t,Math.floor(e-l*u/a+h)),f=Math.min(s,Math.floor(e+(a-l)*u/a+h));h$(n,e,d,f)}const r=n[e];let i=t,o=s;for(sl(n,t,e),om(n[s],r)>0&&sl(n,t,s);i<o;){for(sl(n,i,o),i++,o--;om(n[i],r)<0;)i=i+1;for(;om(n[o],r)>0;)o=o-1}om(n[t],r)===0?sl(n,t,o):(o=o+1,sl(n,o,s)),o<=e&&(t=o+1),e<=o&&(s=o-1)}}function d$(n,e,t,s,r){const i=e[e.length-1],[o,a]=[n.length/i,i],l=Ws(t,o*s),c=Ws("int32",o*s);for(let h=0;h<o;h++){const d=h*a,f=n.subarray(d,d+a);let p=new Array(f.length);f.forEach((x,v)=>p[v]={value:x,index:v}),s<p.length&&(h$(p,s),p=p.slice(0,s)),r&&p.sort(om);const A=h*s,m=l.subarray(A,A+s),g=c.subarray(A,A+s);for(let x=0;x<s;x++)m[x]=p[x].value,g[x]=p[x].index}const u=e.slice();return u[u.length-1]=s,[rn(u,t,l),rn(u,"int32",c)]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function f$(n,e,t,s){const r=an(e,t)[0],i=[1,t[0],1];for(let p=0;p<r;p++)i[0]*=t[p];i[1]=t[r];for(let p=r+1;p<t.length;p++)i[2]*=t[p];const o=new Map,a=new Int32Array(t[r]),l=new Vs(i,s,n),c=[],u=i[0]===1&&i[2]===1;for(let p=0;p<t[r];p++){let A;if(u)A=n[p].toString();else{const g=[];for(let x=0;x<i[0];x++)for(let v=0;v<i[2];v++)g.push(l.get(x,p,v));A=g.join(",")}const m=o.get(A);if(m!=null)a[p]=m;else{const g=o.size;o.set(A,g),a[p]=g,c.push(p)}}const h=i.slice();h[1]=o.size;const d=new Vs(h,s);c.forEach((p,A)=>{for(let m=0;m<i[0];m++)for(let g=0;g<i[2];g++)d.set(l.get(m,p,g),m,A,g)});const f=t.slice();return f[r]=h[1],{outputValues:d.values,outputShape:f,indices:a}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const p$=Object.freeze(Object.defineProperty({__proto__:null,addImpl:CF,bincountImpl:uS,bincountReduceImpl:IF,bitwiseAndImpl:wF,castImpl:vF,ceilImpl:SF,concatImpl:EF,equalImpl:_F,expImpl:BF,expm1Impl:NF,floorDivImpl:MF,floorImpl:RF,gatherNdImpl:DF,gatherV2Impl:FF,greaterEqualImpl:PF,greaterImpl:$F,lessEqualImpl:OF,lessImpl:LF,linSpaceImpl:QF,logImpl:UF,maxImpl:zF,maximumImpl:GF,minimumImpl:VF,multiplyImpl:hS,negImpl:WF,notEqualImpl:HF,prodImpl:qF,raggedGatherImpl:YF,raggedRangeImpl:jF,raggedTensorToTensorImpl:XF,rangeImpl:KF,rsqrtImpl:JF,scatterImpl:hu,sigmoidImpl:ise,simpleAbsImpl:bF,sliceImpl:e$,sparseFillEmptyRowsImpl:t$,sparseReshapeImpl:n$,sparseSegmentReductionImpl:fS,sqrtImpl:lse,squaredDifferenceImpl:s$,staticRegexReplaceImpl:r$,stridedSliceImpl:i$,stringNGramsImpl:o$,stringSplitImpl:a$,stringToHashBucketFastImpl:l$,subImpl:c$,tileImpl:u$,topKImpl:d$,transposeImpl:dS,uniqueImpl:f$},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Tx("cpu",()=>new U1,1);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const m$=ts(ju,n=>n>=0?n:Math.exp(n)-1),xse={kernelName:ju,backendName:"cpu",kernelFunc:m$};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function g$(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{alpha:i}=s;Pt([r],"leakyRelu");const o=ye(r.shape),a=t.data.get(r.dataId).values,l=Ws("float32",o);for(let c=0;c<a.length;c++)l[c]=a[c]<0?i*a[c]:a[c];return t.makeTensorInfo(r.shape,"float32",l)}const bse={kernelName:Ff,backendName:"cpu",kernelFunc:g$};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vse=Ls((n,e)=>n<0?e*n:n);function A$(n){const{inputs:e,backend:t}=n,{x:s,alpha:r}=e;Pt([s,r],"prelu");const i=t.data.get(s.dataId).values,o=t.data.get(r.dataId).values,[a,l]=vse(s.shape,r.shape,i,o,"float32");return t.makeTensorInfo(l,"float32",a)}const Cse={kernelName:ep,backendName:"cpu",kernelFunc:A$};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const y$=ts(ph,n=>Math.max(0,n)),Ise={kernelName:ph,backendName:"cpu",kernelFunc:y$};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const x$=ts(mh,n=>Math.min(Math.max(0,n),6)),wse={kernelName:mh,backendName:"cpu",kernelFunc:x$};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Q0(n,e,t,s,r){if(t==="linear")return Da({inputs:{x:e},backend:n});if(t==="relu")return y$({inputs:{x:e},backend:n});if(t==="elu")return m$({inputs:{x:e},backend:n});if(t==="relu6")return x$({inputs:{x:e},backend:n});if(t==="prelu")return A$({inputs:{x:e,alpha:s},backend:n});if(t==="leakyrelu")return g$({inputs:{x:e},backend:n,attrs:{alpha:r}});if(t==="sigmoid")return ZF({inputs:{x:e},backend:n});throw new Error(`Activation ${t} has not been implemented for the CPU backend.`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gs(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{shape:i}=s,o=ye(r.shape),a=gx(i,o),l=ye(a);z(o===l,()=>`The new shape (${a}) has ${l} elements and the old shape (${r.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`),t.incRef(r.dataId);const c=t.data.get(r.dataId);if(c.complexTensorInfos!=null){const u=c.complexTensorInfos.real,h=c.complexTensorInfos.imag;u.shape=a,h.shape=a}return{dataId:r.dataId,shape:a,dtype:r.dtype}}const Sse={kernelName:np,backendName:"cpu",kernelFunc:gs};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function b$(n){const{inputs:e,backend:t,attrs:s}=n,{a:r,b:i}=e,{transposeA:o,transposeB:a}=s;Pt([r,i],"matMul");const l=r.shape.length,c=i.shape.length,u=o?r.shape[l-2]:r.shape[l-1],h=a?i.shape[c-1]:i.shape[c-2],d=o?r.shape[l-1]:r.shape[l-2],f=a?i.shape[c-2]:i.shape[c-1],p=r.shape.slice(0,-2),A=i.shape.slice(0,-2),m=ye(p),g=ye(A),v=jt(r.shape.slice(0,-2),i.shape.slice(0,-2)).concat([d,f]);z(u===h,()=>`Error in matMul: inner shapes (${u}) and (${h}) of Tensors with shapes ${r.shape} and ${i.shape} and transposeA=${o} and transposeB=${a} must match.`);const b=o?[m,u,d]:[m,d,u],w=a?[g,f,h]:[g,h,f],_=gs({inputs:{x:r},backend:t,attrs:{shape:b}}),N=gs({inputs:{x:i},backend:t,attrs:{shape:w}}),M=o?_.shape[1]:_.shape[2],T=o?_.shape[2]:_.shape[1],k=a?N.shape[1]:N.shape[2],B=Math.max(m,g),L=t.data.get(_.dataId).values,U=t.data.get(N.dataId).values,V=Ot(_.shape),W=Ot(N.shape),[H,ee,K]=o?[V[0],1,V[1]]:[V[0],V[1],1],[te,le,fe]=a?[1,W[1],W[0]]:[W[1],1,W[0]],Ie=T*k,Se=rn([B,T,k],_.dtype),De=Se.values,Be=t.blockSize;for(let he=0;he<B;he++){const ge=he%m,Ne=he%g;for(let Oe=0;Oe<T;Oe+=Be){const Qe=Math.min(Oe+Be,T);for(let Ye=0;Ye<k;Ye+=Be){const _t=Math.min(Ye+Be,k);for(let J=0;J<M;J+=Be){const ht=Math.min(J+Be,M);for(let dt=Oe;dt<Qe;dt++)for(let tt=Ye;tt<_t;tt++){let Ke=0;for(let kt=J;kt<ht;kt++){const Xe=L[ge*H+dt*ee+kt*K],ot=U[kt*te+tt*le+Ne*fe];Ke+=Xe*ot}De[he*Ie+(dt*k+tt)]+=Ke}}}}}return t.disposeIntermediateTensorInfo(_),t.disposeIntermediateTensorInfo(N),t.makeTensorInfo(v,Se.dtype,Se.values)}const Ese={kernelName:bf,backendName:"cpu",kernelFunc:b$};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _se(n){const{inputs:e,backend:t,attrs:s}=n,{a:r,b:i,bias:o,preluActivationWeights:a}=e,{transposeA:l,transposeB:c,activation:u,leakyreluAlpha:h}=s;let d,f,p;const A=[];d=b$({inputs:{a:r,b:i},attrs:{transposeA:l,transposeB:c},backend:t}),o&&(f=tf({inputs:{a:d,b:o},backend:t}),A.push(d),d=f),u&&(p=Q0(t,d,u,a,h),A.push(d),d=p);for(const g of A)t.disposeIntermediateTensorInfo(g);return d}const Tse={kernelName:Gd,backendName:"cpu",kernelFunc:_se};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Bse=ts($u,n=>Math.acos(n)),kse={kernelName:$u,backendName:"cpu",kernelFunc:Bse};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Nse=ts(Pu,n=>Math.acosh(n)),Rse={kernelName:Pu,backendName:"cpu",kernelFunc:Nse};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mse(n){const{inputs:e,backend:t}=n,s=e;Pt(e,"addN");const r=s.map(a=>t.data.get(a.dataId).values),i=rn(s[0].shape,s[0].dtype),o=i.values;for(let a=0;a<s.length;a++){const l=r[a];for(let c=0;c<o.length;c++)o[c]+=l[c]}return t.makeTensorInfo(i.shape,i.dtype,i.values)}const Dse={kernelName:mf,backendName:"cpu",kernelFunc:Mse};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fse(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:i,keepDims:o}=s;Pt(r,"all");const a=an(i,r.shape);let l=a;const c=ss(l,r.shape.length);let u=r;c!=null&&(u=Ii({inputs:{x:r},backend:t,attrs:{perm:c}}),l=ys(l.length,r.shape.length)),qs("all",l,u.shape.length);const[h,d]=$s(u.shape,l),f=ye(d),p=Ar(ye(h),u.dtype),A=t.data.get(u.dataId).values;for(let g=0;g<p.length;++g){const x=g*f;let v=A[x];for(let b=0;b<f;++b){const w=A[x+b];v=v&&w}p[g]=v}c!=null&&t.disposeIntermediateTensorInfo(u);const m=t.makeTensorInfo(h,u.dtype,p);if(o){const g=Ms(h,a),x=gs({inputs:{x:m},backend:t,attrs:{shape:g}});return t.disposeIntermediateTensorInfo(m),x}return m}const $se={kernelName:ag,backendName:"cpu",kernelFunc:Fse};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pse(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:i,keepDims:o}=s;Pt(r,"any");const a=an(i,r.shape);let l=a;const c=ss(l,r.shape.length);let u=r;c!=null&&(u=Ii({inputs:{x:r},backend:t,attrs:{perm:c}}),l=ys(l.length,r.shape.length)),qs("any",l,u.shape.length);const[h,d]=$s(u.shape,l),f=ye(d),p=Ar(ye(h),u.dtype),A=t.data.get(u.dataId).values;for(let g=0;g<p.length;++g){const x=g*f;let v=A[x];for(let b=0;b<f;++b){const w=A[x+b];v=v||w}p[g]=v}c!=null&&t.disposeIntermediateTensorInfo(u);const m=t.makeTensorInfo(h,u.dtype,p);if(o){const g=Ms(h,a),x=gs({inputs:{x:m},backend:t,attrs:{shape:g}});return t.disposeIntermediateTensorInfo(m),x}return m}const Lse={kernelName:lg,backendName:"cpu",kernelFunc:Pse};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ose(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:i}=s;Pt(r,"argMax");let o=an(i,r.shape);const a=ss(o,r.shape.length);let l=r;const c=[];a!=null&&(l=Ii({inputs:{x:r},backend:t,attrs:{perm:a}}),c.push(l),o=ys(o.length,l.shape.length)),o=[o[0]],qs("argMax",o,l.shape.length);const[u,h]=$s(l.shape,o),d=ye(u),f=Ar(d,"int32"),p=ye(h),A=t.data.get(l.dataId).values;for(let m=0;m<f.length;++m){const g=m*p;let x=A[g],v=0;for(let b=0;b<p;++b){const w=A[g+b];w>x&&(x=w,v=b)}f[m]=v}return c.forEach(m=>t.disposeIntermediateTensorInfo(m)),t.makeTensorInfo(u,"int32",f)}const Qse={kernelName:gf,backendName:"cpu",kernelFunc:Ose};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Use(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:i}=s;Pt(r,"argMin");let o=an(i,r.shape);const a=ss(o,r.shape.length);let l=r;const c=[];a!=null&&(l=Ii({inputs:{x:r},backend:t,attrs:{perm:a}}),c.push(l),o=ys(o.length,l.shape.length)),o=[o[0]],qs("argMin",o,l.shape.length);const[u,h]=$s(l.shape,o),d=ye(u),f=Ar(d,"int32"),p=ye(h),A=t.data.get(l.dataId).values;for(let m=0;m<f.length;++m){const g=m*p;let x=A[g],v=0;for(let b=0;b<p;++b){const w=A[g+b];w<x&&(x=w,v=b)}f[m]=v}return c.forEach(m=>t.disposeIntermediateTensorInfo(m)),t.makeTensorInfo(u,"int32",f)}const zse={kernelName:Af,backendName:"cpu",kernelFunc:Use};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Gse=ts(Lu,n=>Math.asin(n)),Vse={kernelName:Lu,backendName:"cpu",kernelFunc:Gse};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wse=ts(Ou,n=>Math.asinh(n)),Hse={kernelName:Ou,backendName:"cpu",kernelFunc:Wse};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qse=ts(Qu,n=>Math.atan(n)),Yse={kernelName:Qu,backendName:"cpu",kernelFunc:qse};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jse=Ls((n,e)=>Math.atan2(n,e)),Xse=sr(zu,jse),Kse={kernelName:zu,backendName:"cpu",kernelFunc:Xse};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jse=ts(Uu,n=>Math.atanh(n)),Zse={kernelName:Uu,backendName:"cpu",kernelFunc:Jse};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mS(n,e,t,s,r,i){const o=r.strideHeight,a=r.strideWidth,l=r.dilationHeight,c=r.dilationWidth,u=r.effectiveFilterHeight,h=r.effectiveFilterWidth,d=r.padInfo.top,f=r.padInfo.left,p=i==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,A=rn(r.outShape,t),m=A.values,g=r.outShape[1]*r.outShape[2]*r.outShape[3],x=r.outShape[2]*r.outShape[3],v=r.outShape[3];for(let b=0;b<r.batchSize;++b){const w=b*g,_=b*s[0];for(let N=0;N<r.inChannels;++N)for(let M=0;M<r.outHeight;++M){const T=M*o-d,k=Math.max(0,T),B=Math.min(r.inHeight,u+T),L=w+M*x;for(let U=0;U<r.outWidth;++U){const V=U*a-f,W=Math.max(0,V),H=Math.min(r.inWidth,h+V);let ee=p,K=0,te=0;for(let fe=k;fe<B;fe+=l){const Ie=_+fe*s[1];for(let Se=W;Se<H;Se+=c){const De=Ie+Se*s[2],Be=n[De+N];i==="max"&&Be>ee?ee=Be:i==="avg"&&(K+=Be,te++)}if(isNaN(ee))break}const le=L+U*v+N;m[le]=i==="avg"?K/te:ee}}}return A}function v$(n,e,t,s,r=!1,i=!1){const o=rn(s.outShape,"int32"),a=s.strideHeight,l=s.strideWidth,c=s.dilationHeight,u=s.dilationWidth,h=s.effectiveFilterHeight,d=s.effectiveFilterWidth,f=s.padInfo.top,p=s.padInfo.left,A=rn(e,t,n);for(let m=0;m<s.batchSize;++m)for(let g=0;g<s.inChannels;++g)for(let x=0;x<s.outHeight;++x){const v=x*a-f;let b=v;for(;b<0;)b+=c;const w=Math.min(s.inHeight,h+v);for(let _=0;_<s.outWidth;++_){const N=_*l-p;let M=N;for(;M<0;)M+=u;const T=Math.min(s.inWidth,d+N);let k=Number.NEGATIVE_INFINITY,B=-1;for(let L=b;L<w;L+=c){const U=L-v;for(let V=M;V<T;V+=u){const W=V-N,H=A.get(m,L,V,g);H>k&&(k=H,r?B=i?((m*s.inHeight+L)*s.inWidth+V)*s.inChannels+g:(L*s.inWidth+V)*s.inChannels+g:B=U*d+W)}}o.set(B,m,x,_,g)}}return o}function C$(n,e,t,s,r,i){const o=r.strideDepth,a=r.strideHeight,l=r.strideWidth,c=r.dilationDepth,u=r.dilationHeight,h=r.dilationWidth,d=r.effectiveFilterDepth,f=r.effectiveFilterHeight,p=r.effectiveFilterWidth,A=r.padInfo.front,m=r.padInfo.top,g=r.padInfo.left,x=i==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,v=rn(r.outShape,t),b=v.values,w=r.outShape[1]*r.outShape[2]*r.outShape[3]*r.outShape[4],_=r.outShape[2]*r.outShape[3]*r.outShape[4],N=r.outShape[3]*r.outShape[4],M=r.outShape[4];for(let T=0;T<r.batchSize;++T){const k=T*w,B=T*s[0];for(let L=0;L<r.inChannels;++L)for(let U=0;U<r.outDepth;++U){const V=U*o-A;let W=V;for(;W<0;)W+=c;const H=Math.min(r.inDepth,d+V),ee=k+U*_;for(let K=0;K<r.outHeight;++K){const te=K*a-m;let le=te;for(;le<0;)le+=u;const fe=Math.min(r.inHeight,f+te),Ie=ee+K*N;for(let Se=0;Se<r.outWidth;++Se){const De=Se*l-g;let Be=De;for(;Be<0;)Be+=h;const he=Math.min(r.inWidth,p+De),ge=Ie+Se*M;let Ne=x,Oe=0,Qe=0;for(let _t=W;_t<H;_t+=c){const J=B+_t*s[1];for(let ht=le;ht<fe;ht+=u){const dt=J+ht*s[2];for(let tt=Be;tt<he;tt+=h){const Ke=dt+tt*s[3],kt=n[Ke+L];if(i==="max"&&kt>Ne?Ne=kt:i==="avg"&&(Oe+=kt,Qe++),isNaN(Ne))break}if(isNaN(Ne))break}if(isNaN(Ne))break}const Ye=ge+L;b[Ye]=i==="avg"?Oe/Math.max(Qe,1):Ne}}}}return v}function ere(n,e){const t=rn(e.outShape,"int32"),s=e.strideDepth,r=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,a=e.dilationHeight,l=e.dilationWidth,c=e.effectiveFilterDepth,u=e.effectiveFilterHeight,h=e.effectiveFilterWidth,d=e.padInfo.front,f=e.padInfo.top,p=e.padInfo.left;for(let A=0;A<e.batchSize;++A)for(let m=0;m<e.inChannels;++m)for(let g=0;g<e.outDepth;++g){const x=g*s-d;let v=x;for(;v<0;)v+=o;const b=Math.min(e.inDepth,c+x);for(let w=0;w<e.outHeight;++w){const _=w*r-f;let N=_;for(;N<0;)N+=a;const M=Math.min(e.inHeight,u+_);for(let T=0;T<e.outWidth;++T){const k=T*i-p;let B=k;for(;B<0;)B+=l;const L=Math.min(e.inWidth,h+k);let U=Number.NEGATIVE_INFINITY,V=-1;for(let W=v;W<b;W+=o){const H=W-x;for(let ee=N;ee<M;ee+=a){const K=ee-_;for(let te=B;te<L;te+=l){const le=te-k,fe=n.get(A,W,ee,te,m);fe>=U&&(U=fe,V=H*u*h+K*u+le)}}}t.set(V,A,g,w,T,m)}}}return t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tre(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e;Pt(r,"avgPool");const{filterSize:i,strides:o,pad:a,dimRoundingMode:l}=s,c=1;z(nr(o,c),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${c}'`);const u=Pr(r.shape,i,o,c,a,l);let h;if(u.filterWidth===1&&u.filterHeight===1&&dn(u.inShape,u.outShape))h=Da({inputs:{x:r},backend:t});else{const d=t.data.get(r.dataId).values,f=Ot(r.shape),p=mS(d,r.shape,r.dtype,f,u,"avg");h=t.makeTensorInfo(u.outShape,r.dtype,p.values)}return h}const nre={kernelName:yf,backendName:"cpu",kernelFunc:tre};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sre(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{filterSize:i,strides:o,pad:a,dimRoundingMode:l,dataFormat:c}=s;Pt(r,"avgPool3d");const u=fo(r.shape,i,o,1,a,l,c),h=t.data.get(r.dataId).values,d=C$(h,r.shape,r.dtype,Ot(r.shape),u,"avg");return t.makeTensorInfo(d.shape,"float32",d.values)}const rre={kernelName:xf,backendName:"cpu",kernelFunc:sre};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ire(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:i}=e,{filterSize:o,strides:a,pad:l,dimRoundingMode:c}=s;Pt([r,i],"avgPool3DGrad");const u=fo(i.shape,o,a,1,l,c),h=u.strideDepth,d=u.strideHeight,f=u.strideWidth,p=u.filterDepth,A=u.filterHeight,m=u.filterWidth,g=u.dilationDepth,x=u.dilationHeight,v=u.dilationWidth,b=u.effectiveFilterDepth,w=u.effectiveFilterHeight,_=u.effectiveFilterWidth,N=b-1-u.padInfo.front,M=_-1-u.padInfo.left,T=w-1-u.padInfo.top,k=rn(i.shape,"float32"),B=1/(p*A*m),L=t.bufferSync(r);for(let U=0;U<u.batchSize;++U)for(let V=0;V<u.inChannels;++V)for(let W=0;W<u.inDepth;++W)for(let H=0;H<u.inHeight;++H)for(let ee=0;ee<u.inWidth;++ee){const K=W-N,te=H-T,le=ee-M;let fe=0;for(let Ie=0;Ie<b;Ie+=g){const Se=(K+Ie)/h;if(!(Se<0||Se>=u.outDepth||Math.floor(Se)!==Se))for(let De=0;De<w;De+=x){const Be=(te+De)/d;if(!(Be<0||Be>=u.outHeight||Math.floor(Be)!==Be))for(let he=0;he<_;he+=v){const ge=(le+he)/f;if(ge<0||ge>=u.outWidth||Math.floor(ge)!==ge)continue;const Ne=L.get(U,Se,Be,ge,V);fe+=Ne}}}k.set(fe*B,U,W,H,ee,V)}return t.makeTensorInfo(k.shape,k.dtype,k.values)}const ore={kernelName:ug,backendName:"cpu",kernelFunc:ire};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function are(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:i}=e,o=i;Pt([r,i],"avgPoolGrad");const{filterSize:a,strides:l,pad:c}=s,u=Pr(o.shape,a,l,1,c),h=u.strideHeight,d=u.strideWidth,f=u.filterHeight,p=u.filterWidth,A=u.dilationHeight,m=u.dilationWidth,g=u.effectiveFilterHeight,x=u.effectiveFilterWidth,v=x-1-u.padInfo.left,b=g-1-u.padInfo.top,w=rn(o.shape,"float32"),_=1/(f*p),N=t.data.get(r.dataId).values,M=rn(r.shape,"float32",N);for(let T=0;T<u.batchSize;++T)for(let k=0;k<u.inChannels;++k)for(let B=0;B<u.inHeight;++B)for(let L=0;L<u.inWidth;++L){const U=B-b,V=L-v;let W=0;for(let H=0;H<g;H+=A){const ee=(U+H)/h;if(!(ee<0||ee>=u.outHeight||Math.floor(ee)!==ee))for(let K=0;K<x;K+=m){const te=(V+K)/d;if(te<0||te>=u.outWidth||Math.floor(te)!==te)continue;const le=M.get(T,ee,te,k);W+=le}}w.set(W*_,T,B,L,k)}return t.makeTensorInfo(w.shape,w.dtype,w.values)}const lre={kernelName:cg,backendName:"cpu",kernelFunc:are};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cre(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,scale:i,offset:o,mean:a,variance:l}=e;z(a.shape.length===l.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),z(o==null||a.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),z(i==null||a.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),Pt([r,a,l,i,o],"batchNorm");let{varianceEpsilon:c}=s;c==null&&(c=.001);const u=t.data.get(r.dataId).values,h=t.data.get(a.dataId).values,d=t.data.get(l.dataId).values,f=i?t.data.get(i.dataId).values:new Float32Array([1]),p=o?t.data.get(o.dataId).values:new Float32Array([0]),A=new Float32Array(u.length),m=p.length,g=f.length,x=d.length,v=h.length;let b=0,w=0,_=0,N=0;for(let M=0;M<u.length;++M)A[M]=p[b++]+(u[M]-h[w++])*f[_++]/Math.sqrt(d[N++]+c),b>=m&&(b=0),w>=v&&(w=0),_>=g&&(_=0),N>=x&&(N=0);return t.makeTensorInfo(r.shape,r.dtype,A)}const ure={kernelName:Rf,backendName:"cpu",kernelFunc:cre};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hre(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{blockShape:i,crops:o}=s;Pt([r],"batchToSpaceND");const a=i.reduce((g,x)=>g*x),l=$h(r.shape,i,a),c=Ph(l.length,i.length),u=Lh(r.shape,i,a),h=g1(o,i.length),d=A1(u,o,i.length),f=gs({inputs:{x:r},backend:t,attrs:{shape:l}}),p=Ii({inputs:{x:f},backend:t,attrs:{perm:c}}),A=gs({inputs:{x:p},backend:t,attrs:{shape:u}}),m=Ru({inputs:{x:A},backend:t,attrs:{begin:h,size:d}});return t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(A),m}const dre={kernelName:vf,backendName:"cpu",kernelFunc:hre};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fre(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,weights:i}=e,{size:o}=s,a=t.data.get(r.dataId).values,l=t.data.get(i.dataId).values,c=uS(a,l,i.dtype,i.shape,o);return t.makeTensorInfo([o],i.dtype,c)}const pre={kernelName:hg,backendName:"cpu",kernelFunc:fre};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mre(n){const{inputs:e,backend:t}=n,{s0:s,s1:r}=e,i=t.data.get(s.dataId).values,o=t.data.get(r.dataId).values,a=jt(Array.from(i),Array.from(o));return t.makeTensorInfo([a.length],"int32",Int32Array.from(a))}const gre={kernelName:fg,backendName:"cpu",kernelFunc:mre};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Are=ts(Wu,(n,e)=>{const t=e;return n>t.clipValueMax?t.clipValueMax:n<t.clipValueMin?t.clipValueMin:n}),yre={kernelName:Wu,backendName:"cpu",kernelFunc:Are};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xre=n=>{const{x:e}=n.inputs,t=n.backend,s=new Float32Array(ye(e.shape)),r=t.data.get(e.dataId),i=r.complexTensorInfos.real,o=r.complexTensorInfos.imag,a=t.data.get(i.dataId).values,l=t.data.get(o.dataId).values;for(let c=0;c<a.length;c++){const u=a[c],h=l[c];s[c]=Math.hypot(u,h)}return t.makeOutput(s,e.shape,"float32")},bre={kernelName:Cf,backendName:"cpu",kernelFunc:xre};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nf(n){const{inputs:e,backend:t}=n,{input:s}=e,r=t.data.get(s.dataId).complexTensorInfos.imag,i=t.data.get(r.dataId).values;return t.makeTensorInfo(r.shape,r.dtype,i)}const vre={kernelName:Mg,backendName:"cpu",kernelFunc:nf};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sf(n){const{inputs:e,backend:t,attrs:s}=n,{axis:r}=s,i=an(r,e[0].shape)[0],o=e.map(A=>A.shape);f1(o,i);let a=xi(e.map(A=>A.shape),i);if(ye(a)===0)return t.makeTensorInfo(a,e[0].dtype,[]);const l=e.filter(A=>ye(A.shape)>0);if(l.length===1)return Da({inputs:{x:l[0]},backend:t});if(l[0].dtype==="complex64"){const A=l.map(b=>Nu({inputs:{input:b},backend:t})),m=l.map(b=>nf({inputs:{input:b},backend:t})),g=sf({inputs:A,backend:t,attrs:{axis:i}}),x=sf({inputs:m,backend:t,attrs:{axis:i}}),v=$i({inputs:{real:g,imag:x},backend:t});return A.forEach(b=>t.disposeIntermediateTensorInfo(b)),m.forEach(b=>t.disposeIntermediateTensorInfo(b)),t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(x),v}const c=l.map(A=>{const g=[-1,ye(A.shape.slice(i))];return gs({inputs:{x:A},backend:t,attrs:{shape:g}})}),u=c.map(A=>({vals:t.data.get(A.dataId).values,shape:A.shape}));a=xi(c.map(A=>A.shape),1);const h=c[0].shape[0]===1,d=EF(u,a,e[0].dtype,h),f=xi(l.map(A=>A.shape),i),p=t.makeTensorInfo(f,e[0].dtype,d);return c.forEach(A=>t.disposeIntermediateTensorInfo(A)),p}const Cre={kernelName:If,backendName:"cpu",kernelFunc:sf};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function I$(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:i}=e,{strides:o,pad:a,dataFormat:l,dilations:c,dimRoundingMode:u}=s;Pt([r,i],"conv2d");const h=Xi(l),d=As(r.shape,i.shape,o,c,a,u,!1,h),f=d.filterHeight,p=d.filterWidth,A=d.dilationHeight,m=d.dilationWidth,g=d.padInfo.left,x=d.padInfo.top,v=d.dataFormat==="channelsLast",b=new Vs(d.outShape,r.dtype),w=Ot(r.shape),_=Ot(i.shape),N=w[0],M=v?w[1]:w[2],T=v?w[2]:1,k=v?1:w[1],B=b.strides[0],L=v?b.strides[1]:b.strides[2],U=v?b.strides[2]:1,V=v?1:b.strides[1],W=t.data.get(r.dataId).values,H=t.data.get(i.dataId).values,ee=b.values;for(let K=0;K<d.batchSize;++K){const te=K*N,le=K*B;for(let fe=0;fe<d.outHeight;++fe){const Ie=le+fe*L,Se=fe*d.strideHeight-x;for(let De=0;De<f;++De){const Be=Se+De*A;if(Be<0||Be>=d.inHeight)continue;const he=De*_[0],ge=te+Be*M;for(let Ne=0;Ne<d.outWidth;++Ne){const Oe=Ie+Ne*U,Qe=Ne*d.strideWidth-g;for(let Ye=0;Ye<p;++Ye){const _t=Qe+Ye*m;if(_t<0||_t>=d.inWidth)continue;const J=he+Ye*_[1],ht=ge+_t*T;let dt=J;for(let tt=0;tt<d.inChannels;++tt){const Ke=W[ht+tt*k];for(let kt=0;kt<d.outChannels;++kt)ee[Oe+kt*V]+=Ke*H[dt+kt];dt+=d.outChannels}}}}}}return t.makeTensorInfo(b.shape,b.dtype,ee)}const Ire={kernelName:wf,backendName:"cpu",kernelFunc:I$};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wre(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,dy:i}=e,{strides:o,pad:a,dataFormat:l,dimRoundingMode:c,filterShape:u}=s;Pt([r,i],"conv2dBackpropFilter");const h=Xi(l),d=As(r.shape,u,o,1,a,c,!1,h),{strideHeight:f,strideWidth:p,filterHeight:A,filterWidth:m}=d,g=d.dataFormat==="channelsLast",x=new Vs(d.filterShape,"float32"),v=d.padInfo.left,b=d.padInfo.top,w=t.data.get(r.dataId).values,_=t.data.get(i.dataId).values,N=new Vs(r.shape,r.dtype,w),M=new Vs(i.shape,i.dtype,_);for(let T=0;T<A;++T){const k=Math.max(0,Math.ceil((b-T)/f)),B=Math.min(d.outHeight,(d.inHeight+b-T)/f);for(let L=0;L<m;++L){const U=Math.max(0,Math.ceil((v-L)/p)),V=Math.min(d.outWidth,(d.inWidth+v-L)/p);for(let W=0;W<d.inChannels;++W)for(let H=0;H<d.outChannels;++H){let ee=0;for(let K=0;K<d.batchSize;++K)for(let te=k;te<B;++te){const le=T+te*f-b;for(let fe=U;fe<V;++fe){const Ie=L+fe*p-v;g?ee+=N.get(K,le,Ie,W)*M.get(K,te,fe,H):ee+=N.get(K,W,le,Ie)*M.get(K,H,te,fe)}}x.set(ee,T,L,W,H)}}}return t.makeTensorInfo(x.shape,x.dtype,x.values)}const Sre={kernelName:mg,backendName:"cpu",kernelFunc:wre};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ere(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,filter:i}=e,{inputShape:o,strides:a,pad:l,dataFormat:c,dimRoundingMode:u}=s;Pt([r,i],"conv2dBackpropInput");const h=Ot(i.shape),d=Ot(r.shape);let f=Xi(c);const p=As(o,i.shape,a,1,l,u,!1,f),A=new Vs(p.inShape,"float32"),m=A.values,g=t.data.get(r.dataId).values,x=t.data.get(i.dataId).values,[v,b,w]=h,{batchSize:_,filterHeight:N,filterWidth:M,inChannels:T,inHeight:k,inWidth:B,outChannels:L,outHeight:U,outWidth:V,strideHeight:W,strideWidth:H}=p;f=p.dataFormat;const ee=N-1-p.padInfo.top,K=M-1-p.padInfo.left,te=f==="channelsLast",le=A.strides[0],fe=te?A.strides[1]:A.strides[2],Ie=te?A.strides[2]:1,Se=te?1:A.strides[1],De=d[0],Be=te?d[1]:d[2],he=te?d[2]:1,ge=te?1:d[1];for(let Ne=0;Ne<_;++Ne)for(let Oe=0;Oe<T;++Oe)for(let Qe=0;Qe<k;++Qe){const Ye=Qe-ee,_t=Math.max(0,Math.ceil(Ye/W)),J=Math.min(U,(N+Ye)/W);for(let ht=0;ht<B;++ht){const dt=ht-K,tt=Math.max(0,Math.ceil(dt/H)),Ke=Math.min(V,(M+dt)/H);let kt=0;for(let ot=_t;ot<J;++ot){const wn=ot*W-Ye;for(let sn=tt;sn<Ke;++sn){const Z=sn*H-dt,G=De*Ne+Be*ot+he*sn,we=v*(N-1-wn)+b*(M-1-Z)+w*Oe;for(let ke=0;ke<L;++ke){const Ue=g[G+ge*ke],Re=x[we+ke];kt+=Ue*Re}}}const Xe=le*Ne+fe*Qe+Ie*ht+Se*Oe;m[Xe]=kt}}return t.makeTensorInfo(A.shape,A.dtype,A.values)}const _re={kernelName:Sf,backendName:"cpu",kernelFunc:Ere};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tre(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:i}=e,{strides:o,pad:a,dilations:l}=s;Pt([r,i],"conv3d");const c=ia(r.shape,i.shape,o,l,a),{filterDepth:u,filterHeight:h,filterWidth:d,dilationDepth:f,dilationHeight:p,dilationWidth:A,padInfo:m}=c,g=m.front,x=m.left,v=m.top,b=new Vs(c.outShape,r.dtype),w=t.data.get(r.dataId).values,_=t.data.get(i.dataId).values,N=b.values,M=Ot(r.shape),T=Ot(i.shape);for(let k=0;k<c.batchSize;++k){const B=k*M[0],L=k*b.strides[0];for(let U=0;U<c.outDepth;++U){const V=L+U*b.strides[1],W=U*c.strideDepth-g;for(let H=0;H<u;++H){const ee=W+H*f;if(ee<0||ee>=c.inDepth)continue;const K=H*T[0],te=B+ee*M[1];for(let le=0;le<c.outHeight;++le){const fe=V+le*b.strides[2],Ie=le*c.strideHeight-v;for(let Se=0;Se<h;++Se){const De=Ie+Se*p;if(De<0||De>=c.inHeight)continue;const Be=K+Se*T[1],he=te+De*M[2];for(let ge=0;ge<c.outWidth;++ge){const Ne=fe+ge*c.outChannels,Oe=ge*c.strideWidth-x;for(let Qe=0;Qe<d;++Qe){const Ye=Oe+Qe*A;if(Ye<0||Ye>=c.inWidth)continue;const _t=Be+Qe*T[2],J=he+Ye*c.inChannels;let ht=_t;for(let dt=0;dt<c.inChannels;++dt){const tt=w[J+dt];for(let Ke=0;Ke<c.outChannels;++Ke)N[Ne+Ke]+=tt*_[ht+Ke];ht+=c.outChannels}}}}}}}}return t.makeTensorInfo(b.shape,b.dtype,b.values)}const Bre={kernelName:Ef,backendName:"cpu",kernelFunc:Tre};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kre(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,dy:i}=e,{strides:o,pad:a,filterShape:l}=s;Pt([r,i],"conv3dBackpropFilterV2");const c=Ot(r.shape),u=Ot(i.shape),h=ia(r.shape,l,o,1,a),d=h.strideDepth,f=h.strideHeight,p=h.strideWidth,A=h.filterDepth,m=h.filterHeight,g=h.filterWidth,x=new Vs(h.filterShape,"float32"),v=x.values,[b,w,_,N]=x.strides,M=t.data.get(i.dataId).values,[T,k,B,L]=u,U=t.data.get(r.dataId).values,[V,W,H,ee]=c,K=h.padInfo.front,te=h.padInfo.left,le=h.padInfo.top;for(let fe=0;fe<A;++fe){const Ie=Math.max(0,Math.ceil((K-fe)/d)),Se=Math.min(h.outDepth,(h.inDepth+K-fe)/d),De=fe*b;for(let Be=0;Be<m;++Be){const he=Math.max(0,Math.ceil((le-Be)/f)),ge=Math.min(h.outHeight,(h.inHeight+le-Be)/f),Ne=Be*w+De;for(let Oe=0;Oe<g;++Oe){const Qe=Math.max(0,Math.ceil((te-Oe)/p)),Ye=Math.min(h.outWidth,(h.inWidth+te-Oe)/p),_t=Oe*_+Ne;for(let J=0;J<h.inChannels;++J){const ht=J*N+_t;for(let dt=0;dt<h.outChannels;++dt){let tt=0;for(let Ke=0;Ke<h.batchSize;++Ke){const kt=Ke*V,Xe=Ke*T;for(let ot=Ie;ot<Se;++ot){const sn=(fe+ot*d-K)*W+kt,Z=ot*k+Xe;for(let G=he;G<ge;++G){const ke=(Be+G*f-le)*H+sn,Ue=G*B+Z;for(let Re=Qe;Re<Ye;++Re){const et=(Oe+Re*p-te)*ee+ke,St=Re*L+Ue;tt+=U[et+J]*M[St+dt]}}}}v[ht+dt]=tt}}}}}return t.makeTensorInfo(x.shape,x.dtype,x.values)}const Nre={kernelName:gg,backendName:"cpu",kernelFunc:kre};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rre(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,filter:i}=e,{pad:o,strides:a,inputShape:l}=s;Pt([r],"conv3dBackpropInputV2");const c=Ot(r.shape),u=Ot(i.shape),h=ia(l,i.shape,a,1,o),d=new Vs(h.inShape,"float32"),f=d.values,[p,A,m,g]=d.strides,x=t.data.get(r.dataId).values,[v,b,w,_]=c,N=t.data.get(i.dataId).values,[M,T,k,B]=u,{batchSize:L,filterDepth:U,filterHeight:V,filterWidth:W,inChannels:H,inDepth:ee,inHeight:K,inWidth:te,outChannels:le,outDepth:fe,outHeight:Ie,outWidth:Se,strideDepth:De,strideHeight:Be,strideWidth:he}=h,ge=U-1-h.padInfo.front,Ne=V-1-h.padInfo.top,Oe=W-1-h.padInfo.left;for(let Qe=0;Qe<L;++Qe)for(let Ye=0;Ye<H;++Ye)for(let _t=0;_t<ee;++_t){const J=_t-ge,ht=Math.max(0,Math.ceil(J/De)),dt=Math.min(fe,(U+J)/De);for(let tt=0;tt<K;++tt){const Ke=tt-Ne,kt=Math.max(0,Math.ceil(Ke/Be)),Xe=Math.min(Ie,(V+Ke)/Be);for(let ot=0;ot<te;++ot){const wn=ot-Oe,sn=Math.max(0,Math.ceil(wn/he)),Z=Math.min(Se,(W+wn)/he);let G=0;for(let we=ht;we<dt;++we){const ke=we*De-J;for(let Ue=kt;Ue<Xe;++Ue){const Re=Ue*Be-Ke;for(let bt=sn;bt<Z;++bt){const et=bt*he-wn,St=v*Qe+b*we+w*Ue+_*bt,Tt=M*(U-1-ke)+T*(V-1-Re)+k*(W-1-et)+B*Ye;for(let We=0;We<le;++We){const ct=x[St+We],Ut=N[Tt+We];G+=ct*Ut}}}}f[p*Qe+A*_t+m*tt+g*ot+Ye]=G}}}return t.makeTensorInfo(d.shape,d.dtype,d.values)}const Mre={kernelName:Ag,backendName:"cpu",kernelFunc:Rre};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Dre=ts(Hu,n=>Math.cos(n)),Fre={kernelName:Hu,backendName:"cpu",kernelFunc:Dre};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $re=ts(qu,n=>Math.cosh(n)),Pre={kernelName:qu,backendName:"cpu",kernelFunc:$re};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lre(n){const{inputs:e,backend:t,attrs:s}=n,{image:r,boxes:i,boxInd:o}=e,{cropSize:a,method:l,extrapolationValue:c}=s,[u,h,d,f]=r.shape,p=i.shape[0],[A,m]=a,g=rn([p,A,m,f],"float32"),x=t.data.get(i.dataId).values,v=t.data.get(o.dataId).values,b=t.data.get(r.dataId).values,w=Ot(r.shape),_=Ot(g.shape);for(let N=0;N<p;N++){const M=N*4,T=x[M],k=x[M+1],B=x[M+2],L=x[M+3],U=v[N];if(U>=u)continue;const V=A>1?(B-T)*(h-1)/(A-1):0,W=m>1?(L-k)*(d-1)/(m-1):0;for(let H=0;H<A;H++){const ee=A>1?T*(h-1)+H*V:.5*(T+B)*(h-1);if(ee<0||ee>h-1){for(let K=0;K<m;K++)for(let te=0;te<f;te++){const le=te+K*_[2]+H*_[1]+N*_[0];g.values[le]=c}continue}if(l==="bilinear"){const K=Math.floor(ee),te=Math.ceil(ee),le=ee-K;for(let fe=0;fe<m;fe++){const Ie=m>1?k*(d-1)+fe*W:.5*(k+L)*(d-1);if(Ie<0||Ie>d-1){for(let he=0;he<f;he++){const ge=he+fe*_[2]+H*_[1]+N*_[0];g.values[ge]=c}continue}const Se=Math.floor(Ie),De=Math.ceil(Ie),Be=Ie-Se;for(let he=0;he<f;he++){let ge=he+Se*w[2]+K*w[1]+U*w[0];const Ne=b[ge];ge=he+De*w[2]+K*w[1]+U*w[0];const Oe=b[ge];ge=he+Se*w[2]+te*w[1]+U*w[0];const Qe=b[ge];ge=he+De*w[2]+te*w[1]+U*w[0];const Ye=b[ge],_t=Ne+(Oe-Ne)*Be,J=Qe+(Ye-Qe)*Be;ge=he+fe*_[2]+H*_[1]+N*_[0],g.values[ge]=_t+(J-_t)*le}}}else for(let K=0;K<m;++K){const te=m>1?k*(d-1)+K*W:.5*(k+L)*(d-1);if(te<0||te>d-1){for(let Ie=0;Ie<f;Ie++){const Se=Ie+K*_[2]+H*_[1]+N*_[0];g.values[Se]=c}continue}const le=Math.round(te),fe=Math.round(ee);for(let Ie=0;Ie<f;Ie++){const Se=Ie+le*w[2]+fe*w[1]+U*w[0],De=Ie+K*_[2]+H*_[1]+N*_[0];g.values[De]=b[Se]}}}}return t.makeTensorInfo(g.shape,g.dtype,g.values)}const Ore={kernelName:xg,backendName:"cpu",kernelFunc:Lre};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qre(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:i,exclusive:o,reverse:a}=s;Pt(r,"cumprod");const l=ss([i],r.shape.length);let c=r;l!=null&&(c=Ii({inputs:{x:r},backend:t,attrs:{perm:l}}));const u=ys(1,r.shape.length)[0];if(u!==c.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${c.shape.length-1} but got axis=${u}`);const h=tr(c.dtype,"int32"),d=yx(ye(c.shape),h),f=t.data.get(c.dataId).values,p=c.shape[c.shape.length-1],A=a?(g,x)=>g+p-x-1:(g,x)=>g+x;for(let g=0;g<f.length;g+=p)for(let x=0;x<p;x++){const v=A(g,x);if(x===0)d[v]=o?1:f[v];else{const b=A(g,x-1);d[v]=o?f[b]*d[b]:f[v]*d[b]}}const m=t.makeTensorInfo(c.shape,h,d);if(l!=null){const g=Oa(l),x=Ii({inputs:{x:m},backend:t,attrs:{perm:g}});return t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(c),x}return m}const Ure={kernelName:yg,backendName:"cpu",kernelFunc:Qre};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zre(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:i,exclusive:o,reverse:a}=s;Pt(r,"cumsum");const l=ss([i],r.shape.length);let c=r;l!=null&&(c=Ii({inputs:{x:r},backend:t,attrs:{perm:l}}));const u=ys(1,r.shape.length)[0];if(u!==c.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${c.shape.length-1} but got axis=${u}`);const h=tr(c.dtype,"int32"),d=Ar(ye(c.shape),h),f=t.data.get(c.dataId).values,p=c.shape[c.shape.length-1],A=a?(g,x)=>g+p-x-1:(g,x)=>g+x;for(let g=0;g<f.length;g+=p)for(let x=0;x<p;x++){const v=A(g,x);if(x===0)d[v]=o?0:f[v];else{const b=A(g,x-1);d[v]=o?f[b]+d[b]:f[v]+d[b]}}const m=t.makeTensorInfo(c.shape,h,d);if(l!=null){const g=Oa(l),x=Ii({inputs:{x:m},backend:t,attrs:{perm:g}});return t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(c),x}return m}const Gre={kernelName:_f,backendName:"cpu",kernelFunc:zre};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vre(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,weights:i}=e,{size:o,binaryOutput:a}=s;if(r.shape.length===1){const l=t.data.get(r.dataId).values,c=t.data.get(i.dataId).values,u=uS(l,c,i.dtype,i.shape,o);return t.makeTensorInfo([o],i.dtype,u)}else if(r.shape.length===2){const l=t.bufferSync(r),c=t.bufferSync(i),u=IF(l,c,o,a);return t.makeTensorInfo(u.shape,i.dtype,u.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}const Wre={kernelName:bg,backendName:"cpu",kernelFunc:Vre};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hre(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{blockSize:i,dataFormat:o}=s;z(o==="NHWC",()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${o}`);const a=r.shape[0],l=r.shape[1],c=r.shape[2],u=r.shape[3],h=l*i,d=c*i,f=u/(i*i),p=t.data.get(r.dataId).values,A=new Float32Array(a*h*d*f);let m=0;for(let g=0;g<a;++g)for(let x=0;x<h;++x){const v=Math.floor(x/i),b=x%i;for(let w=0;w<d;++w){const _=Math.floor(w/i),N=w%i,M=(b*i+N)*f;for(let T=0;T<f;++T){const B=T+M+u*(_+c*(v+l*g));A[m++]=p[B]}}}return t.makeTensorInfo([a,h,d,f],r.dtype,A)}const qre={kernelName:vg,backendName:"cpu",kernelFunc:Hre};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function w$(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:i}=e,{strides:o,pad:a,dilations:l,dimRoundingMode:c}=s;Pt([r,i],"depthwiseConv2DNative");const u=Ot(r.shape),h=Ot(i.shape);let d=l;d==null&&(d=[1,1]),z(nr(o,d),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${o} and dilations '${d}'`);const f=As(r.shape,i.shape,o,d,a,c,!0),{filterHeight:p,filterWidth:A,dilationHeight:m,dilationWidth:g,padInfo:x}=f,v=x.left,b=x.top,w=f.outChannels/f.inChannels,_=new Vs(f.outShape,r.dtype),N=t.data.get(r.dataId).values,M=t.data.get(i.dataId).values,T=_.values;for(let k=0;k<f.batchSize;++k){const B=k*u[0],L=k*_.strides[0];for(let U=0;U<f.outHeight;++U){const V=L+U*_.strides[1],W=U*f.strideHeight-b;for(let H=0;H<p;++H){const ee=W+H*m;if(ee<0||ee>=f.inHeight)continue;const K=H*h[0],te=B+ee*u[1];for(let le=0;le<f.outWidth;++le){const fe=V+le*_.strides[2],Ie=le*f.strideWidth-v;for(let Se=0;Se<A;++Se){const De=Ie+Se*g;if(De<0||De>=f.inWidth)continue;const Be=K+Se*h[1],he=te+De*f.inChannels;let ge=fe,Ne=Be;for(let Oe=0;Oe<f.inChannels;++Oe){const Qe=N[he+Oe];for(let Ye=0;Ye<w;++Ye)T[ge+Ye]+=Qe*M[Ne+Ye];ge+=w,Ne+=w}}}}}}return t.makeTensorInfo(_.shape,_.dtype,_.values)}const Yre={kernelName:Tf,backendName:"cpu",kernelFunc:w$};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jre(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,dy:i}=e,{strides:o,dilations:a,pad:l,dimRoundingMode:c,filterShape:u}=s;Pt([r,i],"depthwiseConv2dNativeBackpropFilter");const h=As(r.shape,u,o,a,l,c,!0),{strideHeight:d,strideWidth:f,filterHeight:p,filterWidth:A}=h,m=new Vs(h.filterShape,"float32"),g=h.padInfo.left,x=h.padInfo.top,v=h.outChannels/h.inChannels,b=t.data.get(r.dataId).values,w=new Vs(r.shape,r.dtype,b),_=t.data.get(i.dataId).values,N=new Vs(i.shape,i.dtype,_);for(let M=0;M<p;++M){const T=Math.max(0,Math.ceil((x-M)/d)),k=Math.min(h.outHeight,(h.inHeight+x-M)/d);for(let B=0;B<A;++B){const L=Math.max(0,Math.ceil((g-B)/f)),U=Math.min(h.outWidth,(h.inWidth+g-B)/f);for(let V=0;V<h.outChannels;++V){const W=Math.trunc(V/v),H=V%v;let ee=0;for(let K=0;K<h.batchSize;++K)for(let te=T;te<k;++te){const le=M+te*d-x;for(let fe=L;fe<U;++fe){const Ie=B+fe*f-g;ee+=w.get(K,le,Ie,W)*N.get(K,te,fe,V)}}m.set(ee,M,B,W,H)}}}return t.makeTensorInfo(m.shape,m.dtype,m.values)}const Xre={kernelName:Cg,backendName:"cpu",kernelFunc:jre};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kre(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,filter:i}=e,{strides:o,dilations:a,pad:l,dimRoundingMode:c,inputShape:u}=s;Pt([r,i],"depthwiseConv2DNativeBackpropInput");const h=Ot(r.shape),d=Ot(i.shape),f=As(u,i.shape,o,a,l,c,!0),p=new Vs(f.inShape,"float32"),A=p.values,[m,g,x]=p.strides,v=t.data.get(r.dataId).values,[b,w,_]=h,N=t.data.get(i.dataId).values,[M,T,k]=d,{batchSize:B,filterHeight:L,filterWidth:U,inChannels:V,inHeight:W,inWidth:H,outChannels:ee,outHeight:K,outWidth:te,strideHeight:le,strideWidth:fe}=f,Ie=L-1-f.padInfo.top,Se=U-1-f.padInfo.left,De=ee/V;for(let Be=0;Be<B;++Be)for(let he=0;he<V;++he)for(let ge=0;ge<W;++ge){const Ne=ge-Ie,Oe=Math.max(0,Math.ceil(Ne/le)),Qe=Math.min(K,(L+Ne)/le);for(let Ye=0;Ye<H;++Ye){const _t=Ye-Se,J=Math.max(0,Math.ceil(_t/fe)),ht=Math.min(te,(U+_t)/fe);let dt=0;for(let tt=Oe;tt<Qe;++tt){const Ke=tt*le-Ne;for(let kt=J;kt<ht;++kt){const Xe=kt*fe-_t,ot=b*Be+w*tt+_*kt,wn=M*(L-1-Ke)+T*(U-1-Xe)+k*he;for(let sn=0;sn<De;++sn){const Z=he*De+sn,G=v[ot+Z],we=N[wn+sn];dt+=G*we}}}A[m*Be+g*ge+x*Ye+he]=dt}}return t.makeTensorInfo(p.shape,p.dtype,p.values)}const Jre={kernelName:Ig,backendName:"cpu",kernelFunc:Kre};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zre(n){const{inputs:e,backend:t}=n,{x:s}=e,r=ye(s.shape),i=t.data.get(s.dataId).values,o=rn([r,r],s.dtype),a=o.values;for(let c=0;c<i.length;c++)a[c*r+c]=i[c];const l=[...s.shape,...s.shape];return t.makeTensorInfo(l,o.dtype,o.values)}const eie={kernelName:wg,backendName:"cpu",kernelFunc:Zre};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tie={kernelName:Bf,backendName:"cpu",kernelFunc:({inputs:n,backend:e,attrs:t})=>{const{x:s,filter:r}=n,{strides:i,pad:o,dilations:a}=t,l=e,c=l.data.get(s.dataId).values,u=s.shape.length,h=l.data.get(r.dataId).values,d=r.shape.length,{batchSize:f,inHeight:p,inWidth:A,inChannels:m,outHeight:g,outWidth:x,padInfo:v,strideHeight:b,strideWidth:w,filterHeight:_,filterWidth:N,dilationHeight:M,dilationWidth:T,outShape:k}=yc(s.shape,r.shape,i,o,"NHWC",a),B=ye(k),L=k.length,U=Ts(s.dtype,B);for(let W=0;W<f;++W)for(let H=0;H<g;++H){const ee=H*b-v.top;for(let K=0;K<x;++K){const te=K*w-v.left;for(let le=0;le<m;++le){let fe=Number.MIN_SAFE_INTEGER;for(let Se=0;Se<_;++Se){const De=ee+Se*M;if(De>=0&&De<p)for(let Be=0;Be<N;++Be){const he=te+Be*T;if(he>=0&&he<A){const ge=qo([W,De,he,le],u,Ot(s.shape)),Ne=qo([Se,Be,le],d,Ot(r.shape)),Oe=c[ge]+h[Ne];Oe>fe&&(fe=Oe)}}}const Ie=qo([W,H,K,le],L,Ot(k));U[Ie]=fe}}}return{dataId:l.write(gc(U,s.dtype),k,s.dtype),shape:k,dtype:s.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nie={kernelName:Mm,backendName:"cpu",kernelFunc:({inputs:n,backend:e,attrs:t})=>{const{x:s,filter:r,dy:i}=n,{strides:o,pad:a,dilations:l}=t,c=e,u=oo(s.shape,c.data.get(s.dataId).values),h=oo(r.shape,c.data.get(r.dataId).values),{batchSize:d,inHeight:f,inWidth:p,inChannels:A,outHeight:m,outWidth:g,padInfo:x,strideHeight:v,strideWidth:b,filterHeight:w,filterWidth:_,dilationHeight:N,dilationWidth:M,outShape:T}=yc(s.shape,r.shape,o,a,"NHWC",l);z(i.rank===T.length,()=>`Error in ${Mm}, dy must have the same rank as output ${T.length}, but got ${i.rank}`);const k=oo(T,c.data.get(i.dataId).values),B=uI(r.shape,r.dtype);for(let U=0;U<d;++U)for(let V=0;V<m;++V){const W=V*v-x.top;for(let H=0;H<g;++H){const ee=H*b-x.left;for(let K=0;K<A;++K){let te=Number.MIN_SAFE_INTEGER,le=0,fe=0;for(let Ie=0;Ie<w;++Ie){const Se=W+Ie*N;if(Se>=0&&Se<f)for(let De=0;De<_;++De){const Be=ee+De*M;if(Be>=0&&Be<p){const he=u[U][Se][Be][K]+h[Ie][De][K];he>te&&(te=he,le=Ie,fe=De)}}}B[le][fe][K]+=k[U][V][H][K]}}}return{dataId:c.write(gc(B,s.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sie={kernelName:Rm,backendName:"cpu",kernelFunc:({inputs:n,backend:e,attrs:t})=>{const{x:s,filter:r,dy:i}=n,{strides:o,pad:a,dilations:l}=t,c=e,u=oo(s.shape,c.data.get(s.dataId).values),h=oo(r.shape,c.data.get(r.dataId).values),{batchSize:d,inHeight:f,inWidth:p,inChannels:A,outHeight:m,outWidth:g,padInfo:x,strideHeight:v,strideWidth:b,filterHeight:w,filterWidth:_,dilationHeight:N,dilationWidth:M,outShape:T}=yc(s.shape,r.shape,o,a,"NHWC",l);z(i.rank===T.length,()=>`Error in ${Rm}, dy must have the same rank as output ${T.length}, but got ${i.rank}`);const k=oo(T,c.data.get(i.dataId).values),B=uI(s.shape,s.dtype);for(let U=0;U<d;++U)for(let V=0;V<m;++V){const W=V*v-x.top;for(let H=0;H<g;++H){const ee=H*b-x.left;for(let K=0;K<A;++K){let te=Number.MIN_SAFE_INTEGER,le=W<0?0:W,fe=ee<0?0:ee;for(let Ie=0;Ie<w;++Ie){const Se=W+Ie*N;if(Se>=0&&Se<f)for(let De=0;De<_;++De){const Be=ee+De*M;if(Be>=0&&Be<p){const he=u[U][Se][Be][K]+h[Ie][De][K];he>te&&(te=he,le=Se,fe=Be)}}}B[U][le][fe][K]+=k[U][V][H][K]}}}return{dataId:c.write(gc(B,s.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rie(n){const{inputs:e,backend:t,attrs:s}=n,{image:r}=e,{canvas:i,options:o}=s,{contextOptions:a,imageOptions:l}=o||{},c=l?.alpha||1,u=a?.contextType||"2d";if(u!=="2d")throw new Error(`Context type ${a.contextType} is not supported by the CPU backend.`);const h=i.getContext(u,a?.contextAttributes||{});if(h==null)throw new Error(`Could not get the context with ${u} type.`);const[d,f]=r.shape.slice(0,2),p=r.shape.length===2?1:r.shape[2],A=t.data.get(r.dataId).values,m=r.dtype==="float32"?255:1,g=new Uint8ClampedArray(f*d*4);for(let v=0;v<d*f;++v){const b=[0,0,0,255*c];for(let _=0;_<p;_++){const N=A[v*p+_];if(r.dtype==="float32"){if(N<0||N>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${N}.`)}else if(r.dtype==="int32"&&(N<0||N>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${N}.`);p===1?(b[0]=N*m,b[1]=N*m,b[2]=N*m):b[_]=N*m}const w=v*4;g[w+0]=Math.round(b[0]),g[w+1]=Math.round(b[1]),g[w+2]=Math.round(b[2]),g[w+3]=Math.round(b[3])}i.width=f,i.height=d;const x=new ImageData(g,f,d);return h.putImageData(x,0,0),r}const iie={kernelName:Sg,backendName:"cpu",kernelFunc:rie};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UA(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:i,keepDims:o}=s;Pt(r,"sum");let a;r.dtype==="bool"?a=hc({inputs:{x:r},backend:t,attrs:{dtype:"int32"}}):a=Da({inputs:{x:r},backend:t});const l=a.shape.length,c=an(i,a.shape),u=ss(c,l);let h=c,d=a;u!=null&&(d=Ii({inputs:{x:a},backend:t,attrs:{perm:u}}),h=ys(h.length,l)),qs("sum",h,d.shape.length);const[f,p]=$s(d.shape,h),A=tr(d.dtype,"int32");let m=L0(t,f,A);const g=ye(p),x=t.data.get(m.dataId).values,v=t.data.get(d.dataId).values;for(let b=0;b<x.length;++b){const w=b*g;let _=0;for(let N=0;N<g;++N)_+=v[w+N];x[b]=_}if(o){const b=Ms(m.shape,c),w=m;m=gs({inputs:{x:m},backend:t,attrs:{shape:b}}),t.disposeIntermediateTensorInfo(w)}return t.disposeIntermediateTensorInfo(a),u!=null&&t.disposeIntermediateTensorInfo(d),m}const oie={kernelName:lp,backendName:"cpu",kernelFunc:UA};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aie(n){const{inputs:e,backend:t,attrs:s}=n,{equation:r}=s,i=e,{allDims:o,summedDims:a,idDims:l}=w1(r,i.length);E1(o.length,l,i);const{path:c,steps:u}=_1(a,l),h=u.length;let d=null,f=o.length;const p=[];for(let A=0;A<h;++A){for(const m of u[A]){const{permutationIndices:g,expandDims:x}=S1(f,l[m]);let v;T1(g)?v=i[m]:(v=Ii({inputs:{x:i[m]},backend:t,attrs:{perm:g}}),p.push(v));const b=v.shape.slice();for(let w=0;w<x.length;++w)b.splice(x[w],0,1);dn(v.shape,b)||(v=gs({inputs:{x:v},backend:t,attrs:{shape:b}}),p.push(v)),d===null?d=v:(d=z1({inputs:{a:v,b:d},backend:t}),p.push(d))}A<h-1&&(c[A]>=0&&(d=UA({inputs:{x:d},backend:t,attrs:{axis:c[A]-(o.length-f),keepDims:!1}}),p.push(d)),f--)}for(const A of p)A!==d&&t.disposeIntermediateTensorInfo(A);return d}const lie={kernelName:Eg,backendName:"cpu",kernelFunc:aie};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cie(n){const{inputs:e,backend:t}=n,{dy:s,y:r}=e;Pt([s,r],"eluGrad");const i=new Float32Array(ye(r.shape)),o=t.data.get(r.dataId).values,a=t.data.get(s.dataId).values;for(let l=0;l<o.length;++l){const c=o[l];c>=0?i[l]=a[l]:i[l]=a[l]*(c+1)}return t.makeTensorInfo(r.shape,"float32",i)}const uie={kernelName:_g,backendName:"cpu",kernelFunc:cie};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hie=y1,die=x1,fie=b1,pie=v1,mie=C1,gie=I1,Aie=ts(Xu,n=>{const e=Math.sign(n),t=Math.abs(n),s=1/(1+hie*t);return e*(1-((((gie*s+mie)*s+pie)*s+fie)*s+die)*s*Math.exp(-t*t))}),yie={kernelName:Xu,backendName:"cpu",kernelFunc:Aie};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function U0(n){const{inputs:e,backend:t,attrs:s}=n,{input:r}=e,{dim:i}=s,o=r.shape.length,a=r.shape.slice();let l=i;return i<0&&(z(-(o+1)<=i,()=>`Axis must be in the interval [${-(o+1)}, ${o}]`),l=o+i+1),a.splice(l,0,1),gs({inputs:{x:r},backend:t,attrs:{shape:a}})}const xie={kernelName:Nf,backendName:"cpu",kernelFunc:U0};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bie=Ls((n,e)=>n/e),gS=sr(Yu,bie),EC={kernelName:Yu,backendName:"cpu",kernelFunc:gS};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function S$(n,e,t){const s=n.shape,r=s[0],i=s[1],o=t.data.get(n.dataId),a=o.complexTensorInfos.real,l=o.complexTensorInfos.imag,c=[r,i],u=ye(c),h=Ws("float32",u),d=Ws("float32",u);for(let m=0;m<r;m++){const g=Ru({inputs:{x:a},backend:t,attrs:{begin:[m,0],size:[1,i]}}),x=Ru({inputs:{x:l},backend:t,attrs:{begin:[m,0],size:[1,i]}}),v=$i({inputs:{real:g,imag:x},backend:t}),{real:b,imag:w}=vie(v,e,t),_=Jo(b,w);for(let N=0;N<i;N++){const M=Lw(_,N);h[m*i+N]=M.real,d[m*i+N]=M.imag}t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(x),t.disposeIntermediateTensorInfo(v)}const f=t.makeTensorInfo(c,"float32",h),p=t.makeTensorInfo(c,"float32",d),A=$i({inputs:{real:f,imag:p},backend:t});return t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(p),A}function vie(n,e,t){const s=ye(n.shape),r=t.data.get(n.dataId),i=t.data.get(r.complexTensorInfos.real.dataId).values,o=t.data.get(r.complexTensorInfos.imag.dataId).values;if(Cie(s)){const a=_C(i,o,s,e,t),l=[n.shape[0],n.shape[1]];if(e){const c=t.makeTensorInfo(l,"float32",a.real),u=t.makeTensorInfo(l,"float32",a.imag),h=t.makeTensorInfo([],"float32",El(s,"float32")),d=Da({inputs:{x:h},backend:t}),f=EC.kernelFunc({inputs:{a:c,b:h},backend:t}),p=EC.kernelFunc({inputs:{a:u,b:d},backend:t}),A=t.data.get(f.dataId).values,m=t.data.get(p.dataId).values;return t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(u),t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(p),{real:A,imag:m}}return a}else{const a=Jo(i,o),l=Iie(a,s,e);return MR(l)}}function Cie(n){return(n&n-1)===0}function _C(n,e,t,s,r){if(t===1)return{real:n,imag:e};const i=Jo(n,e),o=t/2,a=DR(i),l=a.real,c=a.imag,u=[l.length],h=r.makeTensorInfo(u,"float32",l),d=r.makeTensorInfo(u,"float32",c),f=$i({inputs:{real:h,imag:d},backend:r}),p=FR(i),A=p.real,m=p.imag,g=[A.length],x=r.makeTensorInfo(g,"float32",A),v=r.makeTensorInfo(g,"float32",m),b=$i({inputs:{real:x,imag:v},backend:r}),w=_C(l,c,o,s,r),_=w.real,N=w.imag,M=[_.length],T=r.makeTensorInfo(M,"float32",_),k=r.makeTensorInfo(M,"float32",N),B=$i({inputs:{real:T,imag:k},backend:r}),L=_C(A,m,o,s,r),U=L.real,V=L.imag,W=[U.length],H=r.makeTensorInfo(W,"float32",U),ee=r.makeTensorInfo(W,"float32",V),K=$i({inputs:{real:H,imag:ee},backend:r}),te=PR(t,s),le=[te.real.length],fe=r.makeTensorInfo(le,"float32",te.real),Ie=r.makeTensorInfo(le,"float32",te.imag),Se=$i({inputs:{real:fe,imag:Ie},backend:r}),De=z1({inputs:{a:Se,b:K},backend:r}),Be=tf({inputs:{a:B,b:De},backend:r}),he=pS({inputs:{a:B,b:De},backend:r}),ge=Nu({inputs:{input:Be},backend:r}),Ne=Nu({inputs:{input:he},backend:r}),Oe=nf({inputs:{input:Be},backend:r}),Qe=nf({inputs:{input:he},backend:r}),Ye=sf({inputs:[ge,Ne],backend:r,attrs:{axis:0}}),_t=sf({inputs:[Oe,Qe],backend:r,attrs:{axis:0}}),J=r.data.get(Ye.dataId).values,ht=r.data.get(_t.dataId).values;return r.disposeIntermediateTensorInfo(h),r.disposeIntermediateTensorInfo(d),r.disposeIntermediateTensorInfo(f),r.disposeIntermediateTensorInfo(x),r.disposeIntermediateTensorInfo(v),r.disposeIntermediateTensorInfo(b),r.disposeIntermediateTensorInfo(T),r.disposeIntermediateTensorInfo(k),r.disposeIntermediateTensorInfo(B),r.disposeIntermediateTensorInfo(H),r.disposeIntermediateTensorInfo(ee),r.disposeIntermediateTensorInfo(K),r.disposeIntermediateTensorInfo(fe),r.disposeIntermediateTensorInfo(Ie),r.disposeIntermediateTensorInfo(Se),r.disposeIntermediateTensorInfo(De),r.disposeIntermediateTensorInfo(Be),r.disposeIntermediateTensorInfo(he),r.disposeIntermediateTensorInfo(ge),r.disposeIntermediateTensorInfo(Oe),r.disposeIntermediateTensorInfo(Ne),r.disposeIntermediateTensorInfo(Qe),r.disposeIntermediateTensorInfo(Ye),r.disposeIntermediateTensorInfo(_t),{real:J,imag:ht}}function Iie(n,e,t){const s=new Float32Array(e*2);for(let r=0;r<e;r++){let i=0,o=0;for(let a=0;a<e;a++){const l=LR(r*a,e,t),c=Lw(n,a);i+=c.real*l.real-c.imag*l.imag,o+=c.real*l.imag+c.imag*l.real}t&&(i/=e,o/=e),$R(s,i,o,r)}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wie(n){const{inputs:e,backend:t}=n,{input:s}=e,r=ye(s.shape),i=s.shape[s.shape.length-1],o=r/i,a=gs({inputs:{x:s},backend:t,attrs:{shape:[o,i]}}),l=S$(a,!1,t),c=gs({inputs:{x:l},backend:t,attrs:{shape:s.shape}});return t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(l),c}const Sie={kernelName:Tg,backendName:"cpu",kernelFunc:wie};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AS(n){const{backend:e,attrs:t}=n,{shape:s,value:r,dtype:i}=t,o=i||pc(r),a=Ts(o,ye(s));return _ie(a,r,o),e.makeTensorInfo(s,o,a)}const Eie={kernelName:Bg,backendName:"cpu",kernelFunc:AS};function _ie(n,e,t){n.fill(e)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Tie={kernelName:kg,backendName:"cpu",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{image:s}=n,r=t,i=Ws(s.dtype,ye(s.shape)),[o,a,l,c]=s.shape,u=r.data.get(s.dataId).values;for(let d=0;d<o;d++){const f=d*l*a*c;for(let p=0;p<a;p++){const A=p*(l*c);for(let m=0;m<l;m++){const g=m*c;for(let x=0;x<c;x++){const v=Math.round(l-m-1),b=f+A+g+x;let w=u[b];if(v>=0&&v<l){const _=v*c,N=f+A+_+x;w=u[N]}i[b]=w}}}}return{dataId:r.write(i,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bie(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:i,bias:o,preluActivationWeights:a}=e,{strides:l,pad:c,dataFormat:u,dilations:h,dimRoundingMode:d,activation:f,leakyreluAlpha:p}=s;let A=I$({inputs:{x:r,filter:i},backend:t,attrs:{strides:l,pad:c,dataFormat:u,dilations:h,dimRoundingMode:d}});if(o){const m=A;if(u==="NCHW"&&o.shape.length===1&&o.shape[0]!==1){const g=gs({inputs:{x:o},backend:t,attrs:{shape:[o.shape[0],1,1]}});A=tf({inputs:{a:A,b:g},backend:t}),t.disposeIntermediateTensorInfo(g)}else A=tf({inputs:{a:A,b:o},backend:t});t.disposeIntermediateTensorInfo(m)}if(f){const m=A;if(u==="NCHW"&&f==="prelu"&&a.shape.length===1&&a.shape[0]!==1){const g=gs({inputs:{x:a},backend:t,attrs:{shape:[a.shape[0],1,1]}});A=Q0(t,A,f,g,p),t.disposeIntermediateTensorInfo(g)}else A=Q0(t,A,f,a,p);t.disposeIntermediateTensorInfo(m)}return A}const kie={kernelName:Vd,backendName:"cpu",kernelFunc:Bie};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nie(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:i,bias:o,preluActivationWeights:a}=e,{strides:l,pad:c,dataFormat:u,dilations:h,dimRoundingMode:d,activation:f,leakyreluAlpha:p}=s;let A=w$({inputs:{x:r,filter:i},backend:t,attrs:{strides:l,pad:c,dataFormat:u,dilations:h,dimRoundingMode:d}});if(o){const m=A;A=tf({inputs:{a:A,b:o},backend:t}),t.disposeIntermediateTensorInfo(m)}if(f){const m=A;A=Q0(t,A,f,a,p),t.disposeIntermediateTensorInfo(m)}return A}const Rie={kernelName:Wd,backendName:"cpu",kernelFunc:Nie};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mie(n){const{inputs:e,backend:t}=n,{params:s,indices:r}=e,i=ye(s.shape),o=r.shape,a=o[o.length-1],[l,c,u,h]=BA(s,r);if(c===0)return t.makeTensorInfo(l,s.dtype,[]);const d=t.data.get(r.dataId).values,f=t.bufferSync(s),p=DF(d,f,s.dtype,c,a,u,h,s.shape,i);return t.makeTensorInfo(l,s.dtype,p.values)}const Die={kernelName:Ng,backendName:"cpu",kernelFunc:Mie};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fie(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,indices:i}=e,{axis:o,batchDims:a}=s;Pt([r,i],"gatherV2");const l=an(o,r.shape)[0],c=t.data.get(i.dataId).values,u=r.shape[l];for(let b=0;b<c.length;++b){const w=c[b];z(w<=u-1&&w>=0,()=>`GatherV2: the index value ${w} is not in [0, ${u-1}]`)}let h=a;a==null&&(h=0);const d=ye(i.shape),f=k1(r,i,l,h),p=gs({inputs:{x:r},backend:t,attrs:{shape:[f.batchSize,f.outerSize,f.dimSize,f.sliceSize]}}),A=gs({inputs:{x:i},backend:t,attrs:{shape:[f.batchSize,d/f.batchSize]}}),m=[f.batchSize,f.outerSize,d/f.batchSize,f.sliceSize],g=t.bufferSync(A),x=t.bufferSync(p),v=FF(x,g,m);return t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(A),t.makeTensorInfo(f.outputShape,v.dtype,v.values)}const $ie={kernelName:Mf,backendName:"cpu",kernelFunc:Fie};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pie(n){const{inputs:e,backend:t}=n,{input:s}=e,r=ye(s.shape),i=s.shape[s.shape.length-1],o=r/i,a=gs({inputs:{x:s},backend:t,attrs:{shape:[o,i]}}),l=S$(a,!0,t),c=gs({inputs:{x:l},backend:t,attrs:{shape:s.shape}});return t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(l),c}const Lie={kernelName:Rg,backendName:"cpu",kernelFunc:Pie};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Oie=ts(sh,n=>Number.isFinite(n)?1:0,"bool"),Qie={kernelName:sh,backendName:"cpu",kernelFunc:Oie};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Uie=ts(rh,n=>Math.abs(n)===1/0?1:0,"bool"),zie={kernelName:rh,backendName:"cpu",kernelFunc:Uie};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Gie=ts(ih,n=>Number.isNaN(n)?1:0,"bool"),Vie={kernelName:ih,backendName:"cpu",kernelFunc:Gie};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wie(n){const{backend:e,attrs:t}=n,{start:s,stop:r,num:i}=t,o=QF(s,r,i);return e.makeTensorInfo([o.length],"float32",o)}const Hie={kernelName:Dg,backendName:"cpu",kernelFunc:Wie};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qie=ts(ah,n=>Math.log1p(n)),Yie={kernelName:ah,backendName:"cpu",kernelFunc:qie};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jie=Ls((n,e)=>n&&e),Xie=sr(Lf,jie,null,"bool"),Kie={kernelName:Lf,backendName:"cpu",kernelFunc:Xie};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jie=ts(Of,n=>n?0:1,"bool"),Zie={kernelName:Of,backendName:"cpu",kernelFunc:Jie};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eoe=Ls((n,e)=>n||e),toe=sr(Qf,eoe,null,"bool"),noe={kernelName:Qf,backendName:"cpu",kernelFunc:toe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function soe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{depthRadius:i,bias:o,alpha:a,beta:l}=s;Pt(r,"LRN");const c=r.shape[3],u=c-1,h=t.data.get(r.dataId).values,d=ye(r.shape),f=new Float32Array(d);function p(A){const m=A%c;let g=A-m+Math.max(0,m-i);const x=A-m+Math.min(m+i,u);let v=0;for(;g<=x;g++){const b=h[g];v+=b*b}return v}for(let A=0;A<d;A++){const m=p(A),g=h[A]*Math.pow(o+a*m,-l);f[A]=g}return t.makeTensorInfo(r.shape,r.dtype,f)}const roe={kernelName:Uf,backendName:"cpu",kernelFunc:soe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ioe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,y:i,dy:o}=e,{depthRadius:a,bias:l,alpha:c,beta:u}=s;Pt(o,"LRNGrad");const h=ye(o.shape),d=o.shape[3],f=t.data.get(o.dataId).values,p=t.data.get(r.dataId).values,A=t.data.get(i.dataId).values,m=new Float32Array(h),g=h;for(let x=0;x<g;x++){const v=x%d,b=x-v+Math.max(0,v-a),w=x-v+Math.min(d,v+a+1);let _=0;for(let N=b;N<w;N++)_+=Math.pow(p[N],2);_=c*_+l;for(let N=b;N<w;N++){let M=-2*c*u*p[N]*A[x]/_;x===N&&(M+=Math.pow(_,-u)),M*=f[x],m[N]+=M}}return t.makeTensorInfo(o.shape,r.dtype,m)}const ooe={kernelName:Fg,backendName:"cpu",kernelFunc:ioe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function E$(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{reductionIndices:i,keepDims:o}=s,a=t;let l=r.shape;const c=l.length,u=an(i,l);let h=u;const d=ss(h,c);let f=a.data.get(r.dataId).values;if(d!=null){const b=new Array(c);for(let w=0;w<b.length;w++)b[w]=l[d[w]];f=dS(f,l,r.dtype,d,b),h=ys(h.length,c),l=b}Pt(r,"max"),qs("max",h,c);const[p,A]=$s(l,h),m=ye(A),g=zF(f,m,p,r.dtype),x=a.write(g,p,r.dtype);let v=p;return o&&(v=Ms(p,u)),{dataId:x,shape:v,dtype:r.dtype}}const aoe={kernelName:zf,backendName:"cpu",kernelFunc:E$};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function loe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e;Pt(r,"maxPool");const{filterSize:i,strides:o,pad:a,dimRoundingMode:l}=s,c=1;z(nr(o,c),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${c}'`);const u=Pr(r.shape,i,o,c,a,l);let h;if(u.filterWidth===1&&u.filterHeight===1&&dn(u.inShape,u.outShape))h=Da({inputs:{x:r},backend:t});else{const d=t.data.get(r.dataId).values,f=Ot(r.shape),p=mS(d,r.shape,r.dtype,f,u,"max");h=t.makeTensorInfo(u.outShape,r.dtype,p.values)}return h}const coe={kernelName:Gf,backendName:"cpu",kernelFunc:loe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uoe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{filterSize:i,strides:o,pad:a,dimRoundingMode:l,dataFormat:c}=s;Pt(r,"maxPool3d");const u=fo(r.shape,i,o,1,a,l,c),h=t.data.get(r.dataId).values,d=C$(h,r.shape,r.dtype,Ot(r.shape),u,"max");return t.makeTensorInfo(d.shape,"float32",d.values)}const hoe={kernelName:Vf,backendName:"cpu",kernelFunc:uoe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function doe(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:i}=e,{filterSize:o,strides:a,pad:l,dimRoundingMode:c}=s;Pt([r,i],"maxPool3DGrad");const u=fo(i.shape,o,a,1,l,c),h=t.bufferSync(i),d=ere(h,u),f=u.strideDepth,p=u.strideHeight,A=u.strideWidth,m=u.dilationDepth,g=u.dilationHeight,x=u.dilationWidth,v=u.effectiveFilterDepth,b=u.effectiveFilterHeight,w=u.effectiveFilterWidth,_=v-1-u.padInfo.front,N=w-1-u.padInfo.left,M=b-1-u.padInfo.top,T=rn(i.shape,"float32"),k=t.bufferSync(r);for(let B=0;B<u.batchSize;++B)for(let L=0;L<u.inChannels;++L)for(let U=0;U<u.inDepth;++U)for(let V=0;V<u.inHeight;++V)for(let W=0;W<u.inWidth;++W){const H=U-_,ee=V-M,K=W-N;let te=0;for(let le=0;le<v;le+=m){const fe=(H+le)/f;if(!(fe<0||fe>=u.outDepth||Math.floor(fe)!==fe))for(let Ie=0;Ie<b;Ie+=g){const Se=(ee+Ie)/p;if(!(Se<0||Se>=u.outHeight||Math.floor(Se)!==Se))for(let De=0;De<w;De+=x){const Be=(K+De)/A;if(Be<0||Be>=u.outWidth||Math.floor(Be)!==Be)continue;const he=v*b*w-1-d.get(B,fe,Se,Be,L),ge=le*b*w+Ie*w+De,Ne=he===ge?1:0;if(Ne===0)continue;const Oe=k.get(B,fe,Se,Be,L);te+=Oe*Ne}}}T.set(te,B,U,V,W,L)}return t.makeTensorInfo(T.shape,T.dtype,T.values)}const foe={kernelName:Pg,backendName:"cpu",kernelFunc:doe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function poe(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:i,output:o}=e,a=i;Pt([i,o],"maxPoolGrad");const{filterSize:l,strides:c,pad:u,dimRoundingMode:h}=s,d=Pr(a.shape,l,c,1,u,h),f=t.data.get(a.dataId).values,p=rn(d.outShape,a.dtype,v$(f,a.shape,a.dtype,d).values),A=d.strideHeight,m=d.strideWidth,g=d.dilationHeight,x=d.dilationWidth,v=d.effectiveFilterHeight,b=d.effectiveFilterWidth,w=b-1-d.padInfo.left,_=v-1-d.padInfo.top,N=rn(a.shape,"float32"),M=t.data.get(r.dataId).values,T=rn(r.shape,"float32",M);for(let k=0;k<d.batchSize;++k)for(let B=0;B<d.inChannels;++B)for(let L=0;L<d.inHeight;++L)for(let U=0;U<d.inWidth;++U){const V=L-_,W=U-w;let H=0;for(let ee=0;ee<v;ee+=g){const K=(V+ee)/A;if(!(K<0||K>=d.outHeight||Math.floor(K)!==K))for(let te=0;te<b;te+=x){const le=(W+te)/m;if(le<0||le>=d.outWidth||Math.floor(le)!==le)continue;const fe=v*b-1-p.get(k,K,le,B),Ie=ee*b+te,Se=fe===Ie?1:0;if(Se===0)continue;const De=T.get(k,K,le,B);H+=De*Se}}N.set(H,k,L,U,B)}return t.makeTensorInfo(N.shape,N.dtype,N.values)}const moe={kernelName:$g,backendName:"cpu",kernelFunc:poe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function goe(n,e,t,s,r){const i=Ot(e),o=mS(n,e,t,i,r,"max"),a=v$(n,e,t,r,!0,s);return[o.values,a.values]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Aoe={kernelName:Lg,backendName:"cpu",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{x:s}=n,{filterSize:r,strides:i,pad:o,includeBatchInIndex:a}=e,l=t;Pt(s,"MaxPoolWithArgmax");const c=l.data.get(s.dataId).values,u=Pr(s.shape,r,i,[1,1],o),[h,d]=goe(c,s.shape,s.dtype,a,u),f=l.write(h,u.outShape,s.dtype),p=l.write(d,u.outShape,s.dtype);return[{dataId:f,shape:u.outShape,dtype:s.dtype},{dataId:p,shape:u.outShape,dtype:"int32"}]}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yoe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:i,keepDims:o}=s,a=an(i,r.shape),c=$s(r.shape,a)[1],u=ye(c),h=[],d=t.makeTensorInfo([],"float32",new Float32Array([u]));h.push(d);const f=hc({inputs:{x:r},backend:t,attrs:{dtype:"float32"}});h.push(f);const p=gS({inputs:{a:f,b:d},backend:t});h.push(p);const A=UA({inputs:{x:p},backend:t,attrs:{axis:i,keepDims:o}});return h.forEach(m=>t.disposeIntermediateTensorInfo(m)),A}const xoe={kernelName:Wf,backendName:"cpu",kernelFunc:yoe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function boe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:i,keepDims:o}=s;Pt(r,"min");const a=an(i,r.shape);let l=a;const c=ss(l,r.shape.length);let u=r;c!=null&&(u=Ii({inputs:{x:r},backend:t,attrs:{perm:c}}),l=ys(l.length,r.shape.length)),qs("min",l,u.shape.length);const[h,d]=$s(u.shape,l),f=ye(d),p=Ar(ye(h),u.dtype),A=t.data.get(u.dataId).values;for(let g=0;g<p.length;++g){const x=g*f;let v=A[x];for(let b=0;b<f;++b){const w=A[x+b];(Number.isNaN(w)||w<v)&&(v=w)}p[g]=v}c!=null&&t.disposeIntermediateTensorInfo(u);const m=t.makeTensorInfo(h,u.dtype,p);if(o){const g=Ms(h,a),x=gs({inputs:{x:m},backend:t,attrs:{shape:g}});return t.disposeIntermediateTensorInfo(m),x}return m}const voe={kernelName:Hf,backendName:"cpu",kernelFunc:boe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Coe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{paddings:i,mode:o}=s;Pt(r,"mirrorPad");const a=i.map((v,b)=>v[0]+r.shape[b]+v[1]),l=i.map(v=>v[0]),c=i.map((v,b)=>v[0]+r.shape[b]),u=o==="reflect"?0:1,h=t.data.get(r.dataId).values,d=r.shape.length,f=Ot(r.shape),p=ye(a),A=a.length,m=Ot(a),g=Ws(r.dtype,p);for(let v=0;v<p;v++){let b=Fu(v,A,m);for(let _=0;_<A;_++)b[_]<l[_]?b[_]=l[_]*2-b[_]-u:b[_]>=c[_]&&(b[_]=(c[_]-1)*2-b[_]+u);b=b.map((_,N)=>_-l[N]);const w=qo(b,d,f);g[v]=h[w]}return{dataId:t.write(g,a,r.dtype),shape:a,dtype:r.dtype}}const Ioe={kernelName:qf,backendName:"cpu",kernelFunc:Coe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const woe=Ls(((n,e)=>{const t=n%e;return n<0&&e<0||n>=0&&e>=0?t:(t+e)%e})),Soe=sr(uh,woe),Eoe={kernelName:uh,backendName:"cpu",kernelFunc:Soe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _$(n){const{inputs:e,backend:t,attrs:s}=n,{logits:r}=e,{dim:i}=s,o=r.shape.length;let a=i;if(a===-1&&(a=o-1),a!==o-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${o} and dim was ${a}`);const l=an([a],r.shape),c=E$({inputs:{x:r},backend:t,attrs:{reductionIndices:l,keepDims:!1}}),u=Ms(c.shape,l),h=gs({inputs:{x:c},backend:t,attrs:{shape:u}}),d=pS({inputs:{a:r,b:h},backend:t}),f=kF({inputs:{x:d},backend:t}),p=UA({inputs:{x:f},backend:t,attrs:{axis:l,keepDims:!1}}),A=gs({inputs:{x:p},backend:t,attrs:{shape:u}}),m=gS({inputs:{a:f,b:A},backend:t});return t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(A),m}const _oe={kernelName:hp,backendName:"cpu",kernelFunc:_$};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Toe(n){const{inputs:e,backend:t,attrs:s}=n,{logits:r}=e,{numSamples:i,seed:o,normalized:a}=s;Pt(r,"multinomial");const l=a?r:_$({inputs:{logits:r},backend:t,attrs:{dim:-1}}),c=l.shape[0],u=l.shape[1],h=t.data.get(l.dataId).values,d=[c,i],f=Ar(ye(d),"int32");for(let p=0;p<c;++p){const A=p*u,m=new Float32Array(u-1);m[0]=h[A];for(let v=1;v<m.length;++v)m[v]=m[v-1]+h[A+v];const g=Ux.alea(o.toString()),x=p*i;for(let v=0;v<i;++v){const b=g();f[x+v]=m.length;for(let w=0;w<m.length;w++)if(b<m[w]){f[x+v]=w;break}}}return a||t.disposeIntermediateTensorInfo(l),t.makeTensorInfo(d,"int32",f)}const Boe={kernelName:Og,backendName:"cpu",kernelFunc:Toe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const koe=_A;function Noe(n){const{inputs:e,backend:t,attrs:s}=n,{boxes:r,scores:i}=e,{maxOutputSize:o,iouThreshold:a,scoreThreshold:l}=s;Pt(r,"NonMaxSuppression");const c=t.data.get(r.dataId).values,u=t.data.get(i.dataId).values,{selectedIndices:h}=koe(c,u,o,a,l);return t.makeTensorInfo([h.length],"int32",new Int32Array(h))}const Roe={kernelName:Qg,backendName:"cpu",kernelFunc:Noe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Moe=l1;function Doe(n){const{inputs:e,backend:t,attrs:s}=n,{boxes:r,scores:i}=e,{maxOutputSize:o,iouThreshold:a,scoreThreshold:l,padToMaxOutputSize:c}=s;Pt(r,"NonMaxSuppressionPadded");const u=t.data.get(r.dataId).values,h=t.data.get(i.dataId).values,{selectedIndices:d,validOutputs:f}=Moe(u,h,o,a,l,c);return[t.makeTensorInfo([d.length],"int32",new Int32Array(d)),t.makeTensorInfo([],"int32",new Int32Array([f]))]}const Foe={kernelName:xx,backendName:"cpu",kernelFunc:Doe};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $oe=TA;function Poe(n){const{inputs:e,backend:t,attrs:s}=n,{boxes:r,scores:i}=e,{maxOutputSize:o,iouThreshold:a,scoreThreshold:l,softNmsSigma:c}=s;Pt(r,"NonMaxSuppressionWithScore");const u=t.data.get(r.dataId).values,h=t.data.get(i.dataId).values,d=o,f=a,p=l,A=c,{selectedIndices:m,selectedScores:g}=$oe(u,h,d,f,p,A);return[t.makeTensorInfo([m.length],"int32",new Int32Array(m)),t.makeTensorInfo([g.length],"float32",new Float32Array(g))]}const Loe={kernelName:Ug,backendName:"cpu",kernelFunc:Poe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ooe(n){const{inputs:e,backend:t,attrs:s}=n,{indices:r}=e,{dtype:i,depth:o,onValue:a,offValue:l}=s;Pt(r,"oneHot");const c=ye(r.shape),u=new Float32Array(c*o);u.fill(l);const h=t.data.get(r.dataId).values;for(let d=0;d<c;++d)h[d]>=0&&h[d]<o&&(u[d*o+h[d]]=a);return t.makeTensorInfo([...r.shape,o],i,u)}const Qoe={kernelName:Kf,backendName:"cpu",kernelFunc:Ooe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function z0(n){const{inputs:e,backend:t}=n,{x:s}=e;if(s.dtype==="string")throw new Error("zerosLike is not supported for string tensors");if(s.dtype==="complex64"){const r=Nu({inputs:{input:s},backend:t}),i=z0({inputs:{x:r},backend:t}),o=nf({inputs:{input:s},backend:t}),a=z0({inputs:{x:o},backend:t}),l=$i({inputs:{real:i,imag:a},backend:t});return t.disposeIntermediateTensorInfo(r),t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(a),l}else return AS({backend:t,attrs:{shape:s.shape,value:0,dtype:s.dtype}})}const Uoe={kernelName:pp,backendName:"cpu",kernelFunc:z0};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function T$(n){const{inputs:e,backend:t}=n,{x:s}=e;if(s.dtype==="string")throw new Error("onesLike is not supported for string tensors");if(s.dtype==="complex64"){const r=Nu({inputs:{input:s},backend:t}),i=T$({inputs:{x:r},backend:t}),o=nf({inputs:{input:s},backend:t}),a=z0({inputs:{x:o},backend:t}),l=$i({inputs:{real:i,imag:a},backend:t});return t.disposeIntermediateTensorInfo(r),t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(a),l}else return AS({backend:t,attrs:{shape:s.shape,value:1,dtype:s.dtype}})}const zoe={kernelName:Xf,backendName:"cpu",kernelFunc:T$};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function B$(n){const{inputs:e,backend:t,attrs:s}=n,{axis:r}=s;if(e.length===1)return U0({inputs:{input:e[0]},backend:t,attrs:{dim:r}});const i=e[0].shape,o=e[0].dtype;e.forEach(u=>{br(i,u.shape,"All tensors passed to stack must have matching shapes"),z(o===u.dtype,()=>"All tensors passed to stack must have matching dtypes")});const a=[],l=e.map(u=>{const h=U0({inputs:{input:u},backend:t,attrs:{dim:r}});return a.push(h),h}),c=sf({inputs:l,backend:t,attrs:{axis:r}});return a.forEach(u=>t.disposeIntermediateTensorInfo(u)),c}const Goe={kernelName:Jf,backendName:"cpu",kernelFunc:B$};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Voe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{paddings:i,constantValue:o}=s;Pt(r,"pad");const a=i.map((x,v)=>x[0]+r.shape[v]+x[1]),l=i.map(x=>x[0]),c=t.data.get(r.dataId).values,u=ye(r.shape),h=r.shape.length,d=Ot(r.shape),f=ye(a),p=a.length,A=Ot(a),m=Ws(r.dtype,f);o!==0&&m.fill(o);for(let x=0;x<u;x++){const b=Fu(x,h,d).map((_,N)=>_+l[N]),w=qo(b,p,A);m[w]=c[x]}return{dataId:t.write(m,a,r.dtype),shape:a,dtype:r.dtype}}const k$={kernelName:Zf,backendName:"cpu",kernelFunc:Voe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Woe=Ls((n,e)=>Math.pow(n,e)),Hoe=sr(dh,Woe),qoe={kernelName:dh,backendName:"cpu",kernelFunc:Hoe};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yoe(n){const{inputs:e,backend:t,attrs:s}=n,{paramsNestedSplits:r,paramsDenseValues:i,indices:o}=e,{outputRaggedRank:a}=s,l=r.map(g=>t.data.get(g.dataId).values),c=r.map(g=>g.shape),u=t.data.get(i.dataId).values,h=t.data.get(o.dataId).values,[d,f,p]=YF(l,c,u,i.shape,i.dtype,h,o.shape),A=d.map(g=>t.makeTensorInfo([g.length],"int32",g)),m=t.makeTensorInfo(p,i.dtype,f);return A.concat([m])}const joe={kernelName:bx,backendName:"cpu",kernelFunc:Yoe};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xoe(n){const{inputs:e,backend:t}=n,{starts:s,limits:r,deltas:i}=e,o=t.data.get(s.dataId).values,a=t.data.get(r.dataId).values,l=t.data.get(i.dataId).values,[c,u]=jF(o,s.shape,s.dtype,a,r.shape,l,i.shape),h=t.makeTensorInfo([c.length],"int32",c),d=t.makeTensorInfo([u.length],s.dtype,u);return[h,d]}const Koe={kernelName:vx,backendName:"cpu",kernelFunc:Xoe};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Joe(n){const{inputs:e,backend:t,attrs:s}=n,{shape:r,values:i,defaultValue:o,rowPartitionTensors:a}=e,{rowPartitionTypes:l}=s,c=t.data.get(r.dataId).values,u=t.data.get(i.dataId).values,h=t.data.get(o.dataId).values,d=a.map(m=>t.data.get(m.dataId).values),f=a.map(m=>m.shape),[p,A]=XF(c,r.shape,u,i.shape,i.dtype,h,o.shape,d,f,l);return t.makeTensorInfo(p,i.dtype,A)}const Zoe={kernelName:Cx,backendName:"cpu",kernelFunc:Joe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eae(n){const{backend:e,attrs:t}=n,{start:s,stop:r,dtype:i,step:o}=t,a=KF(s,r,o,i);return e.makeTensorInfo([a.length],i,a)}const tae={kernelName:zg,backendName:"cpu",kernelFunc:eae};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nae=ts(fh,n=>1/n),sae={kernelName:fh,backendName:"cpu",kernelFunc:nae};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rae(n){const{inputs:e,backend:t,attrs:s}=n,{images:r}=e,{alignCorners:i,halfPixelCenters:o,size:a}=s;Pt(r,"resizeBilinear");const l=Ot(r.shape),[c,u]=a,[h,d,f,p]=r.shape,A=t.data.get(r.dataId).values,m=new Float32Array(ye([h,c,u,p])),g=[i&&c>1?d-1:d,i&&u>1?f-1:f],x=[i&&c>1?c-1:c,i&&u>1?u-1:u];let v=0;const b=g[0]/x[0],w=g[1]/x[1];for(let _=0;_<h;_++)for(let N=0;N<c;N++){let M;o?M=b*(N+.5)-.5:M=b*N;const T=Math.max(0,Math.floor(M)),k=M-T,B=Math.min(d-1,Math.ceil(M)),L=_*l[0]+T*l[1],U=_*l[0]+B*l[1];for(let V=0;V<u;V++){let W;o?W=w*(V+.5)-.5:W=w*V;const H=Math.max(0,Math.floor(W)),ee=W-H,K=Math.min(f-1,Math.ceil(W)),te=L+H*l[2],le=U+H*l[2],fe=L+K*l[2],Ie=U+K*l[2];for(let Se=0;Se<p;Se++){const De=A[te+Se],Be=A[le+Se],he=A[fe+Se],ge=A[Ie+Se],Ne=De+(he-De)*ee,Oe=Be+(ge-Be)*ee,Qe=Ne+(Oe-Ne)*k;m[v++]=Qe}}}return t.makeTensorInfo([h,c,u,p],"float32",m)}const iae={kernelName:rp,backendName:"cpu",kernelFunc:rae};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oae(n){const{inputs:e,backend:t,attrs:s}=n,{images:r,dy:i}=e,{alignCorners:o}=s;Pt([i,r],"resizeBilinearGrad");const a=Ot(r.shape),[l,c,u,h]=r.shape,[,d,f]=i.shape,p=new Float32Array(l*c*u*h),A=[o&&d>1?c-1:c,o&&f>1?u-1:u],m=[o&&d>1?d-1:d,o&&f>1?f-1:f],g=A[0]/m[0],x=A[1]/m[1],v=t.data.get(i.dataId).values;let b=0;for(let w=0;w<l;w++){const _=w*a[0];for(let N=0;N<d;N++){const M=N*g,T=Math.floor(M),k=Math.min(Math.ceil(M),c-1),B=_+T*a[1],L=_+k*a[1],U=M-T,V=1-U;for(let W=0;W<f;W++){const H=W*x,ee=Math.floor(H),K=Math.min(Math.ceil(H),u-1),te=H-ee,le=1-te,fe=B+ee*a[2],Ie=B+K*a[2],Se=L+ee*a[2],De=L+K*a[2],Be=V*le,he=V*te,ge=U*le,Ne=U*te;for(let Oe=0;Oe<h;Oe++){const Qe=v[b++];p[fe+Oe]+=Qe*Be,p[Ie+Oe]+=Qe*he,p[Se+Oe]+=Qe*ge,p[De+Oe]+=Qe*Ne}}}}return t.makeTensorInfo([l,u,c,h],"float32",p)}const aae={kernelName:Wg,backendName:"cpu",kernelFunc:oae};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lae(n){const{inputs:e,backend:t,attrs:s}=n,{images:r}=e,{alignCorners:i,halfPixelCenters:o,size:a}=s;Pt(r,"resizeNearestNeighbor");const l=Ot(r.shape),[c,u]=a,[h,d,f,p]=r.shape,A=t.data.get(r.dataId).values,m=new Float32Array(h*c*u*p),g=[i&&c>1?d-1:d,i&&u>1?f-1:f],x=[i&&c>1?c-1:c,i&&u>1?u-1:u],v=g[0]/x[0],b=g[1]/x[1];let w=0;for(let _=0;_<h;_++){const N=_*l[0];for(let M=0;M<c;M++){const T=o?v*(M+.5):v*M;let k=Math.min(d-1,i?Math.round(T):Math.floor(T));o&&(k=Math.max(0,k));const B=N+k*l[1];for(let L=0;L<u;L++){const U=o?b*(L+.5):b*L;let V=Math.min(f-1,i?Math.round(U):Math.floor(U));o&&(V=Math.max(0,V));const W=B+V*l[2];for(let H=0;H<p;H++){const ee=A[W+H];m[w++]=ee}}}}return t.makeTensorInfo([h,c,u,p],r.dtype,m)}const cae={kernelName:sp,backendName:"cpu",kernelFunc:lae};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uae(n){const{inputs:e,backend:t,attrs:s}=n,{images:r,dy:i}=e,{alignCorners:o}=s;Pt([i,r],"resizeNearestNeighborGrad");const a=Ot(r.shape),l=Ot(i.shape),[c,u,h,d]=r.shape,[,f,p]=i.shape,A=new Float32Array(c*u*h*d),m=t.data.get(i.dataId).values,g=[o&&f>1?u-1:u,o&&p>1?h-1:h],x=[o&&f>1?f-1:f,o&&p>1?p-1:p],v=g[0]/x[0],b=g[1]/x[1],w=1/v,_=1/b,N=Math.ceil(w)*2+2,M=Math.ceil(_)*2+2;for(let T=0;T<c;T++){const k=T*a[0];for(let B=0;B<u;B++){const L=k+B*a[1],U=Math.floor(B*w),V=Math.floor(U-N/2);for(let W=0;W<h;W++){const H=L+W*a[2],ee=Math.floor(W*_),K=Math.floor(ee-M/2);for(let te=0;te<d;te++){let le=0;for(let fe=0;fe<N;fe++){const Ie=fe+V;if(Ie<0||Ie>=f)continue;const Se=k+Ie*l[1],De=Ie*v,Be=Math.min(u-1,o?Math.round(De):Math.floor(De));if(B===Be)for(let he=0;he<M;he++){const ge=he+K;if(ge<0||ge>=p)continue;const Ne=Se+ge*l[2],Oe=ge*b,Qe=Math.min(h-1,o?Math.round(Oe):Math.floor(Oe));W===Qe&&(le+=m[Ne+te])}}A[H+te]=le}}}}return t.makeTensorInfo(r.shape,r.dtype,A)}const hae={kernelName:Vg,backendName:"cpu",kernelFunc:uae};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dae(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{dims:i}=s;Pt(r,"reverse");const o=r.shape.length,a=an(i,r.shape);if(o===0)return Da({inputs:{x:r},backend:t});const l=new Vs(r.shape,r.dtype),c=t.bufferSync(r);for(let u=0;u<l.size;u++){const h=l.indexToLoc(u),d=h.slice();a.forEach(f=>d[f]=r.shape[f]-1-d[f]),l.set(c.get(...d),...h)}return t.makeTensorInfo(l.shape,l.dtype,l.values)}const fae={kernelName:ip,backendName:"cpu",kernelFunc:dae};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pae={kernelName:rA,backendName:"cpu",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{image:s}=n,{radians:r,fillValue:i,center:o}=e,a=t,l=Ws(s.dtype,ye(s.shape)),[c,u,h,d]=s.shape,[f,p]=m1(o,u,h),A=255,m=Math.sin(r),g=Math.cos(r),x=a.data.get(s.dataId).values;for(let b=0;b<c;b++){const w=b*h*u*d;for(let _=0;_<u;_++){const N=_*(h*d);for(let M=0;M<h;M++){const T=M*d;for(let k=0;k<d;k++){const B=[c,_,M,k],L=B[2],U=B[1];let V=(L-f)*g-(U-p)*m,W=(L-f)*m+(U-p)*g;V=Math.round(V+f),W=Math.round(W+p);let H=i;if(typeof i!="number"&&(k===3?H=A:H=i[k]),V>=0&&V<h&&W>=0&&W<u){const K=W*(h*d),te=V*d,le=w+K+te+k;H=x[le]}const ee=w+N+T+k;l[ee]=H}}}}return{dataId:a.write(l,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mae=ts(gh,n=>{const e=Math.floor(n);return n-e<.5?Math.floor(n):n-e>.5?Math.ceil(n):e%2===0?e:e+1}),gae={kernelName:gh,backendName:"cpu",kernelFunc:mae};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Aae(n){const{inputs:e,backend:t,attrs:s}=n,{indices:r,updates:i}=e,{shape:o}=s,{sliceRank:a,numUpdates:l,sliceSize:c,strides:u,outputSize:h}=aa(i,r,o),d=!0,f=t.bufferSync(r),p=t.bufferSync(i),A=hu(f,p,o,h,c,l,a,u,0,d);return t.makeTensorInfo(o,A.dtype,A.values)}const yae={kernelName:Hg,backendName:"cpu",kernelFunc:Aae};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xae(n,e){let t=0,s=n.length,r=0;for(;t<s;)r=Math.floor((t+s)/2),n[r]<e?t=r+1:s=r;return s}function bae(n,e){let t=0,s=n.length,r=0;for(;t<s;)r=Math.floor((t+s)/2),n[r]<=e?t=r+1:s=r;return s}function vae(n,e,t,s,r,i){const o=Ts("int32",t*r);for(let a=0;a<t;++a){const l=n.slice(a*s,(a+1)*s),c=a*r;for(let u=0;u<r;++u)o[c+u]=i==="left"?xae(l,e[u+c]):bae(l,e[u+c])}return o}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cae(n){const{inputs:e,backend:t,attrs:s}=n,{sortedSequence:r,values:i}=e,{side:o}=s,a=t.data.get(r.dataId).values,l=t.data.get(i.dataId).values,c=vae(a,l,r.shape[0],r.shape[1],i.shape[1],o);return t.makeTensorInfo(i.shape,"int32",c)}const Iae={kernelName:Yg,backendName:"cpu",kernelFunc:Cae};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wae(n){const{inputs:e,backend:t}=n,{condition:s,t:r,e:i}=e;Pt([s,r,i],"select");const o=s.shape.length,a=t.data.get(s.dataId).values,l=t.data.get(r.dataId).values,c=t.data.get(i.dataId).values,u=tr(r.dtype,i.dtype),h=Ar(ye(r.shape),u);let d=0;const f=o===0||o>1||r.shape.length===1?1:ye(r.shape.slice(1));for(let p=0;p<a.length;p++)for(let A=0;A<f;A++)a[p]===1?h[d++]=l[p]:h[d++]=c[p];return t.makeTensorInfo(r.shape,u,h)}const Sae={kernelName:op,backendName:"cpu",kernelFunc:wae};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Eae=NA,_ae=RA,Tae=ts(yh,n=>n>=0?_ae*n:Eae*(Math.exp(n)-1)),Bae={kernelName:yh,backendName:"cpu",kernelFunc:Tae};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kae=ts(vh,n=>n<0?-1:n>0?1:0),Nae={kernelName:vh,backendName:"cpu",kernelFunc:kae};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Rae=ts(xh,n=>Math.sin(n)),Mae={kernelName:xh,backendName:"cpu",kernelFunc:Rae};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Dae=ts(bh,n=>Math.sinh(n)),Fae={kernelName:bh,backendName:"cpu",kernelFunc:Dae};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $ae=11920928955078125e-23,l3=Math.log($ae)+2,Pae=ts(Ih,n=>{const e=n>-l3,t=n<l3,s=Math.exp(n);let r;return t?r=s:e?r=n:r=Math.log(1+s),r}),Lae={kernelName:Ih,backendName:"cpu",kernelFunc:Pae};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Oae(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{blockShape:i,paddings:o}=s;Pt([r],"spaceToBatchND");const a=ye(i),l=[[0,0]];l.push(...o);for(let _=1+i.length;_<r.shape.length;++_)l.push([0,0]);const c=k$.kernelFunc({inputs:{x:r},backend:t,attrs:{paddings:l,constantValue:0}}),u=$h(c.shape,i,a,!1),h=Ph(u.length,i.length,!1),d=Lh(c.shape,i,a,!1),A=gs({inputs:{x:c},backend:t,attrs:{shape:u}}),x=Ii({inputs:{x:A},backend:t,attrs:{perm:h}}),w=gs({inputs:{x},backend:t,attrs:{shape:d}});return t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(A),t.disposeIntermediateTensorInfo(x),w}const Qae={kernelName:cp,backendName:"cpu",kernelFunc:Oae};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Uae(n){const{inputs:e,backend:t}=n,{indices:s,values:r,denseShape:i,defaultValue:o}=e;if(i.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
        ${i.shape}`);if(s.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
        ${s.shape}`);if(r.shape.length!==1)throw new Error(`Values must be a vector, saw:
        ${r.shape}`);if(o.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${o.shape}`);const a=t.data.get(s.dataId).values,l=t.data.get(r.dataId).values,c=t.data.get(i.dataId).values,u=t.data.get(o.dataId).values[0],[h,d,f,p,A]=t$(a,s.shape,s.dtype,l,r.dtype,c,u);return[t.makeTensorInfo(d,s.dtype,h),t.makeTensorInfo([d[0]],r.dtype,f),t.makeTensorInfo([p.length],"bool",new Uint8Array(p.map(m=>Number(m)))),t.makeTensorInfo([A.length],s.dtype,new Int32Array(A))]}const zae={kernelName:Ix,backendName:"cpu",kernelFunc:Uae};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gae(n){const{inputs:e,backend:t}=n,{inputIndices:s,inputShape:r,newShape:i}=e;if(s.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape
        ${s.shape}`);if(r.shape.length!==1)throw new Error(`Input shape should be a vector but received shape
        ${r.shape}`);if(i.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${i.shape}`);const o=Array.from(t.data.get(r.dataId).values),a=t.data.get(s.dataId).values,l=Array.from(t.data.get(i.dataId).values),[c,u,h]=n$(a,s.shape,s.dtype,o,l);return[t.makeTensorInfo(u,s.dtype,c),t.makeTensorInfo([h.length],i.dtype,new Int32Array(h))]}const Vae={kernelName:wx,backendName:"cpu",kernelFunc:Gae};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wae(n){const{inputs:e,backend:t}=n,{data:s,indices:r,segmentIds:i}=e;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
          ${r.shape}`);if(i.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
          ${i.shape}`);if(r.shape[0]!==i.shape[0])throw new Error("segmentIds and indices should have same size.");const o=t.data.get(s.dataId).values,a=t.data.get(r.dataId).values,l=t.data.get(i.dataId).values,[c,u]=fS(o,s.shape,s.dtype,a,l,!0);return t.makeTensorInfo(u,s.dtype,c)}const Hae={kernelName:jg,backendName:"cpu",kernelFunc:Wae};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qae(n){const{inputs:e,backend:t}=n,{data:s,indices:r,segmentIds:i}=e;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
         ${r.shape}`);if(i.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
         ${i.shape}`);if(r.shape[0]!==i.shape[0])throw new Error("segmentIds and indices should have same size.");const o=t.data.get(s.dataId).values,a=t.data.get(r.dataId).values,l=t.data.get(i.dataId).values,[c,u]=fS(o,s.shape,s.dtype,a,l);return t.makeTensorInfo(u,s.dtype,c)}const Yae={kernelName:Xg,backendName:"cpu",kernelFunc:qae};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jae(n){const{inputs:e,backend:t,attrs:s}=n,{sparseIndices:r,sparseValues:i,defaultValue:o}=e,{outputShape:a}=s,{sliceRank:l,numUpdates:c,sliceSize:u,strides:h,outputSize:d}=aa(i,r,a),f=!1,p=t.bufferSync(r);let A;switch(i.dtype){case"bool":{const m=t.bufferSync(i),g=!!t.data.get(o.dataId).values[0];A=hu(p,m,a,d,u,c,l,h,g,f);break}case"float32":{const m=t.bufferSync(i),g=t.data.get(o.dataId).values[0];A=hu(p,m,a,d,u,c,l,h,g,f);break}case"int32":{const m=t.bufferSync(i),g=t.data.get(o.dataId).values[0];A=hu(p,m,a,d,u,c,l,h,g,f);break}case"string":{const m=t.bufferSync(i),g=Eo(t.data.get(o.dataId).values[0]);A=hu(p,m,a,d,u,c,l,h,g,f);break}default:throw new Error(`Unsupported type ${i.dtype}`)}return t.makeTensorInfo(a,A.dtype,A.values)}const Xae={kernelName:Kg,backendName:"cpu",kernelFunc:jae};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kae(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{numOrSizeSplits:i,axis:o}=s,a=an(o,r.shape)[0],l=B1(r,i,a),c=new Array(r.shape.length).fill(0),u=r.shape.slice();return l.map(h=>{const d=[...u];d[a]=h;const f=Ru({inputs:{x:r},backend:t,attrs:{begin:c,size:d}});return c[a]+=h,f})}const Jae={kernelName:up,backendName:"cpu",kernelFunc:Kae};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Zae={kernelName:Jg,backendName:"cpu",kernelFunc:({inputs:n,backend:e})=>{const{x:t}=n,s=e;Pt(t,"square");const r=s.data.get(t.dataId).values,i=new Float32Array(r.length);for(let a=0;a<r.length;++a){const l=r[a];i[a]=l*l}return{dataId:s.write(i,t.shape,t.dtype),shape:t.shape,dtype:t.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ele=ts(kh,(n,e)=>{const t=e;return isNaN(n)?NaN:n>0?1:t.alpha}),tle={kernelName:kh,backendName:"cpu",kernelFunc:ele};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nle(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{begin:i,end:o,strides:a,beginMask:l,endMask:c,ellipsisMask:u,newAxisMask:h,shrinkAxisMask:d}=s;Pt(r,"stridedSlice");const{finalShapeSparse:f,finalShape:p,isIdentity:A,sliceDim0:m,isSimpleSlice:g,begin:x,end:v,strides:b}=d1(r.shape,i,o,a,l,c,u,h,d);let w;if(A)w=gs({inputs:{x:r},backend:t,attrs:{shape:p}});else if(m||g){z(r.shape.length>=1,()=>`Input must have rank at least 1, got: ${r.shape.length}`);const _=h1(x,v,b),N=Ru({inputs:{x:r},backend:t,attrs:{begin:x,size:_}});w=gs({inputs:{x:N},backend:t,attrs:{shape:p}}),t.disposeIntermediateTensorInfo(N)}else{const _=t.bufferSync(r),N=i$(f,_,b,x);w=t.makeTensorInfo(p,N.dtype,N.values)}return w}const sle={kernelName:eA,backendName:"cpu",kernelFunc:nle};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rle(n){const{inputs:e,backend:t,attrs:s}=n,{separator:r,nGramWidths:i,leftPad:o,rightPad:a,padWidth:l,preserveShortSequences:c}=s,{data:u,dataSplits:h}=e,d=t.data.get(u.dataId).values,f=t.data.get(h.dataId).values,[p,A]=o$(d,f,r,i,o,a,l,c);return[t.makeTensorInfo([p.length],"string",p),t.makeTensorInfo(h.shape,"int32",A)]}const ile={kernelName:tA,backendName:"cpu",kernelFunc:rle};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ole(n){const{inputs:e,backend:t,attrs:s}=n,{skipEmpty:r}=s,{input:i,delimiter:o}=e;if(i.dtype!=="string")throw new Error("Input must be of datatype string");if(i.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${i.shape}`);if(o.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${o.shape}`);const a=t.data.get(i.dataId).values,l=t.data.get(o.dataId).values[0],[c,u,h]=a$(a,l,r),d=u.length;return[t.makeTensorInfo([d,2],"int32",c),t.makeTensorInfo([d],"string",u),t.makeTensorInfo([2],"int32",new Int32Array(h))]}const ale={kernelName:Sx,backendName:"cpu",kernelFunc:ole};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lle(n){const{inputs:e,backend:t,attrs:s}=n,{numBuckets:r}=s,{input:i}=e;if(i.dtype!=="string")throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");const o=t.data.get(i.dataId).values,a=l$(o,r);return t.makeTensorInfo(i.shape,"int32",a)}const cle={kernelName:Ex,backendName:"cpu",kernelFunc:lle};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ule=ts(_h,n=>Math.tan(n)),hle={kernelName:_h,backendName:"cpu",kernelFunc:ule};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dle=ts(Th,n=>Math.tanh(n)),fle={kernelName:Th,backendName:"cpu",kernelFunc:dle};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ple(n){const{inputs:e,backend:t}=n,{tensor:s,indices:r,updates:i}=e,{sliceRank:o,numUpdates:a,sliceSize:l,strides:c,outputSize:u}=aa(i,r,s.shape),h=!1,d=t.bufferSync(r),f=t.bufferSync(i),p=t.bufferSync(s),A=hu(d,f,s.shape,u,l,a,o,c,p,h);return t.makeTensorInfo(s.shape,A.dtype,A.values)}const mle={kernelName:qg,backendName:"cpu",kernelFunc:ple};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gle(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{reps:i}=s;Pt(r,"tile");const o=u$(t.bufferSync(r),i);return t.makeTensorInfo(o.shape,o.dtype,o.values)}const Ale={kernelName:Bh,backendName:"cpu",kernelFunc:gle};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yle(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{k:i,sorted:o}=s;Pt(r,"topk");const a=t.data.get(r.dataId).values,[l,c]=d$(a,r.shape,r.dtype,i,o);return[t.makeTensorInfo(l.shape,l.dtype,l.values),t.makeTensorInfo(c.shape,c.dtype,c.values)]}const xle={kernelName:nA,backendName:"cpu",kernelFunc:yle};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ble(n){const{inputs:e,attrs:t,backend:s}=n,{image:r,transforms:i}=e,{interpolation:o,fillMode:a,fillValue:l,outputShape:c}=t,[u,h,d,f]=r.shape,[p,A]=c??[h,d],m=[u,p,A,f],g=Ot(r.shape),x=g[0],v=g[1],b=g[2],w=Ot(m),_=w[0],N=w[1],M=w[2],T=Ws(r.dtype,ye(m));T.fill(l);const k=s.data.get(r.dataId).values,B=s.data.get(i.dataId).values;for(let U=0;U<u;++U){const V=i.shape[0]===1?B:B.subarray(U*8,U*8+8);for(let W=0;W<p;++W)for(let H=0;H<A;++H)for(let ee=0;ee<f;++ee){let K;const te=V[6]*H+V[7]*W+1;if(te===0)continue;const le=(V[0]*H+V[1]*W+V[2])/te,fe=(V[3]*H+V[4]*W+V[5])/te,Ie=c3(le,d,a),Se=c3(fe,h,a);switch(o){case"nearest":K=Ele(k,h,d,x,v,b,U,Se,Ie,ee,l);break;case"bilinear":K=_le(k,h,d,x,v,b,U,Se,Ie,ee,l);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${o}`)}const De=U*_+W*N+H*M+ee;T[De]=K}return s.makeTensorInfo(m,r.dtype,T)}return{dataId:s.write(T,m,r.dtype),shape:r.shape,dtype:r.dtype}}const vle={kernelName:sA,backendName:"cpu",kernelFunc:ble};function c3(n,e,t){switch(t){case"reflect":return Cle(n,e);case"wrap":return Ile(n,e);case"nearest":return Sle(n,e);case"constant":default:return wle(n)}}function Cle(n,e){let t=n;if(t<0)if(e<=1)t=0;else{const s=2*e;t<s&&(t=s*Math.trunc(-t/s)+t),t=t<-e?t+s:-t-1}else if(t>e-1)if(e<=1)t=0;else{const s=2*e;t-=s*Math.trunc(t/s),t>=e&&(t=s-t-1)}return tc(0,t,e-1)}function Ile(n,e){let t=n;if(t<0)if(e<=1)t=0;else{const s=e-1;t+=e*(Math.trunc(-t/s)+1)}else if(t>e-1)if(e<=1)t=0;else{const s=e-1;t-=e*Math.trunc(t/s)}return tc(0,t,e-1)}function wle(n,e){return n}function Sle(n,e){return tc(0,n,e-1)}function am(n,e,t,s,r,i,o,a,l,c,u){const h=o*s+a*r+l*i+c;return 0<=a&&a<e&&0<=l&&l<t?n[h]:u}function Ele(n,e,t,s,r,i,o,a,l,c,u){const h=Math.round(a),d=Math.round(l);return am(n,e,t,s,r,i,o,h,d,c,u)}function _le(n,e,t,s,r,i,o,a,l,c,u){const h=Math.floor(a),d=Math.floor(l),f=h+1,p=d+1,A=(p-l)*am(n,e,t,s,r,i,o,h,d,c,u)+(l-d)*am(n,e,t,s,r,i,o,h,p,c,u),m=(p-l)*am(n,e,t,s,r,i,o,f,d,c,u)+(l-d)*am(n,e,t,s,r,i,o,f,p,c,u);return(f-a)*A+(a-h)*m}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tle(n){const{inputs:e,attrs:t,backend:s}=n,{axis:r}=t,{x:i}=e;Pt(i,"unique");const o=s.data.get(i.dataId).values,{outputValues:a,outputShape:l,indices:c}=f$(o,r,i.shape,i.dtype);return[s.makeTensorInfo(l,i.dtype,a),s.makeTensorInfo([c.length],"int32",c)]}const Ble={kernelName:_x,backendName:"cpu",kernelFunc:Tle};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kle(n){const{inputs:e,backend:t,attrs:s}=n,{value:r}=e;let{axis:i}=s;i<0&&(i+=r.shape.length);const o=r.shape.length,a=r.shape[i],l=new Array(o-1);let c=0;for(let f=0;f<o;f++)f!==i&&(l[c++]=r.shape[f]);const u=new Array(o).fill(0),h=r.shape.slice();h[i]=1;const d=new Array(a);for(let f=0;f<d.length;f++){u[i]=f;const p=Ru({inputs:{x:r},backend:t,attrs:{begin:u,size:h}});d[f]=gs({inputs:{x:p},backend:t,attrs:{shape:l}}),t.disposeIntermediateTensorInfo(p)}return d}const Nle={kernelName:dp,backendName:"cpu",kernelFunc:kle};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rle(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,segmentIds:i}=e,{numSegments:o}=s;Pt(r,"unsortedSegmentSum");const a=r.shape.length,l=i.shape.length,c=[],u=[],h=a-l;let d=i;for(let p=0;p<h;++p){const A=U0({inputs:{input:d},backend:t,attrs:{dim:p+1}});d=A,u.push(A)}for(let p=0;p<o;++p){const A=El(p,"int32"),m=t.makeTensorInfo([],"int32",A),g=TF({inputs:{a:m,b:d},backend:t}),x=hc({inputs:{x:g},backend:t,attrs:{dtype:"float32"}}),v=z1({inputs:{a:x,b:r},backend:t}),b=UA({inputs:{x:v},backend:t,attrs:{axis:0,keepDims:!1}});c.push(b),u.push(m),u.push(g),u.push(x),u.push(v),u.push(b)}const f=B$({inputs:c,backend:t,attrs:{axis:0}});return u.forEach(p=>t.disposeIntermediateTensorInfo(p)),f}const Mle={kernelName:fp,backendName:"cpu",kernelFunc:Rle};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Dle=[Tse,cne,kse,Rse,mne,Dse,$se,Lse,Qse,zse,Vse,Hse,Yse,Kse,Zse,nre,rre,ore,lre,Ese,ure,dre,pre,Ane,gre,fne,xne,yre,une,bre,Cre,Ire,Sre,_re,Bre,Nre,Mre,Fre,Pre,Ore,Ure,Gre,Wre,qre,Yre,Xre,Jre,eie,tie,nie,sie,iie,lie,xse,uie,bne,yie,vne,xie,Ine,Sie,Eie,Tie,Sne,_ne,kie,Rie,Die,$ie,Bne,Nne,hne,Lie,vre,Qie,zie,Vie,bse,Mne,Fne,Hie,Pne,Yie,Kie,Zie,noe,roe,ooe,aoe,One,coe,hoe,foe,moe,Aoe,xoe,voe,Une,Ioe,Eoe,Boe,Gne,Wne,Roe,Foe,Loe,qne,Qoe,zoe,Goe,k$,qoe,Cse,Xne,joe,Koe,Zoe,tae,dne,EC,sae,Ise,wse,Sse,iae,aae,cae,hae,fae,pae,gae,rse,yae,Iae,Sae,Bae,ose,Nae,Mae,Fae,ase,_oe,Lae,Qae,zae,Vae,Hae,Yae,Xae,Jae,use,Zae,dse,pse,tle,sle,ile,ale,cle,yse,oie,hle,fle,mle,Ale,xle,vle,Yne,Ble,Nle,Mle,Uoe];for(const n of Dle)iA(n);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nu={},Ty={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function Fle(n,e){nu[n]=e}function na(n,e){if(!(n in nu)||e!=null){const s=Ple(n,e);if(s!==null)nu[n]=s;else return console.log("Could not get context for WebGL version",n),null}const t=nu[n];return t==null||t.isContextLost()?(delete nu[n],na(n)):(t.disable(t.DEPTH_TEST),t.disable(t.STENCIL_TEST),t.disable(t.BLEND),t.disable(t.DITHER),t.disable(t.POLYGON_OFFSET_FILL),t.disable(t.SAMPLE_COVERAGE),t.enable(t.SCISSOR_TEST),t.enable(t.CULL_FACE),t.cullFace(t.BACK),nu[n])}function $le(n){if(!xe().getBool("IS_SAFARI")&&typeof OffscreenCanvas<"u"&&n===2)return new OffscreenCanvas(300,150);if(typeof document<"u")return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}function Ple(n,e){if(n!==1&&n!==2)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const t=e??$le(n);return t.addEventListener("webglcontextlost",s=>{s.preventDefault(),delete nu[n]},!1),xe().getBool("SOFTWARE_WEBGL_ENABLED")&&(Ty.failIfMajorPerformanceCaveat=!1),n===1?t.getContext("webgl",Ty)||t.getContext("experimental-webgl",Ty):t.getContext("webgl2",Ty)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var qm;(function(n){n[n.DENSE=0]="DENSE",n[n.SHARED_BATCH=1]="SHARED_BATCH"})(qm||(qm={}));var ro;(function(n){n[n.RENDER=0]="RENDER",n[n.UPLOAD=1]="UPLOAD",n[n.PIXELS=2]="PIXELS",n[n.DOWNLOAD=3]="DOWNLOAD"})(ro||(ro={}));var Sr;(function(n){n[n.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",n[n.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",n[n.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",n[n.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",n[n.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"})(Sr||(Sr={}));function zA(n,e){return[e,n]}function Lle(n,e){return n*e}function By(n){const e=ye(n),t=Math.ceil(e/4);return C0(t)}function Ip(n,e){return[Math.max(1,Math.ceil(e/2)),Math.max(1,Math.ceil(n/2))]}function Ole(n,e){const[t,s]=Ip(n,e);return t*s*4}function yS(n,e){const t=n;let s,r,i,o,a,l,c,u,h,d;return xe().getNumber("WEBGL_VERSION")===2?(s=t.R32F,r=t.R16F,i=t.RGBA16F,o=t.RGBA32F,a=t.RED,c=4,u=1,h=t.HALF_FLOAT,d=t.FLOAT,l=t.RGBA8):(s=n.RGBA,r=n.RGBA,i=n.RGBA,o=t.RGBA,a=n.RGBA,c=4,u=4,h=e!=null?e.HALF_FLOAT_OES:null,d=n.FLOAT,l=n.RGBA),{internalFormatFloat:s,internalFormatHalfFloat:r,internalFormatPackedHalfFloat:i,internalFormatPackedFloat:o,textureFormatFloat:a,downloadTextureFormat:l,downloadUnpackNumChannels:c,defaultNumChannels:u,textureTypeHalfFloat:h,textureTypeFloat:d}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wt(n,e){const t=e();return xe().getBool("DEBUG")&&Qle(n),t}function Qle(n){const e=n.getError();if(e!==n.NO_ERROR)throw new Error("WebGL Error: "+Vle(n,e))}const Ule=596e-10,zle=65504;function Gle(n){return!!(xe().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||n===0||Ule<Math.abs(n)&&Math.abs(n)<zle)}function Vle(n,e){switch(e){case n.NO_ERROR:return"NO_ERROR";case n.INVALID_ENUM:return"INVALID_ENUM";case n.INVALID_VALUE:return"INVALID_VALUE";case n.INVALID_OPERATION:return"INVALID_OPERATION";case n.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case n.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case n.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${e}`}}function ky(n,e){return kl(n,()=>n.getExtension(e),'Extension "'+e+'" not supported on this browser.')}function Wle(n,e){const t=kl(n,()=>n.createShader(n.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(wt(n,()=>n.shaderSource(t,e)),wt(n,()=>n.compileShader(t)),n.getShaderParameter(t,n.COMPILE_STATUS)===!1)throw console.log(n.getShaderInfoLog(t)),new Error("Failed to compile vertex shader.");return t}function Hle(n,e){const t=kl(n,()=>n.createShader(n.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(wt(n,()=>n.shaderSource(t,e)),wt(n,()=>n.compileShader(t)),xe().get("ENGINE_COMPILE_ONLY"))return t;if(n.getShaderParameter(t,n.COMPILE_STATUS)===!1)throw N$(e,n.getShaderInfoLog(t)),new Error("Failed to compile fragment shader.");return t}const qle=/ERROR: [0-9]+:([0-9]+):/g;function N$(n,e){const t=qle.exec(e);if(t==null){console.log(`Couldn't parse line number in error: ${e}`),console.log(n);return}const s=+t[1],r=n.split(`
`),i=r.length.toString().length+2,o=r.map((h,d)=>fu((d+1).toString(),i)+h);let a=0;for(let h=0;h<o.length;h++)a=Math.max(o[h].length,a);const l=o.slice(0,s-1),c=o.slice(s-1,s),u=o.slice(s);console.log(l.join(`
`)),console.log(e.split(`
`)[0]),console.log(`%c ${fu(c[0],a)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(u.join(`
`))}function Yle(n){return kl(n,()=>n.createProgram(),"Unable to create WebGLProgram.")}function jle(n,e){if(wt(n,()=>n.linkProgram(e)),!xe().get("ENGINE_COMPILE_ONLY")&&n.getProgramParameter(e,n.LINK_STATUS)===!1)throw console.log(n.getProgramInfoLog(e)),new Error("Failed to link vertex and fragment shaders.")}function lb(n,e){if(wt(n,()=>n.validateProgram(e)),n.getProgramParameter(e,n.VALIDATE_STATUS)===!1)throw console.log(n.getProgramInfoLog(e)),new Error("Shader program validation failed.")}function Xle(n,e){const t=kl(n,()=>n.createBuffer(),"Unable to create WebGLBuffer");return wt(n,()=>n.bindBuffer(n.ARRAY_BUFFER,t)),wt(n,()=>n.bufferData(n.ARRAY_BUFFER,e,n.STATIC_DRAW)),t}function Kle(n,e){const t=kl(n,()=>n.createBuffer(),"Unable to create WebGLBuffer");return wt(n,()=>n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,t)),wt(n,()=>n.bufferData(n.ELEMENT_ARRAY_BUFFER,e,n.STATIC_DRAW)),t}function Jle(n){return kl(n,()=>n.createTexture(),"Unable to create WebGLTexture.")}function Zle(n,e){const t=xe().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(n<=0||e<=0){const s=`[${n}x${e}]`;throw new Error("Requested texture size "+s+" is invalid.")}if(n>t||e>t){const s=`[${n}x${e}]`,r=`[${t}x${t}]`;throw new Error("Requested texture size "+s+" greater than WebGL maximum on this browser / GPU "+r+".")}}function ece(n){return kl(n,()=>n.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function u3(n,e,t,s,r,i,o){const a=n.getAttribLocation(e,t);return a===-1?!1:(wt(n,()=>n.bindBuffer(n.ARRAY_BUFFER,s)),wt(n,()=>n.vertexAttribPointer(a,r,n.FLOAT,!1,i,o)),wt(n,()=>n.enableVertexAttribArray(a)),!0)}function tce(n,e,t){oce(n,t),wt(n,()=>n.activeTexture(n.TEXTURE0+t)),wt(n,()=>n.bindTexture(n.TEXTURE_2D,e))}function nce(n,e,t){return kl(n,()=>n.getUniformLocation(e,t),'uniform "'+t+'" not present in program.')}function sce(n,e,t){return n.getUniformLocation(e,t)}function rce(n,e,t,s){wt(n,()=>tce(n,e,s)),wt(n,()=>n.uniform1i(t,s))}function cb(n,e,t){wt(n,()=>n.bindFramebuffer(n.FRAMEBUFFER,t)),wt(n,()=>n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,e,0))}function h3(n,e){wt(n,()=>n.bindFramebuffer(n.FRAMEBUFFER,e)),wt(n,()=>n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,null,0))}function Ny(n){const e=n.checkFramebufferStatus(n.FRAMEBUFFER);if(e!==n.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+ice(n,e))}function ice(n,e){switch(e){case n.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case n.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case n.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case n.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${e}`}}function kl(n,e,t){const s=wt(n,()=>e());if(s==null)throw new Error(t);return s}function oce(n,e){const t=n.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,s=e+n.TEXTURE0;if(s<n.TEXTURE0||s>t){const r=`[gl.TEXTURE0, gl.TEXTURE${t}]`;throw new Error(`textureUnit must be in ${r}.`)}}function rf(n,e=2){return ye(n.slice(0,n.length-e))}function of(n){if(n.length===0)throw Error("Cannot get rows and columns of an empty shape array.");return[n.length>1?n[n.length-2]:1,n[n.length-1]]}function Ry(n){let e=[1,1,1];return n.length===0||n.length===1&&n[0]===1||(e=[rf(n),...of(n)]),e}function ace(n,e=!1){let t=xe().getNumber("WEBGL_MAX_TEXTURE_SIZE"),s=xe().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");s===1/0&&xe().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(s=t/2),e&&(t=t*2,s=s*2,n=n.map((a,l)=>l>=n.length-2?mx(n[l]):n[l]),n.length===1&&(n=[2,n[0]])),n.length!==2&&(n=Sl(n).newShape);let r=ye(n),i=null;n.length<=1&&r<=t?i=[1,r]:n.length===2&&n[0]<=t&&n[1]<=t?i=n:n.length===3&&n[0]*n[1]<=t&&n[2]<=t?i=[n[0]*n[1],n[2]]:n.length===3&&n[0]<=t&&n[1]*n[2]<=t?i=[n[0],n[1]*n[2]]:n.length===4&&n[0]*n[1]*n[2]<=t&&n[3]<=t?i=[n[0]*n[1]*n[2],n[3]]:n.length===4&&n[0]<=t&&n[1]*n[2]*n[3]<=t&&(i=[n[0],n[1]*n[2]*n[3]]);const o=i!=null&&Math.max(...i)>s&&Math.min(...i)<=(e?2:1)&&Math.min(...i)>0;if(i==null||o)if(e){const a=rf(n);let l=2,c=2;n.length&&([l,c]=of(n)),r=a*(l/2)*(c/2),i=C0(r).map(u=>u*2)}else i=C0(r);return i}function My(n){return n%2===0}function G0(n,e){if(n=n.slice(-2),e=e.slice(-2),dn(n,e)||!n.length||!e.length||n[0]===0||n[1]===0||e[0]===0||e[1]===0)return!0;if(n.length!==e.length){const t=n[n.length-1],s=e[e.length-1];if(t===s||My(t)&&My(s)&&(n[0]===1||e[0]===1))return!0}return n[1]===e[1]&&My(n[0])&&My(e[0])}let ub,hb;function lce(n){if(ub==null){const e=na(n);ub=e.getParameter(e.MAX_TEXTURE_SIZE)}return ub}function cce(n){if(hb==null){const e=na(n);hb=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,hb)}function uce(n){if(n===0)return 0;let e;const t=na(n);return wo(t,"EXT_disjoint_timer_query_webgl2")&&n===2?e=2:wo(t,"EXT_disjoint_timer_query")?e=1:e=0,e}function wo(n,e){return n.getExtension(e)!=null}function d3(n){try{if(na(n)!=null)return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function hce(n){if(n===0)return!1;const e=na(n);if(n===1){if(!wo(e,"OES_texture_float"))return!1}else if(!wo(e,"EXT_color_buffer_float"))return!1;return TC(e)}function dce(n){if(n===0)return!1;const e=na(n);if(n===1){if(!wo(e,"OES_texture_float")||!wo(e,"WEBGL_color_buffer_float"))return!1}else{if(wo(e,"EXT_color_buffer_float"))return TC(e);const s="EXT_color_buffer_half_float";if(wo(e,s)){const r=e.getExtension(s);return fce(e,r)}return!1}return TC(e)}function TC(n){const e=yS(n),t=n.createTexture();n.bindTexture(n.TEXTURE_2D,t),n.texImage2D(n.TEXTURE_2D,0,e.internalFormatFloat,1,1,0,e.textureFormatFloat,e.textureTypeFloat,null);const i=n.createFramebuffer();n.bindFramebuffer(n.FRAMEBUFFER,i),n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,t,0);const o=n.checkFramebufferStatus(n.FRAMEBUFFER)===n.FRAMEBUFFER_COMPLETE;return n.bindTexture(n.TEXTURE_2D,null),n.bindFramebuffer(n.FRAMEBUFFER,null),n.deleteTexture(t),n.deleteFramebuffer(i),o}function fce(n,e){const t=yS(n,e),s=n.createTexture();n.bindTexture(n.TEXTURE_2D,s),n.texImage2D(n.TEXTURE_2D,0,t.internalFormatHalfFloat,1,1,0,t.textureFormatFloat,t.textureTypeHalfFloat,null);const o=n.createFramebuffer();n.bindFramebuffer(n.FRAMEBUFFER,o),n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,s,0);const a=n.checkFramebufferStatus(n.FRAMEBUFFER)===n.FRAMEBUFFER_COMPLETE;return n.bindTexture(n.TEXTURE_2D,null),n.bindFramebuffer(n.FRAMEBUFFER,null),n.deleteTexture(s),n.deleteFramebuffer(o),a}function pce(n){return n!==2?!1:na(n).fenceSync!=null}function GA(n,e){Array.isArray(n)||(n=[n]),n.forEach(t=>{t!=null&&z(t.dtype!=="complex64",()=>`${e} does not support complex64 tensors in the WebGL backend.`)})}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qt=xe();Qt.registerFlag("HAS_WEBGL",()=>Qt.getNumber("WEBGL_VERSION")>0);Qt.registerFlag("WEBGL_VERSION",()=>d3(2)?2:d3(1)?1:0);Qt.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1);Qt.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>Qt.get("WEBGL_VERSION")===2);Qt.registerFlag("WEBGL_CPU_FORWARD",()=>!0);Qt.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1);Qt.registerFlag("WEBGL_PACK",()=>Qt.getBool("HAS_WEBGL"));Qt.registerFlag("WEBGL_PACK_NORMALIZATION",()=>Qt.getBool("WEBGL_PACK"));Qt.registerFlag("WEBGL_PACK_CLIP",()=>Qt.getBool("WEBGL_PACK"));Qt.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>Qt.getBool("WEBGL_PACK"));Qt.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>Qt.getBool("WEBGL_PACK"));Qt.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>Qt.getBool("WEBGL_PACK"));Qt.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>Qt.getBool("WEBGL_PACK"));Qt.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>Qt.getBool("WEBGL_PACK"));Qt.registerFlag("WEBGL_PACK_REDUCE",()=>Qt.getBool("WEBGL_PACK"));Qt.registerFlag("WEBGL_LAZILY_UNPACK",()=>Qt.getBool("WEBGL_PACK"));Qt.registerFlag("WEBGL_CONV_IM2COL",()=>Qt.getBool("WEBGL_PACK"));Qt.registerFlag("WEBGL_PACK_CONV2DTRANSPOSE",()=>Qt.getBool("WEBGL_PACK"));Qt.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>lce(Qt.getNumber("WEBGL_VERSION")));Qt.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>cce(Qt.getNumber("WEBGL_VERSION")));Qt.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{const n=Qt.getNumber("WEBGL_VERSION");return n===0?0:uce(n)});Qt.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>Qt.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!mI());Qt.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>hce(Qt.getNumber("WEBGL_VERSION")));Qt.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>Qt.getBool("WEBGL_FORCE_F16_TEXTURES")?!1:Qt.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"));Qt.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>dce(Qt.getNumber("WEBGL_VERSION")));Qt.registerFlag("WEBGL_FENCE_API_ENABLED",()=>pce(Qt.getNumber("WEBGL_VERSION")));Qt.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>Qt.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0);Qt.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,n=>{if(typeof n!="number")throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be a number but got ${n}.`);if(n<0&&n!==-1)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${n}.`)});Qt.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>mI()?1:-1,n=>{if(typeof n!="number")throw new Error(`WEBGL_FLUSH_THRESHOLD must be a number but got ${n}.`);if(n<0&&n!==-1)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${n}.`)});Qt.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128);Qt.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1);Qt.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5);Qt.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128);Qt.registerFlag("WEBGL_EXP_CONV",()=>!1);Qt.registerFlag("SOFTWARE_WEBGL_ENABLED",()=>Qt.getBool("IS_TEST"));Qt.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",()=>1/0);Qt.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",()=>!1);Qt.registerFlag("WEBGL2_ISNAN_CUSTOM",()=>!1);Qt.registerFlag("ENGINE_COMPILE_ONLY",()=>!1);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oi(){let n,e,t,s,r,i,o,a,l,c;return xe().getNumber("WEBGL_VERSION")===2?(n="#version 300 es",e="in",t="out",s="in",r="texture",i="outputColor",o="out vec4 outputColor;",a=xe().getBool("WEBGL2_ISNAN_CUSTOM")?`
      bool isnan_custom(float val) {
        uint floatToUint = floatBitsToUint(val);
        return (floatToUint & 0x7fffffffu) > 0x7f800000u;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `:"",l="",c=`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(n="",e="attribute",t="varying",s="varying",r="texture2D",i="gl_FragColor",o="",a=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,l=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,c=`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:n,attribute:e,varyingVs:t,varyingFs:s,texture2D:r,output:i,defineOutput:o,defineSpecialNaN:a,defineSpecialInf:l,defineRound:c}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Uh(n,e,t="index"){const s=Ot(e);return s.map((r,i)=>{const o=`int ${n[i]} = ${t} / ${r}`,a=i===s.length-1?`int ${n[i+1]} = ${t} - ${n[i]} * ${r}`:`index -= ${n[i]} * ${r}`;return`${o}; ${a};`}).join("")}function G1(n,e,t="index"){const s=Ot(e);return s.map((r,i)=>{const o=`int ${n[i]} = ${t} / outShapeStrides[${i}]`,a=i===s.length-1?`int ${n[i+1]} = ${t} - ${n[i]} * outShapeStrides[${i}]`:`index -= ${n[i]} * outShapeStrides[${i}]`;return`${o}; ${a};`}).join("")}function mce(n,e){const t=n.length,s=n.map(i=>`${e}[${i}]`),r=new Array(t-1);r[t-2]=s[t-1];for(let i=t-3;i>=0;--i)r[i]=`(${r[i+1]} * ${s[i+1]})`;return r}function gce(n,e,t="index"){const s=n.map((i,o)=>o),r=mce(s,e);return r.map((i,o)=>{const a=`int ${n[o]} = ${t} / ${r[o]}`,l=o===r.length-1?`int ${n[o+1]} = ${t} - ${n[o]} * ${r[o]}`:`index -= ${n[o]} * ${r[o]}`;return`${a}; ${l};`}).join("")}function xS(n){const e=Ot(n).map(t=>t.toString());return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * ${e[0]} + coords.y * ${e[1]} + coords.z;
  }
`}function bS(){return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;
  }
`}const R$=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`;/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{getBroadcastDims:M$}=JR;function Ace(n,e,t){const s=[];if(n.forEach(f=>{const p=ye(f.shapeInfo.logicalShape);if(f.shapeInfo.isUniform?s.push(`uniform float ${f.name}${p>1?`[${p}]`:""};`):(s.push(`uniform sampler2D ${f.name};`),s.push(`uniform int offset${f.name};`)),t.enableShapeUniforms){const{uniformShape:A}=vS(t.packedInputs,f.shapeInfo.logicalShape,f.shapeInfo.texShape);switch(A.length){case 1:s.push(`uniform int ${f.name}Shape;`);break;case 2:s.push(`uniform ivec2 ${f.name}Shape;`);break;case 3:s.push(`uniform ivec3 ${f.name}Shape;`);break;case 4:s.push(`uniform ivec4 ${f.name}Shape;`);break}s.push(`uniform ivec2 ${f.name}TexShape;`)}}),t.enableShapeUniforms){switch(e.logicalShape.length){case 1:s.push("uniform int outShape;");break;case 2:s.push("uniform ivec2 outShape;"),s.push("uniform int outShapeStrides;");break;case 3:s.push("uniform ivec3 outShape;"),s.push("uniform ivec2 outShapeStrides;");break;case 4:s.push("uniform ivec4 outShape;"),s.push("uniform ivec3 outShapeStrides;");break}s.push("uniform ivec2 outTexShape;")}t.customUniforms&&t.customUniforms.forEach(f=>{s.push(`uniform ${f.type} ${f.name}${f.arrayIndex?`[${f.arrayIndex}]`:""};`)});const r=s.join(`
`),i=n.map(f=>yce(f,e,t.packedInputs,t.enableShapeUniforms)).join(`
`),o=e.texShape,a=oi(),l=vce(a);let c,u,h=wce(a);return e.isPacked?(c=xce(e.logicalShape,o,t.enableShapeUniforms),u=Ice(a)):(c=bce(e.logicalShape,o,t.enableShapeUniforms),u=Cce(a)),t.packedInputs&&(h+=Tce),[h,l,u,r,c,i,t.userCode].join(`
`)}function wp(n,e=!1){const t=n.shapeInfo.logicalShape;switch(t.length){case 0:return Qce(n,e);case 1:return zce(n,e);case 2:return Vce(n,e);case 3:return Hce(n,e);case 4:return Yce(n,e);case 5:return jce(n);case 6:return Xce(n);default:throw new Error(`${t.length}-D input sampling is not yet supported`)}}function D$(n,e){switch(n.shapeInfo.logicalShape.length){case 0:return Oce(n);case 1:return Uce(n,e);case 2:return Gce(n,e);case 3:return Wce(n,e);default:return qce(n,e)}}function yce(n,e,t=!1,s){let r="";t?r+=D$(n,s):r+=wp(n,s);const i=n.shapeInfo.logicalShape,o=e.logicalShape;return i.length<=o.length&&(t?r+=Kce(n,e):r+=Jce(n,e)),r}function xce(n,e,t){switch(n.length){case 0:return F$();case 1:return Bce(n,e,t);case 2:return Pce(n,e,t);case 3:return Nce(n,e,t);default:return Mce(n,e,t)}}function bce(n,e,t){switch(n.length){case 0:return F$();case 1:return kce(n,e,t);case 2:return Lce(n,e,t);case 3:return Rce(n,e,t);case 4:return Dce(n,e,t);case 5:return Fce(n,e);case 6:return $ce(n,e);default:throw new Error(`${n.length}-D output sampling is not yet supported`)}}function vce(n){return`
    float sampleTexture(sampler2D textureSampler, vec2 uv) {
      return ${n.texture2D}(textureSampler, uv).r;
    }
  `}function Cce(n){return`
    void setOutput(float val) {
      ${n.output} = vec4(val, 0, 0, 0);
    }
  `}function Ice(n){return`
    void setOutput(vec4 val) {
      ${n.output} = val;
    }
  `}function wce(n){return`${n.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${n.varyingFs} vec2 resultUV;
    ${n.defineOutput}
    const vec2 halfCR = vec2(0.5, 0.5);

    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    uniform float NAN;
    ${n.defineSpecialNaN}
    ${n.defineSpecialInf}
    ${n.defineRound}

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    int idiv(int a, int b, float sign) {
      int res = a / b;
      int mod = imod(a, b);
      if (sign < 0. && mod != 0) {
        res -= 1;
      }
      return res;
    }

    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    #define HASHSCALE1 443.8975
    float random(float seed){
      vec2 p = resultUV * seed;
      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);
      p3 += dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${Sce}
    ${Ece}
    ${_ce}
  `}const Sce=`
vec2 uvFromFlat(int texNumR, int texNumC, int index) {
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
  int texelIndex = index / 2;
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,Ece=`
vec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,
  int texNumC, int row, int col) {
  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,_ce=`
vec2 packedUVfrom3D(int texNumR, int texNumC,
    int texelsInBatch, int texelsInLogicalRow, int b,
    int row, int col) {
  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,Tce=`
  float getChannel(vec4 frag, vec2 innerDims) {
    vec2 modCoord = mod(innerDims, 2.);
    return modCoord.x == 0. ?
      (modCoord.y == 0. ? frag.r : frag.g) :
      (modCoord.y == 0. ? frag.b : frag.a);
  }
  float getChannel(vec4 frag, int dim) {
    float modCoord = mod(float(dim), 2.);
    return modCoord == 0. ? frag.r : frag.g;
  }
`;function F$(){return`
    int getOutputCoords() {
      return 0;
    }
  `}function Bce(n,e,t){const s=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];return s[0]===1?t?`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ${s[1]}.0);
      }
    `:s[1]===1?t?`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ${s[0]}.0);
      }
    `:t?`
    int getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      return 2 * (resTexRC.x * ${s[1]} + resTexRC.y);
    }
  `}function kce(n,e,t){return e[0]===1?t?`
      int getOutputCoords() {
        return int(resultUV.x * float(outTexShape[1]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.x * ${e[1]}.0);
      }
    `:e[1]===1?t?`
      int getOutputCoords() {
        return int(resultUV.y * float(outTexShape[0]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.y * ${e[0]}.0);
      }
    `:t?`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      return resTexRC.x * outTexShape[1] + resTexRC.y;
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      return resTexRC.x * ${e[1]} + resTexRC.y;
    }
  `}function Nce(n,e,t){if(t)return`
    ivec3 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec3(b, r, c);
    }
  `;const s=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],r=Math.ceil(n[2]/2),i=r*Math.ceil(n[1]/2);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      int index = resTexRC.x * ${s[1]} + resTexRC.y;

      int b = index / ${i};
      index -= b * ${i};

      int r = 2 * (index / ${r});
      int c = imod(index, ${r}) * 2;

      return ivec3(b, r, c);
    }
  `}function Rce(n,e,t){if(t)return`
  ivec3 getOutputCoords() {
    ivec2 resTexRC = ivec2(resultUV.yx *
                           vec2(outTexShape[0], outTexShape[1]));
    int index = resTexRC.x * outTexShape[1] + resTexRC.y;
    ${G1(["r","c","d"],n)}
    return ivec3(r, c, d);
  }
`;const s=Uh(["r","c","d"],n);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      ${s}
      return ivec3(r, c, d);
    }
  `}function Mce(n,e,t){if(t)return`
    ivec4 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatchN = texelsInBatch * outShape[1];

      int b2 = index / texelsInBatchN;
      index -= b2 * texelsInBatchN;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec4(b2, b, r, c);
    }
  `;const s=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],r=Math.ceil(n[n.length-1]/2),i=r*Math.ceil(n[n.length-2]/2);let o=i,a="",l="b, r, c";for(let c=2;c<n.length-1;c++)o*=n[n.length-c-1],a=`
      int b${c} = index / ${o};
      index -= b${c} * ${o};
    `+a,l=`b${c}, `+l;return`
    ivec${n.length} getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      int index = resTexRC.x * ${s[1]} + resTexRC.y;

      ${a}

      int b = index / ${i};
      index -= b * ${i};

      int r = 2 * (index / ${r});
      int c = imod(index, ${r}) * 2;

      return ivec${n.length}(${l});
    }
  `}function Dce(n,e,t){if(t)return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      ${G1(["r","c","d","d2"],n)}
      return ivec4(r, c, d, d2);
    }
  `;const s=Uh(["r","c","d","d2"],n);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      ${s}
      return ivec4(r, c, d, d2);
    }
  `}function Fce(n,e){const t=Uh(["r","c","d","d2","d3"],n);return`
    ivec5 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${e[0]},
                             ${e[1]}));

      int index = resTexRC.x * ${e[1]} + resTexRC.y;

      ${t}

      ivec5 outShape = ivec5(r, c, d, d2, d3);
      return outShape;
    }
  `}function $ce(n,e){const t=Uh(["r","c","d","d2","d3","d4"],n);return`
    ivec6 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;

      ${t}

      ivec6 result = ivec6(r, c, d, d2, d3, d4);
      return result;
    }
  `}function Pce(n,e,t){const s=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];if(dn(n,e))return t?`
      ivec2 getOutputCoords() {
        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return 2 * ivec2(resultUV.yx * vec2(${s[0]}, ${s[1]}));
      }
    `;const r=Math.ceil(n[1]/2);return t?`
    ivec2 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));

      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;
      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));

      int index = resTexRC.x * ${s[1]} + resTexRC.y;
      int r = 2 * (index / ${r});
      int c = imod(index, ${r}) * 2;

      return ivec2(r, c);
    }
  `}function Lce(n,e,t){return dn(n,e)?t?`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(${e[0]}, ${e[1]}));
      }
    `:n[1]===1?t?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(index, 0);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${e[0]}, ${e[1]}));
        int index = resTexRC.x * ${e[1]} + resTexRC.y;
        return ivec2(index, 0);
      }
    `:n[0]===1?t?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(0, index);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${e[0]}, ${e[1]}));
        int index = resTexRC.x * ${e[1]} + resTexRC.y;
        return ivec2(0, index);
      }
    `:t?`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      int r = index / outShape[1];
      int c = index - r * outShape[1];
      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      int r = index / ${n[1]};
      int c = index - r * ${n[1]};
      return ivec2(r, c);
    }
  `}function zh(n){return`offset${n}`}function Oce(n){const e=n.name,t="get"+e.charAt(0).toUpperCase()+e.slice(1),s=oi();return`
    vec4 ${t}() {
      return ${s.texture2D}(${e}, halfCR);
    }
  `}function Qce(n,e){const t=n.name,s="get"+t.charAt(0).toUpperCase()+t.slice(1);if(n.shapeInfo.isUniform)return`float ${s}() {return ${t};}`;const[r,i]=n.shapeInfo.texShape;if(r===1&&i===1)return`
      float ${s}() {
        return sampleTexture(${t}, halfCR);
      }
    `;const o=zh(t);if(e)return`
    float ${s}() {
      vec2 uv = uvFromFlat(${t}TexShape[0], ${t}TexShape[1], ${o});
      return sampleTexture(${t}, uv);
    }
  `;const[a,l]=n.shapeInfo.texShape;return`
    float ${s}() {
      vec2 uv = uvFromFlat(${a}, ${l}, ${o});
      return sampleTexture(${t}, uv);
    }
  `}function Uce(n,e){const t=n.name,s="get"+t.charAt(0).toUpperCase()+t.slice(1),r=n.shapeInfo.texShape,i=oi();if(e)return`
    vec4 ${s}(int index) {
      ivec2 packedTexShape = ivec2(ceil(float(${t}TexShape[0]) / 2.0), ceil(float(${t}TexShape[1]) / 2.0));
      vec2 uv = packedUVfrom1D(
        packedTexShape[0], packedTexShape[1], index);
      return ${i.texture2D}(${t}, uv);
    }
  `;const o=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];return`
    vec4 ${s}(int index) {
      vec2 uv = packedUVfrom1D(
        ${o[0]}, ${o[1]}, index);
      return ${i.texture2D}(${t}, uv);
    }
  `}function zce(n,e){const t=n.name,s="get"+t.charAt(0).toUpperCase()+t.slice(1);if(n.shapeInfo.isUniform)return`
      float ${s}(int index) {
        ${Sp(n)}
      }
    `;const r=n.shapeInfo.texShape,i=r[0],o=r[1];if(o===1&&i===1)return`
      float ${s}(int index) {
        return sampleTexture(${t}, halfCR);
      }
    `;const a=zh(t);return o===1?e?`
      float ${s}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${a}) + 0.5) / float(${t}TexShape[0]));
        return sampleTexture(${t}, uv);
      }
    `:`
      float ${s}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${a}) + 0.5) / ${i}.0);
        return sampleTexture(${t}, uv);
      }
    `:i===1?e?`
      float ${s}(int index) {
        vec2 uv = vec2((float(index + ${a}) + 0.5) / float(${t}TexShape[1]), 0.5);
        return sampleTexture(${t}, uv);
      }
    `:`
      float ${s}(int index) {
        vec2 uv = vec2((float(index + ${a}) + 0.5) / ${o}.0, 0.5);
        return sampleTexture(${t}, uv);
      }
    `:e?`
    float ${s}(int index) {
      vec2 uv = uvFromFlat(${t}TexShape[0], ${t}TexShape[1], index + ${a});
      return sampleTexture(${t}, uv);
    }
  `:`
    float ${s}(int index) {
      vec2 uv = uvFromFlat(${i}, ${o}, index + ${a});
      return sampleTexture(${t}, uv);
    }
  `}function Gce(n,e){const t=n.shapeInfo.logicalShape,s=n.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),i=n.shapeInfo.texShape,o=i[0],a=i[1],l=oi();if(i!=null&&dn(t,i))return e?`
      vec4 ${r}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);

        return ${l.texture2D}(${s}, uv);
      }
    `:`
      vec4 ${r}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${a}.0, ${o}.0);

        return ${l.texture2D}(${s}, uv);
      }
    `;if(e)return`
    vec4 ${r}(int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${s}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);
      return ${l.texture2D}(${s}, uv);
    }
  `;const c=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)],u=Math.ceil(t[1]/2);return`
    vec4 ${r}(int row, int col) {
      vec2 uv = packedUVfrom2D(${u}, ${c[0]}, ${c[1]}, row, col);
      return ${l.texture2D}(${s}, uv);
    }
  `}function Vce(n,e){const t=n.shapeInfo.logicalShape,s=n.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),i=n.shapeInfo.texShape;if(i!=null&&dn(t,i)){if(e)return`
      float ${r}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `;const d=i[0],f=i[1];return`
    float ${r}(int row, int col) {
      vec2 uv = (vec2(col, row) + halfCR) / vec2(${f}.0, ${d}.0);
      return sampleTexture(${s}, uv);
    }
  `}const{newShape:o,keptDims:a}=Sl(t),l=o;if(l.length<t.length){const d=Ep(n,l),f=["row","col"];return`
      ${wp(d,e)}
      float ${r}(int row, int col) {
        return ${r}(${_p(f,a)});
      }
    `}if(n.shapeInfo.isUniform)return`
      float ${r}(int row, int col) {
        int index = round(dot(vec2(row, col), vec2(${t[1]}, 1)));
        ${Sp(n)}
      }
    `;const c=i[0],u=i[1],h=zh(s);return u===1?e?`
      float ${r}(int row, int col) {
        float index = dot(vec3(row, col, ${h}), vec3(${s}Shape[1], 1, 1));
        vec2 uv = vec2(0.5, (index + 0.5) / float(${s}TexShape[0]));
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${r}(int row, int col) {
      float index = dot(vec3(row, col, ${h}), vec3(${t[1]}, 1, 1));
      vec2 uv = vec2(0.5, (index + 0.5) / ${c}.0);
      return sampleTexture(${s}, uv);
    }
  `:c===1?e?`
      float ${r}(int row, int col) {
        float index = dot(vec3(row, col, ${h}), vec3(${s}Shape[1], 1, 1));
        vec2 uv = vec2((index + 0.5) / float(${s}TexShape[1]), 0.5);
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${r}(int row, int col) {
      float index = dot(vec3(row, col, ${h}), vec3(${t[1]}, 1, 1));
      vec2 uv = vec2((index + 0.5) / ${u}.0, 0.5);
      return sampleTexture(${s}, uv);
    }
  `:e?`
      float ${r}(int row, int col) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${s}Shape[1] + col + ${h};
        vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);
        return sampleTexture(${s}, uv);
      }
    `:`
  float ${r}(int row, int col) {
    // Explicitly use integer operations as dot() only works on floats.
    int index = row * ${t[1]} + col + ${h};
    vec2 uv = uvFromFlat(${c}, ${u}, index);
    return sampleTexture(${s}, uv);
  }
`}function Wce(n,e){const t=n.shapeInfo.logicalShape,s=n.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),i=n.shapeInfo.texShape,o=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)];if(t[0]===1){const d=t.slice(1),f=[1,2],p=Ep(n,d),A=["b","row","col"];return`
        ${D$(p,e)}
        vec4 ${r}(int b, int row, int col) {
          return ${r}(${_p(A,f)});
        }
      `}const a=oi();if(e)return`
    vec4 ${r}(int b, int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${s}Shape[2]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${s}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom3D(
        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);
      return ${a.texture2D}(${s}, uv);
    }
  `;const l=o[0],c=o[1],u=Math.ceil(t[2]/2),h=u*Math.ceil(t[1]/2);return`
    vec4 ${r}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${l}, ${c}, ${h}, ${u}, b, row, col);
      return ${a.texture2D}(${s}, uv);
    }
  `}function Hce(n,e){const t=n.shapeInfo.logicalShape,s=n.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),i=t[1]*t[2],o=t[2],{newShape:a,keptDims:l}=Sl(t),c=a;if(c.length<t.length){const A=Ep(n,c),m=["row","col","depth"];return`
        ${wp(A,e)}
        float ${r}(int row, int col, int depth) {
          return ${r}(${_p(m,l)});
        }
      `}if(n.shapeInfo.isUniform)return`
      float ${r}(int row, int col, int depth) {
        int index = round(dot(vec3(row, col, depth),
                          vec3(${i}, ${o}, 1)));
        ${Sp(n)}
      }
    `;const u=n.shapeInfo.texShape,h=u[0],d=u[1],f=n.shapeInfo.flatOffset;if(d===i&&f==null)return e?`
      float ${r}(int row, int col, int depth) {
        int stride1 = ${s}Shape[2];
        float texR = float(row);
        float texC = dot(vec2(col, depth), vec2(stride1, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
        float ${r}(int row, int col, int depth) {
          float texR = float(row);
          float texC = dot(vec2(col, depth), vec2(${o}, 1));
          vec2 uv = (vec2(texC, texR) + halfCR) /
                     vec2(${d}.0, ${h}.0);
          return sampleTexture(${s}, uv);
        }
      `;if(d===o&&f==null)return e?`
      float ${r}(int row, int col, int depth) {
        float texR = dot(vec2(row, col), vec2(${s}Shape[1], 1));
        float texC = float(depth);
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${r}(int row, int col, int depth) {
      float texR = dot(vec2(row, col), vec2(${t[1]}, 1));
      float texC = float(depth);
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${d}.0, ${h}.0);
      return sampleTexture(${s}, uv);
    }
  `;const p=zh(s);return e?`
    float ${r}(int row, int col, int depth) {
      // Explicitly use integer operations as dot() only works on floats.
      int stride0 = ${s}Shape[1] * ${s}Shape[2];
      int stride1 = ${s}Shape[2];
      int index = row * stride0 + col * stride1 + depth + ${p};
      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);
      return sampleTexture(${s}, uv);
    }
    `:`
      float ${r}(int row, int col, int depth) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${i} + col * ${o} + depth + ${p};
        vec2 uv = uvFromFlat(${h}, ${d}, index);
        return sampleTexture(${s}, uv);
      }
  `}function qce(n,e){const t=n.name,s="get"+t.charAt(0).toUpperCase()+t.slice(1),r=oi();if(e)return`
    vec4 ${s}(int b2, int b, int row, int col) {
      int valuesPerRow = int(ceil(float(${t}Shape[3]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${t}Shape[2]) / 2.0));
      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);
      texelsInBatch *= ${t}Shape[1];
      index = b2 * texelsInBatch + index;
      ivec2 packedTexShape = ivec2(ceil(float(${t}TexShape[0]) / 2.0), ceil(float(${t}TexShape[1]) / 2.0));
      int texR = index / packedTexShape[1];
      int texC = index - texR * packedTexShape[1];
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${r.texture2D}(${t}, uv);
    }
  `;const i=n.shapeInfo.logicalShape,o=i.length,a=n.shapeInfo.texShape,l=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)],c=l[0],u=l[1],h=Math.ceil(i[o-1]/2);let d=h*Math.ceil(i[o-2]/2),f="int b, int row, int col",p=`b * ${d} + (row / 2) * ${h} + (col / 2)`;for(let A=2;A<o-1;A++)f=`int b${A}, `+f,d*=i[o-A-1],p=`b${A} * ${d} + `+p;return`
    vec4 ${s}(${f}) {
      int index = ${p};
      int texR = index / ${u};
      int texC = index - texR * ${u};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${u}, ${c});
      return ${r.texture2D}(${t}, uv);
    }
  `}function Yce(n,e){const t=n.shapeInfo.logicalShape,s=n.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),i=t[3],o=t[2]*i,a=t[1]*o,{newShape:l,keptDims:c}=Sl(t);if(l.length<t.length){const x=Ep(n,l),v=["row","col","depth","depth2"];return`
      ${wp(x,e)}
      float ${r}(int row, int col, int depth, int depth2) {
        return ${r}(${_p(v,c)});
      }
    `}if(n.shapeInfo.isUniform)return`
      float ${r}(int row, int col, int depth, int depth2) {
        int index = round(dot(vec4(row, col, depth, depth2),
                          vec4(${a}, ${o}, ${i}, 1)));
        ${Sp(n)}
      }
    `;const u=n.shapeInfo.flatOffset,h=n.shapeInfo.texShape,d=h[0],f=h[1],p=`int stride2 = ${s}Shape[3];`,A=`int stride1 = ${s}Shape[2] * stride2;`,m=`int stride0 = ${s}Shape[1] * stride1;`;if(f===a&&u==null)return e?`
      float ${r}(int row, int col, int depth, int depth2) {
        ${p}
        ${A}
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(stride1, stride2, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
      float ${r}(int row, int col, int depth, int depth2) {
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(${o}, ${i}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${f}.0, ${d}.0);
        return sampleTexture(${s}, uv);
      }
    `;if(f===i&&u==null)return e?`
      float ${r}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${s}Shape[1] * ${s}Shape[2], ${s}Shape[2], 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
      float ${r}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${t[1]*t[2]}, ${t[2]}, 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${f}.0, ${d}.0);
        return sampleTexture(${s}, uv);
      }
    `;const g=zh(s);return e?`
    float ${r}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      ${p}
      ${A}
      ${m}
      int index = row * stride0 + col * stride1 +
          depth * stride2 + depth2;
      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index + ${g});
      return sampleTexture(${s}, uv);
    }
  `:`
    float ${r}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${a} + col * ${o} +
          depth * ${i} + depth2;
      vec2 uv = uvFromFlat(${d}, ${f}, index + ${g});
      return sampleTexture(${s}, uv);
    }
  `}function jce(n){const e=n.shapeInfo.logicalShape,t=n.name,s="get"+t.charAt(0).toUpperCase()+t.slice(1),r=e[4],i=e[3]*r,o=e[2]*i,a=e[1]*o,{newShape:l,keptDims:c}=Sl(e);if(l.length<e.length){const A=Ep(n,l),m=["row","col","depth","depth2","depth3"];return`
      ${wp(A)}
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        return ${s}(${_p(m,c)});
      }
    `}if(n.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        float index = dot(
          vec4(row, col, depth, depth2),
          vec4(${a}, ${o}, ${i}, ${r})) +
          depth3;
        ${Sp(n)}
      }
    `;const u=n.shapeInfo.flatOffset,h=n.shapeInfo.texShape,d=h[0],f=h[1];if(f===a&&u==null)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
                         vec4(${o}, ${i}, ${r}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${f}.0, ${d}.0);
        return sampleTexture(${t}, uv);
      }
    `;if(f===r&&u==null)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        float texR = dot(
          vec4(row, col, depth, depth2),
          vec4(${e[1]*e[2]*e[3]},
               ${e[2]*e[3]}, ${e[3]}, 1));
        int texC = depth3;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${f}.0, ${d}.0);
        return sampleTexture(${t}, uv);
      }
    `;const p=zh(t);return`
    float ${s}(int row, int col, int depth, int depth2, int depth3) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${a} + col * ${o} + depth * ${i} +
          depth2 * ${r} + depth3 + ${p};
      vec2 uv = uvFromFlat(${d}, ${f}, index);
      return sampleTexture(${t}, uv);
    }
  `}function Xce(n){const e=n.shapeInfo.logicalShape,t=n.name,s="get"+t.charAt(0).toUpperCase()+t.slice(1),{newShape:r,keptDims:i}=Sl(e);if(r.length<e.length){const m=Ep(n,r),g=["row","col","depth","depth2","depth3","depth4"];return`
      ${wp(m)}
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        return ${s}(${_p(g,i)});
      }
    `}const o=e[5],a=e[4]*o,l=e[3]*a,c=e[2]*l,u=e[1]*c;if(n.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
        int index = round(dot(
          vec4(row, col, depth, depth2),
          vec4(${u}, ${c}, ${l}, ${a})) +
          dot(
            vec2(depth3, depth4),
            vec2(${o}, 1)));
        ${Sp(n)}
      }
    `;const h=n.shapeInfo.flatOffset,d=n.shapeInfo.texShape,f=d[0],p=d[1];if(p===u&&h==null)return`
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
          vec4(${c}, ${l}, ${a}, ${o})) +
               float(depth4);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${p}.0, ${f}.0);
        return sampleTexture(${t}, uv);
      }
    `;if(p===o&&h==null)return`
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        float texR = dot(vec4(row, col, depth, depth2),
          vec4(${e[1]*e[2]*e[3]*e[4]},
               ${e[2]*e[3]*e[4]},
               ${e[3]*e[4]},
               ${e[4]})) + float(depth3);
        int texC = depth4;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${p}.0, ${f}.0);
        return sampleTexture(${t}, uv);
      }
    `;const A=zh(t);return`
    float ${s}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${u} + col * ${c} + depth * ${l} +
          depth2 * ${a} + depth3 * ${o} + depth4 + ${A};
      vec2 uv = uvFromFlat(${f}, ${p}, index);
      return sampleTexture(${t}, uv);
    }
  `}function Sp(n){const e=n.name,t=ye(n.shapeInfo.logicalShape);return t<2?`return ${e};`:`
    for (int i = 0; i < ${t}; i++) {
      if (i == index) {
        return ${e}[i];
      }
    }
  `}function Kce(n,e){const t=n.name,s=t.charAt(0).toUpperCase()+t.slice(1),r="get"+s+"AtOutCoords",i=n.shapeInfo.logicalShape.length,o=e.logicalShape.length,a=M$(n.shapeInfo.logicalShape,e.logicalShape),l=ns(o),c=o-i;let u;const h=["x","y","z","w","u","v"];i===0?u="":o<2&&a.length>=1?u="coords = 0;":u=a.map(x=>`coords.${h[x+c]} = 0;`).join(`
`);let d="";o<2&&i>0?d="coords":d=n.shapeInfo.logicalShape.map((x,v)=>`coords.${h[v+c]}`).join(", ");let f="return outputValue;";const A=ye(n.shapeInfo.logicalShape)===1,g=ye(e.logicalShape)===1;if(i===1&&!A&&!g)f=`
      return vec4(outputValue.xy, outputValue.xy);
    `;else if(A&&!g)o===1?f=`
        return vec4(outputValue.x, outputValue.x, 0., 0.);
      `:f=`
        return vec4(outputValue.x);
      `;else if(a.length){const x=i-2,v=i-1;a.indexOf(x)>-1&&a.indexOf(v)>-1?f="return vec4(outputValue.x);":a.indexOf(x)>-1?f="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":a.indexOf(v)>-1&&(f="return vec4(outputValue.xx, outputValue.zz);")}return`
    vec4 ${r}() {
      ${l} coords = getOutputCoords();
      ${u}
      vec4 outputValue = get${s}(${d});
      ${f}
    }
  `}function Jce(n,e){const t=n.name,s=t.charAt(0).toUpperCase()+t.slice(1),r="get"+s+"AtOutCoords",i=e.texShape,o=n.shapeInfo.texShape,a=n.shapeInfo.logicalShape.length,l=e.logicalShape.length;if(!n.shapeInfo.isUniform&&a===l&&n.shapeInfo.flatOffset==null&&dn(o,i))return`
      float ${r}() {
        return sampleTexture(${t}, resultUV);
      }
    `;const c=ns(l),u=M$(n.shapeInfo.logicalShape,e.logicalShape),h=l-a;let d;const f=["x","y","z","w","u","v"];a===0?d="":l<2&&u.length>=1?d="coords = 0;":d=u.map(A=>`coords.${f[A+h]} = 0;`).join(`
`);let p="";return l<2&&a>0?p="coords":p=n.shapeInfo.logicalShape.map((A,m)=>`coords.${f[m+h]}`).join(", "),`
    float ${r}() {
      ${c} coords = getOutputCoords();
      ${d}
      return get${s}(${p});
    }
  `}function ns(n){if(n<=1)return"int";if(n===2)return"ivec2";if(n===3)return"ivec3";if(n===4)return"ivec4";if(n===5)return"ivec5";if(n===6)return"ivec6";throw Error(`GPU for rank ${n} is not yet supported`)}function vS(n,e,t){const{newShape:s,keptDims:r}=Sl(e),i=e.length,o=n&&i===3&&e[0]===1,a=o?e.slice(1):s,l=!n&&i>1&&!dn(e,t)&&s.length<i||o;return{useSqueezeShape:l,uniformShape:l?a:e,keptDims:r}}function Ep(n,e){const t=JSON.parse(JSON.stringify(n));return t.shapeInfo.logicalShape=e,t}function _p(n,e){return e.map(t=>n[t]).join(", ")}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zce(n,e,t,s){const r=t.map((u,h)=>{const d={logicalShape:u.shape,texShape:u.isUniform?null:u.texData.texShape,isUniform:u.isUniform,isPacked:u.isUniform?!1:u.texData.isPacked,flatOffset:null};return u.texData!=null&&u.texData.slice!=null&&u.texData.slice.flatOffset>0&&(d.flatOffset=u.texData.slice.flatOffset),{name:e.variableNames[h],shapeInfo:d}}),i=r.map(u=>u.shapeInfo),o={logicalShape:s.shape,texShape:s.texData.texShape,isUniform:!1,isPacked:s.texData.isPacked,flatOffset:null},a=Ace(r,o,e),l=Hle(n.gl,a),c=n.createProgram(l);return xe().get("ENGINE_COMPILE_ONLY")?{program:e,fragmentShader:l,source:a,webGLProgram:c,inShapeInfos:i,outShapeInfo:o,variablesLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:(n.buildVao(c),Object.assign({program:e,fragmentShader:l,source:a,webGLProgram:c,inShapeInfos:i,outShapeInfo:o},$$(n,e,c)))}function $$(n,e,t){const s=[],r=[];let i,o,a,l=null,c=null;c=n.getUniformLocation(t,"NAN",!1),xe().getNumber("WEBGL_VERSION")===1&&(l=n.getUniformLocation(t,"INFINITY",!1));const u=!1;for(const h of e.variableNames){const d={name:h,uniform:n.getUniformLocation(t,h,u),offset:n.getUniformLocation(t,`offset${h}`,u)};e.enableShapeUniforms&&(d.shape=n.getUniformLocation(t,`${h}Shape`,u),d.texShape=n.getUniformLocation(t,`${h}TexShape`,u)),s.push(d)}if(e.enableShapeUniforms&&(i=n.getUniformLocation(t,"outShape",u),a=n.getUniformLocation(t,"outShapeStrides",u),o=n.getUniformLocation(t,"outTexShape",u)),e.customUniforms)for(const h of e.customUniforms)r.push(n.getUniformLocation(t,h.name,u));return{variablesLocations:s,customUniformLocations:r,infLoc:l,nanLoc:c,outShapeLocation:i,outShapeStridesLocation:a,outTexShapeLocation:o}}function f3(n,e){if(n.length!==e.length)throw Error(`Binary was compiled with ${n.length} inputs, but was executed with ${e.length} inputs`);n.forEach((t,s)=>{const r=t.logicalShape,i=e[s],o=i.shape;if(!dn(r,o))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${o} must match`);if(t.isUniform&&i.isUniform)return;const a=t.texShape,l=i.isUniform?null:i.texData.texShape;if(!dn(a,l))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${a} and ${l} must match`)})}function eue(n,e,t,s,r){e.program.enableShapeUniforms||(f3(e.inShapeInfos,t),f3([e.outShapeInfo],[s]));const i=s.texData.texture,o=s.texData.texShape;s.texData.isPacked?n.setOutputPackedMatrixTexture(i.texture,o[0],o[1]):n.setOutputMatrixTexture(i.texture,o[0],o[1]),n.setProgram(e.webGLProgram),n.bindVertexArray(e.webGLProgram.vao),xe().getNumber("WEBGL_VERSION")===1&&e.infLoc!==null&&n.gl.uniform1f(e.infLoc,1/0),e.nanLoc!==null&&n.gl.uniform1f(e.nanLoc,NaN);for(let l=0;l<t.length;++l){const c=t[l],{uniform:u,offset:h,shape:d,texShape:f}=e.variablesLocations[l];if(d){const{uniformShape:p}=vS(e.program.packedInputs,c.shape,c.texData.texShape);switch(p.length){case 1:n.gl.uniform1iv(d,new Int32Array(p));break;case 2:n.gl.uniform2iv(d,new Int32Array(p));break;case 3:n.gl.uniform3iv(d,new Int32Array(p));break;case 4:n.gl.uniform4iv(d,new Int32Array(p));break}}if(f&&n.gl.uniform2i(f,c.texData.texShape[0],c.texData.texShape[1]),u!=null){if(c.isUniform){if(ye(c.shape)<2)n.gl.uniform1f(u,c.uniformValues[0]);else{let p=c.uniformValues;p instanceof Float32Array||(p=new Float32Array(p)),n.gl.uniform1fv(u,p)}continue}c.texData.slice!=null&&h!=null&&n.gl.uniform1i(h,c.texData.slice.flatOffset),n.setInputMatrixTexture(c.texData.texture.texture,u,l)}}const a=e.outShapeLocation;if(a)switch(s.shape.length){case 1:n.gl.uniform1iv(a,new Int32Array(s.shape));break;case 2:n.gl.uniform2iv(a,new Int32Array(s.shape));break;case 3:n.gl.uniform3iv(a,new Int32Array(s.shape));break;case 4:n.gl.uniform4iv(a,new Int32Array(s.shape));break}if(e.outShapeStridesLocation){const l=Ot(s.shape);switch(s.shape.length){case 2:n.gl.uniform1iv(e.outShapeStridesLocation,new Int32Array(l));break;case 3:n.gl.uniform2iv(e.outShapeStridesLocation,new Int32Array(l));break;case 4:n.gl.uniform3iv(e.outShapeStridesLocation,new Int32Array(l));break}}if(e.outTexShapeLocation&&n.gl.uniform2i(e.outTexShapeLocation,s.texData.texShape[0],s.texData.texShape[1]),e.program.customUniforms&&r)for(let l=0;l<e.program.customUniforms.length;++l){const c=e.program.customUniforms[l],u=e.customUniformLocations[l],h=r[l];if(c.type==="float")n.gl.uniform1fv(u,h);else if(c.type==="vec2")n.gl.uniform2fv(u,h);else if(c.type==="vec3")n.gl.uniform3fv(u,h);else if(c.type==="vec4")n.gl.uniform4fv(u,h);else if(c.type==="int")n.gl.uniform1iv(u,h);else if(c.type==="ivec2")n.gl.uniform2iv(u,h);else if(c.type==="ivec3")n.gl.uniform3iv(u,h);else if(c.type==="ivec4")n.gl.uniform4iv(u,h);else throw Error(`uniform type ${c.type} is not supported yet.`)}n.executeProgram()}function tue(n,e,t){let s="";e.concat(t).forEach(o=>{const a=o.texData!=null&&o.texData.slice!=null&&o.texData.slice.flatOffset>0;if(n.enableShapeUniforms&&!o.isUniform){const l=o.texData.texShape,{useSqueezeShape:c,uniformShape:u,keptDims:h}=vS(n.packedInputs,o.shape,l);let d="",f="",p="";if(u.length===1&&n.packedInputs){const w=[Math.ceil(l[0]/2),Math.ceil(l[1]/2)];d=`${w[0]>1}_${w[1]>1}`}else if(u.length===2&&!n.packedInputs)f=`${u[0]>1}_${u[1]>1}`;else if(u.length>2&&!n.packedInputs){const w=Ot(u);p=`${w[0]===l[1]}_${w[w.length-1]===l[1]}`}const A=o.shape.length,m=u.length===2&&dn(o.shape,l),g=ye(o.shape)===1,x=bl(o.shape,t.shape),v=!n.packedInputs&&A===t.shape.length&&dn(l,t.texData.texShape),b=n.packedInputs||u.length>2?"":`${l[0]>1}_${l[1]>1}`;s+=`${A}_${v}_${c?h:""}_${u.length}_${g}_${x}_${m}_${d}_${f}_${p}_${b}_${a}`}else{const l=o.isUniform?"uniform":o.texData.texShape;s+=`${o.shape}_${l}_${a}`}});const r=n.userCode;let i=n.constructor.name;return i+="_"+s+"_"+r+`${xe().getNumber("WEBGL_VERSION")}`,i}function Or(n){return xe().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&n<=4}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class nue{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=qm.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=oi();this.outputShape=e,this.enableShapeUniforms=Or(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?G1(["r","c","d"],e):Uh(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        ${t.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class sue{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=qm.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=oi();this.outputShape=e,this.enableShapeUniforms=Or(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?G1(["r","c","d"],e):Uh(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        ${t.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class rue{constructor(e){this.variableNames=["A"],this.outTexUsage=ro.DOWNLOAD;const t=oi();this.outputShape=e,this.userCode=`
      ${R$}

      void main() {
        float x = getAAtOutCoords();
        ${t.output} = encode_float(x);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class iue{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=ro.DOWNLOAD;const t=oi();this.outputShape=e,this.userCode=`
      ${R$}

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        ${t.output} = encode_float(x);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oue={R:0,G:1,B:2,A:3};class p3{constructor(e,t=!1,s="RGBA"){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const r=oi();this.outputShape=e,this.enableShapeUniforms=Or(this.outputShape.length);let i="result";t&&(i="floor(result * 255. + 0.5)");let o="";for(let a=0;a<s.length;a++){const l=s[a];o+=`
          if(offset == ${a}) {
            result = values[${oue[l]}];
          }`}this.userCode=`
      ${this.enableShapeUniforms?bS():xS(e)}

      void main() {
        ivec3 coords = getOutputCoords();
        int flatIndex = getFlatIndex(coords);
        float result = 0.;
        int offset = imod(flatIndex, ${s.length});

        flatIndex = idiv(flatIndex, ${s.length}, 1.);

        int r = flatIndex / texShape[1];
        if (r < texShape[0]) {
          int c = imod(flatIndex, texShape[1]);
          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
          vec4 values = ${r.texture2D}(A, uv);
          ${o}
        }
        ${r.output} = vec4(${i}, 0., 0., 0.);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class aue{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const s=oi();this.outputShape=e,this.enableShapeUniforms=Or(this.outputShape.length);let r="",i="result";t&&(i="floor(result * 255. + 0.5)");for(let o=0;o<=1;o++)for(let a=0;a<=1;a++){const l=o*2+a;r+=`
          localCoords = coords;
          if(localCoords[2] + ${a} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {
          localCoords[2] += ${a};
          if (localCoords[1] + ${o} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {
            localCoords[1] += ${o};

            flatIndex = getFlatIndex(localCoords);
            offset = imod(flatIndex, 4);

            flatIndex = idiv(flatIndex, 4, 1.);

            int r = flatIndex / texShape[1];
            int c = imod(flatIndex, texShape[1]);
            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
            values = ${s.texture2D}(A, uv);

            if (offset == 0) {
              result[${l}] = values[0];
            } else if (offset == 1) {
              result[${l}] = values[1];
            } else if (offset == 2) {
              result[${l}] = values[2];
            } else {
              result[${l}] = values[3];
            }
          }
        }
        `}this.userCode=`
        ${this.enableShapeUniforms?bS():xS(e)}

        void main() {
          ivec3 coords = getOutputCoords();

          vec4 result = vec4(0.);
          int flatIndex, r, c, offset;
          ivec3 localCoords;
          vec2 uv;
          vec4 values;

          ${r}

          ${s.output} = ${i};
        }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lue(n){const e=oi(),t=`${e.version}
    precision highp float;
    ${e.attribute} vec3 clipSpacePos;
    ${e.attribute} vec2 uv;
    ${e.varyingVs} vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`;return Wle(n,t)}function cue(n){const e=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return Xle(n,e)}function uue(n){const e=new Uint16Array([0,1,2,2,1,3]);return Kle(n,e)}function VA(n,e,t,s,r,i){Zle(e,t);const o=Jle(n),a=n.TEXTURE_2D;return wt(n,()=>n.bindTexture(a,o)),wt(n,()=>n.texParameteri(a,n.TEXTURE_WRAP_S,n.CLAMP_TO_EDGE)),wt(n,()=>n.texParameteri(a,n.TEXTURE_WRAP_T,n.CLAMP_TO_EDGE)),wt(n,()=>n.texParameteri(a,n.TEXTURE_MIN_FILTER,n.NEAREST)),wt(n,()=>n.texParameteri(a,n.TEXTURE_MAG_FILTER,n.NEAREST)),xe().getNumber("WEBGL_VERSION")===1?wt(n,()=>n.texImage2D(a,0,s,e,t,0,r,i,null)):wt(n,()=>n.texStorage2D(a,1,s,e,t)),wt(n,()=>n.bindTexture(n.TEXTURE_2D,null)),{texture:o,texShape:[t,e]}}function P$(n){return n.internalFormatFloat}function hue(n,e,t,s){const[r,i]=zA(e,t);return VA(n,r,i,P$(s),s.textureFormatFloat,n.FLOAT)}function L$(n){return n.internalFormatHalfFloat}function due(n,e,t,s){const[r,i]=zA(e,t);return VA(n,r,i,L$(s),s.textureFormatFloat,s.textureTypeHalfFloat)}function O$(n){return n.downloadTextureFormat}function fue(n,e,t,s){const[r,i]=zA(e,t);return VA(n,r,i,O$(s),n.RGBA,n.UNSIGNED_BYTE)}function Q$(n){return n.internalFormatPackedFloat}function pue(n,e,t,s){const[r,i]=Ip(e,t);return VA(n,r,i,Q$(s),n.RGBA,n.FLOAT)}function U$(n){return n.internalFormatPackedHalfFloat}function mue(n,e,t,s){const[r,i]=Ip(e,t);return VA(n,r,i,U$(s),n.RGBA,s.textureTypeHalfFloat)}function gue(n,e,t){return wt(n,()=>n.bindBuffer(n.ARRAY_BUFFER,t)),u3(n,e,"clipSpacePos",t,3,20,0)&&u3(n,e,"uv",t,2,20,12)}function Aue(n,e,t,s,r,i){wt(n,()=>n.bindTexture(n.TEXTURE_2D,e));let o,a,l;r instanceof Uint8Array?(o=new Uint8Array(t*s*4),a=n.UNSIGNED_BYTE,l=n.RGBA):(o=new Float32Array(t*s*4),a=n.FLOAT,l=i.internalFormatPackedFloat),o.set(r),xe().getNumber("WEBGL_VERSION")===2?wt(n,()=>n.texSubImage2D(n.TEXTURE_2D,0,0,0,t,s,n.RGBA,a,o)):wt(n,()=>n.texImage2D(n.TEXTURE_2D,0,l,t,s,0,n.RGBA,a,o)),wt(n,()=>n.bindTexture(n.TEXTURE_2D,null))}function yue(n,e,t){wt(n,()=>n.bindTexture(n.TEXTURE_2D,e)),t.data instanceof Uint8Array?xe().getNumber("WEBGL_VERSION")===2?wt(n,()=>n.texSubImage2D(n.TEXTURE_2D,0,0,0,t.width,t.height,n.RGBA,n.UNSIGNED_BYTE,t.data)):wt(n,()=>n.texImage2D(n.TEXTURE_2D,0,n.RGBA,t.width,t.height,0,n.RGBA,n.UNSIGNED_BYTE,t.data)):xe().getNumber("WEBGL_VERSION")===2?wt(n,()=>n.texSubImage2D(n.TEXTURE_2D,0,0,0,n.RGBA,n.UNSIGNED_BYTE,t)):wt(n,()=>n.texImage2D(n.TEXTURE_2D,0,n.RGBA,n.RGBA,n.UNSIGNED_BYTE,t)),wt(n,()=>n.bindTexture(n.TEXTURE_2D,null))}function xue(n,e,t,s){const r=n.createBuffer();wt(n,()=>n.bindBuffer(n.PIXEL_PACK_BUFFER,r));const a=4*4*e*t;return wt(n,()=>n.bufferData(n.PIXEL_PACK_BUFFER,a,n.STREAM_READ)),wt(n,()=>n.readPixels(0,0,t,e,n.RGBA,n.FLOAT,0)),wt(n,()=>n.bindBuffer(n.PIXEL_PACK_BUFFER,null)),r}function bue(n,e,t){const s=n,r=new Float32Array(t);return s.bindBuffer(s.PIXEL_PACK_BUFFER,e),s.getBufferSubData(s.PIXEL_PACK_BUFFER,0,r),s.bindBuffer(s.PIXEL_PACK_BUFFER,null),r}function vue(n,e,t,s){const[r,i]=zA(e,t),o=4,a=new Uint8Array(Lle(e*t,o));return wt(n,()=>n.readPixels(0,0,r,i,s.downloadTextureFormat,n.UNSIGNED_BYTE,a)),new Float32Array(a.buffer)}function Cue(n,e,t,s,r,i,o,a){const l=n,c=new Float32Array(Ole(i,o));return l.bindBuffer(l.PIXEL_PACK_BUFFER,e),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,c),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),c}function Iue(n,e,t){const s=new Float32Array(e*t*4);return wt(n,()=>n.readPixels(0,0,t,e,n.RGBA,n.FLOAT,s)),s}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class db{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];const t=xe().getNumber("WEBGL_VERSION");if(e!=null?(this.gl=e,Fle(t,e)):this.gl=na(t),e=this.gl,xe().getNumber("WEBGL_VERSION")===2){const i=e;this.createVertexArray=()=>wt(i,()=>i.createVertexArray()),this.bindVertexArray=o=>wt(i,()=>i.bindVertexArray(o)),this.deleteVertexArray=o=>wt(i,()=>i.deleteVertexArray(o)),this.getVertexArray=()=>wt(i,()=>i.getParameter(i.VERTEX_ARRAY_BINDING))}else if(e!=null){const i=e.getExtension("OES_vertex_array_object");if(i==null)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>wt(e,()=>i.createVertexArrayOES()),this.bindVertexArray=o=>wt(e,()=>i.bindVertexArrayOES(o)),this.deleteVertexArray=o=>wt(e,()=>i.deleteVertexArrayOES(o)),this.getVertexArray=()=>wt(e,()=>e.getParameter(i.VERTEX_ARRAY_BINDING_OES))}let s="WEBGL_color_buffer_float";const r="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),xe().getNumber("WEBGL_VERSION")===1){const i="OES_texture_float",o="OES_texture_half_float";if(this.textureFloatExtension=ky(this.gl,i),wo(this.gl,o))this.textureHalfFloatExtension=ky(this.gl,o);else if(xe().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(s),wo(this.gl,r))this.colorBufferHalfFloatExtension=ky(this.gl,r);else if(xe().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(s="EXT_color_buffer_float",wo(this.gl,s))this.colorBufferFloatExtension=this.gl.getExtension(s);else if(wo(this.gl,r))this.colorBufferHalfFloatExtension=this.gl.getExtension(r);else throw new Error("GL context does not support color renderable floats");this.vertexBuffer=cue(this.gl),this.indexBuffer=uue(this.gl),this.framebuffer=ece(this.gl),this.textureConfig=yS(this.gl,this.textureHalfFloatExtension)}get debug(){return xe().getBool("DEBUG")}dispose(){if(this.disposed)return;this.program!=null&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),this.outputTexture!=null&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;wt(e,()=>e.finish()),wt(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),wt(e,()=>e.deleteFramebuffer(this.framebuffer)),wt(e,()=>e.bindBuffer(e.ARRAY_BUFFER,null)),wt(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null)),wt(e,()=>e.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),hue(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),due(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),fue(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),yue(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,s,r){this.throwIfDisposed(),Aue(this.gl,e,t,s,r,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),mue(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),pue(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(h3(this.gl,this.framebuffer),this.outputTexture=null),wt(this.gl,()=>this.gl.deleteTexture(e))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,s){return this.downloadMatrixDriver(e,()=>vue(this.gl,t,s,this.textureConfig))}downloadPackedMatrixFromBuffer(e,t,s,r,i,o){return Cue(this.gl,e,t,s,r,i,o,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return bue(this.gl,e,t)}createBufferFromTexture(e,t,s){this.bindTextureToFrameBuffer(e);const r=xue(this.gl,t,s,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,s;if(xe().getBool("WEBGL_FENCE_API_ENABLED")){const r=e,i=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),s=()=>{const o=r.clientWaitSync(i,0,0);return o===r.ALREADY_SIGNALED||o===r.CONDITION_SATISFIED},t=i}else xe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),s=()=>this.isQueryAvailable(t,xe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):s=()=>!0;return{query:t,isFencePassed:s}}downloadMatrixFromPackedTexture(e,t,s){return this.downloadMatrixDriver(e,()=>Iue(this.gl,t,s))}createProgram(e){this.throwIfDisposed();const t=this.gl;this.vertexShader==null&&(this.vertexShader=lue(t));const s=Yle(t);wt(t,()=>t.attachShader(s,this.vertexShader)),wt(t,()=>t.attachShader(s,e)),jle(t,s);const r=Object.assign(s,{vao:this.createVertexArray()});return this.debug&&lb(t,r),r}buildVao(e){this.setProgram(e),this.bindVertexArray(e.vao);const t=this.gl;wt(t,()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this.indexBuffer)),gue(t,e,this.vertexBuffer)}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),e!=null&&(wt(this.gl,()=>this.gl.deleteProgram(e)),this.deleteVertexArray(e.vao))}setProgram(e){this.throwIfDisposed(),this.program=e,this.program!=null&&this.debug&&lb(this.gl,this.program),wt(this.gl,()=>this.gl.useProgram(e))}getUniformLocation(e,t,s=!0){return this.throwIfDisposed(),s?nce(this.gl,e,t):sce(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),wt(this.gl,()=>this.gl.getAttribLocation(e,t))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,s){this.throwIfDisposed(),this.throwIfNoProgram(),rce(this.gl,e,t,s)}setOutputMatrixTexture(e,t,s){this.setOutputMatrixTextureDriver(e,s,t)}setOutputPackedMatrixTexture(e,t,s){this.throwIfDisposed();const[r,i]=Ip(t,s);this.setOutputMatrixTextureDriver(e,r,i)}setOutputMatrixWriteRegion(e,t,s,r){this.setOutputMatrixWriteRegionDriver(s,e,r,t)}setOutputPackedMatrixWriteRegion(e,t,s,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){this.program!=null&&lb(this.gl,this.program),Ny(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;if(this.debug){const t=this.getVertexArray();console.assert(t===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}wt(e,()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),wt(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return this.disjointQueryTimerExtension==null&&(this.disjointQueryTimerExtension=ky(this.gl,xe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(xe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){const s=this.gl,r=this.getQueryTimerExtensionWebGL2(),i=s.createQuery();return s.beginQuery(r.TIME_ELAPSED_EXT,i),i}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(xe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){const t=this.gl,s=this.getQueryTimerExtensionWebGL2();t.endQuery(s.TIME_ELAPSED_EXT);return}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await Pv(()=>this.disposed||this.isQueryAvailable(e,xe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(e,xe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(t===0)return null;if(t===2){const s=this.gl;return s.getQueryParameter(e,s.QUERY_RESULT)/1e6}else{const s=this.getQueryTimerExtensionWebGL1();return s.getQueryObjectEXT(e,s.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(t===0)return!0;if(t===2){const s=this.gl,r=this.getQueryTimerExtensionWebGL2(),i=s.getQueryParameter(e,s.QUERY_RESULT_AVAILABLE);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(r.GPU_DISJOINT_EXT)),i&&!this.disjoint}else{const s=this.getQueryTimerExtensionWebGL1(),r=s.getQueryObjectEXT(e,s.QUERY_RESULT_AVAILABLE_EXT);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(s.GPU_DISJOINT_EXT)),r&&!this.disjoint}}pollFence(e){return new Promise(t=>{this.addItemToPoll(()=>e.isFencePassed(),()=>t())})}pollItems(){const e=wue(this.itemsToPoll.map(t=>t.isDoneFn));for(let t=0;t<=e;++t){const{resolveFn:s}=this.itemsToPoll[t];s()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){if(this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1)return;let s;"setTimeoutCustom"in xe().platform&&(s=xe().platform.setTimeoutCustom.bind(xe().platform)),Pv(()=>(this.pollItems(),this.itemsToPoll.length===0),()=>0,null,s)}bindTextureToFrameBuffer(e){this.throwIfDisposed(),cb(this.gl,e,this.framebuffer),this.debug&&Ny(this.gl)}unbindTextureToFrameBuffer(){this.outputTexture!=null?(cb(this.gl,this.outputTexture,this.framebuffer),this.debug&&Ny(this.gl)):h3(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const s=t();return this.unbindTextureToFrameBuffer(),s}setOutputMatrixTextureDriver(e,t,s){this.throwIfDisposed();const r=this.gl;cb(r,e,this.framebuffer),this.debug&&Ny(r),this.outputTexture=e,wt(r,()=>r.viewport(0,0,t,s)),wt(r,()=>r.scissor(0,0,t,s))}setOutputMatrixWriteRegionDriver(e,t,s,r){this.throwIfDisposed(),wt(this.gl,()=>this.gl.scissor(e,t,s,r))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(this.program==null)throw new Error("No GPU program is currently set.")}}function wue(n){let e=0;for(;e<n.length&&n[e]();++e);return e-1}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{addImpl:Sue,bincountImpl:z$,bincountReduceImpl:Eue,bitwiseAndImpl:_ue,castImpl:Tue,ceilImpl:Bue,concatImpl:kue,equalImpl:Nue,expImpl:Rue,expm1Impl:Mue,floorImpl:Due,gatherNdImpl:Fue,gatherV2Impl:$ue,greaterImpl:Pue,greaterEqualImpl:Lue,lessImpl:Oue,lessEqualImpl:Que,linSpaceImpl:Uue,logImpl:zue,maxImpl:Gue,maximumImpl:Vue,minimumImpl:Wue,multiplyImpl:Hue,negImpl:que,notEqualImpl:Yue,prodImpl:jue,raggedGatherImpl:Xue,raggedRangeImpl:Kue,raggedTensorToTensorImpl:Jue,rangeImpl:Zue,rsqrtImpl:ehe,scatterImpl:the,sigmoidImpl:nhe,simpleAbsImpl:G$,sliceImpl:she,sparseFillEmptyRowsImpl:rhe,sparseReshapeImpl:ihe,sparseSegmentReductionImpl:V$,sqrtImpl:ohe,staticRegexReplaceImpl:ahe,stridedSliceImpl:lhe,stringNGramsImpl:che,stringSplitImpl:uhe,stringToHashBucketFastImpl:hhe,subImpl:dhe,tileImpl:fhe,topKImpl:phe,transposeImpl:CS,uniqueImpl:mhe}=p$;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function W$(n,e){return["x","y","z","w","u","v"].slice(0,e).map(t=>`${n}.${t}`)}function ti(n,e){return e===1?[n]:W$(n,e)}function ghe(n,e){if(n===1)return"rc";let t="";for(let s=0;s<n;s++)t+=e[s],s<n-1&&(t+=",");return t}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ahe{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=Or(this.outputShape.length),this.rank===0)this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `;else{const t=ti("rc",this.rank),s=ns(this.rank),r=this.getOutOfBoundsCondition(t),i=this.getSetup(t),o=this.getOutput(t);this.userCode=`
        void main() {
          ${s} rc = getOutputCoords();

          if(${r}) {
            setOutput(vec4(0));
          } else {
            ${i}

            setOutput(vec4(${o}));
          }
        }
      `}}getSourceCoordsArr(e){const t=[];for(let s=0;s<=1;s++)for(let r=0;r<=1;r++){let i=`${s===0?"r":"rp1"}, ${r===0?"c":"cp1"}`;for(let o=2;o<this.rank;o++)i=`${e[e.length-1-o]},`+i;t.push(i)}return t}getOutOfBoundsCondition(e){if(this.rank===1)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let s=this.rank-2;s<this.rank;s++)t+=`${e[s]} >= ${this.enableShapeUniforms?`outShape[${s}]`:this.outputShape[s]}`,s<this.rank-1&&(t+="||");return t}getSetup(e){if(this.rank===1)return"";const t=e.slice(-2),s=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],r=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`
      int r = ${t[0]};
      int c = ${t[1]};
      int rp1 = r + 1;
      int cp1 = c + 1;

      bool cEdge = cp1 >= ${s};
      bool rEdge = rp1 >= ${r};
    `}getOutput(e){const t=this.getSourceCoordsArr(e);return this.rank===1?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${t[0]}),
            cEdge ? 0. : getA(${t[1]}),
            rEdge ? 0. : getA(${t[2]}),
            rEdge || cEdge ? 0. : getA(${t[3]})`}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class H${constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=Or(this.outputShape.length);let s="";for(let r=0;r<4;r++){let i="thisRC = rc;";r%2===1&&(i+="thisRC.z += 1;"),r>1&&(i+="thisRC.y += 1;"),s+=`
        ${i}
        ${r>0?"if(thisRC.y < rows && thisRC.z < cols){":""}
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${r}] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        ${r>0?"}":""}
      `}this.userCode=`
      ${yhe(t,this.enableShapeUniforms)}
      ${this.enableShapeUniforms?bS():xS(e)}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};
        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};

        ${s}

        setOutput(result);
      }
    `}}function yhe(n,e){return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${e?gce(["r","c","d"],"inputShape"):Uh(["r","c","d"],n)}
      return ivec3(r, c, d);
    }
  `}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let xhe=class{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.usedTextures={},this.logEnabled=!1}acquireTexture(e,t,s){const r=g3(t,s),i=A3(e,r,s);i in this.freeTextures||(this.freeTextures[i]=[]),i in this.usedTextures||(this.usedTextures[i]=[]);const o=m3(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,s);if(this.freeTextures[i].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=o,this.log();const l=this.freeTextures[i].pop();return this.usedTextures[i].push(l),l}let a;return r===Sr.PACKED_2X2_FLOAT32?a=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):r===Sr.PACKED_2X2_FLOAT16?a=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):r===Sr.UNPACKED_FLOAT32?a=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):r===Sr.UNPACKED_FLOAT16?a=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):r===Sr.PACKED_4X1_UNSIGNED_BYTE&&(a=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[i].push(a),this.numUsedTextures++,this._numBytesAllocated+=o,this.log(),a}releaseTexture(e,t,s,r){if(this.freeTextures==null)return;const i=g3(s,r),o=A3(t,i,r);o in this.freeTextures||(this.freeTextures[o]=[]);const a=m3(t,i,this.gpgpu.gl,this.gpgpu.textureConfig,r),l=xe().getNumber("WEBGL_DELETE_TEXTURE_THRESHOLD");l!==-1&&this._numBytesAllocated>l?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=a):(this.freeTextures[o].push(e),this.numFreeTextures++,this._numBytesFree+=a),this.numUsedTextures--;const c=this.usedTextures[o],u=c&&c.indexOf(e);if(u==null||u<0)throw new Error("Cannot release a texture that was never provided by this texture manager");c[u]=c[c.length-1],c.pop(),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(this.freeTextures!=null){for(const e in this.freeTextures)this.freeTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t.texture)});for(const e in this.usedTextures)this.usedTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t.texture)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}};function bhe(n,e){const t=n;if(e===t.R32F)return 4;if(e===t.R16F)return 2;if(e===t.RGBA32F)return 16;if(e===n.RGBA)return 16;if(e===t.RGBA16F)return 8;if(e===t.RGBA8)return 4;throw new Error(`Unknown internal format ${e}`)}function m3(n,e,t,s,r){const i=vhe(e,s);let o;if(r){const[l,c]=Ip(n[0],n[1]);o=l*c}else{const[l,c]=zA(n[0],n[1]);o=l*c}const a=bhe(t,i);return o*a}function vhe(n,e){switch(n){case Sr.PACKED_2X2_FLOAT32:return Q$(e);case Sr.PACKED_2X2_FLOAT16:return U$(e);case Sr.UNPACKED_FLOAT32:return P$(e);case Sr.UNPACKED_FLOAT16:return L$(e);case Sr.PACKED_4X1_UNSIGNED_BYTE:return O$(e);default:throw new Error(`Unknown physical texture type ${n}`)}}function Che(n){return xe().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?n?Sr.PACKED_2X2_FLOAT32:Sr.UNPACKED_FLOAT32:n?Sr.PACKED_2X2_FLOAT16:Sr.UNPACKED_FLOAT16}function g3(n,e){if(n===ro.UPLOAD)return Sr.PACKED_2X2_FLOAT32;if(n===ro.RENDER||n==null)return Che(e);if(n===ro.DOWNLOAD||n===ro.PIXELS)return Sr.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${n}`)}function A3(n,e,t){return`${n[0]}_${n[1]}_${e}_${t}`}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let va=class{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=Or(this.outputShape.length),this.userCode=`
      float unaryOperation(float x) {
        ${t}
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `}};const Bo="if (isnan(x)) return x;",Ihe="return x;",y3="return abs(x);",whe="return (x >= 0.0) ? x : (exp(x) - 1.0);",She=Bo+`
  return (x < 0.0) ? 0.0 : x;
`,Ehe=Bo+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,zl="return x;",_he="return 1.0 / (1.0 + exp(-1.0 * x));";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const The="return x;",Bhe=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,khe=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Nhe=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Rhe="return 1.0 / (1.0 + exp(-1.0 * x));";class Hl{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=Or(this.outputShape.length),this.userCode=`
      vec4 unaryOperation(vec4 x) {
        ${t}
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Mhe{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=Or(this.outputShape.length);const t=e.length,s=ti("rc",t),r=ns(t),i=ghe(t,s),o=s.slice(-2),a=t<=1?"rc":`vec2(${o.join(",")})`;this.userCode=`
      void main() {
        ${r} rc = getOutputCoords();
        vec4 packedInput = getA(${i});

        setOutput(getChannel(packedInput, ${a}));
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Dhe=n1,Fhe=1e-7,$he=1e-4,Dy={};function Phe(n){return n in Dy||(Dy[n]={}),Dy[n]}const Lhe=xe().getNumber("CPU_HANDOFF_SIZE_THRESHOLD"),Ohe=600;function Qhe(){return xe().global.screen==null?1024:xe().global.screen.height*xe().global.screen.width*window.devicePixelRatio*Ohe/1024/1024}class V1 extends og{nextDataId(){return V1.nextDataId++}constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!xe().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(e!=null){if(e instanceof db)t=e;else{const s=na(xe().getNumber("WEBGL_VERSION"),e);t=new db(s)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const s=na(xe().getNumber("WEBGL_VERSION"));t=new db(s),this.binaryCache=Phe(xe().getNumber("WEBGL_VERSION")),this.gpgpuCreatedLocally=!0}this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new xhe(this.gpgpu),this.numMBBeforeWarning=Qhe(),this.texData=new px(this,lr())}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(e,t,s,r,i,o){const a=this.makeTensorInfo(t,s),l=this.texData.get(a.dataId);l.isPacked=!1,l.texture={texture:e,texShape:[r,i]},l.texShape=[r,i];const c=Ry(t),u=new p3(c,!1,o),h=this.runWebGLProgram(u,[a],s,[[r,i]]);return h.shape=t,l.texture=null,this.disposeIntermediateTensorInfo(a),h.dataId}write(e,t,s){if((xe().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||xe().getBool("DEBUG"))&&this.checkNumericalProblems(e),s==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={id:this.nextDataId()};return this.texData.set(r,{shape:t,dtype:s,values:e,usage:ro.UPLOAD,refCount:1}),r}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){const t=this.texData.get(e);t.refCount++}decRef(e){if(this.texData.has(e)){const t=this.texData.get(e);t.refCount--}}move(e,t,s,r,i){if(xe().getBool("DEBUG")&&this.checkNumericalProblems(t),r==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:s,dtype:r,values:t,usage:ro.UPLOAD,refCount:i})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:s,dtype:r,complexTensorInfos:i,slice:o,shape:a,isPacked:l}=t;if(o!=null){let d;l?d=new Hl(a,zl):d=new va(a,zl);const f=this.runWebGLProgram(d,[{dataId:e,shape:a,dtype:r}],r),p=this.readSync(f.dataId);return this.disposeIntermediateTensorInfo(f),p}if(s!=null)return this.convertAndCacheOnCPU(e);if(r==="string")return s;const c=this.activeTimers!=null;let u;c&&(u=Kr());let h;if(r==="complex64"){const d=this.readSync(i.real.dataId),f=this.readSync(i.imag.dataId);h=Jo(d,f)}else h=this.getValuesFromTexture(e);return c&&(this.downloadWaitMs+=Kr()-u),this.convertAndCacheOnCPU(e,h)}async read(e){if(this.pendingRead.has(e)){const p=this.pendingRead.get(e);return new Promise(A=>p.push(A))}const t=this.texData.get(e),{values:s,shape:r,slice:i,dtype:o,complexTensorInfos:a,isPacked:l}=t;if(i!=null){let p;l?p=new Hl(r,zl):p=new va(r,zl);const A=this.runWebGLProgram(p,[{dataId:e,shape:r,dtype:o}],o),m=this.read(A.dataId);return this.disposeIntermediateTensorInfo(A),m}if(s!=null)return this.convertAndCacheOnCPU(e);if(xe().getBool("DEBUG")&&!xe().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&xe().getNumber("WEBGL_VERSION")===2)throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let c=null,u;if(o!=="complex64"&&xe().get("WEBGL_BUFFER_SUPPORTED")){u=this.decode(e);const p=this.texData.get(u.dataId);c=this.gpgpu.createBufferFromTexture(p.texture.texture,...By(r))}this.pendingRead.set(e,[]),o!=="complex64"&&await this.gpgpu.createAndWaitForFence();let h;if(o==="complex64"){const p=await Promise.all([this.read(a.real.dataId),this.read(a.imag.dataId)]),A=p[0],m=p[1];h=Jo(A,m)}else if(c==null)h=this.getValuesFromTexture(e);else{const p=ye(r);h=this.gpgpu.downloadFloat32MatrixFromBuffer(c,p)}if(u!=null&&this.disposeIntermediateTensorInfo(u),c!=null){const p=this.gpgpu.gl;wt(p,()=>p.deleteBuffer(c))}const d=this.convertAndCacheOnCPU(e,h),f=this.pendingRead.get(e);return this.pendingRead.delete(e),f.forEach(p=>p(d)),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&lr().removeDataId(e,this),this.pendingDeletes--),d}readToGPU(e,t={}){const s=this.texData.get(e),{values:r,shape:i,slice:o,dtype:a,isPacked:l,texture:c}=s;if(a==="complex64")throw new Error("Does not support reading texture for complex64 dtype.");if(o!=null){let f;l?f=new Hl(i,zl):f=new va(i,zl);const p=this.runWebGLProgram(f,[{dataId:e,shape:i,dtype:a}],a),A=this.readToGPU(p,t);return this.disposeIntermediateTensorInfo(p),A}if(c==null)throw r!=null?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const u=this.decode(e,t.customTexShape),h=lr().makeTensorFromTensorInfo(u),d=this.texData.get(u.dataId);return Object.assign({tensorRef:h},d.texture)}bufferSync(e){const t=this.readSync(e.dataId);if(e.dtype==="string")try{const s=t.map(r=>Eo(r));return rn(e.shape,e.dtype,s)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return rn(e.shape,e.dtype,t)}checkNumericalProblems(e){if(e!=null)for(let t=0;t<e.length;t++){const s=e[t];if(!Gle(s))throw xe().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${s} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${s} cannot be represented on this device.`)}}getValuesFromTexture(e){const{shape:t,dtype:s,isPacked:r}=this.texData.get(e),i=ye(t);if(xe().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const d=this.decode(e),f=this.texData.get(d.dataId),p=this.gpgpu.downloadMatrixFromPackedTexture(f.texture.texture,...By(t)).subarray(0,i);return this.disposeIntermediateTensorInfo(d),p}const o=xe().getBool("WEBGL_PACK")&&r===!0,a=o?Ry(t):t,l=o?new iue(a):new rue(a),c=this.runWebGLProgram(l,[{shape:a,dtype:s,dataId:e}],"float32"),u=this.texData.get(c.dataId),h=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(u.texture.texture,u.texShape[0],u.texShape[1]).subarray(0,i);return this.disposeIntermediateTensorInfo(c),h}timerAvailable(){return xe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){const t=this.activeTimers,s=[];let r=!1;this.programTimersStack==null?(this.programTimersStack=s,r=!0):this.activeTimers.push(s),this.activeTimers=s,e();const i=_o(this.activeTimers.map(l=>l.query)).filter(l=>l!=null),o=_o(this.activeTimers.map(l=>l.name)).filter(l=>l!=null);this.activeTimers=t,r&&(this.programTimersStack=null);const a={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(xe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const l=await Promise.all(i);a.kernelMs=cI(l),a.getExtraProfileInfo=()=>l.map((c,u)=>({name:o[u],ms:c})).map(c=>`${c.name}: ${c.ms}`).join(", ")}else a.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,a})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return xe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:Kr(),endMs:null}}endTimer(e){return xe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=Kr(),e)}async getQueryTime(e){if(xe().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:s}=this.texData.get(e);return s!=null&&(this.disposeData(s.real.dataId,t),this.disposeData(s.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:s,texShape:r,usage:i,isPacked:o,slice:a}=this.texData.get(e),l=a&&a.origDataId||e,c=this.dataRefCount.get(l);c>1?this.dataRefCount.set(l,c-1):(this.dataRefCount.delete(l),t!=null&&(this.numBytesInGPU-=this.computeBytes(r,s),this.textureManager.releaseTexture(t,r,i,o)));const u=this.texData.get(e);u.texture=null,u.texShape=null,u.isPacked=!1,u.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=Lhe){return xe().getBool("WEBGL_CPU_FORWARD")&&e.every(s=>this.texData.get(s.dataId).texture==null&&ye(s.shape)<t)}getGPGPUContext(){return this.gpgpu}where(e){to("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return Dhe(e.shape,t)}packedUnaryOp(e,t,s){const r=new Hl(e.shape,t),i=this.compileAndRun(r,[e],s);return lr().makeTensorFromTensorInfo(i)}abs(e){if(this.shouldExecuteOnCPU([e])&&e.dtype!=="complex64"){const r=G$(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,r)}if(xe().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,y3,e.dtype);const t=new va(e.shape,y3),s=this.compileAndRun(t,[e]);return lr().makeTensorFromTensorInfo(s)}makeTensorInfo(e,t,s){let r;if(t==="string"&&s!=null&&s.length>0&&Wo(s[0])){const i=s.map(o=>Yo(o));r=this.write(i,e,t)}else r=this.write(s,e,t);return this.texData.get(r).usage=null,{dataId:r,shape:e,dtype:t}}makeOutput(e,t,s){return lr().makeTensorFromTensorInfo(this.makeTensorInfo(e,t,s),this)}unpackTensor(e){const t=new Mhe(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new Ahe(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){const s=[rf(e.shape),...of(e.shape)],r={dtype:e.dtype,shape:s,dataId:e.dataId},i=[rf(t),...of(t)],o=new H$(i,s),a=!0,l=[s],c=this.runWebGLProgram(o,[r],e.dtype,l,a);return{dataId:c.dataId,shape:t,dtype:c.dtype}}decode(e,t){const s=this.texData.get(e),{isPacked:r,shape:i,dtype:o}=s;if(t!=null){const d=ye(i),f=t[0]*t[1]*4;z(d<=f,()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data.")}const a=Ry(i);let l;r?l=new sue(a):l=new nue(a);const c=!0,u=[t??By(a)],h=this.runWebGLProgram(l,[{shape:a,dtype:o,dataId:e}],o,u,c,t);return{dtype:o,shape:i,dataId:h.dataId}}runWebGLProgram(e,t,s,r,i=!1,o){const a=this.makeTensorInfo(e.outputShape,s),l=this.texData.get(a.dataId);if(e.packedOutput&&(l.isPacked=!0),e.outPackingScheme===qm.DENSE){const g=o??By(e.outputShape);l.texShape=g.map(x=>x*2)}if(e.outTexUsage!=null&&(l.usage=e.outTexUsage),ye(a.shape)===0)return l.values=Ws(a.dtype,0),a;const c=[],u=t.map(g=>{if(g.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let x=this.texData.get(g.dataId);if(x.texture==null){if(!e.packedInputs&&ye(g.shape)<=xe().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:g.shape,texData:null,isUniform:!0,uniformValues:x.values};e.packedInputs&&(x.isPacked=!0,x.shape=g.shape)}if(this.uploadToGPU(g.dataId),!!x.isPacked!=!!e.packedInputs)g=x.isPacked?this.unpackTensor(g):this.packTensor(g),c.push(g),x=this.texData.get(g.dataId);else if(x.isPacked&&!G0(x.shape,g.shape)){const v=g,b=g.shape;g.shape=x.shape,g=this.packedReshape(g,b),c.push(g),x=this.texData.get(g.dataId),v.shape=b}return{shape:g.shape,texData:x,isUniform:!1}});this.uploadToGPU(a.dataId);const h={shape:a.shape,texData:l,isUniform:!1},d=tue(e,u,h),f=this.getAndSaveBinary(d,()=>Zce(this.gpgpu,e,u,h)),p=this.activeTimers!=null;let A;p&&(A=this.startTimer()),xe().get("ENGINE_COMPILE_ONLY")||eue(this.gpgpu,f,u,h,r),c.forEach(g=>this.disposeIntermediateTensorInfo(g)),p&&(A=this.endTimer(A),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(A)}));const m=xe().getNumber("WEBGL_FLUSH_THRESHOLD");if(m>0){const g=Kr();g-this.lastGlFlushTime>m&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=g)}if(!xe().getBool("WEBGL_LAZILY_UNPACK")&&l.isPacked&&i===!1){const g=this.unpackTensor(a);return this.disposeIntermediateTensorInfo(a),g}return a}compileAndRun(e,t,s,r,i=!1){return s=s||t[0].dtype,this.runWebGLProgram(e,t,s,r,i)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(xe().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(t=>{this.gpgpu.deleteProgram(this.binaryCache[t].webGLProgram),delete this.binaryCache[t]}),this.textureManager.dispose(),this.canvas!=null&&typeof HTMLCanvasElement<"u"&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return this.floatPrecisionValue==null&&(this.floatPrecisionValue=ue(()=>{if(!xe().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=xe().getBool("DEBUG");xe().set("DEBUG",!1);const t=this.abs(Bt(1e-8)).dataSync()[0];if(xe().set("DEBUG",e),t>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return this.floatPrecision()===32?Fhe:$he}uploadToGPU(e){const t=this.texData.get(e),{shape:s,dtype:r,values:i,texture:o,usage:a,isPacked:l}=t;if(o!=null)return;const c=this.activeTimers!=null;let u;c&&(u=Kr());let h=t.texShape;if(h==null&&(h=ace(s,l),t.texShape=h),i!=null){const d=Ry(s);let f,p=h[1],A=h[0];const m=i instanceof Uint8Array||i instanceof Uint8ClampedArray;(l||!m)&&([p,A]=Ip(h[0],h[1])),l?f=new aue(d,m):f=new p3(d,m);const g=m?[A,p]:h,x=this.makeTensorInfo(g,r),v=this.texData.get(x.dataId);m?v.usage=ro.PIXELS:v.usage=ro.UPLOAD,v.texShape=g,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(x.dataId),p,A,i);const b=[[A,p]],_=this.runWebGLProgram(f,[x],r,b,!0),N=this.texData.get(_.dataId);t.texShape=N.texShape,t.isPacked=N.isPacked,t.usage=N.usage,xe().get("ENGINE_COMPILE_ONLY")?this.disposeData(_.dataId):(t.texture=N.texture,t.values=null,this.texData.delete(_.dataId)),this.disposeIntermediateTensorInfo(x),c&&(this.uploadWaitMs+=Kr()-u)}else{const d=this.acquireTexture(h,a,r,l);t.texture=d}}convertAndCacheOnCPU(e,t){const s=this.texData.get(e),{dtype:r}=s;return t!=null&&(s.values=Uhe(t,r)),s.values}acquireTexture(e,t,s,r){if(this.numBytesInGPU+=this.computeBytes(e,s),!this.warnedAboutMemory&&this.numBytesInGPU>this.numMBBeforeWarning*1024*1024){const i=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${i} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,r)}computeBytes(e,t){return e[0]*e[1]*Nm(t)}checkCompileCompletion(){for(const[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){const e=[];if(this.gpgpu.parallelCompilationExtension){for(const[,t]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(t));return Promise.all(e)}else{for(const[,t]of Object.entries(this.binaryCache)){const s=new Promise(r=>{try{this.checkCompletion_(t),r(!0)}catch(i){throw i}});e.push(s)}return Promise.all(e)}}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await $w(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS)===!1)throw console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS)===!1?(N$(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.")):new Error("Failed to link vertex and fragment shaders.");return!0}getUniformLocations(){for(const e of Object.values(this.binaryCache)){this.gpgpu.buildVao(e.webGLProgram);const{variablesLocations:t,customUniformLocations:s,infLoc:r,nanLoc:i,outShapeLocation:o,outShapeStridesLocation:a,outTexShapeLocation:l}=$$(this.gpgpu,e.program,e.webGLProgram);e.variablesLocations=t,e.customUniformLocations=s,e.infLoc=r,e.nanLoc=i,e.outShapeLocation=o,e.outShapeStridesLocation=a,e.outTexShapeLocation=l}}createTensorFromGPUData(e,t,s){e.channels=e.channels||"RGBA";const{texture:r,height:i,width:o,channels:a}=e,l=lr().backend;if(!l.gpgpu.gl.isTexture(r))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");const c=l.writeTexture(r,t,s,i,o,a);return lr().makeTensorFromDataId(c,t,s,l)}}V1.nextDataId=0;function Uhe(n,e){if(e==="float32"||e==="complex64")return n;if(e==="int32"||e==="bool"){const t=e==="int32"?new Int32Array(n.length):new Uint8Array(n.length);for(let s=0;s<t.length;++s)t[s]=Math.round(n[s]);return t}else throw new Error(`Unknown dtype ${e}`)}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */gI()&&Tx("webgl",()=>new V1,2);/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IS=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`;let Mu=class{constructor(e,t,s){this.variableNames=["A","B"],this.outputShape=jt(t,s),this.enableShapeUniforms=Or(this.outputShape.length),this.userCode=`
      float binaryOperation(float a, float b) {
        ${e}
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Gh=`
  result.r = isNaN.r ? NAN : result.r;
  result.g = isNaN.g ? NAN : result.g;
  result.b = isNaN.b ? NAN : result.b;
  result.a = isNaN.a ? NAN : result.a;
`;class Tp{constructor(e,t,s,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=jt(t,s);const i=this.outputShape.length;this.enableShapeUniforms=Or(i);let o="";if(r)if(i===0||ye(this.outputShape)===1)o=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `;else if(o=`
          ${ns(i)} coords = getOutputCoords();
        `,i===1)this.enableShapeUniforms?o+=`
            result.y = (coords + 1) >= outShape ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `:o+=`
            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `;else{const l=ti("coords",i);this.enableShapeUniforms?o+=`
            bool nextRowOutOfBounds =
              (${l[i-2]} + 1) >= outShape[${i} - 2];
            bool nextColOutOfBounds =
              (${l[i-1]} + 1) >= outShape[${i} - 1];
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `:o+=`
            bool nextRowOutOfBounds =
              (${l[i-2]} + 1) >= ${this.outputShape[i-2]};
            bool nextColOutOfBounds =
              (${l[i-1]} + 1) >= ${this.outputShape[i-1]};
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `}this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        ${e}
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        ${o}

        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hi(n){const{inputs:e,backend:t}=n,{x:s}=e;return t.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}const zhe={kernelName:nh,backendName:"webgl",kernelFunc:Hi};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wc(n){const{inputs:e,backend:t}=n,{real:s,imag:r}=e,i=t.makeTensorInfo(s.shape,"complex64"),o=t.texData.get(i.dataId),a=Hi({inputs:{x:s},backend:t}),l=Hi({inputs:{x:r},backend:t});return o.complexTensorInfos={real:a,imag:l},i}const Ghe={kernelName:pg,backendName:"webgl",kernelFunc:wc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const q$="return (a < 0.) ? b * a : a;",Y$=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function Vhe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{alpha:i}=s,o=t.makeTensorInfo([],"float32",El(i,"float32")),a=xe().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Tp(Y$,r.shape,o.shape):new Mu(q$,r.shape,o.shape),l=t.runWebGLProgram(a,[r,o],"float32");return t.disposeIntermediateTensorInfo(o),l}const Whe={kernelName:Ff,backendName:"webgl",kernelFunc:Vhe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const j$="return (a < 0.) ? b * a : a;",X$=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function Hhe(n){const{inputs:e,backend:t}=n,{x:s,alpha:r}=e,i=xe().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Tp(X$,s.shape,r.shape):new Mu(j$,s.shape,r.shape);return t.runWebGLProgram(i,[s,r],"float32")}const qhe={kernelName:ep,backendName:"webgl",kernelFunc:Hhe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Bp="if (isnan(x)) return x;";function $n({opSnippet:n,packedOpSnippet:e,cpuKernelImpl:t,dtype:s}){return({inputs:r,backend:i})=>{const{x:o}=r,a=i,l=s||o.dtype;if(a.shouldExecuteOnCPU([o])&&t!=null){const h=a.texData.get(o.dataId),d=t(h.values,l);return a.makeTensorInfo(o.shape,l,d)}const c=xe().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&e!=null;let u;return c?u=new Hl(o.shape,e):u=new va(o.shape,n),a.runWebGLProgram(u,[o],l)}}function Rr({opSnippet:n,packedOpSnippet:e,checkOutOfBounds:t=!1,supportsComplex:s=!1,cpuKernelImpl:r,dtype:i}){return({inputs:o,backend:a})=>{const{a:l,b:c}=o,u=a;if(s&&l.dtype==="complex64"){const p=u.texData.get(l.dataId),A=u.texData.get(c.dataId),[m,g]=[[p.complexTensorInfos.real,A.complexTensorInfos.real],[p.complexTensorInfos.imag,A.complexTensorInfos.imag]].map(v=>{const[b,w]=v,_={dataId:b.dataId,dtype:b.dtype,shape:l.shape},N={dataId:w.dataId,dtype:w.dtype,shape:c.shape},M=new Mu(n,l.shape,c.shape);return u.runWebGLProgram(M,[_,N],tr(b.dtype,w.dtype))}),x=wc({inputs:{real:m,imag:g},backend:u});return u.disposeIntermediateTensorInfo(m),u.disposeIntermediateTensorInfo(g),x}const h=i||tr(l.dtype,c.dtype);if((l.dtype==="string"||c.dtype==="string"||u.shouldExecuteOnCPU([l,c]))&&r!=null){const p=u.texData.get(l.dataId).values,A=u.texData.get(c.dataId).values,m=l.dtype==="string"?Zo(p):p,g=l.dtype==="string"?Zo(A):A,[x,v]=r(l.shape,c.shape,m,g,h),b=u.makeTensorInfo(v,h),w=u.texData.get(b.dataId);return w.values=x,b}const d=xe().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&e!=null;let f;return d?f=new Tp(e,l.shape,c.shape,t):f=new Mu(n,l.shape,c.shape),u.runWebGLProgram(f,[l,c],h)}}function Ym(n,e=!1){if(n==="linear")return e?The:Ihe;if(n==="relu")return e?khe:She;if(n==="elu")return e?Bhe:whe;if(n==="relu6")return e?Nhe:Ehe;if(n==="prelu")return e?X$:j$;if(n==="leakyrelu")return e?Y$:q$;if(n==="sigmoid")return e?Rhe:_he;throw new Error(`Activation ${n} has not been implemented for the WebGL backend.`)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let K$=class{constructor(e,t,s,r=!1,i=!1,o=!1,a=null,l=!1,c=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=s,this.enableShapeUniforms=Or(this.outputShape.length);const u=r?e[1]:e[2],h=Math.ceil(u/2),d=r?"i * 2, rc.y":"rc.y, i * 2",f=i?"rc.z, i * 2":"i * 2, rc.z",p=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],A=i?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let m="",g="";a&&(l?m=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${a}
        }`:c?m=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${a}
        }`:m=`vec4 activation(vec4 x) {
          ${a}
        }`,g="result = activation(result);");const x=o?"result += getBiasAtOutCoords();":"";o&&this.variableNames.push("bias"),l&&this.variableNames.push("preluActivationWeights"),c&&this.variableNames.push("leakyreluAlpha");let v="rc.x",b="rc.x";e[0]<t[0]?v=`imod(rc.x, ${e[0]})`:t[0]<e[0]&&(b=`imod(rc.x, ${t[0]})`),this.userCode=`
      ${m}
      // Don't use uniform for sharedDimensionPacked for performance.
      const float sharedDimension = ${h}.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        int batchA = ${v};
        int batchB = ${b};
        for (int i = 0; i < ${h}; i++) {
          vec4 a = getMatrixA(batchA, ${d});
          vec4 b = getMatrixB(batchB, ${f});

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (${p[0]} * ${A[0]});
          result += (${p[1]} * ${A[1]});
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        ${x}

        ${g}

        setOutput(result);
      }
    `}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const x3={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"};let b3=class{constructor(e,t,s){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=jt(t,s),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        ${e}
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const v3="return a * b;";function wS(n){const{inputs:e,backend:t}=n,{a:s,b:r}=e,i=tr(s.dtype,r.dtype);if(s.dtype==="complex64"){const a=t.texData.get(s.dataId),l=t.texData.get(r.dataId),c=new b3(x3.REAL,s.shape,r.shape),u=new b3(x3.IMAG,s.shape,r.shape),h=[{dataId:a.complexTensorInfos.real.dataId,dtype:a.complexTensorInfos.real.dtype,shape:s.shape},{dataId:a.complexTensorInfos.imag.dataId,dtype:a.complexTensorInfos.imag.dtype,shape:s.shape},{dataId:l.complexTensorInfos.real.dataId,dtype:l.complexTensorInfos.real.dtype,shape:r.shape},{dataId:l.complexTensorInfos.imag.dataId,dtype:l.complexTensorInfos.imag.dtype,shape:r.shape}],d=t.runWebGLProgram(c,h,"float32"),f=t.runWebGLProgram(u,h,"float32"),p=wc({inputs:{real:d,imag:f},backend:t});return t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(f),p}if(t.shouldExecuteOnCPU([s,r])){const a=t.texData.get(s.dataId),l=t.texData.get(r.dataId),[c,u]=Hue(s.shape,r.shape,a.values,l.values,i),h=t.makeTensorInfo(u,i),d=t.texData.get(h.dataId);return d.values=c,h}let o;return xe().getBool("WEBGL_PACK_BINARY_OPERATIONS")?o=new Tp(v3,s.shape,r.shape):o=new Mu(v3,s.shape,r.shape),t.runWebGLProgram(o,[s,r],i)}const Yhe={kernelName:hh,backendName:"webgl",kernelFunc:wS};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jhe(n,e,t){const s=[rf(n.shape),...of(n.shape)],r={dtype:n.dtype,shape:s,dataId:n.dataId},i=[rf(e),...of(e)],o=new H$(i,s),a=!0,l=[s],c=t.runWebGLProgram(o,[r],n.dtype,l,a);return{dataId:c.dataId,shape:e,dtype:c.dtype}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yt(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{shape:i}=s,o=t,a=ye(r.shape),l=gx(i,a),c=ye(l);z(a===c,()=>`The new shape (${l}) has ${c} elements and the old shape (${r.shape}) has ${a} elements. The new shape and old shape must have the same number of elements.`);const u=o.texData.get(r.dataId);return u.isPacked&&!G0(r.shape,l)&&!(u.texture!==null&&G0(u.shape,l))?jhe(r,l,o):(o.incRef(r.dataId),{dataId:r.dataId,shape:l,dtype:r.dtype})}const Xhe={kernelName:np,backendName:"webgl",kernelFunc:yt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class C3{constructor(e,t){this.variableNames=["x"];const{windowSize:s,batchSize:r,inSize:i,outSize:o}=e;this.outputShape=[r,o];const a=Math.floor(s/4)*4,l=s%4;let c="sumValue += dot(values, ones);";if(t!=null){const h=1/t;c=`sumValue += dot(values * ${bu(h)?h.toPrecision(2):h}, ones);`}let u="";i%s>0&&(u=`
        if (inIdx < 0 || inIdx >= ${i}) {
          return 0.0;
        }
      `),this.userCode=`
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${u}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${s};

        float sumValue = 0.0;

        for (int i = 0; i < ${a}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${c}
        }

        int inIdx = inOffset + ${a};
        if (${l===1}) {
          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);

          ${c}
        } else if (${l===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1), 0.0, 0.0);

          ${c}
        } else if (${l===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2), 0.0);

          ${c}
        }
        setOutput(sumValue);
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Khe=class{constructor(e,t){this.variableNames=["x"];const{windowSize:s,batchSize:r,inSize:i,outSize:o}=e;this.outputShape=[r,o];let a="0.0",l="";t==="prod"?a="1.0":t==="min"?(a="1.0 / 1e-20",l="min"):t==="max"&&(a="-1.0 / 1e-20",l="max");let c=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="sum"?c="sumValue":t==="prod"?c="prodValue":t==="all"?c="allValue":t==="any"&&(c="anyValue");const u=Math.floor(s/4)*4,h=s%4;let d=`
      if (${t==="sum"}) {
        sumValue += dot(values, ones);
      } else if (${t==="prod"}) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = ${l}(values, minMaxValue);
        if (${t==="min"} || ${t==="max"}) {
          minMaxValue = ${l}(values, minMaxValue);
          bvec4 isNaN = isnan(values);
          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {
            minMaxValue = vec4(NAN);
          }
        }
      }
    `,f="vec4";t==="all"?(a="1.0",d=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,f="bvec4"):t==="any"&&(a="0.0",d=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,f="bvec4");let p="";i%s>0&&(p=`
        if (inIdx < 0 || inIdx >= ${i}) {
          return initializationValue;
        }
      `),this.userCode=`
      const float initializationValue = ${a};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${p}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${s};

        vec4 minMaxValue = vec4(${a});
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < ${u}; i += 4) {
          int inIdx = inOffset + i;
          ${f} values = ${f}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${d}
        }

        int inIdx = inOffset + ${u};
        if (${h===1}) {
          ${f} values = ${f}(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          ${d}
        } else if (${h===2}) {
          ${f} values = ${f}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          ${d}
        } else if (${h===3}) {
          ${f} values = ${f}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          ${d}
        }
        setOutput(${c});
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jhe(n){const e=[];for(;e.length===0||e[e.length-1].outSize!==1;){const t=e.length?e[e.length-1].outSize:n[1],s=p1(t);e.push({inSize:t,windowSize:s,outSize:Math.ceil(t/s)})}return e}function Vh(n,e,t,s){const r=Jhe(n.shape);let i=n;for(let o=0;o<r.length;o++){const{inSize:a,windowSize:l,outSize:c}=r[o];let u,h;t==="mean"?u=o===0?new C3({windowSize:l,inSize:a,batchSize:n.shape[0],outSize:c},a):new C3({windowSize:l,inSize:a,batchSize:n.shape[0],outSize:c}):u=new Khe({windowSize:l,inSize:a,batchSize:n.shape[0],outSize:c},t),h=i,i=s.runWebGLProgram(u,[i],e),h.dataId!==n.dataId&&s.disposeIntermediateTensorInfo(h)}return i}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Zhe=class{constructor(e,t){this.variableNames=["A"];const s=new Array(e.length);for(let o=0;o<s.length;o++)s[o]=e[t[o]];this.outputShape=s,this.rank=s.length;const r=ns(this.rank),i=ede(t);this.userCode=`
    void main() {
      ${r} resRC = getOutputCoords();
      setOutput(getA(${i}));
    }
    `}};function ede(n){const e=n.length;if(e>6)throw Error(`Transpose for rank ${e} is not yet supported`);const t=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],s=new Array(e);for(let r=0;r<n.length;r++)s[n[r]]=t[r];return s.join()}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class tde{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const s=new Array(e.length);for(let u=0;u<s.length;u++)s[u]=e[t[u]];if(this.outputShape=s,this.rank=s.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=ns(this.rank),i=W$("rc",this.rank),o=new Array(this.rank);for(let u=0;u<t.length;u++)o[t[u]]=i[u];const a=`vec2(${o.slice(-2).join()})`,l=`++${i[this.rank-1]} < ${s[this.rank-1]}`,c=`getChannel(getA(${o.join()}), ${a})`;this.userCode=`
    void main() {
      ${r} rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = ${c};
      if(${l}) {
        result[1] = ${c};
      }
      --${i[this.rank-1]};
      if(++${i[this.rank-2]} < ${s[this.rank-2]}) {
        result[2] = ${c};
        if(${l}) {
          result[3] = ${c};
        }
      }
      setOutput(result);
    }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function W1(n,e,t){const s=xe().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new tde(n.shape,e):new Zhe(n.shape,e);return t.runWebGLProgram(s,[n],n.dtype)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nde(n,e,t,s){const r=e,i=n.shape.length,o=an(r,n.shape);let a=o;const l=ss(a,i),c=l!=null;let u=n;c&&(u=W1(n,l,s),a=ys(a.length,i)),qs("sum",a,i);const[h,d]=$s(u.shape,a);let f=h;t&&(f=Ms(h,o));const p=ye(d),m=ye(n.shape)/p,g=yt({inputs:{x:u},attrs:{shape:[m,p]},backend:s}),x=aA(n.dtype),v=Vh(g,x,"sum",s),b=yt({inputs:{x:v},attrs:{shape:f},backend:s});return s.disposeIntermediateTensorInfo(g),s.disposeIntermediateTensorInfo(v),c&&s.disposeIntermediateTensorInfo(u),b}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function H1(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:i,keepDims:o}=s;return nde(r,i,o,t)}const sde={kernelName:lp,backendName:"webgl",kernelFunc:H1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function si(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{perm:i}=s,o=t,a=r.shape.length,l=new Array(a);for(let u=0;u<l.length;u++)l[u]=r.shape[i[u]];let c;if(o.shouldExecuteOnCPU([r])){const h=o.texData.get(r.dataId).values,d=CS(h,r.shape,r.dtype,i,l);c=o.makeTensorInfo(l,r.dtype);const f=o.texData.get(c.dataId);f.values=d}else c=W1(r,i,o);return c}const rde={kernelName:Xl,backendName:"webgl",kernelFunc:si};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const J$=1e3;function V0({a:n,b:e,transposeA:t,transposeB:s,backend:r,bias:i=null,preluActivationWeights:o=null,leakyreluAlpha:a=0,activation:l=null}){const c=n.shape.length,u=e.shape.length,h=t?n.shape[c-2]:n.shape[c-1],d=s?e.shape[u-1]:e.shape[u-2],f=t?n.shape[c-1]:n.shape[c-2],p=s?e.shape[u-2]:e.shape[u-1],A=n.shape.slice(0,-2),m=e.shape.slice(0,-2),g=ye(A),x=ye(m),b=jt(n.shape.slice(0,-2),e.shape.slice(0,-2)).concat([f,p]);z(h===d,()=>`Error in matMul: inner shapes (${h}) and (${d}) of Tensors with shapes ${n.shape} and ${e.shape} and transposeA=${t} and transposeB=${s} must match.`);const w=t?[g,h,f]:[g,f,h],_=s?[x,p,d]:[x,d,p],N=yt({inputs:{x:n},backend:r,attrs:{shape:w}}),M=yt({inputs:{x:e},backend:r,attrs:{shape:_}}),T=[N,M],k=Math.max(g,x),B=t?N.shape[1]:N.shape[2],L=i!=null,U=o!=null,V=l==="leakyrelu",W=l!=null?Ym(l,!0):null,H=L||U||V||W!=null;let ee;if((f===1||p===1)&&B>J$&&H===!1){let te=N,le=M;t&&(te=si({inputs:{x:N},backend:r,attrs:{perm:[0,2,1]}}),T.push(te)),s&&(le=si({inputs:{x:M},backend:r,attrs:{perm:[0,2,1]}}),T.push(le));const fe=p!==1,Ie=p===1;let Se=te;fe&&(Se=yt({inputs:{x:te},backend:r,attrs:{shape:[k,B,1]}}),T.push(Se));const De=p===1?2:1;let Be=le;Ie&&(Be=yt({inputs:{x:le},backend:r,attrs:{shape:[k,1,B]}}),T.push(Be));const he=wS({inputs:{a:Se,b:Be},backend:r});ee=H1({inputs:{x:he},backend:r,attrs:{axis:De,keepDims:!0}}),T.push(he)}else{const te=tr(n.dtype,e.dtype),le=new K$(w,_,[k,f,p],t,s,L,W,U,V),fe=[N,M];if(i!=null&&fe.push(i),U&&fe.push(o),V){const Ie=r.makeTensorInfo([],"float32",El(a,"float32"));fe.push(Ie),T.push(Ie)}ee=r.runWebGLProgram(le,fe,te)}const K=yt({inputs:{x:ee},backend:r,attrs:{shape:b}});T.push(ee);for(const te of T)r.disposeIntermediateTensorInfo(te);return K}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ide(n){const{inputs:e,backend:t,attrs:s}=n,{a:r,b:i,bias:o,preluActivationWeights:a}=e,{transposeA:l,transposeB:c,activation:u,leakyreluAlpha:h}=s;return V0({a:r,b:i,transposeA:l,transposeB:c,backend:t,bias:o,preluActivationWeights:a,leakyreluAlpha:h,activation:u})}const ode={kernelName:Gd,backendName:"webgl",kernelFunc:ide};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const I3="return abs(x);";function ade(n){const{inputs:e,backend:t}=n,{x:s}=e;if(t.shouldExecuteOnCPU([s])&&s.dtype!=="complex64"){const i=t.texData.get(s.dataId),o=G$(i.values);return t.makeTensorInfo(s.shape,s.dtype,o)}let r;return xe().getBool("WEBGL_PACK_UNARY_OPERATIONS")?r=new Hl(s.shape,I3):r=new va(s.shape,I3),t.runWebGLProgram(r,[s],s.dtype)}const lde={kernelName:pf,backendName:"webgl",kernelFunc:ade};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cde=Bo+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return acos(x);
`,ude=$n({opSnippet:cde}),hde={kernelName:$u,backendName:"webgl",kernelFunc:ude};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dde=Bo+`
  if (x < 1.0) return NAN;
return log(x + sqrt(x * x - 1.0));`,fde=$n({opSnippet:dde}),pde={kernelName:Pu,backendName:"webgl",kernelFunc:fde};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const w3="return a + b;",mde=Rr({opSnippet:w3,packedOpSnippet:w3,supportsComplex:!0,cpuKernelImpl:Sue}),gde={kernelName:mc,backendName:"webgl",kernelFunc:mde};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ade{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map((i,o)=>`T${o}`);const s=[];this.variableNames.forEach(i=>{s.push(`float v${i} = get${i}AtOutCoords();`)});const r=this.variableNames.map(i=>`v${i}`).join(" + ");this.userCode=`
      void main() {
        ${s.join(`
        `)}

        float result = ${r};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let yde=class{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map((i,o)=>`T${o}`);const s=[];this.variableNames.forEach(i=>{s.push(`vec4 v${i} = get${i}AtOutCoords();`)});const r=this.variableNames.map(i=>`v${i}`).join(" + ");this.userCode=`
      void main() {
        ${s.join(`
        `)}

        vec4 result = ${r};
        setOutput(result);
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function l0(n){const{inputs:e,backend:t}=n,s=e;if(s.length===1)return Hi({inputs:{x:s[0]},backend:t});if(s.length>xe().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const l=Math.floor(s.length/2),c=l0({inputs:s.slice(0,l),backend:t}),u=l0({inputs:s.slice(l),backend:t});return l0({inputs:[c,u],backend:t})}const r=s.map(l=>l.dtype).reduce((l,c)=>tr(l,c)),i=s.map(l=>l.shape),a=xe().getBool("WEBGL_PACK")?new yde(s[0].shape,i):new Ade(s[0].shape,i);return t.runWebGLProgram(a,s,r)}const xde={kernelName:mf,backendName:"webgl",kernelFunc:l0};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bde(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:i,keepDims:o}=s,a=r.shape.length,l=an(i,r.shape);let c=l;const u=ss(c,a);let h=r;u!=null&&(h=si({inputs:{x:r},backend:t,attrs:{perm:u}}),c=ys(c.length,a)),qs("all",c,a);const[d,f]=$s(h.shape,c),p=ye(f),A=yt({inputs:{x:h},backend:t,attrs:{shape:[-1,p]}}),m=Vh(A,A.dtype,"all",t);let g;if(o){const x=Ms(d,l);g=yt({inputs:{x:m},backend:t,attrs:{shape:x}})}else g=yt({inputs:{x:m},backend:t,attrs:{shape:d}});return t.disposeIntermediateTensorInfo(A),t.disposeIntermediateTensorInfo(m),u!=null&&t.disposeIntermediateTensorInfo(h),g}const vde={kernelName:ag,backendName:"webgl",kernelFunc:bde};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cde(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:i,keepDims:o}=s,a=r.shape.length,l=an(i,r.shape);let c=l;const u=ss(c,a);let h=r;u!=null&&(h=si({inputs:{x:r},backend:t,attrs:{perm:u}}),c=ys(c.length,a)),qs("any",c,a);const[d,f]=$s(h.shape,c),p=ye(f),A=yt({inputs:{x:h},backend:t,attrs:{shape:[-1,p]}}),m=Vh(A,A.dtype,"any",t);let g;if(o){const x=Ms(d,l);g=yt({inputs:{x:m},backend:t,attrs:{shape:x}})}else g=yt({inputs:{x:m},backend:t,attrs:{shape:d}});return t.disposeIntermediateTensorInfo(A),t.disposeIntermediateTensorInfo(m),u!=null&&t.disposeIntermediateTensorInfo(h),g}const Ide={kernelName:lg,backendName:"webgl",kernelFunc:Cde};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let wde=class{constructor(e,t,s){this.variableNames=["A"];const{windowSize:r,batchSize:i,outSize:o}=e;s||this.variableNames.push("bestIndicesA"),this.outputShape=[i,o];const a=t==="max"?">":"<",l=s?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${r};

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < ${r}; i++) {
          int inIdx = ${l};
          float candidate = getA(batch, inIdx);
          if (candidate ${a} bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `}};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Sde{constructor(e,t,s,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,z(e.length>2,()=>`Packed arg${s.charAt(0).toUpperCase()+s.slice(1)} supports only inputs with rank above 2.`);const i=e[e.length-1],o=Math.ceil(i/t);this.outputShape=e.slice(0,-1),o>1&&this.outputShape.push(o),r||this.variableNames.push("bestIndicesA");const a=this.outputShape,l=a.length,c=ns(l),u=ti("coords",l);let h,d;if(o===1){d=l+1;const M=ns(d);h=`
        ${M} sourceLocR = ${M}(${u.join()}, 0);
        ++${u[l-1]};
        ${M} sourceLocG = ${M}(${u.join()}, 0);
        ++${u[l-2]};
        ${M} sourceLocA = ${M}(${u.join()}, 0);
        --${u[l-1]};
        ${M} sourceLocB = ${M}(${u.join()}, 0);
        --${u[l-2]};`}else d=l,h=`
        ${c} sourceLocR = coords;
        ++${u[l-1]};
        ${c} sourceLocG = coords;
        ++${u[l-2]};
        ${c} sourceLocA = coords;
        --${u[l-1]};
        ${c} sourceLocB = coords;
        --${u[l-2]};`;const f=["x","y","z","w","u","v"].slice(0,d),p="."+f[d-1],A=f.map(M=>"int "+M),m=ti("sourceLocR",d-1).concat("inIdx.r"),g=ti("sourceLocG",d-1).concat("inIdx.g"),x=ti("sourceLocB",d-1).concat("inIdx.b"),v=ti("sourceLocA",d-1).concat("inIdx.a"),b=s==="max"?"greaterThan":"lessThan",w=r?"":`
          inIdx = round(vec4(getBestIndicesAChannel(${m.join()}),
                             getBestIndicesAChannel(${g.join()}),
                             getBestIndicesAChannel(${x.join()}),
                             getBestIndicesAChannel(${v.join()})));`,_=`vec4(
            getAChannel(${m.join()}),
            hasNextCol ? getAChannel(${g.join()}) : 0.,
            hasNextRow ? getAChannel(${x.join()}) : 0.,
            hasNextRow && hasNextCol ? getAChannel(${v.join()}) : 0.)`,N=r?"":`
      float getBestIndicesAChannel(${A.join()}) {
        return getChannel(getBestIndicesA(${f.join()}),
                                          vec2(${f.slice(-2).join()}));
      }`;this.userCode=`
      float getAChannel(${A.join()}) {
        return getChannel(getA(${f.join()}),
                               vec2(${f.slice(-2).join()}));
      }
      ${N}
      void main() {
        ${c} coords = getOutputCoords();
        bool hasNextCol = ${u[l-1]} < ${a[l-1]-1};
        bool hasNextRow = ${u[l-2]} < ${a[l-2]-1};
        ${h}
        ivec4 srcIdx = ivec4(sourceLocR${p}, sourceLocG${p},
          sourceLocB${p}, sourceLocA${p}) * ${t};
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = ${_};

        for (int i = 0; i < ${t}; i++) {
          inIdx = srcIdx;
          ${w}
          vec4 candidate = ${_};
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(${b}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Z$(n,e,t,s=null){let r=e.shape[0],i=e.shape[1];s!=null&&(r=s.shape[0],i=s.shape[1]);const o=p1(i),a={windowSize:o,inSize:i,batchSize:r,outSize:Math.ceil(i/o)},l=new wde(a,t,s==null),c=[e];s!=null&&c.push(s);const u=n.runWebGLProgram(l,c,"int32");if(u.shape[1]===1)return u;const h=Z$(n,e,t,u);return n.disposeIntermediateTensorInfo(u),h}function eP(n,e,t,s=null){const r=s!=null?s.shape:e.shape,i=r[r.length-1],o=p1(i),a=new Sde(r,o,t,s==null),l=s==null?[e]:[e,s],c=n.runWebGLProgram(a,l,"int32");if(c.shape.length===e.shape.length){const u=eP(n,e,t,c);return n.disposeIntermediateTensorInfo(c),u}return c}function tP(n,e,t,s){const r=[t];if(qs("arg"+s.charAt(0).toUpperCase()+s.slice(1),r,e.shape.length),!xe().getBool("WEBGL_PACK_REDUCE")||e.shape.length<=2){const i=[],o=n.texData.get(e.dataId),a=o!==null&&o.isPacked;let l=e;a&&(l=n.unpackTensor(e),i.push(l));const[c,u]=$s(l.shape,r),h=ye(u),d=yt({inputs:{x:l},backend:n,attrs:{shape:[-1,h]}});i.push(d);const f=Z$(n,d,s);i.push(f);const p=yt({inputs:{x:f},backend:n,attrs:{shape:c}});return i.forEach(A=>n.disposeIntermediateTensorInfo(A)),p}return eP(n,e,s)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ede(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:i}=s;let o=an(i,r.shape);const a=ss(o,r.shape.length);let l=r;const c=[];a!=null&&(l=si({inputs:{x:r},backend:t,attrs:{perm:a}}),c.push(l),o=ys(o.length,l.shape.length)),qs("argMax",[o[0]],l.shape.length);const u=tP(t,l,o[0],"max");return c.forEach(h=>t.disposeIntermediateTensorInfo(h)),u}const _de={kernelName:gf,backendName:"webgl",kernelFunc:Ede};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tde(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:i}=s;let o=an(i,r.shape);const a=ss(o,r.shape.length);let l=r;const c=[];a!=null&&(l=si({inputs:{x:r},backend:t,attrs:{perm:a}}),c.push(l),o=ys(o.length,l.shape.length)),qs("argMin",[o[0]],l.shape.length);const u=tP(t,l,o[0],"min");return c.forEach(h=>t.disposeIntermediateTensorInfo(h)),u}const Bde={kernelName:Af,backendName:"webgl",kernelFunc:Tde};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kde=Bo+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return asin(x);
`,Nde=$n({opSnippet:kde}),Rde={kernelName:Lu,backendName:"webgl",kernelFunc:Nde};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mde=Bo+"return log(x + sqrt(x * x + 1.0));",Dde=$n({opSnippet:Mde}),Fde={kernelName:Ou,backendName:"webgl",kernelFunc:Dde};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $de=Bo+`
  return atan(x);
`,Pde=$n({opSnippet:$de}),Lde={kernelName:Qu,backendName:"webgl",kernelFunc:Pde};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ode=IS+`
  return atan(a, b);
`,Qde=`
  vec4 result = atan(a, b);
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+Gh+`
  return result;
`,Ude=Rr({opSnippet:Ode,packedOpSnippet:Qde}),zde={kernelName:zu,backendName:"webgl",kernelFunc:Ude};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Gde=Bo+`
  if ((x < -1.0) || (x > 1.0)) return NAN;
return (log(1.0 + x) - log(1.0 - x)) / 2.0;`,Vde=$n({opSnippet:Gde}),Wde={kernelName:Uu,backendName:"webgl",kernelFunc:Vde};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let jm=class{constructor(e,t,s,r=!1,i=!1){if(this.variableNames=["x"],t==="avg"&&s)throw new Error("Cannot compute positions for average pool.");const o=e.filterWidth,a=e.strideHeight,l=e.strideWidth,c=e.dilationHeight,u=e.dilationWidth,h=e.effectiveFilterHeight,d=e.effectiveFilterWidth,f=e.padInfo.top,p=e.padInfo.left;this.outputShape=e.outShape;const A=t==="avg",m=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,g=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let x="0.0";if(A||(x="-1.0 / 1e-20"),s){this.userCode=`
        const ivec2 strides = ivec2(${a}, ${l});
        const ivec2 pads = ivec2(${f}, ${p});

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < ${h};
              wR += ${c}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${d};
                wC += ${u}) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value >= currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = ${r?i?m:g:`wR * ${d} + wC`};
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}const v="max";let b=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(b="avgValue / max(count, 1.0)");const w=Math.floor(o/4)*4,_=o%4,N=`
      if (${A}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${v}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(${a}, ${l});
      const ivec2 pads = ivec2(${f}, ${p});
      const float initializationValue = ${x};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(${x});
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < ${h};
            wR += ${c}) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${w}; wC += 4) {
            int xC = xCCorner + wC * ${u};

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${u}, d),
              getValue(batch, xR, xC + 2 * ${u}, d),
              getValue(batch, xR, xC + 3 * ${u}, d)
            );

            ${N}
          }

          int xC = xCCorner + ${w};
          if (${_===1}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            ${N}
          } else if (${_===2}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${u}, d),
              initializationValue,
              initializationValue
            );

            ${N}
          } else if (${_===3}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${u}, d),
              getValue(batch, xR, xC + 2 * ${u}, d),
              initializationValue
            );

            ${N}
          }
        }
        setOutput(${b});
      }
    `}},SS=class{constructor(e,t,s,r=!1,i=!1){if(this.variableNames=["x"],t==="avg"&&s)throw new Error("Cannot compute positions for average pool.");const o=e.filterWidth,a=e.strideDepth,l=e.strideHeight,c=e.strideWidth,u=e.dilationDepth,h=e.dilationHeight,d=e.dilationWidth,f=e.effectiveFilterDepth,p=e.effectiveFilterHeight,A=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,x=e.padInfo.left;this.outputShape=e.outShape;const v=t==="avg";let b="0.0";if(v||(b="-1.0 / 1e-20"),s){this.userCode=`
        const ivec3 strides =
            ivec3(${a}, ${l}, ${c});
        const ivec3 pads = ivec3(${m}, ${g}, ${x});

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < ${f};
              wD += ${u}) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= ${e.inDepth}) {
              continue;
            }

            for (int wR = 0; wR < ${p};
                wR += ${h}) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int wC = 0; wC < ${A};
                  wC += ${d}) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value >= currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition = ${r?i?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${p} * ${A} +
                      wR * ${A} + wC`};
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}const w="max";let _=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(_="avgValue / max(count, 1.0)");const N=Math.floor(o/4)*4,M=o%4,T=`
      if (${v}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${w}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(${a}, ${l}, ${c});
      const ivec3 pads = ivec3(${m}, ${g}, ${x});
      const float initializationValue = ${b};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(${b});
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < ${f};
            wD += ${u}) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${p};
            wR += ${h}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${N}; wC += 4) {
              int xC = xCCorner + wC * ${d};

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                getValue(batch, xD, xR, xC + 2 * ${d}, ch),
                getValue(batch, xD, xR, xC + 3 * ${d}, ch)
              );

              ${T}
            }

            int xC = xCCorner + ${N};
            if (${M===1}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              ${T}
            } else if (${M===2}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                initializationValue,
                initializationValue
              );

              ${T}
            } else if (${M===3}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                getValue(batch, xD, xR, xC + 2 * ${d}, ch),
                initializationValue
              );

              ${T}
            }
          }
        }
        setOutput(${_});
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hde(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e;GA(r,"avgPool");const{filterSize:i,strides:o,pad:a,dimRoundingMode:l}=s,c=1;z(nr(o,c),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${c}'`);const u=Pr(r.shape,i,o,c,a,l);if(u.filterWidth===1&&u.filterHeight===1&&dn(u.inShape,u.outShape))return Hi({inputs:{x:r},backend:t});const h=new jm(u,"avg",!1);return t.runWebGLProgram(h,[r],"float32")}const qde={kernelName:yf,backendName:"webgl",kernelFunc:Hde};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yde(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{filterSize:i,strides:o,pad:a,dimRoundingMode:l,dataFormat:c}=s,u=[1,1,1],h=fo(r.shape,i,o,u,a,l,c),d=new SS(h,"avg",!1);return t.runWebGLProgram(d,[r],"float32")}const jde={kernelName:xf,backendName:"webgl",kernelFunc:Yde};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Xde=class{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,s=e.filterWidth,r=e.strideHeight,i=e.strideWidth,o=e.dilationHeight,a=e.dilationWidth,l=e.effectiveFilterHeight,c=e.effectiveFilterWidth,u=l-1-e.padInfo.top,h=c-1-e.padInfo.left,d=1/(t*s);this.userCode=`
      const ivec2 pads = ivec2(${u}, ${h});
      const float avgMultiplier = float(${d});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${l};
            wR += ${o}) {
          float dyR = float(dyRCorner + wR) / ${r}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${c};
            wC+= ${a}) {
            float dyC = float(dyCCorner + wC) / ${i}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `}},Kde=class{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,s=e.filterHeight,r=e.filterWidth,i=e.strideDepth,o=e.strideHeight,a=e.strideWidth,l=e.dilationDepth,c=e.dilationHeight,u=e.dilationWidth,h=e.effectiveFilterDepth,d=e.effectiveFilterHeight,f=e.effectiveFilterWidth,p=h-1-e.padInfo.front,A=d-1-e.padInfo.top,m=f-1-e.padInfo.left,g=1/(t*s*r);this.userCode=`
      const ivec3 pads = ivec3(${p}, ${A}, ${m});
      const float avgMultiplier = float(${g});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${h};
            wD += ${l}) {
          float dyD = float(dyDCorner + wD) / ${i}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${d};
              wR += ${c}) {
            float dyR = float(dyRCorner + wR) / ${o}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${f};
                wC += ${u}) {
              float dyC = float(dyCCorner + wC) / ${a}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jde(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:i}=e,o=i,{filterSize:a,strides:l,pad:c,dimRoundingMode:u}=s,h=[1,1,1],d=fo(o.shape,a,l,h,c,u),f=new Kde(d);return t.runWebGLProgram(f,[r],o.dtype)}const Zde={kernelName:ug,backendName:"webgl",kernelFunc:Jde};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function efe(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:i}=e,o=i;GA([r,i],"avgPoolGrad");const{filterSize:a,strides:l,pad:c}=s,u=Pr(o.shape,a,l,1,c),h=new Xde(u);return t.runWebGLProgram(h,[r],o.dtype)}const tfe={kernelName:cg,backendName:"webgl",kernelFunc:efe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nfe(n){const{inputs:e,backend:t,attrs:s}=n,{a:r,b:i}=e,{transposeA:o,transposeB:a}=s;return V0({a:r,b:i,transposeA:o,transposeB:a,backend:t})}const sfe={kernelName:bf,backendName:"webgl",kernelFunc:nfe};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let rfe=class{constructor(e,t,s,r,i,o){this.outputShape=[],this.variableNames=["x","mean","variance"],jt(e,t),jt(e,s);let a="0.0";r!=null&&(jt(e,r),this.variableNames.push("offset"),a="getOffsetAtOutCoords()");let l="1.0";i!=null&&(jt(e,i),this.variableNames.push("scale"),l="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = ${a};
        float scale = ${l};
        float inv = scale * inversesqrt(variance + float(${o}));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ife{constructor(e,t,s,r,i,o){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],jt(e,t),jt(e,s);let a="vec4(0.0)";r!=null&&(jt(e,r),this.variableNames.push("offset"),a="getOffsetAtOutCoords()");let l="vec4(1.0)";i!=null&&(jt(e,i),this.variableNames.push("scale"),l="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        vec4 offset = ${a};
        vec4 scale = ${l};

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(${o}));

        setOutput((x - mean) * inv + offset);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ofe=({inputs:n,backend:e,attrs:t})=>{const{x:s,mean:r,variance:i,offset:o,scale:a}=n;z(r.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),z(o==null||r.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),z(a==null||r.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:l}=t;l==null&&(l=.001);const c=[s,r,i];let u=null;o!=null&&(u=o.shape,c.push(o));let h=null;a!=null&&(h=a.shape,c.push(a));const d=xe().getBool("WEBGL_PACK_NORMALIZATION")?new ife(s.shape,r.shape,i.shape,u,h,l):new rfe(s.shape,r.shape,i.shape,u,h,l);return e.runWebGLProgram(d,c,c[0].dtype)},afe={kernelName:Rf,backendName:"webgl",kernelFunc:ofe};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let lfe=class{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=ns(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const s=cfe(this.rank);let r;const i=e.map((o,a)=>`sourceLoc.${BC[a]} = start[${a}] + coords.${BC[a]};`);r=`
        ${t} sourceLoc;
        ${t} coords = getOutputCoords();
        ${i.join(`
`)}
      `,this.userCode=`
      void main() {
        ${r}
        setOutput(getSource(${s}));
      }
    `}};const BC=["x","y","z","w","u","v"];function cfe(n){if(n===1)return"sourceLoc";if(n<=6)return BC.slice(0,n).map(e=>"sourceLoc."+e).join(",");throw Error(`Slicing for rank ${n} is not yet supported`)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ufe{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const t=ns(this.rank),s=ti("coords",this.rank),r=ti("sourceLoc",this.rank),i=this.rank===1?"sourceLoc":`vec2(${r.slice(-2).join()})`,o=`getChannel(getSource(${r.join()}), ${i})`,a=`
      result.x = ${o};
      if (++${s[this.rank-1]} < ${e[this.rank-1]}) {
        ++${r[this.rank-1]};
        result.y = ${o};
        --${r[this.rank-1]};
      }
    `,l=this.rank===1?"":`
      --${s[this.rank-1]};
      if (++${s[this.rank-2]} < ${e[this.rank-2]}) {
        ++${r[this.rank-2]};
        result.z = ${o};
        if (++${s[this.rank-1]} < ${e[this.rank-1]}) {
          ++${r[this.rank-1]};
          result.w = ${o};
        }
      }
    `,c=this.rank<=4?`sourceLoc = coords +
            ${t}(${e.map((u,h)=>`start[${h}]`).join()});`:e.map((u,h)=>`${r[h]} = ${s[h]} + start[${h}];`).join(`
`);this.userCode=`
      void main() {
        ${t} coords = getOutputCoords();
        ${t} sourceLoc;
        ${c}
        vec4 result = vec4(0.);
        ${a}
        ${l}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hfe(n,e,t,s){const r=s.texData.get(n.dataId),i=s.makeTensorInfo(t,n.dtype),o=s.texData.get(i.dataId);Object.assign(o,r),o.refCount=1,o.shape=t,o.dtype=n.dtype;let a=Fw(e,Ot(n.shape));r.slice&&(a+=r.slice.flatOffset),o.slice={flatOffset:a,origDataId:r.slice&&r.slice.origDataId||n.dataId};const l=s.dataRefCount.get(o.slice.origDataId)||1;return s.dataRefCount.set(o.slice.origDataId,l+1),i}function kp(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{begin:i,size:o}=s,[a,l]=kA(r,i,o);if(u1(r,a,l),ye(l)===0)return t.makeTensorInfo(l,r.dtype,[]);if(t.shouldExecuteOnCPU([r])||r.dtype==="string"){const h=t.texData.get(r.dataId),d=she(h.values,a,l,r.shape,r.dtype);return t.makeTensorInfo(l,r.dtype,d)}const{isPacked:c}=t.texData.get(r.dataId),u=Dw(r.shape,a,l);if(c||!u){const h=xe().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new ufe(l):new lfe(l),d=[a];return t.runWebGLProgram(h,[r],r.dtype,d)}return t.uploadToGPU(r.dataId),hfe(r,a,l,t)}const dfe={kernelName:ap,backendName:"webgl",kernelFunc:kp};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ffe=n=>{const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{blockShape:i,crops:o}=s;z(r.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");const a=i.reduce((x,v)=>x*v),l=$h(r.shape,i,a),c=Ph(l.length,i.length),u=Lh(r.shape,i,a),h=g1(o,i.length),d=A1(u,o,i.length),f=[],p=yt({inputs:{x:r},backend:t,attrs:{shape:l}}),A=si({inputs:{x:p},backend:t,attrs:{perm:c}}),m=yt({inputs:{x:A},backend:t,attrs:{shape:u}}),g=kp({inputs:{x:m},backend:t,attrs:{begin:h,size:d}});return f.push(p),f.push(A),f.push(m),f.forEach(x=>t.disposeIntermediateTensorInfo(x)),g},pfe={kernelName:vf,backendName:"webgl",kernelFunc:ffe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mfe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,weights:i}=e,{size:o}=s,a=t.readSync(r.dataId),l=t.readSync(i.dataId),c=z$(a,l,i.dtype,i.shape,o);return t.makeTensorInfo([o],i.dtype,c)}const gfe={kernelName:hg,backendName:"webgl",kernelFunc:mfe};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Afe=`
  int r = int(a.r) & int(b.r);
  int g = int(a.g) & int(b.g);
  int rb = int(a.b) & int(b.b);
  int ra = int(a.a) & int(b.a);
  return vec4(r, g, rb, ra);
`,yfe=`
  return float(int(a.r) & int(b.r));
`;function xfe(n){const{inputs:e,backend:t}=n,{a:s,b:r}=e,i=xe().getBool("WEBGL_PACK_BINARY_OPERATIONS"),o=xe().getNumber("WEBGL_VERSION");if(t.shouldExecuteOnCPU([s,r])||o===1){const l=t.texData.get(s.dataId).values,c=t.texData.get(r.dataId).values,[u,h]=_ue(s.shape,r.shape,l,c,s.dtype),d=t.makeTensorInfo(h,s.dtype),f=t.texData.get(d.dataId);return f.values=u,d}let a;return i?a=new Tp(Afe,s.shape,r.shape,!1):a=new Mu(yfe,s.shape,r.shape),t.runWebGLProgram(a,[s,r],s.dtype)}const bfe={kernelName:dg,backendName:"webgl",kernelFunc:xfe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vfe(n){const{inputs:e,backend:t}=n,{s0:s,s1:r}=e,i=t.readSync(s.dataId),o=t.readSync(r.dataId),a=jt(Array.from(i),Array.from(o));return t.makeTensorInfo([a.length],"int32",Int32Array.from(a))}const Cfe={kernelName:fg,backendName:"webgl",kernelFunc:vfe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ife="return float(a != b);",nP=Rr({opSnippet:Ife,cpuKernelImpl:Yue,dtype:"bool"}),wfe={kernelName:jf,backendName:"webgl",kernelFunc:nP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WA(n){const{inputs:e,backend:t}=n,{input:s}=e,r=t.texData.get(s.dataId);return Hi({inputs:{x:r.complexTensorInfos.real},backend:t})}const Sfe={kernelName:Gg,backendName:"webgl",kernelFunc:WA};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Efe="return float(int(x));";function _fe(n,e){const t=new va(n.shape,Efe),s=e.runWebGLProgram(t,[n],"int32");return{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kC(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{dtype:i}=s;if(i==="complex64"){if(r.dtype==="complex64")return Hi({inputs:{x:r},backend:t});const o=Rs(r.shape),a=kC({inputs:{x:r},backend:t,attrs:{dtype:"float32"}}),l=wc({inputs:{real:a,imag:o},backend:t});return o.dispose(),t.disposeIntermediateTensorInfo(a),l}if(r.dtype==="complex64"){const o=WA({inputs:{input:r},backend:t}),a=kC({inputs:{x:o},backend:t,attrs:{dtype:i}});return t.disposeIntermediateTensorInfo(o),a}if(!Ax(r.dtype,i)){const o=Hi({inputs:{x:r},backend:t});return{dataId:o.dataId,shape:o.shape,dtype:i}}if(t.shouldExecuteOnCPU([r])){const o=t.texData.get(r.dataId).values,[a,l,c]=Tue(o,r.shape,r.dtype,i);return t.makeTensorInfo(a,l,c)}if(i==="int32")return _fe(r,t);if(i==="bool"){const o=t.makeTensorInfo([],"bool",Ws("bool",1)),l=nP({inputs:{a:r,b:o},backend:t});return t.disposeIntermediateTensorInfo(o),l}throw new Error(`Error in Cast: failed to cast ${r.dtype} to ${i}`)}const Tfe={kernelName:Gu,backendName:"webgl",kernelFunc:kC};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const S3="return ceil(x);",Bfe=$n({opSnippet:S3,packedOpSnippet:S3,cpuKernelImpl:Bue}),kfe={kernelName:Vu,backendName:"webgl",kernelFunc:Bfe};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Nfe=class{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Rfe{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`
      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mfe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{clipValueMin:i,clipValueMax:o}=s;let a;xe().getBool("WEBGL_PACK_CLIP")?a=new Rfe(r.shape):a=new Nfe(r.shape);const l=[[i],[o]];return t.runWebGLProgram(a,[r],r.dtype,l)}const Dfe={kernelName:Wu,backendName:"webgl",kernelFunc:Mfe};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Ffe=class{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function E3(n,e){return{dataId:e.dataId,dtype:e.dtype,shape:n.shape}}function $fe(n){const{inputs:e,backend:t}=n,{x:s}=e,r=t.texData.get(s.dataId),i=new Ffe(s.shape),o=[E3(s,r.complexTensorInfos.real),E3(s,r.complexTensorInfos.imag)];return t.runWebGLProgram(i,o,o[0].dtype)}const Pfe={kernelName:Cf,backendName:"webgl",kernelFunc:$fe};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Lfe=class{constructor(e){this.outputShape=[],this.outputShape=xi(e,1),this.variableNames=e.map((o,a)=>`T${a}`);const t=new Array(e.length-1);t[0]=e[0][1];for(let o=1;o<t.length;o++)t[o]=t[o-1]+e[o][1];const s=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let o=1;o<t.length;o++){const a=t[o-1];s.push(`else if (yC < ${t[o]}) setOutput(getT${o}(yR, yC-${a}));`)}const r=t.length,i=t[t.length-1];s.push(`else setOutput(getT${r}(yR, yC-${i}));`),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        ${s.join(`
        `)}
      }
    `}};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ofe{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=xi(e,t);const s=this.outputShape,r=s.length,i=ns(r),o=ti("coords",r),a=["x","y","z","w","u","v"].slice(0,r);this.variableNames=e.map((A,m)=>`T${m}`);const l=new Array(e.length-1);l[0]=e[0][t];for(let A=1;A<l.length;A++)l[A]=l[A-1]+e[A][t];const c=a[t],u=a.slice(-2),h=a.join();let d=`if (${c} < ${l[0]}) {
        return getChannel(
            getT0(${h}), vec2(${u.join()}));
        }`;for(let A=1;A<l.length;A++){const m=l[A-1];d+=`
        if (${c} < ${l[A]}  && ${c} >= ${l[A-1]}) {
          return getChannel(
            getT${A}(${Fy(a,c,m)}),
            vec2(${Fy(u,c,m)}));
        }`}const f=l.length,p=l[l.length-1];d+=`
        return getChannel(
          getT${f}(${Fy(a,c,p)}),
          vec2(${Fy(u,c,p)}));`,this.userCode=`
      float getValue(${a.map(A=>"int "+A)}) {
        ${d}
      }

      void main() {
        ${i} coords = getOutputCoords();
        vec4 result = vec4(getValue(${o}), 0., 0., 0.);

        ${o[r-1]} = ${o[r-1]} + 1;
        if (${o[r-1]} < ${s[r-1]}) {
          result.g = getValue(${o});
        }

        ${o[r-2]} = ${o[r-2]} + 1;
        if (${o[r-2]} < ${s[r-2]}) {
          result.a = getValue(${o});
        }

        ${o[r-1]} = ${o[r-1]} - 1;
        if (${o[r-2]} < ${s[r-2]} &&
            ${o[r-1]} < ${s[r-1]}) {
          result.b = getValue(${o});
        }
        setOutput(result);
      }
    `}}function Fy(n,e,t){const s=n.indexOf(e);return n.map((i,o)=>o===s?`${i} - ${t}`:i).join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function q1(n){const{inputs:e,backend:t}=n,{input:s}=e,r=t.texData.get(s.dataId);return Hi({inputs:{x:r.complexTensorInfos.imag},backend:t})}const Qfe={kernelName:Mg,backendName:"webgl",kernelFunc:q1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lm(n,e,t){const s=n[0].dtype;if(s==="complex64"){const f=n.map(x=>WA({inputs:{input:x},backend:t})),p=n.map(x=>q1({inputs:{input:x},backend:t})),A=lm(f,e,t),m=lm(p,e,t),g=wc({inputs:{real:A,imag:m},backend:t});return f.forEach(x=>t.disposeIntermediateTensorInfo(x)),p.forEach(x=>t.disposeIntermediateTensorInfo(x)),t.disposeIntermediateTensorInfo(A),t.disposeIntermediateTensorInfo(m),g}let r=t.shouldExecuteOnCPU(n);if(s==="string"&&(r=!0),r){const f=n.map(b=>{const _=[-1,ye(b.shape.slice(e))];return yt({inputs:{x:b},backend:t,attrs:{shape:_}})}),p=f.map(b=>({vals:t.readSync(b.dataId),shape:b.shape})),A=xi(f.map(b=>b.shape),1),m=f[0].shape[0]===1,g=kue(p,A,s,m),x=xi(n.map(b=>b.shape),e),v=t.makeTensorInfo(x,s,g);return f.forEach(b=>t.disposeIntermediateTensorInfo(b)),v}const i=n.filter(f=>ye(f.shape)>0),o=xe().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&i[0].shape.length>1;if(i.length===1){const f=o?new va(n[0].shape,zl):new Hl(n[0].shape,zl);return t.runWebGLProgram(f,n,s)}const a=xe().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(i.length>a){const f=[];for(let A=0;A<i.length;A+=a){const m=i.slice(A,A+a);f.push(lm(m,e,t))}const p=lm(f,e,t);for(const A of f)t.disposeIntermediateTensorInfo(A);return p}if(o){const f=new Ofe(i.map(p=>p.shape),e);return t.runWebGLProgram(f,i,s)}const{tensors2D:l,outShape:c}=Ufe(i,e,t),u=new Lfe(l.map(f=>f.shape)),h=t.runWebGLProgram(u,l,s);l.forEach(f=>t.disposeIntermediateTensorInfo(f));const d=yt({inputs:{x:h},attrs:{shape:c},backend:t});return t.disposeIntermediateTensorInfo(h),d}function Ufe(n,e,t){const s=xi(n.map(i=>i.shape),e);return{tensors2D:n.map(i=>yt({inputs:{x:i},attrs:{shape:[-1,ye(i.shape.slice(e))]},backend:t})),outShape:s}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sP(n){const{inputs:e,backend:t,attrs:s}=n,{axis:r}=s,i=an(r,e[0].shape)[0],o=e.map(c=>c.shape);f1(o,i);const a=xi(e.map(c=>c.shape),i);if(ye(a)===0)return t.makeTensorInfo(a,e[0].dtype,[]);const l=e.filter(c=>ye(c.shape)>0);return l.length===1?Hi({inputs:{x:l[0]},backend:t}):lm(l,i,t)}const zfe={kernelName:If,backendName:"webgl",kernelFunc:sP};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class rP{constructor(e,t=!1,s=null,r=!1,i=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const o=e.padInfo.top,a=e.padInfo.left,l=e.strideHeight,c=e.strideWidth,u=e.dilationHeight,h=e.dilationWidth,d=e.filterHeight,f=e.filterWidth,p=Math.floor(e.inChannels/4)*4,A=e.inChannels%4,m=e.dataFormat==="channelsLast",g=m?1:2,x=m?2:3,v=m?3:1;let b="",w="";s&&(r?b=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${s}
        }`:i?b=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${s}
        }`:b=`
          float activation(float x) {
            ${s}
          }
        `,w="result = activation(result);");const _=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),i&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${b}

      const ivec2 strides = ivec2(${l}, ${c});
      const ivec2 pads = ivec2(${o}, ${a});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[${v}];

        ivec2 xRCCorner =
            ivec2(coords[${g}], coords[${x}]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${d}; wR++) {
          int xR = xRCorner + wR * ${u};

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${f}; wC++) {
            int xC = xCCorner + wC * ${h};

            if (xC < 0 || xC >= ${e.inWidth}) {
              continue;
            }

            for (int d1 = 0; d1 < ${p}; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (${m}) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (${A===1}) {

              if (${m}) {
                dotProd +=
                    getX(batch, xR, xC, ${p}) *
                    getW(wR, wC, ${p}, d2);
              } else {
                dotProd +=
                    getX(batch, ${p}, xR, xC) *
                    getW(wR, wC, ${p}, d2);
              }

            } else if (${A===2}) {
              vec2 wValues = vec2(
                getW(wR, wC, ${p}, d2),
                getW(wR, wC, ${p} + 1, d2)
              );

              if (${m}) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, ${p}),
                  getX(batch, xR, xC, ${p} + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, ${p}, xR, xC),
                  getX(batch, ${p} + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (${A===3}) {
              vec3 wValues = vec3(
                getW(wR, wC, ${p}, d2),
                getW(wR, wC, ${p} + 1, d2),
                getW(wR, wC, ${p} + 2, d2)
              );

              if (${m}) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, ${p}),
                  getX(batch, xR, xC, ${p} + 1),
                  getX(batch, xR, xC, ${p} + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, ${p}, xR, xC),
                  getX(batch, ${p} + 1, xR, xC),
                  getX(batch, ${p} + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        ${_}
        ${w}
        setOutput(result);
      }
    `}}class Gfe{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,s=e.padInfo.top,r=e.padInfo.left,i=e.strideDepth,o=e.strideHeight,a=e.strideWidth,l=e.dilationDepth,c=e.dilationHeight,u=e.dilationWidth,h=e.filterDepth,d=e.filterHeight,f=e.filterWidth,p=Math.floor(e.inChannels/4)*4,A=e.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(${i}, ${o}, ${a});
      const ivec3 pads = ivec3(${t}, ${s}, ${r});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < ${h}; wF++) {
          int xF = xFCorner + wF * ${l};

          if (xF < 0 || xF >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${d}; wR++) {
            int xR = xRCorner + wR * ${c};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${f}; wC++) {
              int xC = xCCorner + wC * ${u};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              for (int d1 = 0; d1 < ${p}; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (${A===1}) {
                dotProd +=
                  getX(batch, xF, xR, xC, ${p}) *
                  getW(wF, wR, wC, ${p}, d2);
              } else if (${A===2}) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, ${p}),
                  getX(batch, xF, xR, xC, ${p} + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, ${p}, d2),
                  getW(wF, wR, wC, ${p} + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (${A===3}) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, ${p}),
                  getX(batch, xF, xR, xC, ${p} + 1),
                  getX(batch, xF, xR, xC, ${p} + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, ${p}, d2),
                  getW(wF, wR, wC, ${p} + 1, d2),
                  getW(wF, wR, wC, ${p} + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class iP{constructor(e,t=!1,s=null,r=!1,i=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=Or(this.outputShape.length);const o=e.padInfo.left,a=e.strideWidth,l=e.dilationWidth,c=e.filterHeight,u=e.filterWidth,h=u;let d=`
       int xR; int xC; int xCOffset;
       vec4 wTexel; vec4 previous; vec4 final;`;for(let m=0;m<u;m++)d+=`
           vec4 xTexelC${m*2};
           int xTexelC${m*2}Ready;
           vec4 xTexelC${m*2+1};
           int xTexelC${m*2+1}Ready;
           vec4 xC${m};`;d+=`
     for (int r = 0; r < ${c}; r++) {
      for (int d1 = 0; d1 < ${e.inChannels}; d1 += 2) {
       `;for(let m=0;m<u;m++)d+=`
           xTexelC${m*2} = vec4(0.0);
           xTexelC${m*2}Ready = 0;
           xTexelC${m*2+1} = vec4(0.0);
           xTexelC${m*2+1}Ready = 0;
           xC${m} = vec4(0.0);`;d+=`
         xR = xRCorner + r * dilations[0];
         if (xR >=0 && xR < inDims[0]) {
       `;for(let m=0;m<(h+1)/2;m++){const g=m*2;if(d+=`
           xC = xCCorner + ${g*l};
           `,a===1){if(g<u&&(o%2===1?(d+=`
                 xCOffset = xC + 1;
                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${g}Ready == 0) {
                   xTexelC${g} = getX(batch, xR, xCOffset, d1);

                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${g}.zw = vec2(0.0);
                   }
                   xTexelC${g}Ready = 1;
                 }
               `,l===1&&g>0?d+=`
                 xC${g} = vec4(xTexelC${g-2}.zw, xTexelC${g}.xy);
                 `:d+=`
                   xCOffset = xC + 1 - 2;

                   if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       previous.zw = vec2(0.0);
                     }

                     xC${g} = vec4(previous.zw, xTexelC${g}.xy);
                   } else {
                     xC${g} = vec4(0.0, 0.0, xTexelC${g}.xy);
                   }
                   `):d+=`
                 if (xC >= 0 && xC < inDims[1] && xTexelC${g}Ready == 0) {
                   xTexelC${g} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${g}.zw = vec2(0.0);
                   }
                   xTexelC${g}Ready = 1;
                 }

                 xC${g} = xTexelC${g};
                 `,g+1<u)){const x=o%2===0?mx(l):l;l%2===0&&o%2===1||l%2!==0&&o%2!==1?(d+=`
                   xCOffset = xC + imod(pads[1], 2) + ${x};

                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${g+1}Ready == 0) {
                     xTexelC${g+1} = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       xTexelC${g+1}.zw = vec2(0.0);
                     }
                     xTexelC${g+1}Ready = 1;
                   }
                   `,l>1?d+=`
                     xCOffset -= 2;
                     if (xCOffset >= 0 && xCOffset < inDims[1]) {
                      previous = getX(batch, xR, xCOffset, d1);
                      xC${g+1} = vec4(previous.zw, xTexelC${g+1}.xy);
                     } else {
                      xC${g+1} = vec4(0.0, 0.0, xTexelC${g+1}.xy);
                     }
                     `:d+=`
                     xC${g+1} = vec4(xTexelC${g}.zw, xTexelC${g+1}.xy);
                     `):x===1?d+=`
                     xC${g+1} = xTexelC${g};
                     `:d+=`
                     xCOffset = xC + ${x};

                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${g+1}Ready == 0) {
                       xTexelC${g+1} = getX(batch, xR, xCOffset, d1);
                       if (xCOffset + 1 >= inDims[1]) {
                         xTexelC${g+1}.zw = vec2(0.0);
                       }
                       xTexelC${g+1}Ready = 1;
                     }

                     xC${g+1} = xTexelC${g+1};
                     `}}else g<u&&(o%2===1?(d+=`
                 xCOffset = xC + 1 - strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${g}Ready == 0) {
                   xTexelC${g} = getX(batch, xR, xCOffset, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${g}.zw = vec2(0.0);
                   }
                   xTexelC${g}Ready = 1;
                 }

                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${g+1}Ready == 0) {
                   xTexelC${g+1} = getX(batch, xR, xC + 1, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xC + 2 >= inDims[1]) {
                     xTexelC${g+1}.zw = vec2(0.0);
                   }
                   xTexelC${g+1}Ready = 1;
                 }

                 xC${g} = vec4(xTexelC${g}.zw, xTexelC${g+1}.zw);
               `,g+1<u&&(d+=`
                   final = vec4(0.0);
                   xCOffset = xC + 1 + strides[1];
                   if(xCOffset >= 0 && xCOffset < inDims[1]) {
                     final = getX(batch, xR, xCOffset, d1);
                   }
                   xC${g+1} = vec4(xTexelC${g+1}.xy, final.xy);
                 `)):(d+=`
                 if(xC >= 0 && xC < inDims[1] && xTexelC${g}Ready == 0) {
                   xTexelC${g} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${g}.zw = vec2(0.0);
                   }
                   xTexelC${g}Ready = 1;
                 }

                 xCOffset = xC + strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${g+1}Ready == 0) {
                   xTexelC${g+1} = getX(batch, xR, xCOffset, d1);
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${g+1}.zw = vec2(0.);
                   }
                   xTexelC${g+1}Ready = 1;
                 }

                 xC${g} = vec4(
                   xTexelC${g}.xy, xTexelC${g+1}.xy);
               `,g+1<u&&(d+=`
                   xC${g+1} = vec4(xTexelC${g}.zw, xTexelC${g+1}.zw);
                 `)));g<u&&(d+=`
             wTexel = getW(r, ${g}, d1, d2);
             dotProd += xC${g}.xxzz * vec4(wTexel.xy, wTexel.xy);
             if(d1 + 1 < ${e.inChannels}) {
               dotProd += xC${g}.yyww * vec4(wTexel.zw, wTexel.zw);
             }
           `,g+1<u&&(d+=`
               wTexel = getW(r, ${g+1}, d1, d2);
               dotProd += xC${g+1}.xxzz * vec4(wTexel.xy, wTexel.xy);
               if(d1 + 1 < ${e.inChannels}) {
                 dotProd += xC${g+1}.yyww * vec4(wTexel.zw, wTexel.zw);
               }
             `))}d+=`
     }
   `,d+=`
     }
   `,d+=`
     }
   `;let f="",p="";s&&(r?f=`vec4 activation(vec4 a) {
           vec4 b = getPreluActivationWeightsAtOutCoords();
           ${s}
         }`:i?f=`vec4 activation(vec4 a) {
           vec4 b = getLeakyreluAlphaAtOutCoords();
           ${s}
         }`:f=`vec4 activation(vec4 x) {
           ${s}
         }`,p="result = activation(result);");const A=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),i&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
       ${f}

       void main() {
         ivec4 coords = getOutputCoords();
         int batch = coords.x;
         ivec2 xRCCorner = coords.yz * strides - pads;
         int d2 = coords.w;
         int xRCorner = xRCCorner.x;
         int xCCorner = xRCCorner.y;

         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
         vec4 dotProd = vec4(0.000000000000001);

         ${d}

         vec4 result = dotProd - vec4(0.000000000000001);
         ${A}
         ${p}
         setOutput(result);
       }
     `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Vfe{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=Or(this.outputShape.length);const{dataFormat:s}=t,r=oi(),i=s==="channelsLast",o=i?1:2,a=i?2:3,l=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${e[2]} && pos < ${e[1]}) {`;let c="";for(let u=0;u<=1;u++)for(let h=0;h<=1;h++)c+=`
          blockIndex = rc.z + ${h};
          pos = rc.y + ${u};

          ${l}
            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];
            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);

            if(d0 < inputShape[${o}] && d0 >= 0) {
              // Use custom imod instead mod. On Intel GPU, mod may generate
              // unexpected value.
              // https://github.com/tensorflow/tfjs/issues/5447
              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];
              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /
                  inChannels);

              if(d1 < inputShape[${a}] && d1 >= 0) {

                ch = imod(pos, inChannels);

                if (${i}) {
                  innerDims = vec2(d1, ch);
                  result[${u*2+h}] = getChannel(
                    getA(rc.x, d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[${u*2+h}] = getChannel(
                    getA(rc.x, ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        ${c}

        ${r.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function W0(n,e){const t=n.length;return t>=3?e?[...n.slice(0,-3),n[t-3]*n[t-2],n[t-1]]:[...n.slice(0,-3),n[t-3],n[t-2]*n[t-1]]:!e&&t===1&&n[0]>1?[n[0],1]:null}function oP({x:n,filter:e,convInfo:t,backend:s,bias:r=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:a=null}){const l=n.shape,c=s.texData.get(n.dataId),u=t.inChannels,h=l[0]*l[1]*l[2],d=t.outChannels,f=t.dataFormat==="channelsLast",p=!1,A=!1;let m;const g=[];if(i!=null){const b=W0(i.shape,f);b!=null&&(i=yt({inputs:{x:i},backend:s,attrs:{shape:b}}),g.push(i))}if(r!=null){const b=W0(r.shape,f);b!=null&&(r=yt({inputs:{x:r},backend:s,attrs:{shape:b}}),g.push(r))}if(!((h===1||d===1)&&u>J$)&&c.isPacked&&f&&c.texture!=null&&l[2]%2!==0&&dn(c.shape.slice(-3),l.slice(-3))){const b=l[0]*l[1]*(l[2]+1),w={dataId:n.dataId,shape:[1,b,t.inChannels],dtype:n.dtype},_=c.shape;c.shape=c.shape.slice(),c.shape[c.shape.length-2]++,z(G0(c.shape,w.shape),()=>`packed reshape ${c.shape} to ${w.shape} isn't free`);const N=yt({inputs:{x:e},backend:s,attrs:{shape:[1,t.inChannels,t.outChannels]}});g.push(N);const M=V0({a:w,b:N,backend:s,transposeA:p,transposeB:A,bias:r,activation:a,preluActivationWeights:i,leakyreluAlpha:o}),T=s.texData.get(M.dataId);z(T.isPacked,()=>"batchMatMul result is expected to be packed"),c.shape=_,T.shape=t.outShape,m=Hi({inputs:{x:M},backend:s}),m.shape=t.outShape,g.push(M)}else{const b=t.outHeight*t.outWidth,w=yt({inputs:{x:n},backend:s,attrs:{shape:f?[t.batchSize,b,t.inChannels]:[t.batchSize,t.inChannels,b]}}),_=yt({inputs:{x:e},backend:s,attrs:{shape:[1,t.inChannels,t.outChannels]}}),N=V0({a:f?w:_,b:f?_:w,transposeA:!f,transposeB:A,backend:s,bias:r,activation:a,preluActivationWeights:i,leakyreluAlpha:o});m=yt({inputs:{x:N},backend:s,attrs:{shape:t.outShape}}),g.push(w),g.push(_),g.push(N)}for(const b of g)s.disposeIntermediateTensorInfo(b);return m}function aP({x:n,filter:e,convInfo:t,backend:s,bias:r=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:a=null}){const{filterWidth:l,filterHeight:c,inChannels:u,outWidth:h,outHeight:d,dataFormat:f}=t,p=f==="channelsLast",A=l*c*u,m=d*h,g=[t.batchSize,A,m],x=!0,v=!1,b=[];if(i!=null){const K=W0(i.shape,p);K!=null&&(i=yt({inputs:{x:i},backend:s,attrs:{shape:K}}),b.push(i))}if(r!=null){const K=W0(r.shape,p);K!=null&&(r=yt({inputs:{x:r},backend:s,attrs:{shape:K}}),b.push(r))}const w=yt({inputs:{x:e},backend:s,attrs:{shape:[1,A,ye(e.shape)/A]}});b.push(w);const _=new Vfe(g,t),N=[n.shape,[t.padInfo.top,t.padInfo.left],[t.strideHeight,t.strideWidth],[t.dilationHeight,t.dilationWidth],[t.inChannels],[t.filterWidth*t.inChannels],[t.outWidth]],M=s.runWebGLProgram(_,[n],"float32",N),T=yt({inputs:{x:M},backend:s,attrs:{shape:g}});b.push(M),b.push(T);const k=r!=null,B=i!=null,L=a==="leakyrelu",U=a?Ym(a,!0):null,V=new K$(p?T.shape:w.shape,p?w.shape:T.shape,p?[t.batchSize,m,t.outChannels]:[t.batchSize,t.outChannels,m],x,v,k,U,B,L),W=p?[T,w]:[w,T];if(r&&W.push(r),B&&W.push(i),L){const K=s.makeTensorInfo([],"float32",El(o,"float32"));W.push(K),b.push(K)}const H=s.runWebGLProgram(V,W,"float32"),ee=yt({inputs:{x:H},backend:s,attrs:{shape:t.outShape}});b.push(H);for(const K of b)s.disposeIntermediateTensorInfo(K);return ee}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wfe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:i}=e,{strides:o,pad:a,dataFormat:l,dilations:c,dimRoundingMode:u}=s,h=Xi(l),d=As(r.shape,i.shape,o,c,a,u,!1,h);let f;if(d.filterHeight===1&&d.filterWidth===1&&d.dilationHeight===1&&d.dilationWidth===1&&d.strideHeight===1&&d.strideWidth===1&&(d.padInfo.type==="SAME"||d.padInfo.type==="VALID"))f=oP({x:r,filter:i,convInfo:d,backend:t});else if(d.strideWidth<=2&&h==="channelsLast"&&xe().getBool("WEBGL_EXP_CONV")){const A=new iP(d),m=[[d.padInfo.top,d.padInfo.left],[d.strideHeight,d.strideWidth],[d.dilationHeight,d.dilationWidth],[d.inHeight,d.inWidth]];f=t.runWebGLProgram(A,[r,i],"float32",m)}else if(xe().getBool("WEBGL_CONV_IM2COL"))f=aP({x:r,filter:i,convInfo:d,backend:t});else{const A=new rP(d);f=t.runWebGLProgram(A,[r,i],"float32")}const p=yt({inputs:{x:f},backend:t,attrs:{shape:d.outShape}});return t.disposeIntermediateTensorInfo(f),p}const Hfe={kernelName:wf,backendName:"webgl",kernelFunc:Wfe};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let qfe=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,s=e.strideWidth,r=e.padInfo.top,i=e.padInfo.left,o=e.dataFormat==="channelsLast";this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${r};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${s} - ${i};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              ${o?`float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);`:`float dyValue = getDy(b, d2, yR, yC);
              float xValue = getX(b, d1, xR, xC);
              dotProd += (xValue * dyValue);`}
            }
          }
        }
        setOutput(dotProd);
      }
    `}},Yfe=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,s=e.filterWidth,r=e.strideHeight,i=e.strideWidth,o=e.dataFormat==="channelsLast",a=t-1-e.padInfo.top,l=s-1-e.padInfo.left,c=o?1:2,u=o?2:3,h=o?3:1;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${l});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[${h}];

        ivec2 dyCorner = ivec2(coords[${c}], coords[${u}]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${r}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${s}; wC++) {
            float dyC = float(dyCCorner + wC) / ${i}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${s} - 1 - wC;

            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {

              if (${o}) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}},jfe=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,s=e.strideHeight,r=e.strideWidth,i=e.padInfo.front,o=e.padInfo.top,a=e.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yF = 0; yF < ${e.outDepth}; yF++) {
            int xF = wF + yF * ${t} - ${i};

            if (xF < 0 || xF >= ${e.inDepth}) {
              continue;
            }

            for (int yR = 0; yR < ${e.outHeight}; yR++) {
              int xR = wR + yR * ${s} - ${o};

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int yC = 0; yC < ${e.outWidth}; yC++) {
                int xC = wC + yC * ${r} - ${a};

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}},Xfe=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,s=e.filterHeight,r=e.filterWidth,i=e.strideDepth,o=e.strideHeight,a=e.strideWidth,l=t-1-e.padInfo.front,c=s-1-e.padInfo.top,u=r-1-e.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${l}, ${c}, ${u});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < ${t}; wF++) {
          float dyF = float(dyFCorner + wF) / ${i}.0;

          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = ${t} - 1 - wF;

          for (int wR = 0; wR < ${s}; wR++) {
            float dyR = float(dyRCorner + wR) / ${o}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = ${s} - 1 - wR;

            for (int wC = 0; wC < ${r}; wC++) {
              float dyC = float(dyCCorner + wC) / ${a}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = ${r} - 1 - wC;

              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kfe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,dy:i}=e,{strides:o,pad:a,dataFormat:l,dimRoundingMode:c,filterShape:u}=s,h=Xi(l),d=As(r.shape,u,o,1,a,c,!1,h),f=new qfe(d);return t.runWebGLProgram(f,[r,i],"float32")}const Jfe={kernelName:mg,backendName:"webgl",kernelFunc:Kfe};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Zfe{constructor(e){this.variableNames=["dy","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"strides",type:"vec2"}],this.outputShape=e.inShape,this.enableShapeUniforms=Or(this.outputShape.length);const t=e.filterHeight,s=e.filterWidth,r=t-1-e.padInfo.top,i=s-1-e.padInfo.left;this.userCode=`
      const ivec2 pads = ivec2(${r}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];

        ivec2 dyCorner = ivec2(coords[1], coords[2]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        vec4 result = vec4(0.);
        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / strides[0];
          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);
          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${s}; wC++) {
            int wCPerm = ${s} - 1 - wC;

            float dyC = float(dyCCorner + wC) / strides[1];
            bool idyCVal = (dyC >= 0.0) && (dyC < ${e.outWidth}.0)
              && (fract(dyC) == 0.0);
            int idyC = int(dyC);

            float dyC2 = float(dyCCorner + wC + 1) / strides[1];
            bool idyCVal2 = (dyC2 >= 0.0) && (dyC2 < ${e.outWidth}.0)
              && (fract(dyC2) == 0.0);
            int idyC2 = int(dyC2);

            if (idyCVal && idyCVal2) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC, d2);
                vec4 dySample2 = (idyC / 2 == idyC2 / 2) ?
                  dySample : getDy(batch, idyR, idyC2, d2);

                vec2 dyValue = mod(float(idyC), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.xy += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));

                dyValue = mod(float(idyC2), 2.) == 0. ?
                  dySample2.xy : dySample2.zw;
                result.zw += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            } else if (idyCVal) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC, d2);
                vec2 dyValue = mod(float(idyC), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.xy += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            } else if (idyCVal2) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC2, d2);
                vec2 dyValue = mod(float(idyC2), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.zw += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            }
          }
        }
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function epe(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,filter:i}=e,{inputShape:o,strides:a,pad:l,dataFormat:c,dimRoundingMode:u}=s,h=Xi(c),d=As(o,i.shape,a,1,l,u,!1,h);if(xe().getBool("WEBGL_PACK_CONV2DTRANSPOSE")&&h==="channelsLast"){const f=[[d.strideHeight,d.strideWidth]],p=new Zfe(d);return t.runWebGLProgram(p,[r,i],"float32",f)}else{const f=new Yfe(d);return t.runWebGLProgram(f,[r,i],"float32")}}const tpe={kernelName:Sf,backendName:"webgl",kernelFunc:epe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function npe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:i}=e,{strides:o,pad:a,dilations:l}=s,c=ia(r.shape,i.shape,o,l,a),u=new Gfe(c);return t.runWebGLProgram(u,[r,i],"float32")}const spe={kernelName:Ef,backendName:"webgl",kernelFunc:npe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rpe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,dy:i}=e,{strides:o,pad:a,filterShape:l}=s,c=ia(r.shape,l,o,1,a),u=new jfe(c);return t.runWebGLProgram(u,[r,i],"float32")}const ipe={kernelName:gg,backendName:"webgl",kernelFunc:rpe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ope(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,filter:i}=e,{pad:o,strides:a,inputShape:l}=s,c=ia(l,i.shape,a,1,o),u=new Xfe(c);return t.runWebGLProgram(u,[r,i],"float32")}const ape={kernelName:Ag,backendName:"webgl",kernelFunc:ope};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lpe=Bp+`
  return cos(x);
`,cpe=`
  vec4 result = cos(x);
  bvec4 isNaN = isnan(x);
  ${Gh}
  return result;
`,upe=$n({opSnippet:lpe,packedOpSnippet:cpe}),hpe={kernelName:Hu,backendName:"webgl",kernelFunc:upe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dpe=`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`,fpe=$n({opSnippet:dpe}),ppe={kernelName:qu,backendName:"webgl",kernelFunc:fpe};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let mpe=class{constructor(e,t,s,r,i){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[o,a,l,c]=e,[u]=t,[h,d]=s;this.outputShape=[u,h,d,c];const f=r==="bilinear"?1:0,[p,A]=[`${a-1}.0`,`${l-1}.0`],[m,g,x]=h>1?[`${(a-1)/(h-1)}`,"(y2-y1) * height_ratio",`y1*${p} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${p}`],[v,b,w]=d>1?[`${(l-1)/(d-1)}`,"(x2-x1) * width_ratio",`x1*${A} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${A}`];this.userCode=`
      const float height_ratio = float(${m});
      const float width_ratio = float(${v});
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= ${o}) {
          return;
        }

        float height_scale = ${g};
        float width_scale = ${b};

        float in_y = ${x};
        if( in_y < 0.0 || in_y > ${p} ) {
          setOutput(float(${i}));
          return;
        }
        float in_x = ${w};
        if( in_x < 0.0 || in_x > ${A} ) {
          setOutput(float(${i}));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(${f} == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gpe=n=>{const{inputs:e,backend:t,attrs:s}=n,{image:r,boxes:i,boxInd:o}=e,{cropSize:a,method:l,extrapolationValue:c}=s,u=new mpe(r.shape,i.shape,a,l,c);return t.runWebGLProgram(u,[r,i,o],"float32")},Ape={kernelName:xg,backendName:"webgl",kernelFunc:gpe};var Xm;(function(n){n.Prod="*",n.Sum="+"})(Xm||(Xm={}));let _3=class{constructor(e,t,s,r){this.op=e,this.outputShape=t,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const i=this.outputShape.length,o=this.op===Xm.Prod?"1.0":"0.0",a=s?o:`getX(${T3(i,"coords",this.op)})`,l=this.outputShape[this.outputShape.length-1];let c="",u="";s?(c=r?`end != ${l-1}`:"end != 0",u=r?"end + 1":"end - 1"):(c=r?`end + pow2 < ${l}`:"end >= pow2",u=r?"end + pow2":"end - pow2"),this.userCode=`
      void main() {
        ${ns(i)} coords = getOutputCoords();
        int end = ${B3(i,"coords",this.op)};
        float val = ${a};
        int pow2 = int(pow(2.0, index));
        if (${c}) {
          int idx = ${u};
          ${B3(i,"coords",this.op)} = idx;
          val ${this.op}= getX(${T3(i,"coords",this.op)});
        }
        setOutput(val);
      }
    `}};function T3(n,e,t){if(n===1)return`${e}`;if(n===2)return`${e}.x, ${e}.y`;if(n===3)return`${e}.x, ${e}.y, ${e}.z`;if(n===4)return`${e}.x, ${e}.y, ${e}.z, ${e}.w`;throw new Error(`Cumulative ${t} for rank ${n} is not yet supported`)}function B3(n,e,t){if(n===1)return`${e}`;if(n===2)return`${e}.y`;if(n===3)return`${e}.z`;if(n===4)return`${e}.w`;throw new Error(`Cumulative ${t} for rank ${n} is not yet supported`)}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lP(n,e,t,s,r,i){const o=e.shape.length,a=ss([s],o);let l=e;a!=null&&(l=si({inputs:{x:e},backend:t,attrs:{perm:a}}));const c=ys(1,o)[0];if(c!==o-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${e.shape.length-1} but got axis=${s}`);const u=l.shape[c];let h=Hi({inputs:{x:l},backend:t});for(let d=0;d<=Math.ceil(Math.log2(u))-1;d++){const f=new _3(n,l.shape,!1,i),p=[[d]],A=h;h=t.runWebGLProgram(f,[h],h.dtype,p),t.disposeIntermediateTensorInfo(A)}if(r){const d=new _3(n,l.shape,r,i),f=h;h=t.runWebGLProgram(d,[h],h.dtype),t.disposeIntermediateTensorInfo(f)}if(a!=null){const d=Oa(a),f=si({inputs:{x:h},backend:t,attrs:{perm:d}});return t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(l),f}return h}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ype(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:i,exclusive:o,reverse:a}=s;return lP(Xm.Prod,r,t,i,o,a)}const xpe={kernelName:yg,backendName:"webgl",kernelFunc:ype};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bpe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:i,exclusive:o,reverse:a}=s;return lP(Xm.Sum,r,t,i,o,a)}const vpe={kernelName:_f,backendName:"webgl",kernelFunc:bpe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cpe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,weights:i}=e,{size:o,binaryOutput:a}=s;if(r.shape.length===1){const l=t.readSync(r.dataId),c=t.readSync(i.dataId),u=z$(l,c,i.dtype,i.shape,o);return t.makeTensorInfo([o],i.dtype,u)}else if(r.shape.length===2){const l=t.bufferSync(r),c=t.bufferSync(i),u=Eue(l,c,o,a);return t.makeTensorInfo(u.shape,i.dtype,u.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}const Ipe={kernelName:bg,backendName:"webgl",kernelFunc:Cpe};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let wpe=class{constructor(e,t,s){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=s,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = ${this.getHeightCoordString()};
      int w = ${this.getWidthCoordString()};
      int d = ${this.getDepthCoordString()};

      int in_h = h / ${t};
      int offset_h = imod(h, ${t});
      int in_w = w / ${t};
      int offset_w = imod(w, ${t});
      int offset_d = (offset_h * ${t} + offset_w) *
        ${this.getOutputDepthSize()};
      int in_d = d + offset_d;

      float result = ${this.getInputSamplingString()};
      setOutput(result);
    }
  `}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Spe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{blockSize:i,dataFormat:o}=s,a=r.shape[0],l=o==="NHWC"?r.shape[1]:r.shape[2],c=o==="NHWC"?r.shape[2]:r.shape[3],u=o==="NHWC"?r.shape[3]:r.shape[1],h=l*i,d=c*i,f=u/(i*i),p=o==="NHWC"?[a,h,d,f]:[a,f,h,d],A=new wpe(p,i,o);return t.runWebGLProgram(A,[r],r.dtype)}const Epe={kernelName:vg,backendName:"webgl",kernelFunc:Spe};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let cP=class{constructor(e,t=!1,s=null,r=!1,i=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=Or(this.outputShape.length);const o=e.filterHeight,a=e.filterWidth,l=e.outChannels/e.inChannels;let c="",u="";s&&(r?c=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${s}
        }`:i?c=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${s}
        }`:c=`
          float activation(float x) {
            ${s}
          }
        `,u="result = activation(result);");const h=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),i&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${c}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${l};
        int q = d2 - d1 * ${l};

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < ${o}; wR++) {
          int xR = xRCorner + wR * dilations[0];

          if (xR < 0 || xR >= inDims[0]) {
            continue;
          }

          for (int wC = 0; wC < ${a}; wC++) {
            int xC = xCCorner + wC * dilations[1];

            if (xC < 0 || xC >= inDims[1]) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        ${h}
        ${u}
        setOutput(result);
      }
    `}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class uP{constructor(e,t=!1,s=null,r=!1,i=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=Or(this.outputShape.length);const o=e.outChannels/e.inChannels,a=e.padInfo.left,l=e.strideWidth,c=e.dilationWidth,u=e.filterHeight,h=e.filterWidth,d=h;let f=`
      int xR; int xC; int xCOffset;
      vec4 wTexel; vec4 previous; vec4 final;`;for(let g=0;g<h;g++)f+=`
          vec4 xTexelC${g*2};
          int xTexelC${g*2}Ready;
          vec4 xTexelC${g*2+1};
          int xTexelC${g*2+1}Ready;
          vec4 xC${g};`;f+=`
    for (int r = 0; r < ${u}; r++) {
      `;for(let g=0;g<h;g++)f+=`
          xTexelC${g*2} = vec4(0.0);
          xTexelC${g*2}Ready = 0;
          xTexelC${g*2+1} = vec4(0.0);
          xTexelC${g*2+1}Ready = 0;
          xC${g} = vec4(0.0);`;f+=`
        xR = xRCorner + r * dilations[0];
        if (xR >=0 && xR < inDims[0]) {
      `;for(let g=0;g<(d+1)/2;g++){const x=g*2;if(f+=`
          xC = xCCorner + ${x*c};
          `,l===1){if(x<h&&(a%2===1?(f+=`
                xCOffset = xC + 1;
                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x}Ready == 0) {
                  xTexelC${x} = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${x}.zw = vec2(0.0);
                  }
                  xTexelC${x}Ready = 1;
                }
              `,c===1&&x>0?f+=`
                xC${x} = vec4(xTexelC${x-2}.zw, xTexelC${x}.xy);
                `:f+=`
                  xCOffset = xC + 1 - 2;

                  if (xCOffset >= 0 && xCOffset < inDims[1]) {
                    previous = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      previous.zw = vec2(0.0);
                    }

                    xC${x} = vec4(previous.zw, xTexelC${x}.xy);
                  } else {
                    xC${x} = vec4(0.0, 0.0, xTexelC${x}.xy);
                  }
                  `):f+=`
                if (xC >= 0 && xC < inDims[1] && xTexelC${x}Ready == 0) {
                  xTexelC${x} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${x}.zw = vec2(0.0);
                  }
                  xTexelC${x}Ready = 1;
                }

                xC${x} = xTexelC${x};
                `,x+1<h)){const v=a%2===0?mx(c):c;c%2===0&&a%2===1||c%2!==0&&a%2!==1?(f+=`
                  xCOffset = xC + imod(pads[1], 2) + ${v};

                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x+1}Ready == 0) {
                    xTexelC${x+1} = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      xTexelC${x+1}.zw = vec2(0.0);
                    }
                    xTexelC${x+1}Ready = 1;
                  }
                  `,c>1?f+=`
                    xCOffset -= 2;
                    if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);
                     xC${x+1} = vec4(previous.zw, xTexelC${x+1}.xy);
                    } else {
                     xC${x+1} = vec4(0.0, 0.0, xTexelC${x+1}.xy);
                    }
                    `:f+=`
                    xC${x+1} = vec4(xTexelC${x}.zw, xTexelC${x+1}.xy);
                    `):v===1?f+=`
                    xC${x+1} = xTexelC${x};
                    `:f+=`
                    xCOffset = xC + ${v};

                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x+1}Ready == 0) {
                      xTexelC${x+1} = getX(batch, xR, xCOffset, d1);
                      if (xCOffset + 1 >= inDims[1]) {
                        xTexelC${x+1}.zw = vec2(0.0);
                      }
                      xTexelC${x+1}Ready = 1;
                    }

                    xC${x+1} = xTexelC${x+1};
                    `}}else x<h&&(a%2===1?(f+=`
                xCOffset = xC + 1 - strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x}Ready == 0) {
                  xTexelC${x} = getX(batch, xR, xCOffset, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${x}.zw = vec2(0.0);
                  }
                  xTexelC${x}Ready = 1;
                }

                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${x+1}Ready == 0) {
                  xTexelC${x+1} = getX(batch, xR, xC + 1, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xC + 2 >= inDims[1]) {
                    xTexelC${x+1}.zw = vec2(0.0);
                  }
                  xTexelC${x+1}Ready = 1;
                }

                xC${x} = vec4(xTexelC${x}.zw, xTexelC${x+1}.zw);
              `,x+1<h&&(f+=`
                  final = vec4(0.0);
                  xCOffset = xC + 1 + strides[1];
                  if(xCOffset >= 0 && xCOffset < inDims[1]) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xC${x+1} = vec4(xTexelC${x+1}.xy, final.xy);
                `)):(f+=`
                if(xC >= 0 && xC < inDims[1] && xTexelC${x}Ready == 0) {
                  xTexelC${x} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${x}.zw = vec2(0.0);
                  }
                  xTexelC${x}Ready = 1;
                }

                xCOffset = xC + strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x+1}Ready == 0) {
                  xTexelC${x+1} = getX(batch, xR, xCOffset, d1);
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${x+1}.zw = vec2(0.);
                  }
                  xTexelC${x+1}Ready = 1;
                }

                xC${x} = vec4(
                  xTexelC${x}.xy, xTexelC${x+1}.xy);
              `,x+1<h&&(f+=`
                  xC${x+1} = vec4(xTexelC${x}.zw, xTexelC${x+1}.zw);
                `)));x<h&&(f+=`
            wTexel = getW(r, ${x}, d1, q);
            dotProd += xC${x} * vec4(wTexel.xz, wTexel.xz);
          `,x+1<h&&(f+=`
              wTexel = getW(r, ${x+1}, d1, q);
              dotProd += xC${x+1} * vec4(wTexel.xz, wTexel.xz);
            `))}f+=`
    }
  `,f+=`
      }
    `;let p="",A="";s&&(r?p=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${s}
        }`:i?p=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${s}
        }`:p=`vec4 activation(vec4 x) {
          ${s}
        }`,A="result = activation(result);");const m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),i&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${p}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${o};
        int q = d2 - d1 * ${o};
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
        vec4 dotProd = vec4(0.000000000000001);

        ${f}

        vec4 result = dotProd - vec4(0.000000000000001);
        ${m}
        ${A}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _pe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:i}=e,{strides:o,pad:a,dilations:l,dimRoundingMode:c}=s;let u=l;u==null&&(u=[1,1]),z(nr(o,u),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${o} and dilations '${u}'`);const h=As(r.shape,i.shape,o,u,a,c,!0);let d;xe().getBool("WEBGL_PACK_DEPTHWISECONV")&&h.strideWidth<=2&&h.outChannels/h.inChannels===1?d=new uP(h):d=new cP(h);const f=[[h.padInfo.top,h.padInfo.left],[h.strideHeight,h.strideWidth],[h.dilationHeight,h.dilationWidth],[h.inHeight,h.inWidth]];return t.runWebGLProgram(d,[r,i],"float32",f)}const Tpe={kernelName:Tf,backendName:"webgl",kernelFunc:_pe};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Bpe=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,s=e.strideWidth,r=e.padInfo.top,i=e.padInfo.left,o=e.outChannels/e.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * ${o} + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${r};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${s} - ${i};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `}},kpe=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,s=e.filterWidth,r=e.strideHeight,i=e.strideWidth,o=t-1-e.padInfo.top,a=s-1-e.padInfo.left,l=e.outChannels/e.inChannels;this.userCode=`
      const ivec2 pads = ivec2(${o}, ${a});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${r}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${s}; wC++) {
            float dyC = float(dyCCorner + wC) / ${i}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${s} - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < ${l}; dm++) {
              int d2 = d1 * ${l} + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Npe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,dy:i}=e,{strides:o,dilations:a,pad:l,dimRoundingMode:c,filterShape:u}=s,h=As(r.shape,u,o,a,l,c,!0),d=new Bpe(h);return t.runWebGLProgram(d,[r,i],"float32")}const Rpe={kernelName:Cg,backendName:"webgl",kernelFunc:Npe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mpe(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,filter:i}=e,{strides:o,dilations:a,pad:l,dimRoundingMode:c,inputShape:u}=s,h=As(u,i.shape,o,a,l,c,!0),d=new kpe(h);return t.runWebGLProgram(d,[r,i],"float32")}const Dpe={kernelName:Ig,backendName:"webgl",kernelFunc:Mpe};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Fpe=class{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $pe(n){const{inputs:e,backend:t}=n,{x:s}=e,r=[...s.shape,...s.shape],i=ye(s.shape),o=yt({inputs:{x:s},backend:t,attrs:{shape:[i]}}),a=new Fpe(i),l=t.runWebGLProgram(a,[o],o.dtype),c=yt({inputs:{x:l},backend:t,attrs:{shape:r}});return t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(l),c}const Ppe={kernelName:wg,backendName:"webgl",kernelFunc:$pe};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Lpe=class{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:s,padInfo:r,strideHeight:i,strideWidth:o,filterHeight:a,filterWidth:l,dilationHeight:c,dilationWidth:u}=e,{top:h,left:d}=r;this.userCode=`
      const ivec2 strides = ivec2(${i}, ${o});
      const ivec2 pads = ivec2(${h}, ${d});
      const float neg_infinity = -3.4e38;

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.w;
        ivec2 outTopLeftCorner =
            coords.yz * strides - pads;
        int hBeg = outTopLeftCorner.x;
        int wBeg = outTopLeftCorner.y;

        float curVal = neg_infinity;
        for (int h = 0; h < ${a}; h++) {
          int hIn = hBeg + h * ${c};

          if (hIn >= 0 && hIn < ${t}) {
            for (int w = 0; w < ${l}; w++) {
              int wIn = wBeg + w * ${u};

              if (wIn >= 0 && wIn < ${s}) {
                float xVal = getX(batch, hIn, wIn, d1);
                float wVal = getW(h, w, d1);

                float val = xVal + wVal;
                if (val > curVal) {
                  curVal = val;
                }
              }
            }
          }
        }

        float result = curVal;
        setOutput(result);
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ope(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:i}=e,{strides:o,pad:a,dilations:l}=s,c=yc(r.shape,i.shape,o,a,"NHWC",l);let u;const h=new Lpe(c);u=t.runWebGLProgram(h,[r,i],"float32");const d=yt({inputs:{x:u},backend:t,attrs:{shape:c.outShape}});return t.disposeIntermediateTensorInfo(u),d}const Qpe={kernelName:Bf,backendName:"webgl",kernelFunc:Ope};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Upe(n){const{inputs:e,backend:t,attrs:s}=n,{equation:r}=s,i=e,{allDims:o,summedDims:a,idDims:l}=w1(r,i.length);E1(o.length,l,i);const{path:c,steps:u}=_1(a,l),h=u.length;let d=null,f=o.length;const p=[];for(let A=0;A<h;++A){for(const m of u[A]){const{permutationIndices:g,expandDims:x}=S1(f,l[m]);let v;T1(g)?v=i[m]:(v=si({inputs:{x:i[m]},backend:t,attrs:{perm:g}}),p.push(v));const b=v.shape.slice();for(let w=0;w<x.length;++w)b.splice(x[w],0,1);dn(v.shape,b)||(v=yt({inputs:{x:v},backend:t,attrs:{shape:b}}),p.push(v)),d===null?d=v:(d=wS({inputs:{a:v,b:d},backend:t}),p.push(d))}A<h-1&&(c[A]>=0&&(d=H1({inputs:{x:d},backend:t,attrs:{axis:c[A]-(o.length-f),keepDims:!1}}),p.push(d)),f--)}for(const A of p)A!==d&&t.disposeIntermediateTensorInfo(A);return d}const zpe={kernelName:Eg,backendName:"webgl",kernelFunc:Upe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Gpe="return (x >= 0.0) ? x : (exp(x) - 1.0);",Vpe=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,Wpe=$n({opSnippet:Gpe,packedOpSnippet:Vpe}),Hpe={kernelName:ju,backendName:"webgl",kernelFunc:Wpe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qpe="return (b >= 0.0) ? a : a * (b + 1.0);",Ype=`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,jpe=n=>{const{inputs:e,backend:t}=n,{dy:s,y:r}=e,i=xe().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Tp(Ype,s.shape,r.shape):new Mu(qpe,s.shape,r.shape);return t.runWebGLProgram(i,[s,r],s.dtype)},Xpe={kernelName:_g,backendName:"webgl",kernelFunc:jpe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Kpe=`
  return vec4(equal(a, b));
`,Jpe="return float(a == b);",Zpe=Rr({opSnippet:Jpe,packedOpSnippet:Kpe,dtype:"bool",cpuKernelImpl:Nue}),eme={kernelName:kf,backendName:"webgl",kernelFunc:Zpe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tme=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  float p = ${y1};
  float a1 = ${x1};
  float a2 = ${b1};
  float a3 = ${v1};
  float a4 = ${C1};
  float a5 = ${I1};

  float sign = sign(x);
  x = abs(x);
  float t = 1.0 / (1.0 + p * x);
  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));
`,nme=$n({opSnippet:tme}),sme={kernelName:Xu,backendName:"webgl",kernelFunc:nme};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rme=Bp+`
  return exp(x);
`,ime=`
  vec4 result = exp(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,hP=$n({opSnippet:rme,packedOpSnippet:ime,cpuKernelImpl:Rue,dtype:"float32"}),ome={kernelName:Ku,backendName:"webgl",kernelFunc:hP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NC(n){const{inputs:e,attrs:t,backend:s}=n,{dim:r}=t,{input:i}=e,o=i.shape.length,a=i.shape.slice();let l=r;return r<0&&(z(-(o+1)<=r,()=>`Axis must be in the interval [${-(o+1)}, ${o}]`),l=o+r+1),a.splice(l,0,1),yt({inputs:{x:i},backend:s,attrs:{shape:a}})}const ame={kernelName:Nf,backendName:"webgl",kernelFunc:NC};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const k3="return exp(x) - 1.0;",lme=$n({opSnippet:k3,packedOpSnippet:k3,cpuKernelImpl:Mue}),cme={kernelName:Ju,backendName:"webgl",kernelFunc:lme};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let N3=class{constructor(e,t,s){this.variableNames=["real","imag"];const r=t[1];this.outputShape=t;const i=s?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,o=s?`${r}.0`:"1.0";let a;if(e==="real")a="return real * expR - imag * expI;";else if(e==="imag")a="return real * expI + imag * expR;";else throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);this.userCode=`
      const float exponentMultiplier = ${i};

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        ${a}
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(${r});
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < ${r}; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / ${o};
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dP(n,e,t){const s=t.texData.get(n.dataId),r=ye(n.shape),i=n.shape[n.shape.length-1],o=r/i,a=yt({inputs:{x:n},backend:t,attrs:{shape:[o,i]}}),l=a.shape,c=new N3("real",l,e),u=new N3("imag",l,e),h=[{dataId:s.complexTensorInfos.real.dataId,dtype:s.complexTensorInfos.real.dtype,shape:l},{dataId:s.complexTensorInfos.imag.dataId,dtype:s.complexTensorInfos.imag.dtype,shape:l}],d=t.runWebGLProgram(c,h,"float32"),f=t.runWebGLProgram(u,h,"float32"),p=wc({inputs:{real:d,imag:f},backend:t});t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(f);const A=yt({inputs:{x:p},backend:t,attrs:{shape:n.shape}});return t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(p),A}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ume(n){const{inputs:e,backend:t}=n,{input:s}=e;return dP(s,!1,t)}const hme={kernelName:Tg,backendName:"webgl",kernelFunc:ume};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let dme=class{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode=`
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HA(n){const{backend:e,attrs:t}=n,{shape:s,value:r}=t;let{dtype:i}=t;if(i=i||pc(r),i==="string"){const o=Ts(i,ye(s));return o.fill(r),e.makeTensorInfo(s,i,o)}else{const o=new dme(s,r),a=[[r]];return e.runWebGLProgram(o,[],i,a)}}const fme={kernelName:Bg,backendName:"webgl",kernelFunc:HA};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let pme=class{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];

          int coordX = ${t} - x - 1;
          float outputValue;
          if(coordX >= 0 && coordX < ${t}) {
            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);
          } else {
            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);
          }
          setOutput(outputValue);
        }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mme={kernelName:kg,backendName:"webgl",kernelFunc:({inputs:n,backend:e})=>{const{image:t}=n,s=e,r=new pme(t.shape);return s.runWebGLProgram(r,[t],t.dtype)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const R3="return floor(x);",gme=$n({opSnippet:R3,packedOpSnippet:R3,cpuKernelImpl:Due}),Ame={kernelName:Zu,backendName:"webgl",kernelFunc:gme};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yme=`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,xme=`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,bme=Rr({opSnippet:yme,packedOpSnippet:xme,dtype:"int32"}),vme={kernelName:eh,backendName:"webgl",kernelFunc:bme};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Cme=class{constructor(e){this.variableNames=["A"];const t=oi(),[s,r]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${s}.0);

        vec4 values = ${t.texture2D}(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ime{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=oi(),[s,r]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(${r}.0, ${s}.0);
            vec4 values = ${t.texture2D}(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        ${t.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wme={kernelName:Dm,backendName:"webgl",kernelFunc:Sme};let bd,fb=xe().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");function Sme(n){const{inputs:e,backend:t,attrs:s}=n;let{pixels:r}=e;const{numChannels:i}=s,o=typeof HTMLVideoElement<"u"&&r instanceof HTMLVideoElement,a=typeof HTMLImageElement<"u"&&r instanceof HTMLImageElement,[l,c]=o?[r.videoWidth,r.videoHeight]:[r.width,r.height],u=[c,l],h=[c,l,i];if(a||o){const A=xe().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(bd==null||A!==fb)&&(fb=A,bd=document.createElement("canvas").getContext("2d",{willReadFrequently:fb})),bd.canvas.width=l,bd.canvas.height=c,bd.drawImage(r,0,0,l,c),r=bd.canvas}const d=t.makeTensorInfo(u,"int32");t.texData.get(d.dataId).usage=ro.PIXELS,t.gpgpu.uploadPixelDataToTexture(t.getTexture(d.dataId),r);const f=xe().getBool("WEBGL_PACK")?new Ime(h):new Cme(h),p=t.runWebGLProgram(f,[d],"int32");return t.disposeData(d.dataId),p}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Eme(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:i,bias:o,preluActivationWeights:a}=e,{strides:l,pad:c,dataFormat:u,dilations:h,dimRoundingMode:d,activation:f,leakyreluAlpha:p}=s,A=Xi(u),m=As(r.shape,i.shape,l,h,c,d,!1,A);let g;const x=[],v=o!=null,b=a!=null,w=f==="leakyrelu",_=()=>{const M=[r,i],T=(k,B)=>{if(B==="NCHW"&&k.shape.length===1&&k.shape[0]!==1){const L=yt({inputs:{x:k},backend:t,attrs:{shape:[k.shape[0],1,1]}});return x.push(L),L}return k};if(v&&M.push(T(o,u)),b&&M.push(T(a,u)),w){const k=t.makeTensorInfo([],"float32",El(p,"float32"));M.push(k),x.push(k)}return M};if(m.filterHeight===1&&m.filterWidth===1&&m.dilationHeight===1&&m.dilationWidth===1&&m.strideHeight===1&&m.strideWidth===1&&(m.padInfo.type==="SAME"||m.padInfo.type==="VALID"))g=oP({x:r,filter:i,convInfo:m,backend:t,bias:o,activation:f,preluActivationWeights:a,leakyreluAlpha:p});else if(m.strideWidth<=2&&A==="channelsLast"&&xe().getBool("WEBGL_EXP_CONV")){const M=f?Ym(f,!0):null,T=new iP(m,v,M,b,w),k=[[m.padInfo.top,m.padInfo.left],[m.strideHeight,m.strideWidth],[m.dilationHeight,m.dilationWidth],[m.inHeight,m.inWidth]],B=_();g=t.runWebGLProgram(T,B,"float32",k)}else if(xe().getBool("WEBGL_CONV_IM2COL"))g=aP({x:r,filter:i,convInfo:m,backend:t,bias:o,activation:f,preluActivationWeights:a,leakyreluAlpha:p});else{const M=f?Ym(f,!1):null,T=new rP(m,v,M,b,w),k=_();g=t.runWebGLProgram(T,k,"float32")}const N=yt({inputs:{x:g},backend:t,attrs:{shape:m.outShape}});return x.push(g),x.forEach(M=>t.disposeIntermediateTensorInfo(M)),N}const _me={kernelName:Vd,backendName:"webgl",kernelFunc:Eme};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tme(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:i,bias:o,preluActivationWeights:a}=e,{strides:l,pad:c,dilations:u,dimRoundingMode:h,activation:d,leakyreluAlpha:f}=s,p=[];let A=u;A==null&&(A=[1,1]),z(nr(l,A),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${A}'`);const m=As(r.shape,i.shape,l,A,c,h,!0),g=xe().getBool("WEBGL_PACK_DEPTHWISECONV")&&m.strideWidth<=2&&m.outChannels/m.inChannels===1,x=d?Ym(d,g):null,v=[r,i],b=o!=null,w=a!=null,_=d==="leakyrelu";if(b&&v.push(o),w&&v.push(a),_){const k=t.makeTensorInfo([],"float32",El(f,"float32"));v.push(k),p.push(k)}let N;g?N=new uP(m,b,x,w,_):N=new cP(m,b,x,w,_);const M=[[m.padInfo.top,m.padInfo.left],[m.strideHeight,m.strideWidth],[m.dilationHeight,m.dilationWidth],[m.inHeight,m.inWidth]],T=t.runWebGLProgram(N,v,"float32",M);return p.forEach(k=>t.disposeIntermediateTensorInfo(k)),T}const Bme={kernelName:Wd,backendName:"webgl",kernelFunc:Tme};let kme=class{constructor(e,t,s,r){this.sliceDim=e,this.strides=t,this.paramsShape=r,this.variableNames=["x","indices"],this.outputShape=s;const i=ns(s.length);let o=`
    int index;`;for(let a=0;a<this.sliceDim;a++)o+=`
          index = round(getIndices(coords[0], ${a}));
          out_of_bounds = out_of_bounds || index < 0;
          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[a]};
          flattenIndex += index * ${this.strides[a]};`;this.userCode=`
         void main() {
          ${i} coords = getOutputCoords();
          int flattenIndex = 0;
          bool out_of_bounds = false;

          ${o}

          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));
        }
      `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nme(n){const{inputs:e,backend:t}=n,{params:s,indices:r}=e,i=r.shape,o=i[i.length-1],a=ye(s.shape),[l,c,u,h]=BA(s,r),d=yt({inputs:{x:r},backend:t,attrs:{shape:[c,o]}}),f=yt({inputs:{x:s},backend:t,attrs:{shape:[ye(s.shape)/u,u]}});if(t.shouldExecuteOnCPU([s,r])||s.dtype==="string"){const g=t.readSync(r.dataId),x=t.bufferSync(s),v=Fue(g,x,s.dtype,c,o,u,h,s.shape,a);return t.makeTensorInfo(l,s.dtype,v.values)}const p=new kme(o,h,[c,u],s.shape),A=t.runWebGLProgram(p,[f,d],f.dtype),m=yt({inputs:{x:A},backend:t,attrs:{shape:l}});return t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(A),m}const Rme={kernelName:Ng,backendName:"webgl",kernelFunc:Nme};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Mme=class{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const s=ns(this.rank),r=Dme(e);this.userCode=`
      void main() {
        ${s} resRC = getOutputCoords();
        int index = int(getIndices(resRC.x, resRC.z));
        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;
        setOutput(inBounds * getA(${r}));
      }
    `}};function Dme(n,e){const t=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[];for(let r=0;r<n.length;r++)r===2?s.push("index"):s.push(`${t[r]}`);return s.join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fP(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,indices:i}=e,{axis:o,batchDims:a}=s,l=an(o,r.shape)[0];if(xe().get("DEBUG")){const x=t.readSync(i.dataId),v=r.shape[l];for(let b=0;b<x.length;++b){const w=x[b];z(w<=v-1&&w>=0,()=>`GatherV2: the index value ${w} is not in [0, ${v-1}]`)}}const c=k1(r,i,l,a),u=ye(i.shape),h=[],d=yt({inputs:{x:r},backend:t,attrs:{shape:[c.batchSize,c.outerSize,c.dimSize,c.sliceSize]}}),f=yt({inputs:{x:i},backend:t,attrs:{shape:[c.batchSize,u/c.batchSize]}});h.push(d),h.push(f);const p=[c.batchSize,c.outerSize,u/c.batchSize,c.sliceSize];if(t.shouldExecuteOnCPU([r,i])||r.dtype==="string"){const x=t.bufferSync(f),v=t.bufferSync(d),b=$ue(v,x,p);return h.forEach(w=>t.disposeIntermediateTensorInfo(w)),t.makeTensorInfo(c.outputShape,b.dtype,b.values)}const A=new Mme(d.shape,p),m=t.runWebGLProgram(A,[d,f],d.dtype);h.push(m);const g=yt({inputs:{x:m},backend:t,attrs:{shape:c.outputShape}});return h.forEach(x=>t.disposeIntermediateTensorInfo(x)),g}const Fme={kernelName:Mf,backendName:"webgl",kernelFunc:fP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $me="return float(a > b);",Pme=`
  return vec4(greaterThan(a, b));
`,Lme=Rr({opSnippet:$me,packedOpSnippet:Pme,cpuKernelImpl:Pue,dtype:"bool"}),Ome={kernelName:Df,backendName:"webgl",kernelFunc:Lme};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qme="return float(a >= b);",Ume=`
  return vec4(greaterThanEqual(a, b));
`,zme=Rr({opSnippet:Qme,packedOpSnippet:Ume,dtype:"bool",cpuKernelImpl:Lue}),Gme={kernelName:th,backendName:"webgl",kernelFunc:zme};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vme(n){const{inputs:e,backend:t}=n,{input:s}=e;return dP(s,!0,t)}const Wme={kernelName:Rg,backendName:"webgl",kernelFunc:Vme};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hme="return float(!isnan(x) && !isinf(x));",qme=$n({opSnippet:Hme,dtype:"bool"}),Yme={kernelName:sh,backendName:"webgl",kernelFunc:qme};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jme="return float(isinf(x));",Xme=$n({opSnippet:jme,dtype:"bool"}),Kme={kernelName:rh,backendName:"webgl",kernelFunc:Xme};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jme="return float(isnan(x));",Zme=$n({opSnippet:Jme,dtype:"bool"}),ege={kernelName:ih,backendName:"webgl",kernelFunc:Zme};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tge="return float(a < b);",nge=`
  return vec4(lessThan(a, b));
`,sge=Rr({opSnippet:tge,packedOpSnippet:nge,cpuKernelImpl:Oue,dtype:"bool"}),rge={kernelName:$f,backendName:"webgl",kernelFunc:sge};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ige="return float(a <= b);",oge=`
  return vec4(lessThanEqual(a, b));
`,age=Rr({opSnippet:ige,packedOpSnippet:oge,cpuKernelImpl:Que,dtype:"bool"}),lge={kernelName:Pf,backendName:"webgl",kernelFunc:age};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cge(n){const{backend:e,attrs:t}=n,{start:s,stop:r,num:i}=t,o=Uue(s,r,i);return e.makeTensorInfo([o.length],"float32",o)}const uge={kernelName:Dg,backendName:"webgl",kernelFunc:cge};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hge=Bp+`
  return x < 0.0 ? 0./0. : log(x);
`,dge=`
  vec4 result = log(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);
  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);
  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);
  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);
  return result;
`,fge=$n({opSnippet:hge,packedOpSnippet:dge,cpuKernelImpl:zue}),pge={kernelName:oh,backendName:"webgl",kernelFunc:fge};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mge=Bp+`
  return log(1.0 + x);
`,gge=$n({opSnippet:mge}),Age={kernelName:ah,backendName:"webgl",kernelFunc:gge};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yge="return float(a >= 1.0 && b >= 1.0);",xge=`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,bge=Rr({opSnippet:yge,packedOpSnippet:xge,dtype:"bool"}),vge={kernelName:Lf,backendName:"webgl",kernelFunc:bge};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Cge="return float(!(x >= 1.0));",Ige=$n({opSnippet:Cge}),wge={kernelName:Of,backendName:"webgl",kernelFunc:Ige};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Sge="return float(a >= 1.0 || b >= 1.0);",Ege=`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,_ge=Rr({opSnippet:Sge,packedOpSnippet:Ege,dtype:"bool"}),Tge={kernelName:Qf,backendName:"webgl",kernelFunc:_ge};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Bge=class{constructor(e,t,s,r,i){this.variableNames=["x"],this.outputShape=[];const o=t,a=e[3]-1;this.outputShape=e;let l;const c=`float(${s}) + float(${r}) * sum`;i===.5?l=`inversesqrt(${c})`:i===1?l=`1.0/(${c})`:l=`exp(log(${c}) * float(-${i}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -${o}; j <= ${o}; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  ${a}) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * ${l};
        setOutput(val);
      }
    `}};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class kge{constructor(e,t,s,r,i){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const o=t,a=e[3]-1;this.outputShape=e;let l;const c=`float(${s}) + float(${r}) * sum`;i===.5?l=`inversesqrt(${c})`:i===1?l=`1.0/(${c})`:l=`exp(log(${c}) * float(-${i}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < ${this.outputShape[3]};
        bool hasNextRow = c < ${this.outputShape[2]};

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - ${o};
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - ${o}; j <= ${o}; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${a}));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * ${l};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Nge=n=>{const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{depthRadius:i,bias:o,alpha:a,beta:l}=s,c=xe().getBool("WEBGL_PACK_NORMALIZATION")?new kge(r.shape,i,o,a,l):new Bge(r.shape,i,o,a,l);return t.runWebGLProgram(c,[r],r.dtype)},Rge={kernelName:Uf,backendName:"webgl",kernelFunc:Nge};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Mge=class{constructor(e,t,s,r,i){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=s,this.alpha=r,this.beta=i,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < ${this.depth}; ++d) {
          int depthBegin = int(max(0.0, float(d - ${t})));
          int depthEnd = int(min(float(${this.depth}),
              float(d + ${t} + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = ${this.depth};

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(${r}) * norm + float(${s});

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(${r})
                * float(${i})
                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * ${i});
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Dge=n=>{const{inputs:e,backend:t,attrs:s}=n,{x:r,y:i,dy:o}=e,{depthRadius:a,bias:l,alpha:c,beta:u}=s,h=new Mge(r.shape,a,l,c,u);return t.runWebGLProgram(h,[r,i,o],r.dtype)},Fge={kernelName:Fg,backendName:"webgl",kernelFunc:Dge};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $ge(n,e,t,s){const r=ye(e),o=ye(n.shape)/r,a=yt({inputs:{x:n},attrs:{shape:[o,r]},backend:s}),l=Vh(a,n.dtype,"max",s),c=yt({inputs:{x:l},attrs:{shape:t},backend:s});return s.disposeIntermediateTensorInfo(a),s.disposeIntermediateTensorInfo(l),c}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pP(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{reductionIndices:i,keepDims:o}=s,a=r.shape.length,l=an(i,r.shape);let c=l;const u=ss(c,a),h=u!=null,d=t.shouldExecuteOnCPU([r]);let f=r;if(h){if(d){const v=t.texData.get(f.dataId).values,b=new Array(a);for(let N=0;N<b.length;N++)b[N]=r.shape[u[N]];const w=CS(v,r.shape,r.dtype,u,b);f=t.makeTensorInfo(b,r.dtype);const _=t.texData.get(f.dataId);_.values=w}else f=W1(r,u,t);c=ys(c.length,a)}qs("max",c,a);const[p,A]=$s(f.shape,c);let m=p;o&&(m=Ms(p,l));let g;if(d){const v=t.texData.get(f.dataId).values,b=Gue(v,ye(A),m,r.dtype);g=t.makeTensorInfo(m,r.dtype);const w=t.texData.get(g.dataId);w.values=b}else g=$ge(f,A,m,t);return h&&t.disposeIntermediateTensorInfo(f),g}const Pge={kernelName:zf,backendName:"webgl",kernelFunc:pP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Lge=IS+`
  return max(a, b);
`,Oge=`
  vec4 result = vec4(max(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+Gh+`
  return result;
`,Qge=Rr({opSnippet:Lge,packedOpSnippet:Oge,cpuKernelImpl:Vue}),Uge={kernelName:lh,backendName:"webgl",kernelFunc:Qge};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zge(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e;GA(r,"maxPool");const{filterSize:i,strides:o,pad:a,dimRoundingMode:l}=s,c=1;z(nr(o,c),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${c}'`);const u=Pr(r.shape,i,o,c,a,l);if(u.filterWidth===1&&u.filterHeight===1&&dn(u.inShape,u.outShape))return Hi({inputs:{x:r},backend:t});const h=new jm(u,"max",!1);return t.runWebGLProgram(h,[r],r.dtype)}const Gge={kernelName:Gf,backendName:"webgl",kernelFunc:zge};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vge(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{filterSize:i,strides:o,pad:a,dataFormat:l,dimRoundingMode:c}=s,u=[1,1,1],h=fo(r.shape,i,o,u,a,c,l),d=new SS(h,"max",!1);return t.runWebGLProgram(d,[r],r.dtype)}const Wge={kernelName:Vf,backendName:"webgl",kernelFunc:Vge};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Hge=class{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,s=e.strideWidth,r=e.dilationHeight,i=e.effectiveFilterHeight,o=e.effectiveFilterWidth,a=i-1-e.padInfo.top,l=o-1-e.padInfo.left,c=i*o-1;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${l});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${i};
          wR += ${r}) {
          float dyR = float(dyRCorner + wR) / ${t}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${o}; wC++) {
            float dyC = float(dyCCorner + wC) / ${s}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = ${c} - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * ${o} + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `}},qge=class{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,s=e.strideHeight,r=e.strideWidth,i=e.dilationDepth,o=e.dilationHeight,a=e.dilationWidth,l=e.effectiveFilterDepth,c=e.effectiveFilterHeight,u=e.effectiveFilterWidth,h=l-1-e.padInfo.front,d=c-1-e.padInfo.top,f=u-1-e.padInfo.left,p=l*c*u-1;this.userCode=`
      const ivec3 pads = ivec3(${h}, ${d}, ${f});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${l};
           wD += ${i}) {
          float dyD = float(dyDCorner + wD) / ${t}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${c};
              wR += ${o}) {
            float dyR = float(dyRCorner + wR) / ${s}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${u};
                wC += ${a}) {
              float dyC = float(dyCCorner + wC) / ${r}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = ${p} -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * ${c} * ${u} +
                  wR * ${u} + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yge(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:i}=e,o=i,{filterSize:a,strides:l,pad:c,dimRoundingMode:u}=s,h=[1,1,1],d=fo(o.shape,a,l,h,c,u),f=new SS(d,"max",!0),p=t.runWebGLProgram(f,[o],o.dtype),A=new qge(d),m=t.runWebGLProgram(A,[r,p],o.dtype);return t.disposeIntermediateTensorInfo(p),m}const jge={kernelName:Pg,backendName:"webgl",kernelFunc:Yge};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xge(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:i,output:o}=e,a=i;GA([i,o],"maxPoolGrad");const{filterSize:l,strides:c,pad:u,dimRoundingMode:h}=s,d=Pr(a.shape,l,c,1,u,h),f=!0,p=new jm(d,"max",f),A=t.runWebGLProgram(p,[a],a.dtype),m=new Hge(d),g=t.runWebGLProgram(m,[r,A],a.dtype);return t.disposeIntermediateTensorInfo(A),g}const Kge={kernelName:$g,backendName:"webgl",kernelFunc:Xge};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jge(n,e,t,s){let r=new jm(t,"max",!1);const i=s.runWebGLProgram(r,[n],"float32");r=new jm(t,"max",!0,!0,e);const o=s.runWebGLProgram(r,[n],"float32");return[i,o]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Zge={kernelName:Lg,backendName:"webgl",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{x:s}=n,{filterSize:r,strides:i,pad:o,includeBatchInIndex:a}=e,l=t;z(s.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${s.shape.length}.`);const c=[1,1];z(nr(i,c),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${c}'`);const u=Pr(s.shape,r,i,c,o),[h,d]=Jge(s,a,u,l);return[h,d]}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eAe(n,e,t,s){const r=ye(e),o=ye(n.shape)/r,a=yt({inputs:{x:n},attrs:{shape:[o,r]},backend:s}),l=Vh(a,"float32","mean",s),c=yt({inputs:{x:l},attrs:{shape:t},backend:s});return s.disposeIntermediateTensorInfo(a),s.disposeIntermediateTensorInfo(l),c}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tAe={kernelName:Wf,backendName:"webgl",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{x:s}=n,{keepDims:r,axis:i}=e,o=t,a=s.shape.length,l=an(i,s.shape);let c=l;const u=ss(c,a),h=u!=null,d=o.shouldExecuteOnCPU([s]),f=[];let p=s;if(h){if(d){const b=o.texData.get(p.dataId).values,w=new Array(a);for(let M=0;M<w.length;M++)w[M]=s.shape[u[M]];const _=CS(b,s.shape,s.dtype,u,w);p=o.makeTensorInfo(w,s.dtype);const N=o.texData.get(p.dataId);N.values=_}else p=W1(s,u,o);f.push(p),c=ys(c.length,a)}qs("sum",c,a);const[A,m]=$s(p.shape,c);let g=A;r&&(g=Ms(A,l));const x=eAe(p,m,g,o);for(const v of f)o.disposeIntermediateTensorInfo(v);return x}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nAe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:i,keepDims:o}=s,a=r.shape.length,l=an(i,r.shape);let c=l;const u=ss(c,a);let h=r;u!=null&&(h=si({inputs:{x:r},backend:t,attrs:{perm:u}}),c=ys(c.length,r.shape.length)),qs("min",c,a);const[d,f]=$s(h.shape,c),p=ye(f),A=yt({inputs:{x:h},backend:t,attrs:{shape:[-1,p]}}),m=Vh(A,A.dtype,"min",t);let g;if(o){const x=Ms(d,l);g=yt({inputs:{x:m},backend:t,attrs:{shape:x}})}else g=yt({inputs:{x:m},backend:t,attrs:{shape:d}});return t.disposeIntermediateTensorInfo(A),t.disposeIntermediateTensorInfo(m),u!=null&&t.disposeIntermediateTensorInfo(h),g}const sAe={kernelName:Hf,backendName:"webgl",kernelFunc:nAe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rAe=IS+`
  return min(a, b);
`,iAe=`
  vec4 result = vec4(min(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+Gh+`
  return result;
`,oAe=Rr({opSnippet:rAe,packedOpSnippet:iAe,cpuKernelImpl:Wue}),aAe={kernelName:ch,backendName:"webgl",kernelFunc:oAe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let lAe=class{constructor(e,t,s){this.variableNames=["x"],this.outputShape=t.map((u,h)=>u[0]+e[h]+u[1]);const r=e.length,i=ns(r),o=t.map(u=>u[0]).join(","),a=t.map((u,h)=>u[0]+e[h]).join(","),l=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),c=s==="reflect"?0:1;if(r===1){this.userCode=`
        int start = ${o};
        int end = ${a};

        void main() {
          int outC = getOutputCoords();
          if (outC < start) {
            outC = start * 2 - outC - ${c};
          } else if(outC >= end) {
            outC = (end - 1) * 2 - outC + ${c};
          }
          setOutput(getX(outC - start));
        }
      `;return}this.userCode=`
      ${i} start = ${i}(${o});
      ${i} end = ${i}(${a});

      void main() {
        ${i} outC = getOutputCoords();
        for (int i = 0; i < ${r}; i++) {
          if (outC[i] < start[i]) {
            outC[i] = start[i] * 2 - outC[i] - ${c};
          } else if(outC[i] >= end[i]) {
            outC[i] = (end[i] - 1) * 2 - outC[i] + ${c};
          }
        }
        ${i} coords = outC - start;
        setOutput(getX(${l}));
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class cAe{constructor(e,t,s){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map((p,A)=>p[0]+e[A]+p[1]);const r=e.length,i=ns(r),o=t.map(p=>p[0]).join(","),a=t.map((p,A)=>p[0]+e[A]).join(","),l=ti("rc",r),c=ti("source",r),u=`${l[r-1]} < ${this.outputShape[r-1]}`,h=r===1?"source":`vec2(${c.slice(-2).join()})`,d=s==="reflect"?0:1;let f="";if(r===1){const p=`
        ${i} source = rc;
        if (source < start) {
          source = start * 2 - source - ${d};
        } else if (source >= end) {
          source = (end - 1) * 2 - source + ${d};
        }
        source -= start;
      `;f=`
        ${i} rc = outputLoc;
        ${p}
        result[0] = getChannel(getX(${c.join()}), ${h});
        ${l[r-1]} += 1;
        if(${u}) {
          ${p}
          result[1] = getChannel(getX(${c.join()}), ${h});
        }
      `}else{const p=`
        ${i} source = rc;
        ${i} lt = ${i}(lessThan(source, start));
        ${i} gte = ${i}(greaterThanEqual(source, end));
        ${i} orig = 1 - (lt + gte);
        source = orig * source +
                lt * (start * 2 - source - ${d}) +
                gte * ((end - 1) * 2 - source + ${d});
        source -= start;
      `;f=`
        ${i} rc = outputLoc;
        ${p}
        result[0] = getChannel(getX(${c.join()}), ${h});
        ${l[r-1]} += 1;
        if(${u}) {
          ${p}
          result[1] = getChannel(getX(${c.join()}), ${h});
        }
        rc = outputLoc;
        ${l[r-2]} += 1;
        if(${l[r-2]} < ${this.outputShape[r-2]}) {
          ${p}
          result[2] = getChannel(getX(${c.join()}), ${h});
          ${l[r-1]} += 1;
          if(${u}) {
            ${p}
            result[3] = getChannel(getX(${c.join()}), ${h});
          }
        }
      `}this.userCode=`
      const ${i} start = ${i}(${o});
      const ${i} end = ${i}(${a});

      void main() {
        ${i} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${f}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uAe=({inputs:n,backend:e,attrs:t})=>{const{x:s}=n,{paddings:r,mode:i}=t,o=xe().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new cAe(s.shape,r,i):new lAe(s.shape,r,i);return e.runWebGLProgram(o,[s],s.dtype)},hAe={kernelName:qf,backendName:"webgl",kernelFunc:uAe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dAe=`if (b == 0.0) return NAN;
  return mod(a, b);`,fAe=`
  vec4 result = mod(a, b);
  bvec4 isNaN = equal(b, vec4(0.0));
  `+Gh+`
  return result;
`,pAe=Rr({opSnippet:dAe,packedOpSnippet:fAe}),mAe={kernelName:uh,backendName:"webgl",kernelFunc:pAe};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let gAe=class{constructor(e,t,s){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,s],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < ${t-1}; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(${t-1}));
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AAe=`
if (a == b) {
  return 1.0;
};
return a / b;`,yAe=`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,mP=Rr({opSnippet:AAe,packedOpSnippet:yAe,checkOutOfBounds:!0}),xAe={kernelName:Yu,backendName:"webgl",kernelFunc:mP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const M3="return a - b;",gP=Rr({opSnippet:M3,packedOpSnippet:M3,supportsComplex:!0,cpuKernelImpl:dhe}),bAe={kernelName:Eh,backendName:"webgl",kernelFunc:gP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AP(n){const{inputs:e,backend:t,attrs:s}=n,{logits:r}=e,{dim:i}=s,o=an([i],r.shape),a=pP({inputs:{x:r},backend:t,attrs:{reductionIndices:o,keepDims:!1}}),l=Ms(a.shape,o),c=yt({inputs:{x:a},backend:t,attrs:{shape:l}}),u=gP({inputs:{a:r,b:c},backend:t}),h=hP({inputs:{x:u},backend:t}),d=H1({inputs:{x:h},backend:t,attrs:{axis:o,keepDims:!1}}),f=yt({inputs:{x:d},backend:t,attrs:{shape:l}}),p=mP({inputs:{a:h,b:f},backend:t});return t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(u),t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(f),p}const vAe={kernelName:hp,backendName:"webgl",kernelFunc:AP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CAe(n){const{inputs:e,backend:t,attrs:s}=n,{logits:r}=e,{numSamples:i,seed:o,normalized:a}=s,l=a?r:AP({inputs:{logits:r},backend:t,attrs:{dim:r.shape.length-1}}),c=l.shape[0],u=l.shape[1],h=new gAe(c,u,i),d=[[o]],f=t.runWebGLProgram(h,[l],"int32",d);return a||t.disposeIntermediateTensorInfo(l),f}const IAe={kernelName:Og,backendName:"webgl",kernelFunc:CAe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wAe=Bo+`
  return -x;
`,SAe=`
  vec4 result = -x;
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`;function EAe(n){const{inputs:e,backend:t}=n,{x:s}=e;if(t.shouldExecuteOnCPU([s])){const i=t.texData.get(s.dataId),[o,a]=que(i.values,s.shape,s.dtype);return t.makeTensorInfo(a,s.dtype,o)}let r;return xe().getBool("WEBGL_PACK_UNARY_OPERATIONS")?r=new Hl(s.shape,SAe):r=new va(s.shape,wAe),t.runWebGLProgram(r,[s],s.dtype)}const _Ae={kernelName:Yf,backendName:"webgl",kernelFunc:EAe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TAe=_A;function BAe(n){to("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:t,attrs:s}=n,{boxes:r,scores:i}=e,{maxOutputSize:o,iouThreshold:a,scoreThreshold:l}=s,c=t.readSync(r.dataId),u=t.readSync(i.dataId),{selectedIndices:h}=TAe(c,u,o,a,l);return t.makeTensorInfo([h.length],"int32",new Int32Array(h))}const kAe={kernelName:Qg,backendName:"webgl",kernelFunc:BAe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NAe=l1;function RAe(n){to("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:t,attrs:s}=n,{boxes:r,scores:i}=e,{maxOutputSize:o,iouThreshold:a,scoreThreshold:l,padToMaxOutputSize:c}=s,u=t.readSync(r.dataId),h=t.readSync(i.dataId),{selectedIndices:d,validOutputs:f}=NAe(u,h,o,a,l,c);return[t.makeTensorInfo([d.length],"int32",new Int32Array(d)),t.makeTensorInfo([],"int32",new Int32Array([f]))]}const MAe={kernelName:xx,backendName:"webgl",kernelFunc:RAe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DAe=TA;function FAe(n){to("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:t,attrs:s}=n,{boxes:r,scores:i}=e,{maxOutputSize:o,iouThreshold:a,scoreThreshold:l,softNmsSigma:c}=s,u=t.readSync(r.dataId),h=t.readSync(i.dataId),d=o,f=a,p=l,A=c,{selectedIndices:m,selectedScores:g}=DAe(u,h,d,f,p,A);return[t.makeTensorInfo([m.length],"int32",new Int32Array(m)),t.makeTensorInfo([g.length],"float32",new Float32Array(g))]}const $Ae={kernelName:Ug,backendName:"webgl",kernelFunc:FAe};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let PAe=class{constructor(e,t,s,r){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(${r}), float(${s}),
                      float(index == coords.y)));
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LAe=n=>{const{inputs:e,backend:t,attrs:s}=n,{indices:r}=e,{dtype:i,depth:o,onValue:a,offValue:l}=s,c=ye(r.shape),u=new PAe(c,o,a,l),h=yt({inputs:{x:r},backend:t,attrs:{shape:[c]}}),d=t.runWebGLProgram(u,[h],i);t.disposeIntermediateTensorInfo(h);const f=[...r.shape,o],p=yt({inputs:{x:d},backend:t,attrs:{shape:f}});return t.disposeIntermediateTensorInfo(d),p},OAe={kernelName:Kf,backendName:"webgl",kernelFunc:LAe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function H0(n){const{inputs:e,backend:t}=n,{x:s}=e;if(s.dtype==="complex64"){const r=WA({inputs:{input:s},backend:t}),i=H0({inputs:{x:r},backend:t}),o=q1({inputs:{input:s},backend:t}),a=H0({inputs:{x:o},backend:t}),l=wc({inputs:{real:i,imag:a},backend:t});return t.disposeIntermediateTensorInfo(r),t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(a),l}else return HA({attrs:{shape:s.shape,dtype:s.dtype,value:s.dtype==="string"?"":0},backend:t})}const QAe={kernelName:pp,backendName:"webgl",kernelFunc:H0};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yP(n){const{inputs:e,backend:t}=n,{x:s}=e;if(s.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(s.dtype==="complex64"){const r=WA({inputs:{input:s},backend:t}),i=yP({inputs:{x:r},backend:t}),o=q1({inputs:{input:s},backend:t}),a=H0({inputs:{x:o},backend:t}),l=wc({inputs:{real:i,imag:a},backend:t});return t.disposeIntermediateTensorInfo(r),t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(a),l}else return HA({attrs:{shape:s.shape,dtype:s.dtype,value:1},backend:t})}const UAe={kernelName:Xf,backendName:"webgl",kernelFunc:yP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zAe(n){const{inputs:e,backend:t,attrs:s}=n,{axis:r}=s;if(e.length===1)return NC({inputs:{input:e[0]},backend:t,attrs:{dim:r}});const i=e[0].shape,o=e[0].dtype;e.forEach(u=>{br(i,u.shape,"All tensors passed to stack must have matching shapes"),z(o===u.dtype,()=>"All tensors passed to stack must have matching dtypes")});const a=[],l=e.map(u=>{const h=NC({inputs:{input:u},backend:t,attrs:{dim:r}});return a.push(h),h}),c=sP({inputs:l,backend:t,attrs:{axis:r}});return a.forEach(u=>t.disposeIntermediateTensorInfo(u)),c}const GAe={kernelName:Jf,backendName:"webgl",kernelFunc:zAe};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let VAe=class{constructor(e,t,s){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((c,u)=>c[0]+e[u]+c[1]);const r=e.length,i=ns(r),o=t.map(c=>c[0]).join(","),a=t.map((c,u)=>c[0]+e[u]).join(","),l=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);if(r===1){this.userCode=`
        int start = ${o};
        int end = ${a};

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(value);
          } else {
            setOutput(getX(outC - start));
          }
        }
      `;return}this.userCode=`
      ${i} start = ${i}(${o});
      ${i} end = ${i}(${a});

      void main() {
        ${i} outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(value);
        } else {
          ${i} coords = outC - start;
          setOutput(getX(${l}));
        }
      }
    `}};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class WAe{constructor(e,t,s){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((A,m)=>A[0]+e[m]+A[1]);const r=e.length,i=ns(r),o=t.map(A=>A[0]).join(","),a=t.map((A,m)=>A[0]+e[m]).join(","),l=ti("rc",r),c=ti("source",r),u=`${l[r-1]} < ${this.outputShape[r-1]}`,h=r===1?"source":`vec2(${c.slice(-2).join()})`,d=[`${i} rc = outputLoc;`,`${l[r-1]} += 1;
       if(${u}) {
      `,r===1?"":`}
       rc = outputLoc;
       ${l[r-2]} += 1;
       if(${l[r-2]} < ${this.outputShape[r-2]}) {`,r===1?"":`  ${l[r-1]} += 1;
         if(${u}) {`],f=r===1?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let p="";for(let A=0,m=r===1?2:4;A<m;A++)p+=`
        ${d[A]}
        if (${f}) {
          result[${A}] = float(value);
        } else {
          ${i} source = rc - start;
          result[${A}] = getChannel(getX(${c.join()}), ${h});
        }
      `;p+=r===1?"} ":"}}",this.userCode=`
      const ${i} start = ${i}(${o});
      const ${i} end = ${i}(${a});

      void main() {
        ${i} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${p}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xP=n=>{const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{paddings:i,constantValue:o}=s;if(ye(r.shape)===0){const c=i.map((u,h)=>u[0]+r.shape[h]+u[1]);return HA({backend:t,attrs:{shape:c,value:o,dtype:r.dtype}})}const a=xe().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new WAe(r.shape,i,o):new VAe(r.shape,i,o),l=[[o]];return t.runWebGLProgram(a,[r],r.dtype,l)},HAe={kernelName:Zf,backendName:"webgl",kernelFunc:xP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qAe=`
  if(a < 0.0 && floor(b) < b){
    return NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  return (round(mod(b, 2.0)) != 1) ?
      pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,YAe=`
  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.
  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));
  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);
  vec4 result = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  bvec4 isExpZero = equal(b, vec4(0.0));
  result.r = isExpZero.r ? 1.0 : result.r;
  result.g = isExpZero.g ? 1.0 : result.g;
  result.b = isExpZero.b ? 1.0 : result.b;
  result.a = isExpZero.a ? 1.0 : result.a;

  bvec4 isNaN1 = lessThan(a, vec4(0.0));
  bvec4 isNaN2 = lessThan(floor(b), b);
  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);
  `+Gh+`
  return result;
`,jAe=Rr({opSnippet:qAe,packedOpSnippet:YAe}),XAe={kernelName:dh,backendName:"webgl",kernelFunc:jAe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KAe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:i,keepDims:o}=s,a=r.shape.length,l=[],c=an(i,r.shape);let u=c;const h=ss(u,a);let d=r;h!=null&&(d=si({inputs:{x:r},backend:t,attrs:{perm:h}}),u=ys(u.length,a),l.push(d)),qs("prod",u,a);let f;if(t.shouldExecuteOnCPU([d])){const p=t.texData.get(d.dataId).values,{outVals:A,outShape:m,outDtype:g}=jue(d.shape,d.dtype,p,u);f=t.makeTensorInfo(m,g,A)}else{const[p,A]=$s(d.shape,u),m=ye(A),g=yt({inputs:{x:d},backend:t,attrs:{shape:[-1,m]}}),x=aA(r.dtype),v=Vh(g,x,"prod",t);f=yt({inputs:{x:v},backend:t,attrs:{shape:p}}),l.push(g),l.push(v)}if(o){l.push(f);const p=Ms(f.shape,c);f=yt({inputs:{x:f},backend:t,attrs:{shape:p}})}return l.forEach(p=>t.disposeIntermediateTensorInfo(p)),f}const JAe={kernelName:tp,backendName:"webgl",kernelFunc:KAe};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZAe(n){const{inputs:e,backend:t,attrs:s}=n,{paramsNestedSplits:r,paramsDenseValues:i,indices:o}=e,{outputRaggedRank:a}=s,l=r.map(g=>t.readSync(g.dataId)),c=r.map(g=>g.shape),u=t.readSync(i.dataId),h=t.readSync(o.dataId),[d,f,p]=Xue(l,c,u,i.shape,i.dtype,h,o.shape,a),A=d.map(g=>t.makeTensorInfo([g.length],"int32",g)),m=t.makeTensorInfo(p,i.dtype,f);return A.concat([m])}const eye={kernelName:bx,backendName:"webgl",kernelFunc:ZAe};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tye(n){const{inputs:e,backend:t}=n,{starts:s,limits:r,deltas:i}=e,o=t.readSync(s.dataId),a=t.readSync(r.dataId),l=t.readSync(i.dataId),[c,u]=Kue(o,s.shape,s.dtype,a,r.shape,l,i.shape),h=t.makeTensorInfo([c.length],"int32",c),d=t.makeTensorInfo([u.length],s.dtype,u);return[h,d]}const nye={kernelName:vx,backendName:"webgl",kernelFunc:tye};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sye(n){const{inputs:e,backend:t,attrs:s}=n,{shape:r,values:i,defaultValue:o,rowPartitionTensors:a}=e,{rowPartitionTypes:l}=s,c=t.readSync(r.dataId),u=t.readSync(i.dataId),h=t.readSync(o.dataId),d=a.map(m=>t.readSync(m.dataId)),f=a.map(m=>m.shape),[p,A]=Jue(c,r.shape,u,i.shape,i.dtype,h,o.shape,d,f,l);return t.makeTensorInfo(p,i.dtype,A)}const rye={kernelName:Cx,backendName:"webgl",kernelFunc:sye};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bP=n=>{const{backend:e,attrs:t}=n,{start:s,stop:r,step:i,dtype:o}=t,a=Zue(s,r,i,o);return e.makeTensorInfo([a.length],o,a)},iye={kernelName:zg,backendName:"webgl",kernelFunc:bP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oye="return 1.0 / x;",aye=$n({opSnippet:oye}),lye={kernelName:fh,backendName:"webgl",kernelFunc:aye};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cye=Bo+`
  return (x < 0.0) ? 0.0 : x;
`,uye=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,hye=$n({opSnippet:cye,packedOpSnippet:uye}),dye={kernelName:ph,backendName:"webgl",kernelFunc:hye};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fye=Bo+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,pye=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,mye=$n({opSnippet:fye,packedOpSnippet:pye}),gye={kernelName:mh,backendName:"webgl",kernelFunc:mye};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Aye=class{constructor(e,t,s,r,i){this.variableNames=["A"],this.outputShape=[];const[o,a,l,c]=e;this.outputShape=[o,t,s,c];const u=[r&&t>1?a-1:a,r&&s>1?l-1:l],h=[r&&t>1?t-1:t,r&&s>1?s-1:s];let d;i?d="(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":d="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${u[0]/h[0]},
          ${u[1]/h[1]});
      const vec2 inputShapeRC = vec2(${a}.0, ${l}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${d};

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `}};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class yye{constructor(e,t,s,r,i){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[o,a,l,c]=e;this.outputShape=[o,t,s,c];const u=[r&&t>1?a-1:a,r&&s>1?l-1:l],h=[r&&t>1?t-1:t,r&&s>1?s-1:s];let d;i?d="(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":d="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${u[0]/h[0]},
          ${u[1]/h[1]},
          ${u[1]/h[1]});
      const vec3 inputShapeRC = vec3(${a}.0, ${l}.0,
                                     ${l}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${d};

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${c-1};
        bool hasNextRow = coords.z < ${s-1};

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xye(n){const{inputs:e,backend:t,attrs:s}=n,{images:r}=e,{alignCorners:i,halfPixelCenters:o,size:a}=s,[l,c]=a,u=xe().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new yye(r.shape,l,c,i,o):new Aye(r.shape,l,c,i,o);return t.runWebGLProgram(u,[r],"float32")}const bye={kernelName:rp,backendName:"webgl",kernelFunc:xye};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let vye=class{constructor(e,t,s){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,i]=t,[,o,a]=e,l=[s&&o>1?r-1:r,s&&a>1?i-1:i],c=[s&&o>1?o-1:o,s&&a>1?a-1:a],u=l[0]/c[0],h=l[1]/c[1],d=1/u,f=1/h,p=Math.ceil(d)*2+2,A=Math.ceil(f)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${u});
        const float widthScale = float(${h});

        const float invHeightScale = float(${d});
        const float invWidthScale = float(${f});

        const int winHeight = int(${p});
        const int winWidth = int(${A});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${o}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${a}) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), ${i-1}.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cye(n){const{inputs:e,backend:t,attrs:s}=n,{images:r,dy:i}=e,{alignCorners:o}=s,a=new vye(i.shape,r.shape,o);return t.runWebGLProgram(a,[i],i.dtype)}const Iye={kernelName:Wg,backendName:"webgl",kernelFunc:Cye};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let wye=class{constructor(e,t,s,r,i){this.variableNames=["A"],this.outputShape=[];const[o,a,l,c]=e;this.outputShape=[o,t,s,c];const u=[r&&t>1?a-1:a,r&&s>1?l-1:l],h=[r&&t>1?t-1:t,r&&s>1?s-1:s],d=r?"0.5":"0.0";let f;i?f="max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":f="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${u[0]/h[0]},
          ${u[1]/h[1]});
      const vec2 inputShapeRC = vec2(${a}.0, ${l}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${f};

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));
        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `}};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Sye{constructor(e,t,s,r,i){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[o,a,l,c]=e;this.outputShape=[o,t,s,c];const u=[r&&t>1?a-1:a,r&&s>1?l-1:l],h=[r&&t>1?t-1:t,r&&s>1?s-1:s],d=r?"0.5":"0.0";let f;i?f="max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":f="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${u[0]/h[0]},
          ${u[1]/h[1]},
          ${u[1]/h[1]});
      const vec3 inputShapeRC = vec3(${a}.0, ${l}.0,
                                     ${l}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${f};

        // Compute the coordinators of nearest neighbor point.
        ivec3 sourceNearestRC = ivec3(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${c-1};
        bool hasNextRow = coords.z < ${s-1};

        vec4 newValue = vec4(
          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),
          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Eye(n){const{inputs:e,backend:t,attrs:s}=n,{images:r}=e,{alignCorners:i,halfPixelCenters:o,size:a}=s,[l,c]=a,u=xe().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new Sye(r.shape,l,c,i,o):new wye(r.shape,l,c,i,o);return t.runWebGLProgram(u,[r],r.dtype)}const _ye={kernelName:sp,backendName:"webgl",kernelFunc:Eye};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Tye=class{constructor(e,t,s){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,i]=t,[,o,a]=e,l=[s&&o>1?r-1:r,s&&a>1?i-1:i],c=[s&&o>1?o-1:o,s&&a>1?a-1:a],u=l[0]/c[0],h=l[1]/c[1],d=1/u,f=1/h,p=Math.ceil(d)*2+2,A=Math.ceil(f)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${u});
        const float widthScale = float(${h});

        const float invHeightScale = float(${d});
        const float invWidthScale = float(${f});

        const int winHeight = int(${p});
        const int winWidth = int(${A});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${o}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${a}) {
              continue;
            }

            float sourceFracRow =
              float(${l[0]}) *
                (float(dyR) / float(${c[0]}));

            float sourceFracCol =
                float(${l[1]}) *
                  (float(dyC) / float(${c[1]}));

            int sourceNearestRow = int(min(
                float(int(${r}) - 1),
                ${s} ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(${i}) - 1),
                ${s} ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bye(n){const{inputs:e,backend:t,attrs:s}=n,{images:r,dy:i}=e,{alignCorners:o}=s,a=new Tye(i.shape,r.shape,o);return t.runWebGLProgram(a,[i],i.dtype)}const kye={kernelName:Vg,backendName:"webgl",kernelFunc:Bye};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Nye=class{constructor(e,t){this.variableNames=["x"];const s=e.length;if(s>4)throw new Error(`WebGL backend: Reverse of rank-${s} tensor is not yet supported`);if(this.outputShape=e,s===1){this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(${e[0]} - coord - 1));
        }
      `;return}const r=a=>t.indexOf(a)!==-1&&e[a]!==1?`${e[a]} - coords[${a}] - 1`:`coords[${a}]`,i=e.map((a,l)=>r(l)).join(","),o=ns(s);this.userCode=`
      void main() {
        ${o} coords = getOutputCoords();
        setOutput(getX(${i}));
      }
    `}};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Rye{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const s=e.length;if(s>4)throw new Error(`WebGL backend: Reverse of rank-${s} tensor is not yet supported`);this.outputShape=e;const r=ti("rc",s),i=`${r[s-1]} + 1 < ${this.outputShape[s-1]}`,o=`${r[s-2]} + 1 < ${this.outputShape[s-2]}`,a=ns(s);s===1?this.userCode=`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(${e[0]} - rc - 1),
            ${e[0]} - rc - 1);
          if(${i}){
              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),
                ${e[0]} - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:this.userCode=`
        void main() {
          ${a} rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = ${l(r.slice())};
          if(${i}){
            result.g = ${c(r.slice())};
          }
          if(${o}) {
            result.b = ${u(r.slice())};
            if(${i}) {
              result.a = ${h(r.slice())};
            }
          }
          setOutput(result);
        }
    `;function l(p){return d(p)}function c(p){return p[s-1]="("+p[s-1]+" + 1)",d(p)}function u(p){return p[s-2]="("+p[s-2]+" + 1)",d(p)}function h(p){return p[s-1]="("+p[s-1]+" + 1)",p[s-2]="("+p[s-2]+" + 1)",d(p)}function d(p){const A=e.map((x,v)=>f(v,p)),m=A.join(","),g=A.slice(-2).join(",");return`getChannel(getX(${m}), vec2(${g}))`}function f(p,A){return t.indexOf(p)!==-1&&e[p]!==1?`${e[p]} - ${A[p]} - 1`:`${A[p]}`}}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mye(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{dims:i}=s,o=r.shape.length,a=an(i,r.shape);if(o===0)return Hi({inputs:{x:r},backend:t});const l=xe().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Rye(r.shape,a):new Nye(r.shape,a);return t.runWebGLProgram(l,[r],r.dtype)}const Dye={kernelName:ip,backendName:"webgl",kernelFunc:Mye};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Fye=class{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const s=e[1],r=e[2];this.outputShape=e;let i="";typeof t=="number"?i=`float outputValue = ${t.toFixed(2)};`:i=`
        vec3 fill = vec3(${t.join(",")});
        float outputValue = fill[coords[3]];`,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];
          int y = coords[1];
          float coordXFloat = (float(x) - params[0]) * params[3] -
            (float(y) - params[1]) * params[2];
          float coordYFloat = (float(x) - params[0]) * params[2] +
            (float(y) - params[1]) * params[3];
          int coordX = int(round(coordXFloat + params[0]));
          int coordY = int(round(coordYFloat + params[1]));
          ${i}
          if(coordX >= 0 && coordX < ${r} && coordY >= 0 && coordY < ${s}) {
            outputValue = getImage(coords[0], coordY, coordX, coords[3]);
          }
          setOutput(outputValue);
        }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $ye={kernelName:rA,backendName:"webgl",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{image:s}=n,{radians:r,fillValue:i,center:o}=e,a=t,l=new Fye(s.shape,i),[c,u]=m1(o,s.shape[1],s.shape[2]),h=[[c,u,Math.sin(r),Math.cos(r)]];return a.runWebGLProgram(l,[s],s.dtype,h)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Pye=`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`,Lye=$n({opSnippet:Pye}),Oye={kernelName:gh,backendName:"webgl",kernelFunc:Lye};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qye="return inversesqrt(x);",Uye=$n({opSnippet:Qye,cpuKernelImpl:ehe}),zye={kernelName:Ah,backendName:"webgl",kernelFunc:Uye};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let ES=class{constructor(e,t,s,r,i,o,a=!0,l=!1){this.variableNames=["updates","indices","defaultValue"],this.outputShape=o;const c=ns(i.length),u=ns(o.length);let h="";s===1?h="i":s===2&&(h="i, j");const d=`getIndices(${h})`;let f="";r===1?f="i":r===2&&(f="i, coords[1]");const p=`getUpdates(${f})`;let A="";l&&(A="coords[0], coords[1]");const m=`getDefaultValue(${A})`,g=t>1?"strides[j]":"strides";this.userCode=`
        ${c} strides = ${c}(${i});

        void main() {
          ${u} coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < ${e}; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < ${t}; j++) {
              int index = round(${d});
              flattenedIndex += index * ${g};
            }
            if (flattenedIndex == coords[0]) {
              sum += ${p};
              found = true;
            }
          }
          setOutput(mix(${m}, sum, float(found)));
        }
      `}};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Gye{constructor(e,t,s,r,i,o,a=!0,l=!1){this.variableNames=["updates","indices","defaultValue"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=o;const c=ns(i.length),u=ns(o.length);let h="";s===1?h="i":s===2&&(h="i, j");const d=`getIndices(${h})`;let f="";r===1?f="i":r===2&&(f="i, coords[1]");const p=`getUpdates(${f})`;let A="";l&&(A="coords[0], coords[1]");const m=`getDefaultValue(${A})`,g=t>1?"strides[j]":"strides",x=t>1?"strides[j + 1]":"strides";this.userCode=`
        ${c} strides = ${c}(${i});

        void main() {
          ${u} coords = getOutputCoords();
          vec4 sum = vec4(0.);
          vec4 found = vec4(0.);
          for (int i = 0; i < ${e}; i+=2) {
            ivec2 flattenedIndex = ivec2(0);
            for (int j = 0; j < ${t}; j+=2) {
              ivec4 index = round(${d});
              flattenedIndex += index.xz * ${g};
              if (j + 1 < ${t}) {
                flattenedIndex += index.yw * ${x};
              }
            }
            if (flattenedIndex[0] == coords[0] || flattenedIndex[1] == coords[0] ||
                flattenedIndex[0] == coords[0] + 1 || flattenedIndex[1] == coords[0] + 1) {
              vec4 updVals = ${p};
              if (flattenedIndex[0] == coords[0]) {
                sum.xy += updVals.xy;
                found.xy = vec2(1.);
              } else if (flattenedIndex[0] == coords[0] + 1) {
                sum.zw += updVals.xy;
                found.zw = vec2(1.);
              }
              if (flattenedIndex[1] == coords[0]) {
                sum.xy += updVals.zw;
                found.xy = vec2(1.);
              } else if (flattenedIndex[1] == coords[0] + 1) {
                sum.zw += updVals.zw;
                found.zw = vec2(1.);
              }
            }
          }
          setOutput(mix(${m}, sum, found));
        }
      `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vye(n){const{inputs:e,backend:t,attrs:s}=n,{indices:r,updates:i}=e,{shape:o}=s,{sliceRank:a,numUpdates:l,sliceSize:c,strides:u,outputSize:h}=aa(i,r,o),d=[h/c,c];if(h===0)return t.makeTensorInfo(o,r.dtype);const f=yt({inputs:{x:r},backend:t,attrs:{shape:[l,a]}}),p=yt({inputs:{x:i},backend:t,attrs:{shape:[l,c]}}),A=t.makeTensorInfo([],"float32",new Float32Array([0]));let m;xe().getBool("WEBGL_PACK")?m=new Gye(l,a,f.shape.length,p.shape.length,u,d):m=new ES(l,a,f.shape.length,p.shape.length,u,d);const g=t.runWebGLProgram(m,[p,f,A],p.dtype),x=yt({inputs:{x:g},backend:t,attrs:{shape:o}});return t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(A),x}const Wye={kernelName:Hg,backendName:"webgl",kernelFunc:Vye};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Hye=class{constructor(e,t,s,r){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,s];const i="while (left < right) {",o=`for (int i = 0; i < ${Math.ceil(Math.log2(t+1))}; ++i) { if (left >= right) break;`,a=xe().getNumber("WEBGL_VERSION")===2?i:o,l=r==="left"?"<":"<=";this.userCode=`
       int findBound(int batch, float value) {
         int left = 0;
         int right = numInputs;
         int mid;
         ${a}
           mid = (left + right) / 2;
           if (getSortedSequence(batch, mid) ${l} value) {
             left = mid + 1;
           } else {
             right = mid;
           }
         }
         return right;
       }

       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int valueIndex = coords[1];

         float value = getValues(batch, valueIndex);

         setOutput(float(findBound(batch, value)));
       }
     `}};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qye(n){const{inputs:e,backend:t,attrs:s}=n,{sortedSequence:r,values:i}=e,{side:o}=s,a=new Hye(r.shape[0],r.shape[1],i.shape[1],o),l=[[r.shape[1]]];return t.runWebGLProgram(a,[r,i],"int32",l)}const Yye={kernelName:Yg,backendName:"webgl",kernelFunc:qye};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let jye=class{constructor(e,t,s){this.variableNames=["c","a","b"],this.outputShape=t;let r,i;if(s>4)throw Error(`Where for rank ${s} is not yet supported`);if(s===1)i="resRC",r="resRC";else{const a=["resRC.x","resRC.y","resRC.z","resRC.w"],l=[],c=[];for(let u=0;u<t.length;u++)c.push(`${a[u]}`),u<e&&l.push(`${a[u]}`);r=l.join(),i=c.join()}const o=ns(s);this.userCode=`
      void main() {
        ${o} resRC = getOutputCoords();
        float cVal = getC(${r});
        if (cVal >= 1.0) {
          setOutput(getA(${i}));
        } else {
          setOutput(getB(${i}));
        }
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xye(n){const{inputs:e,backend:t}=n,{condition:s,t:r,e:i}=e,o=new jye(s.shape.length,r.shape,r.shape.length);return t.runWebGLProgram(o,[s,r,i],tr(r.dtype,i.dtype))}const Kye={kernelName:op,backendName:"webgl",kernelFunc:Xye};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jye=`
  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.
  // see: https://arxiv.org/abs/1706.02515
  float scaleAlpha = ${NA};
  float scale = ${RA};
  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);
`,Zye=$n({opSnippet:Jye}),e0e={kernelName:yh,backendName:"webgl",kernelFunc:Zye};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const t0e=Bp+`
  return 1.0 / (1.0 + exp(-1.0 * x));
`,n0e=`
  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,s0e=$n({opSnippet:t0e,packedOpSnippet:n0e,cpuKernelImpl:nhe}),r0e={kernelName:Ch,backendName:"webgl",kernelFunc:s0e};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const i0e=`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`,o0e=$n({opSnippet:i0e}),a0e={kernelName:vh,backendName:"webgl",kernelFunc:o0e};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const l0e=Bp+`
  return sin(x);
`,c0e=`
  vec4 result = sin(x);
  bvec4 isNaN = isnan(x);
  ${Gh}
  return result;
`,u0e=$n({opSnippet:l0e,packedOpSnippet:c0e}),h0e={kernelName:xh,backendName:"webgl",kernelFunc:u0e};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const d0e=`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`,f0e=$n({opSnippet:d0e}),p0e={kernelName:bh,backendName:"webgl",kernelFunc:f0e};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const m0e=`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`,g0e=$n({opSnippet:m0e}),A0e={kernelName:Ih,backendName:"webgl",kernelFunc:g0e};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const y0e=n=>{const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{blockShape:i,paddings:o}=s;z(r.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");const a=i.reduce((g,x)=>g*x),l=[[0,0]];l.push(...o);for(let g=1+i.length;g<r.shape.length;++g)l.push([0,0]);const c=[],u=xP({inputs:{x:r},backend:t,attrs:{paddings:l,constantValue:0}}),h=$h(u.shape,i,a,!1),d=Ph(h.length,i.length,!1),f=Lh(u.shape,i,a,!1),p=yt({inputs:{x:u},backend:t,attrs:{shape:h}}),A=si({inputs:{x:p},backend:t,attrs:{perm:d}}),m=yt({inputs:{x:A},backend:t,attrs:{shape:f}});return c.push(u),c.push(p),c.push(A),c.forEach(g=>t.disposeIntermediateTensorInfo(g)),m},x0e={kernelName:cp,backendName:"webgl",kernelFunc:y0e};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function b0e(n){const{inputs:e,backend:t}=n,{indices:s,values:r,denseShape:i,defaultValue:o}=e;if(i.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
         ${i.shape}`);if(s.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
         ${s.shape}`);if(r.shape.length!==1)throw new Error(`Values must be a vector, saw:
         ${r.shape}`);if(o.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${o.shape}`);const a=t.readSync(s.dataId),l=t.readSync(r.dataId),c=t.readSync(i.dataId),u=t.readSync(o.dataId)[0],[h,d,f,p,A]=rhe(a,s.shape,s.dtype,l,r.dtype,c,u);return[t.makeTensorInfo(d,s.dtype,h),t.makeTensorInfo([d[0]],r.dtype,f),t.makeTensorInfo([p.length],"bool",new Uint8Array(p.map(m=>Number(m)))),t.makeTensorInfo([A.length],s.dtype,new Int32Array(A))]}const v0e={kernelName:Ix,backendName:"webgl",kernelFunc:b0e};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function C0e(n){const{inputs:e,backend:t}=n,{inputIndices:s,inputShape:r,newShape:i}=e;if(s.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape ${s.shape}`);if(r.shape.length!==1)throw new Error(`Input shape should be a vector but received shape ${r.shape}`);if(i.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${i.shape}`);const o=Array.from(t.readSync(r.dataId)),a=t.readSync(s.dataId),l=Array.from(t.readSync(i.dataId)),[c,u,h]=ihe(a,s.shape,s.dtype,o,l);return[t.makeTensorInfo(u,s.dtype,c),t.makeTensorInfo([h.length],i.dtype,new Int32Array(h))]}const I0e={kernelName:wx,backendName:"webgl",kernelFunc:C0e};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function w0e(n){const{inputs:e,backend:t}=n,{data:s,indices:r,segmentIds:i}=e;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
              ${r.shape}`);if(i.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
              ${i.shape}`);const o=t.readSync(s.dataId),a=t.readSync(r.dataId),l=t.readSync(i.dataId),[c,u]=V$(o,s.shape,s.dtype,a,l,!0);return t.makeTensorInfo(u,s.dtype,c)}const S0e={kernelName:jg,backendName:"webgl",kernelFunc:w0e};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function E0e(n){const{inputs:e,backend:t}=n,{data:s,indices:r,segmentIds:i}=e;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
             ${r.shape}`);if(i.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
             ${i.shape}`);const o=t.readSync(s.dataId),a=t.readSync(r.dataId),l=t.readSync(i.dataId),[c,u]=V$(o,s.shape,s.dtype,a,l);return t.makeTensorInfo(u,s.dtype,c)}const _0e={kernelName:Xg,backendName:"webgl",kernelFunc:E0e};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function T0e(n){const{inputs:e,backend:t,attrs:s}=n,{sparseIndices:r,sparseValues:i,defaultValue:o}=e,{outputShape:a}=s,{sliceRank:l,numUpdates:c,sliceSize:u,strides:h,outputSize:d}=aa(i,r,a),f=!1;if(i.dtype==="string"){const g=t.bufferSync(r),x=t.bufferSync(i),v=Eo(t.readSync(o.dataId)[0]),b=the(g,x,a,d,u,c,l,h,v,f);return t.makeTensorInfo(a,b.dtype,b.values)}const p=new ES(c,l,r.shape.length,i.shape.length,h,[d,1],f),A=t.runWebGLProgram(p,[i,r,o],i.dtype),m=yt({inputs:{x:A},backend:t,attrs:{shape:a}});return t.disposeIntermediateTensorInfo(A),m}const B0e={kernelName:Kg,backendName:"webgl",kernelFunc:T0e};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function k0e(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{numOrSizeSplits:i,axis:o}=s,a=an(o,r.shape)[0],l=B1(r,i,a),c=r.shape.length,u=new Array(c).fill(0),h=r.shape.slice();return l.map(d=>{const f=[...h];f[a]=d;const p=kp({inputs:{x:r},backend:t,attrs:{begin:u,size:f}});return u[a]+=d,p})}const N0e={kernelName:up,backendName:"webgl",kernelFunc:k0e};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const D3="return sqrt(x);",R0e=$n({opSnippet:D3,packedOpSnippet:D3,cpuKernelImpl:ohe}),M0e={kernelName:wh,backendName:"webgl",kernelFunc:R0e};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const D0e="return x * x;",F0e=$n({opSnippet:D0e}),$0e={kernelName:Jg,backendName:"webgl",kernelFunc:F0e};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const F3="return (a - b) * (a - b);",P0e=Rr({opSnippet:F3,packedOpSnippet:F3}),L0e={kernelName:Sh,backendName:"webgl",kernelFunc:P0e};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function O0e(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e;if(r.dtype!=="string")throw new Error("Input must be of datatype string");const i=t.readSync(r.dataId),o=Zo(i),a=ahe(o,"string",s);return t.makeTensorInfo(r.shape,"string",a)}const Q0e={kernelName:Zg,backendName:"webgl",kernelFunc:O0e};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function U0e({inputs:n,attrs:e,backend:t}){const{x:s}=n,r=Bo+`
    return x > 0.0 ? 1.0 : float(${e.alpha});
  `,i=new va(s.shape,r);return t.runWebGLProgram(i,[s],s.dtype)}const z0e={kernelName:kh,backendName:"webgl",kernelFunc:U0e};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let G0e=class{constructor(e,t,s){this.variableNames=["x"],this.outputShape=s;const r=s.length,i=ns(s.length),o=ns(s.length);let a="";if(r===1)a="coords * strides + begin";else{let l=0;a=s.map((c,u)=>(l++,s.length===1?`coords * strides[${u}] + begin[${u}]`:`coords[${l-1}] * strides[${u}] + begin[${u}]`)).join(",")}this.userCode=`
      ${i} begin = ${i}(${e});
      ${i} strides = ${i}(${t});

      void main() {
        ${o} coords = getOutputCoords();
        setOutput(getX(${a}));
      }
    `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function V0e(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{begin:i,end:o,strides:a,beginMask:l,endMask:c,ellipsisMask:u,newAxisMask:h,shrinkAxisMask:d}=s,{finalShapeSparse:f,finalShape:p,isIdentity:A,sliceDim0:m,isSimpleSlice:g,begin:x,end:v,strides:b}=d1(r.shape,i,o,a,l,c,u,h,d);let w;if(A)w=yt({inputs:{x:r},backend:t,attrs:{shape:p}});else if(m||g){z(r.shape.length>=1,()=>`Input must have rank at least 1, got: ${r.shape.length}`);const N=h1(x,v,b),M=kp({inputs:{x:r},backend:t,attrs:{begin:x,size:N}});w=yt({inputs:{x:M},backend:t,attrs:{shape:p}}),t.disposeIntermediateTensorInfo(M)}else if(t.shouldExecuteOnCPU([r])){const M=t.readSync(r.dataId),T=rn(r.shape,r.dtype,M),k=lhe(f,T,b,x);w=t.makeTensorInfo(p,r.dtype,k.values)}else{const M=new G0e(x,b,f);w=t.runWebGLProgram(M,[r],r.dtype)}const _=yt({inputs:{x:w},backend:t,attrs:{shape:p}});return t.disposeIntermediateTensorInfo(w),_}const W0e={kernelName:eA,backendName:"webgl",kernelFunc:V0e};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function H0e(n){const{inputs:e,backend:t,attrs:s}=n,{separator:r,nGramWidths:i,leftPad:o,rightPad:a,padWidth:l,preserveShortSequences:c}=s,{data:u,dataSplits:h}=e,d=t.readSync(u.dataId),f=t.readSync(h.dataId),[p,A]=che(d,f,r,i,o,a,l,c);return[t.makeTensorInfo([p.length],"string",p),t.makeTensorInfo(h.shape,"int32",A)]}const q0e={kernelName:tA,backendName:"webgl",kernelFunc:H0e};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Y0e(n){const{inputs:e,backend:t,attrs:s}=n,{skipEmpty:r}=s,{input:i,delimiter:o}=e;if(i.dtype!=="string")throw new Error("Input must be of datatype string");if(i.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${i.shape}`);if(o.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${o.shape}`);const a=t.readSync(i.dataId),l=t.readSync(o.dataId)[0],[c,u,h]=uhe(a,l,r),d=u.length;return[t.makeTensorInfo([d,2],"int32",c),t.makeTensorInfo([d],"string",u),t.makeTensorInfo([2],"int32",new Int32Array(h))]}const j0e={kernelName:Sx,backendName:"webgl",kernelFunc:Y0e};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function X0e(n){const{inputs:e,backend:t,attrs:s}=n,{numBuckets:r}=s,{input:i}=e;if(i.dtype!=="string")throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");const o=t.readSync(i.dataId),a=hhe(o,r);return t.makeTensorInfo(i.shape,"int32",a)}const K0e={kernelName:Ex,backendName:"webgl",kernelFunc:X0e};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const J0e="return tan(x);",Z0e=$n({opSnippet:J0e}),exe={kernelName:_h,backendName:"webgl",kernelFunc:Z0e};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const txe=`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`,nxe=$n({opSnippet:txe}),sxe={kernelName:Th,backendName:"webgl",kernelFunc:nxe};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rxe(n){const{inputs:e,backend:t,attrs:s}=n,{tensor:r,indices:i,updates:o}=e,{sliceRank:a,numUpdates:l,sliceSize:c,strides:u,outputSize:h}=aa(o,i,r.shape),d=[h/c,c];if(h===0)return t.makeTensorInfo(r.shape,i.dtype);const f=yt({inputs:{x:i},backend:t,attrs:{shape:[l,a]}}),p=yt({inputs:{x:o},backend:t,attrs:{shape:[l,c]}}),A=yt({inputs:{x:r},backend:t,attrs:{shape:d}}),m=new ES(l,a,f.shape.length,p.shape.length,u,d,!1,!0),g=t.runWebGLProgram(m,[p,f,A],A.dtype),x=yt({inputs:{x:g},backend:t,attrs:{shape:r.shape}});return t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(A),t.disposeIntermediateTensorInfo(g),x}const ixe={kernelName:qg,backendName:"webgl",kernelFunc:rxe};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let oxe=class{constructor(e,t){this.variableNames=["A"];const s=new Array(e.length);for(let o=0;o<s.length;o++)s[o]=e[o]*t[o];this.outputShape=s,this.rank=s.length;const r=ns(this.rank),i=axe(e);this.userCode=`
      void main() {
        ${r} resRC = getOutputCoords();
        setOutput(getA(${i}));
      }
    `}};function axe(n){const e=n.length;if(e>5)throw Error(`Tile for rank ${e} is not yet supported`);if(e===1)return`imod(resRC, ${n[0]})`;const t=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],s=[];for(let r=0;r<n.length;r++)s.push(`imod(${t[r]}, ${n[r]})`);return s.join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vP(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{reps:i}=s;if(r.dtype==="string"||r.shape.length>5){const l=t.readSync(r.dataId),c=r.dtype==="string"?l.map(d=>Eo(d)):l,u=rn(r.shape,r.dtype,c),h=fhe(u,i);return t.makeTensorInfo(h.shape,h.dtype,h.values)}const o=new oxe(r.shape,i);return t.runWebGLProgram(o,[r],r.dtype)}const lxe={kernelName:Bh,backendName:"webgl",kernelFunc:vP};let cxe=class{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode=`
       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // We compare elements pair-wise within a group of size 2 * inc.
         // The comparing rule for each group alternates between ascending
         // and descending. Within each group, we compare each pair at
         // positions i and i+inc. To decide whether an element at position i
         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
         // inc, it is in the first half of the group, we denote it as x0,
         // otherwise we denote it as x1.
         // For example, as shown in the Bitonic top K paper referenced above,
         // Figure5(a) shows that element[1] is in the
         // second half of the group when group size is 2, but it is in the
         // first half of the group when group size is 4.

         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;
         int i = isFirstInPair ? elemIdx : elemIdx - inc;

         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));
         float x0 = i0 < n ? getX(batch, i0) : negativeInf;
         float x1 = i1 < n ? getX(batch, i1) : negativeInf;

         // Denotes which direction indices are in (ascending or descending).
         bool reverse = imod(elemIdx, 2 * dir) >= dir;
         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
         if (reverse == isGreater) { // Elements in opposite order of direction
           int iTemp = i0;
           i0 = i1;
           i1 = iTemp;
         }
         if (isFirstInPair) {
            setOutput(float(i0));
         } else {
            setOutput(float(i1));
         }
       }
     `}},uxe=class{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode=`
    void main() {
         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // The output size is half of the previous size.
         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),
         // we only need to output the indices at positions |, the indices at
         // positions _ can be thrown away, see Figure5(b) After Phase 2
         // (Merge phase) in the Bitonic Top K paper referenced above.
         // For example, the paper shows we only need to output the orange bars.
         // The output sequence should look like this | | | | | | | |.
         // Because the sequence is halved, to map the output index back
         // to the previous sequence to find the corresponding value,
         // we need to double the index. When we double the index,
         // we basically interpolate a position, so 2i looks like
         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position
         // of each 2k positions by - elemIdx % k. E.g. for output at
         // index 4,5,6,7, we want to get the corresponding element at
         // original index 8,9,10,11, for output at index 8,9,10,11,
         // we want to get the corresponding element at original index
         // 16,17,18,19, so on and so forth.

         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));
         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));

         float x0 = getX(batch, i0);
         float x1 = i1 < n ? getX(batch, i1) : x0;

         setOutput(x0 >= x1 ? float(i0) : float(i1));
       }
     `}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zc(n,e){e!==null&&n.disposeIntermediateTensorInfo(e)}function $3(n){let e=1;for(;e<n;)e*=2;return e}function hxe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{k:i,sorted:o}=s,a=xe().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),l=xe().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),c=r.shape,u=c[c.length-1];if(t.shouldExecuteOnCPU([r])||u<a||i>l){const k=t.readSync(r.dataId),[B,L]=phe(k,c,r.dtype,i,o);return[t.makeTensorInfo(B.shape,B.dtype,B.values),t.makeTensorInfo(L.shape,L.dtype,L.values)]}if(i===0)return c[c.length-1]=0,[t.makeTensorInfo(c,r.dtype,[]),t.makeTensorInfo(c,"int32",[])];if(u===1)return[r,HA({attrs:{shape:c,dtype:"int32",value:0},backend:t})];const h=t.texData.get(r.dataId),d=h!==null&&h.isPacked,f=d?t.unpackTensor(r):r,A=ye(c)/u,m=yt({inputs:{x:f},attrs:{shape:[A,u]},backend:t});d&&zc(t,f);const g=$3(i),x=$3(u);let v=null;const b=()=>v===null?[m,m]:[m,v],w=(k,B,L)=>{const U=b(),V=new cxe(L),H=[[u],[v===null?1:0],[Number.NEGATIVE_INFINITY],[k],[B]],ee=v;v=t.runWebGLProgram(V,U,"int32",H),zc(t,ee)};for(let k=1;k<g;k*=2){const B=k*2;for(let L=k;L>=1;L/=2)w(B,L,[A,x])}for(let k=x;k>g;k/=2){const B=b(),L=new uxe([A,k/2]),V=[[u],[v===null?1:0],[g]],W=v;v=t.runWebGLProgram(L,B,"int32",V),zc(t,W);const H=g/2,ee=H*2;for(let K=H;K>=1;K/=2)w(ee,K,v.shape)}let _=v;v=kp({inputs:{x:v},backend:t,attrs:{begin:0,size:[A,i]}}),zc(t,_);let N=fP({inputs:{x:m,indices:v},backend:t,attrs:{axis:1,batchDims:1}});zc(t,m);const M=c.slice(0,-1);M.push(i),_=v,v=yt({inputs:{x:v},attrs:{shape:M},backend:t}),zc(t,_);const T=N;return N=yt({inputs:{x:N},attrs:{shape:M},backend:t}),zc(t,T),[N,v]}const dxe={kernelName:nA,backendName:"webgl",kernelFunc:hxe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let fxe=class{constructor(e,t,s,r,i,o){this.variableNames=["Image","Transforms"],this.outputShape=o;const a=s==="nearest"?1:2;let l;switch(r){case"constant":l=1;break;case"reflect":l=2;break;case"wrap":l=3;break;case"nearest":l=4;break;default:l=1;break}this.userCode=`
            float mapCoord(float outCoord, float len) {
              float inCoord = outCoord;
              if(${l} == 2) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    if (inCoord < sz2) {
                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +
                      inCoord;
                    }
                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    inCoord -= sz2 * float(int(float(inCoord / sz2)));
                    if (inCoord >= len) {
                      inCoord = sz2 - inCoord - 1.0;
                    }
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${l} == 3) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord -= len * float(int(float(inCoord / sz)));
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${l} == 4) {
                return clamp(outCoord, 0.0, len - 1.0);
              } else {
                return outCoord;
              }
            }

            float readWithFillValue(int batch, int coordY, int coordX,
              int channel) {
              float outputValue;
              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {
                  outputValue = getImage(batch, coordY, coordX, channel);
              } else {
                outputValue = float(${i});
              }
              return outputValue;
            }

            void main() {
              ivec4 coords = getOutputCoords();
              float outputValue;
              int batch = coords[0];
              int x = coords[2];
              int y = coords[1];
              int channel = coords[3];
              float xf = float(x);
              float yf = float(y);
              float a1 = getTransforms(batch, 0);
              float a2 = getTransforms(batch, 1);
              float a3 = getTransforms(batch, 2);
              float b1 = getTransforms(batch, 3);
              float b2 = getTransforms(batch, 4);
              float b3 = getTransforms(batch, 5);
              float c1 = getTransforms(batch, 6);
              float c2 = getTransforms(batch, 7);
              float projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = float(${i});
              } else {
                float inX = (a1 * xf + a2 * yf + a3) / projection;
                float inY = (b1 * xf + b2 * yf + b3) / projection;
                float mapX = mapCoord(inX, float(${t}));
                float mapY = mapCoord(inY, float(${e}));

                if (${a} == 1) {
                  int coordY = int(round(mapY));
                  int coordX = int(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  float yFloor = floor(mapY);
                  float xFloor = floor(mapX);
                  float yCeil = yFloor + 1.0;
                  float xCeil = xFloor + 1.0;
                  float valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);
                  float valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutput(outputValue);
            }
        `}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pxe(n){const{inputs:e,backend:t,attrs:s}=n,{image:r,transforms:i}=e,{interpolation:o,fillMode:a,fillValue:l,outputShape:c}=s,[u,h,d,f]=r.shape,[p,A]=c??[h,d],m=[u,p,A,f],g=new fxe(h,d,o,a,l,m);return t.runWebGLProgram(g,[r,i],"float32")}const mxe={kernelName:sA,backendName:"webgl",kernelFunc:pxe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gxe(n){const{inputs:e,attrs:t,backend:s}=n,{axis:r}=t,{x:i}=e;GA(i,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const o=s.readSync(i.dataId),{outputValues:a,outputShape:l,indices:c}=mhe(o,r,i.shape,i.dtype);return[s.makeTensorInfo(l,i.dtype,a),s.makeTensorInfo([c.length],"int32",c)]}const Axe={kernelName:_x,backendName:"webgl",kernelFunc:gxe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yxe(n){const{inputs:e,backend:t,attrs:s}=n,{value:r}=e;let{axis:i}=s;i<0&&(i+=r.shape.length);const o=r,a=o.shape.length,l=r.shape[i],c=new Array(a-1);let u=0;for(let A=0;A<a;A++)A!==i&&(c[u++]=o.shape[A]);const h=[],d=new Array(a).fill(0),f=o.shape.slice();f[i]=1;const p=new Array(l);for(let A=0;A<p.length;A++){d[i]=A;const m=kp({inputs:{x:o},backend:t,attrs:{begin:d,size:f}}),g=yt({inputs:{x:m},backend:t,attrs:{shape:c}});p[A]=g,h.push(m)}return h.forEach(A=>t.disposeIntermediateTensorInfo(A)),p}const xxe={kernelName:dp,backendName:"webgl",kernelFunc:yxe};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class bxe{constructor(e,t){this.variableNames=["x","segmentIds"];const s=e.windowSize,r=e.batchSize,i=e.inSize,o=e.numSegments,a=o*Math.ceil(i/s);this.outputShape=[r,a];const l="0.0",c="sumValue",u=Math.floor(s/4)*4,h=s%4,d=`
        sumValue += dot(values, segFilter);
    `;let f="";i%s>0&&(f=`
        if (inIdx < 0 || inIdx >= ${i}) {
          return initializationValue;
        }
      `);let p="";i%s>0&&(p=`
        if (inIdx < 0 || inIdx >= ${i}) {
          return -1.0;
        }
      `),this.userCode=`
      const float initializationValue = ${l};

      float getValue(int batch, int inIdx) {
        ${f}
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        ${p}
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          ${o})) * float(${s}));
        int currentSeg = int(mod(float(outIdx), float(${o})));

        float sumValue = 0.0;

        for (int i = 0; i < ${u}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          ${d}
        }

        int inIdx = inOffset + ${u};
        if (${h===1}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          ${d}
        } else if (${h===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          ${d}
        } else if (${h===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          ${d}
        }
        setOutput(${c});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vxe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,segmentIds:i}=e,{numSegments:o}=s,a=r.shape.length,l=[];let c=0;const u=ss([c],a);let h=r;u!=null&&(h=si({inputs:{x:r},backend:t,attrs:{perm:u}}),l.push(h),c=ys(1,a)[0]);const d=Ow(h.shape,c,o),f=ye([h.shape[c]]),p=yt({inputs:{x:h},backend:t,attrs:{shape:[-1,f]}});l.push(p);const A=aA(r.dtype),m=(b,w,_,N,M)=>{const T=b.shape[0],k=b.shape[1],B=XR(k,M),L={windowSize:B,inSize:k,batchSize:T,numSegments:M},U=new bxe(L,w),V=t.compileAndRun(U,[b,_],N);if(l.push(V),V.shape[1]===M)return V;const W=bP({backend:t,attrs:{start:0,stop:M,step:1,dtype:"float32"}}),H=vP({inputs:{x:W},backend:t,attrs:{reps:[k/B]}});return l.push(W),l.push(H),m(V,w,H,N,M)},g=m(p,"unsortedSegmentSum",i,A,o),x=yt({inputs:{x:g},backend:t,attrs:{shape:d}});let v=x;if(u!=null){l.push(x);const b=Oa(u);v=si({inputs:{x:v},backend:t,attrs:{perm:b}})}return l.forEach(b=>t.disposeIntermediateTensorInfo(b)),v}const Cxe={kernelName:fp,backendName:"webgl",kernelFunc:vxe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ixe=[ode,lde,hde,pde,gde,xde,vde,Ide,_de,Bde,Rde,Fde,Lde,zde,Wde,qde,jde,Zde,tfe,sfe,afe,pfe,gfe,bfe,Cfe,Tfe,kfe,Dfe,Ghe,Pfe,zfe,Hfe,Jfe,tpe,spe,ipe,ape,hpe,ppe,Ape,xpe,vpe,Ipe,Epe,Tpe,Rpe,Dpe,Ppe,Qpe,zpe,Hpe,Xpe,eme,sme,ome,ame,cme,hme,fme,mme,Ame,vme,wme,_me,Bme,Rme,Fme,Ome,Gme,zhe,Wme,Qfe,Yme,Kme,ege,Whe,rge,lge,uge,pge,Age,vge,wge,Tge,Rge,Fge,Pge,Uge,Gge,Wge,jge,Kge,Zge,tAe,sAe,aAe,hAe,mAe,IAe,Yhe,_Ae,kAe,MAe,$Ae,wfe,OAe,UAe,GAe,HAe,XAe,qhe,JAe,eye,nye,rye,iye,Sfe,xAe,lye,dye,gye,Xhe,bye,Iye,_ye,kye,Dye,$ye,Oye,zye,Wye,Yye,Kye,e0e,r0e,a0e,h0e,p0e,dfe,vAe,A0e,x0e,v0e,I0e,S0e,_0e,B0e,N0e,M0e,$0e,L0e,Q0e,z0e,W0e,q0e,j0e,K0e,bAe,sde,exe,sxe,ixe,lxe,dxe,mxe,rde,Axe,xxe,Cxe,QAe];for(const n of Ixe)iA(n);var pb={},P3;function wxe(){return P3||(P3=1,(function(){var n;function e(y){var C=0;return function(){return C<y.length?{done:!1,value:y[C++]}:{done:!0}}}var t=typeof Object.defineProperties=="function"?Object.defineProperty:function(y,C,S){return y==Array.prototype||y==Object.prototype||(y[C]=S.value),y};function s(y){y=[typeof globalThis=="object"&&globalThis,y,typeof window=="object"&&window,typeof self=="object"&&self,typeof qd=="object"&&qd];for(var C=0;C<y.length;++C){var S=y[C];if(S&&S.Math==Math)return S}throw Error("Cannot find global object")}var r=s(this);function i(y,C){if(C)e:{var S=r;y=y.split(".");for(var R=0;R<y.length-1;R++){var $=y[R];if(!($ in S))break e;S=S[$]}y=y[y.length-1],R=S[y],C=C(R),C!=R&&C!=null&&t(S,y,{configurable:!0,writable:!0,value:C})}}i("Symbol",function(y){function C(P){if(this instanceof C)throw new TypeError("Symbol is not a constructor");return new S(R+(P||"")+"_"+$++,P)}function S(P,O){this.h=P,t(this,"description",{configurable:!0,writable:!0,value:O})}if(y)return y;S.prototype.toString=function(){return this.h};var R="jscomp_symbol_"+(1e9*Math.random()>>>0)+"_",$=0;return C}),i("Symbol.iterator",function(y){if(y)return y;y=Symbol("Symbol.iterator");for(var C="Array Int8Array Uint8Array Uint8ClampedArray Int16Array Uint16Array Int32Array Uint32Array Float32Array Float64Array".split(" "),S=0;S<C.length;S++){var R=r[C[S]];typeof R=="function"&&typeof R.prototype[y]!="function"&&t(R.prototype,y,{configurable:!0,writable:!0,value:function(){return o(e(this))}})}return y});function o(y){return y={next:y},y[Symbol.iterator]=function(){return this},y}function a(y){var C=typeof Symbol<"u"&&Symbol.iterator&&y[Symbol.iterator];return C?C.call(y):{next:e(y)}}function l(y){if(!(y instanceof Array)){y=a(y);for(var C,S=[];!(C=y.next()).done;)S.push(C.value);y=S}return y}var c=typeof Object.assign=="function"?Object.assign:function(y,C){for(var S=1;S<arguments.length;S++){var R=arguments[S];if(R)for(var $ in R)Object.prototype.hasOwnProperty.call(R,$)&&(y[$]=R[$])}return y};i("Object.assign",function(y){return y||c});var u=typeof Object.create=="function"?Object.create:function(y){function C(){}return C.prototype=y,new C},h;if(typeof Object.setPrototypeOf=="function")h=Object.setPrototypeOf;else{var d;e:{var f={a:!0},p={};try{p.__proto__=f,d=p.a;break e}catch{}d=!1}h=d?function(y,C){if(y.__proto__=C,y.__proto__!==C)throw new TypeError(y+" is not extensible");return y}:null}var A=h;function m(y,C){if(y.prototype=u(C.prototype),y.prototype.constructor=y,A)A(y,C);else for(var S in C)if(S!="prototype")if(Object.defineProperties){var R=Object.getOwnPropertyDescriptor(C,S);R&&Object.defineProperty(y,S,R)}else y[S]=C[S];y.za=C.prototype}function g(){this.m=!1,this.j=null,this.i=void 0,this.h=1,this.v=this.s=0,this.l=null}function x(y){if(y.m)throw new TypeError("Generator is already running");y.m=!0}g.prototype.u=function(y){this.i=y};function v(y,C){y.l={ma:C,na:!0},y.h=y.s||y.v}g.prototype.return=function(y){this.l={return:y},this.h=this.v};function b(y,C,S){return y.h=S,{value:C}}function w(y){this.h=new g,this.i=y}function _(y,C){x(y.h);var S=y.h.j;return S?N(y,"return"in S?S.return:function(R){return{value:R,done:!0}},C,y.h.return):(y.h.return(C),M(y))}function N(y,C,S,R){try{var $=C.call(y.h.j,S);if(!($ instanceof Object))throw new TypeError("Iterator result "+$+" is not an object");if(!$.done)return y.h.m=!1,$;var P=$.value}catch(O){return y.h.j=null,v(y.h,O),M(y)}return y.h.j=null,R.call(y.h,P),M(y)}function M(y){for(;y.h.h;)try{var C=y.i(y.h);if(C)return y.h.m=!1,{value:C.value,done:!1}}catch(S){y.h.i=void 0,v(y.h,S)}if(y.h.m=!1,y.h.l){if(C=y.h.l,y.h.l=null,C.na)throw C.ma;return{value:C.return,done:!0}}return{value:void 0,done:!0}}function T(y){this.next=function(C){return x(y.h),y.h.j?C=N(y,y.h.j.next,C,y.h.u):(y.h.u(C),C=M(y)),C},this.throw=function(C){return x(y.h),y.h.j?C=N(y,y.h.j.throw,C,y.h.u):(v(y.h,C),C=M(y)),C},this.return=function(C){return _(y,C)},this[Symbol.iterator]=function(){return this}}function k(y){function C(R){return y.next(R)}function S(R){return y.throw(R)}return new Promise(function(R,$){function P(O){O.done?R(O.value):Promise.resolve(O.value).then(C,S).then(P,$)}P(y.next())})}function B(y){return k(new T(new w(y)))}i("Promise",function(y){function C(O){this.i=0,this.j=void 0,this.h=[],this.u=!1;var Y=this.l();try{O(Y.resolve,Y.reject)}catch(se){Y.reject(se)}}function S(){this.h=null}function R(O){return O instanceof C?O:new C(function(Y){Y(O)})}if(y)return y;S.prototype.i=function(O){if(this.h==null){this.h=[];var Y=this;this.j(function(){Y.m()})}this.h.push(O)};var $=r.setTimeout;S.prototype.j=function(O){$(O,0)},S.prototype.m=function(){for(;this.h&&this.h.length;){var O=this.h;this.h=[];for(var Y=0;Y<O.length;++Y){var se=O[Y];O[Y]=null;try{se()}catch(Ce){this.l(Ce)}}}this.h=null},S.prototype.l=function(O){this.j(function(){throw O})},C.prototype.l=function(){function O(Ce){return function(Le){se||(se=!0,Ce.call(Y,Le))}}var Y=this,se=!1;return{resolve:O(this.I),reject:O(this.m)}},C.prototype.I=function(O){if(O===this)this.m(new TypeError("A Promise cannot resolve to itself"));else if(O instanceof C)this.L(O);else{e:switch(typeof O){case"object":var Y=O!=null;break e;case"function":Y=!0;break e;default:Y=!1}Y?this.F(O):this.s(O)}},C.prototype.F=function(O){var Y=void 0;try{Y=O.then}catch(se){this.m(se);return}typeof Y=="function"?this.M(Y,O):this.s(O)},C.prototype.m=function(O){this.v(2,O)},C.prototype.s=function(O){this.v(1,O)},C.prototype.v=function(O,Y){if(this.i!=0)throw Error("Cannot settle("+O+", "+Y+"): Promise already settled in state"+this.i);this.i=O,this.j=Y,this.i===2&&this.K(),this.H()},C.prototype.K=function(){var O=this;$(function(){if(O.D()){var Y=r.console;typeof Y<"u"&&Y.error(O.j)}},1)},C.prototype.D=function(){if(this.u)return!1;var O=r.CustomEvent,Y=r.Event,se=r.dispatchEvent;return typeof se>"u"?!0:(typeof O=="function"?O=new O("unhandledrejection",{cancelable:!0}):typeof Y=="function"?O=new Y("unhandledrejection",{cancelable:!0}):(O=r.document.createEvent("CustomEvent"),O.initCustomEvent("unhandledrejection",!1,!0,O)),O.promise=this,O.reason=this.j,se(O))},C.prototype.H=function(){if(this.h!=null){for(var O=0;O<this.h.length;++O)P.i(this.h[O]);this.h=null}};var P=new S;return C.prototype.L=function(O){var Y=this.l();O.T(Y.resolve,Y.reject)},C.prototype.M=function(O,Y){var se=this.l();try{O.call(Y,se.resolve,se.reject)}catch(Ce){se.reject(Ce)}},C.prototype.then=function(O,Y){function se(Pe,ze){return typeof Pe=="function"?function(lt){try{Ce(Pe(lt))}catch(Ft){Le(Ft)}}:ze}var Ce,Le,qe=new C(function(Pe,ze){Ce=Pe,Le=ze});return this.T(se(O,Ce),se(Y,Le)),qe},C.prototype.catch=function(O){return this.then(void 0,O)},C.prototype.T=function(O,Y){function se(){switch(Ce.i){case 1:O(Ce.j);break;case 2:Y(Ce.j);break;default:throw Error("Unexpected state: "+Ce.i)}}var Ce=this;this.h==null?P.i(se):this.h.push(se),this.u=!0},C.resolve=R,C.reject=function(O){return new C(function(Y,se){se(O)})},C.race=function(O){return new C(function(Y,se){for(var Ce=a(O),Le=Ce.next();!Le.done;Le=Ce.next())R(Le.value).T(Y,se)})},C.all=function(O){var Y=a(O),se=Y.next();return se.done?R([]):new C(function(Ce,Le){function qe(lt){return function(Ft){Pe[lt]=Ft,ze--,ze==0&&Ce(Pe)}}var Pe=[],ze=0;do Pe.push(void 0),ze++,R(se.value).T(qe(Pe.length-1),Le),se=Y.next();while(!se.done)})},C});function L(y,C){y instanceof String&&(y+="");var S=0,R=!1,$={next:function(){if(!R&&S<y.length){var P=S++;return{value:C(P,y[P]),done:!1}}return R=!0,{done:!0,value:void 0}}};return $[Symbol.iterator]=function(){return $},$}i("Array.prototype.keys",function(y){return y||function(){return L(this,function(C){return C})}}),i("Array.prototype.fill",function(y){return y||function(C,S,R){var $=this.length||0;for(0>S&&(S=Math.max(0,$+S)),(R==null||R>$)&&(R=$),R=Number(R),0>R&&(R=Math.max(0,$+R)),S=Number(S||0);S<R;S++)this[S]=C;return this}});function U(y){return y||Array.prototype.fill}i("Int8Array.prototype.fill",U),i("Uint8Array.prototype.fill",U),i("Uint8ClampedArray.prototype.fill",U),i("Int16Array.prototype.fill",U),i("Uint16Array.prototype.fill",U),i("Int32Array.prototype.fill",U),i("Uint32Array.prototype.fill",U),i("Float32Array.prototype.fill",U),i("Float64Array.prototype.fill",U),i("Object.is",function(y){return y||function(C,S){return C===S?C!==0||1/C===1/S:C!==C&&S!==S}}),i("Array.prototype.includes",function(y){return y||function(C,S){var R=this;R instanceof String&&(R=String(R));var $=R.length;for(S=S||0,0>S&&(S=Math.max(S+$,0));S<$;S++){var P=R[S];if(P===C||Object.is(P,C))return!0}return!1}}),i("String.prototype.includes",function(y){return y||function(C,S){if(this==null)throw new TypeError("The 'this' value for String.prototype.includes must not be null or undefined");if(C instanceof RegExp)throw new TypeError("First argument to String.prototype.includes must not be a regular expression");return this.indexOf(C,S||0)!==-1}});var V=this||self;function W(y,C){y=y.split(".");var S=V;y[0]in S||typeof S.execScript>"u"||S.execScript("var "+y[0]);for(var R;y.length&&(R=y.shift());)y.length||C===void 0?S[R]&&S[R]!==Object.prototype[R]?S=S[R]:S=S[R]={}:S[R]=C}function H(y){var C;e:{if((C=V.navigator)&&(C=C.userAgent))break e;C=""}return C.indexOf(y)!=-1}var ee=Array.prototype.map?function(y,C){return Array.prototype.map.call(y,C,void 0)}:function(y,C){for(var S=y.length,R=Array(S),$=typeof y=="string"?y.split(""):y,P=0;P<S;P++)P in $&&(R[P]=C.call(void 0,$[P],P,y));return R},K={},te=null;function le(y){var C=y.length,S=3*C/4;S%3?S=Math.floor(S):"=.".indexOf(y[C-1])!=-1&&(S="=.".indexOf(y[C-2])!=-1?S-2:S-1);var R=new Uint8Array(S),$=0;return fe(y,function(P){R[$++]=P}),$!==S?R.subarray(0,$):R}function fe(y,C){function S(se){for(;R<y.length;){var Ce=y.charAt(R++),Le=te[Ce];if(Le!=null)return Le;if(!/^[\s\xa0]*$/.test(Ce))throw Error("Unknown base64 encoding at char: "+Ce)}return se}Ie();for(var R=0;;){var $=S(-1),P=S(0),O=S(64),Y=S(64);if(Y===64&&$===-1)break;C($<<2|P>>4),O!=64&&(C(P<<4&240|O>>2),Y!=64&&C(O<<6&192|Y))}}function Ie(){if(!te){te={};for(var y="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789".split(""),C=["+/=","+/","-_=","-_.","-_"],S=0;5>S;S++){var R=y.concat(C[S].split(""));K[S]=R;for(var $=0;$<R.length;$++){var P=R[$];te[P]===void 0&&(te[P]=$)}}}}var Se=typeof Uint8Array<"u",De=!(H("Trident")||H("MSIE"))&&typeof V.btoa=="function";function Be(y){if(!De){var C;C===void 0&&(C=0),Ie(),C=K[C];for(var S=Array(Math.floor(y.length/3)),R=C[64]||"",$=0,P=0;$<y.length-2;$+=3){var O=y[$],Y=y[$+1],se=y[$+2],Ce=C[O>>2];O=C[(O&3)<<4|Y>>4],Y=C[(Y&15)<<2|se>>6],se=C[se&63],S[P++]=Ce+O+Y+se}switch(Ce=0,se=R,y.length-$){case 2:Ce=y[$+1],se=C[(Ce&15)<<2]||R;case 1:y=y[$],S[P]=C[y>>2]+C[(y&3)<<4|Ce>>4]+se+R}return S.join("")}for(C="";10240<y.length;)C+=String.fromCharCode.apply(null,y.subarray(0,10240)),y=y.subarray(10240);return C+=String.fromCharCode.apply(null,y),btoa(C)}var he=RegExp("[-_.]","g");function ge(y){switch(y){case"-":return"+";case"_":return"/";case".":return"=";default:return""}}function Ne(y){if(!De)return le(y);he.test(y)&&(y=y.replace(he,ge)),y=atob(y);for(var C=new Uint8Array(y.length),S=0;S<y.length;S++)C[S]=y.charCodeAt(S);return C}var Oe;function Qe(){return Oe||(Oe=new Uint8Array(0))}var Ye={},_t=typeof Uint8Array.prototype.slice=="function",J=0,ht=0;function dt(y){var C=0>y;y=Math.abs(y);var S=y>>>0;y=Math.floor((y-S)/4294967296),C&&(S=a(Ke(S,y)),C=S.next().value,y=S.next().value,S=C),J=S>>>0,ht=y>>>0}var tt=typeof BigInt=="function";function Ke(y,C){return C=~C,y?y=~y+1:C+=1,[y,C]}function kt(y,C){this.i=y>>>0,this.h=C>>>0}function Xe(y){if(!y)return ot||(ot=new kt(0,0));if(!/^-?\d+$/.test(y))return null;if(16>y.length)dt(Number(y));else if(tt)y=BigInt(y),J=Number(y&BigInt(4294967295))>>>0,ht=Number(y>>BigInt(32)&BigInt(4294967295));else{var C=+(y[0]==="-");ht=J=0;for(var S=y.length,R=C,$=(S-C)%6+C;$<=S;R=$,$+=6)R=Number(y.slice(R,$)),ht*=1e6,J=1e6*J+R,4294967296<=J&&(ht+=J/4294967296|0,J%=4294967296);C&&(C=a(Ke(J,ht)),y=C.next().value,C=C.next().value,J=y,ht=C)}return new kt(J,ht)}var ot;function wn(y,C){return Error("Invalid wire type: "+y+" (at position "+C+")")}function sn(){return Error("Failed to read varint, encoding is invalid.")}function Z(y,C){return Error("Tried to read past the end of the data "+C+" > "+y)}function G(){throw Error("Invalid UTF8")}function we(y,C){return C=String.fromCharCode.apply(null,C),y==null?C:y+C}var ke=void 0,Ue,Re=typeof TextDecoder<"u",bt,et=typeof TextEncoder<"u",St;function Tt(y){if(y!==Ye)throw Error("illegal external caller")}function We(y,C){if(Tt(C),this.V=y,y!=null&&y.length===0)throw Error("ByteString should be constructed with non-empty values")}function ct(){return St||(St=new We(null,Ye))}function Ut(y){Tt(Ye);var C=y.V;return C=C==null||Se&&C!=null&&C instanceof Uint8Array?C:typeof C=="string"?Ne(C):null,C==null?C:y.V=C}function Dt(y){if(typeof y=="string")return{buffer:Ne(y),C:!1};if(Array.isArray(y))return{buffer:new Uint8Array(y),C:!1};if(y.constructor===Uint8Array)return{buffer:y,C:!1};if(y.constructor===ArrayBuffer)return{buffer:new Uint8Array(y),C:!1};if(y.constructor===We)return{buffer:Ut(y)||Qe(),C:!0};if(y instanceof Uint8Array)return{buffer:new Uint8Array(y.buffer,y.byteOffset,y.byteLength),C:!1};throw Error("Type not convertible to a Uint8Array, expected a Uint8Array, an ArrayBuffer, a base64 encoded string, a ByteString or an Array of numbers")}function mt(y,C){this.i=null,this.m=!1,this.h=this.j=this.l=0,Yt(this,y,C)}function Yt(y,C,S){S=S===void 0?{}:S,y.S=S.S===void 0?!1:S.S,C&&(C=Dt(C),y.i=C.buffer,y.m=C.C,y.l=0,y.j=y.i.length,y.h=y.l)}mt.prototype.reset=function(){this.h=this.l};function de(y,C){if(y.h=C,C>y.j)throw Z(y.j,C)}function je(y){var C=y.i,S=y.h,R=C[S++],$=R&127;if(R&128&&(R=C[S++],$|=(R&127)<<7,R&128&&(R=C[S++],$|=(R&127)<<14,R&128&&(R=C[S++],$|=(R&127)<<21,R&128&&(R=C[S++],$|=R<<28,R&128&&C[S++]&128&&C[S++]&128&&C[S++]&128&&C[S++]&128&&C[S++]&128)))))throw sn();return de(y,S),$}function at(y,C){if(0>C)throw Error("Tried to read a negative byte length: "+C);var S=y.h,R=S+C;if(R>y.j)throw Z(C,y.j-S);return y.h=R,S}var At=[];function Ge(){this.h=[]}Ge.prototype.length=function(){return this.h.length},Ge.prototype.end=function(){var y=this.h;return this.h=[],y};function Ve(y,C,S){for(;0<S||127<C;)y.h.push(C&127|128),C=(C>>>7|S<<25)>>>0,S>>>=7;y.h.push(C)}function ut(y,C){for(;127<C;)y.h.push(C&127|128),C>>>=7;y.h.push(C)}function qt(y,C){if(At.length){var S=At.pop();Yt(S,y,C),y=S}else y=new mt(y,C);this.h=y,this.j=this.h.h,this.i=this.l=-1,this.setOptions(C)}qt.prototype.setOptions=function(y){y=y===void 0?{}:y,this.ca=y.ca===void 0?!1:y.ca},qt.prototype.reset=function(){this.h.reset(),this.j=this.h.h,this.i=this.l=-1};function Mn(y){var C=y.h;if(C.h==C.j)return!1;y.j=y.h.h;var S=je(y.h)>>>0;if(C=S>>>3,S&=7,!(0<=S&&5>=S))throw wn(S,y.j);if(1>C)throw Error("Invalid field number: "+C+" (at position "+y.j+")");return y.l=C,y.i=S,!0}function mn(y){switch(y.i){case 0:if(y.i!=0)mn(y);else e:{y=y.h;for(var C=y.h,S=C+10,R=y.i;C<S;)if((R[C++]&128)===0){de(y,C);break e}throw sn()}break;case 1:y=y.h,de(y,y.h+8);break;case 2:y.i!=2?mn(y):(C=je(y.h)>>>0,y=y.h,de(y,y.h+C));break;case 5:y=y.h,de(y,y.h+4);break;case 3:C=y.l;do{if(!Mn(y))throw Error("Unmatched start-group tag: stream EOF");if(y.i==4){if(y.l!=C)throw Error("Unmatched end-group tag");break}mn(y)}while(!0);break;default:throw wn(y.i,y.j)}}var Ds=[];function Qr(){this.j=[],this.i=0,this.h=new Ge}function rr(y,C){C.length!==0&&(y.j.push(C),y.i+=C.length)}function wi(y,C){if(C=C.R){rr(y,y.h.end());for(var S=0;S<C.length;S++)rr(y,Ut(C[S])||Qe())}}var xs=typeof Symbol=="function"&&typeof Symbol()=="symbol"?Symbol():void 0;function Ys(y,C){return xs?y[xs]|=C:y.A!==void 0?y.A|=C:(Object.defineProperties(y,{A:{value:C,configurable:!0,writable:!0,enumerable:!1}}),C)}function ca(y,C){xs?y[xs]&&(y[xs]&=~C):y.A!==void 0&&(y.A&=~C)}function Xt(y){var C;return xs?C=y[xs]:C=y.A,C??0}function ls(y,C){xs?y[xs]=C:y.A!==void 0?y.A=C:Object.defineProperties(y,{A:{value:C,configurable:!0,writable:!0,enumerable:!1}})}function Mr(y){return Ys(y,1),y}function za(y,C){ls(C,(y|0)&-51)}function ai(y,C){ls(C,(y|18)&-41)}var Si={};function Ei(y){return y!==null&&typeof y=="object"&&!Array.isArray(y)&&y.constructor===Object}var Ur,Ga=[];ls(Ga,23),Ur=Object.freeze(Ga);function ko(y){if(Xt(y.o)&2)throw Error("Cannot mutate an immutable Message")}function go(y){var C=y.length;(C=C?y[C-1]:void 0)&&Ei(C)?C.g=1:(C={},y.push((C.g=1,C)))}function X(y){var C=y.i+y.G;return y.B||(y.B=y.o[C]={})}function me(y,C){return C===-1?null:C>=y.i?y.B?y.B[C]:void 0:y.o[C+y.G]}function Ee(y,C,S,R){ko(y),Te(y,C,S,R)}function Te(y,C,S,R){y.j&&(y.j=void 0),C>=y.i||R?X(y)[C]=S:(y.o[C+y.G]=S,(y=y.B)&&C in y&&delete y[C])}function ve(y,C,S,R){var $=me(y,C);Array.isArray($)||($=Ur);var P=Xt($);if(P&1||Mr($),R)P&2||Ys($,2),S&1||Object.freeze($);else{R=!(S&2);var O=P&2;S&1||!O?R&&P&16&&!O&&ca($,16):($=Mr(Array.prototype.slice.call($)),Te(y,C,$))}return $}function Je(y,C){var S=me(y,C),R=S==null?S:typeof S=="number"||S==="NaN"||S==="Infinity"||S==="-Infinity"?Number(S):void 0;return R!=null&&R!==S&&Te(y,C,R),R}function xt(y,C,S,R,$){y.h||(y.h={});var P=y.h[S],O=ve(y,S,3,$);if(!P){var Y=O;P=[];var se=!!(Xt(y.o)&16);O=!!(Xt(Y)&2);var Ce=Y;!$&&O&&(Y=Array.prototype.slice.call(Y));for(var Le=O,qe=0;qe<Y.length;qe++){var Pe=Y[qe],ze=C,lt=!1;if(lt=lt===void 0?!1:lt,Pe=Array.isArray(Pe)?new ze(Pe):lt?new ze:void 0,Pe!==void 0){ze=Pe.o;var Ft=lt=Xt(ze);O&&(Ft|=2),se&&(Ft|=16),Ft!=lt&&ls(ze,Ft),ze=Ft,Le=Le||!!(2&ze),P.push(Pe)}}return y.h[S]=P,se=Xt(Y),C=se|33,C=Le?C&-9:C|8,se!=C&&(Le=Y,Object.isFrozen(Le)&&(Le=Array.prototype.slice.call(Le)),ls(Le,C),Y=Le),Ce!==Y&&Te(y,S,Y),($||R&&O)&&Ys(P,2),R&&Object.freeze(P),P}return $||($=Object.isFrozen(P),R&&!$?Object.freeze(P):!R&&$&&(P=Array.prototype.slice.call(P),y.h[S]=P)),P}function Et(y,C,S){var R=!!(Xt(y.o)&2);if(C=xt(y,C,S,R,R),y=ve(y,S,3,R),!(R||Xt(y)&8)){for(R=0;R<C.length;R++){if(S=C[R],Xt(S.o)&2){var $=_i(S,!1);$.j=S}else $=S;S!==$&&(C[R]=$,y[R]=$.o)}Ys(y,8)}return C}function st(y,C,S){if(S!=null&&typeof S!="number")throw Error("Value of float/double field must be a number|null|undefined, found "+typeof S+": "+S);Ee(y,C,S)}function Vt(y,C,S,R,$){ko(y);var P=xt(y,S,C,!1,!1);return S=R??new S,y=ve(y,C,2,!1),$!=null?(P.splice($,0,S),y.splice($,0,S.o)):(P.push(S),y.push(S.o)),S.C()&&ca(y,8),S}function Gt(y,C){return y??C}function vt(y,C,S){return S=S===void 0?0:S,Gt(Je(y,C),S)}var on;function Ln(y){switch(typeof y){case"number":return isFinite(y)?y:String(y);case"object":if(y)if(Array.isArray(y)){if((Xt(y)&128)!==0)return y=Array.prototype.slice.call(y),go(y),y}else{if(Se&&y!=null&&y instanceof Uint8Array)return Be(y);if(y instanceof We){var C=y.V;return C==null?"":typeof C=="string"?C:y.V=Be(C)}}}return y}function Wn(y,C,S,R){if(y!=null){if(Array.isArray(y))y=Tn(y,C,S,R!==void 0);else if(Ei(y)){var $={},P;for(P in y)$[P]=Wn(y[P],C,S,R);y=$}else y=C(y,R);return y}}function Tn(y,C,S,R){var $=Xt(y);R=R?!!($&16):void 0,y=Array.prototype.slice.call(y);for(var P=0;P<y.length;P++)y[P]=Wn(y[P],C,S,R);return S($,y),y}function Dn(y){return y.ja===Si?y.toJSON():Ln(y)}function Wt(y,C){y&128&&go(C)}function Qn(y,C,S){if(S=S===void 0?ai:S,y!=null){if(Se&&y instanceof Uint8Array)return y.length?new We(new Uint8Array(y),Ye):ct();if(Array.isArray(y)){var R=Xt(y);return R&2?y:C&&!(R&32)&&(R&16||R===0)?(ls(y,R|2),y):(y=Tn(y,Qn,R&4?ai:S,!0),C=Xt(y),C&4&&C&2&&Object.freeze(y),y)}return y.ja===Si?Hn(y):y}}function fn(y,C,S,R,$,P,O){if(y=y.h&&y.h[S]){if(R=Xt(y),R&2?R=y:(P=ee(y,Hn),ai(R,P),Object.freeze(P),R=P),ko(C),O=R==null?Ur:Mr([]),R!=null){for(P=!!R.length,y=0;y<R.length;y++){var Y=R[y];P=P&&!(Xt(Y.o)&2),O[y]=Y.o}P=(P?8:0)|1,y=Xt(O),(y&P)!==P&&(Object.isFrozen(O)&&(O=Array.prototype.slice.call(O)),ls(O,y|P)),C.h||(C.h={}),C.h[S]=R}else C.h&&(C.h[S]=void 0);Te(C,S,O,$)}else Ee(C,S,Qn(R,P,O),$)}function Hn(y){return Xt(y.o)&2||(y=_i(y,!0),Ys(y.o,2)),y}function _i(y,C){var S=y.o,R=[];Ys(R,16);var $=y.constructor.h;if($&&R.push($),$=y.B,$){R.length=S.length,R.fill(void 0,R.length,S.length);var P={};R[R.length-1]=P}(Xt(S)&128)!==0&&go(R),C=C||y.C()?ai:za,P=y.constructor,on=R,R=new P(R),on=void 0,y.R&&(R.R=y.R.slice()),P=!!(Xt(S)&16);for(var O=$?S.length-1:S.length,Y=0;Y<O;Y++)fn(y,R,Y-y.G,S[Y],!1,P,C);if($)for(var se in $)fn(y,R,+se,$[se],!0,P,C);return R}function un(y,C,S){y==null&&(y=on),on=void 0;var R=this.constructor.i||0,$=0<R,P=this.constructor.h,O=!1;if(y==null){y=P?[P]:[];var Y=48,se=!0;$&&(R=0,Y|=128),ls(y,Y)}else{if(!Array.isArray(y)||P&&P!==y[0])throw Error();var Ce=Y=Ys(y,0);if((se=(16&Ce)!==0)&&((O=(32&Ce)!==0)||(Ce|=32)),$){if(128&Ce)R=0;else if(0<y.length){var Le=y[y.length-1];if(Ei(Le)&&"g"in Le){R=0,Ce|=128,delete Le.g;var qe=!0,Pe;for(Pe in Le){qe=!1;break}qe&&y.pop()}}}else if(128&Ce)throw Error();Y!==Ce&&ls(y,Ce)}this.G=(P?0:-1)-R,this.h=void 0,this.o=y;e:{if(P=this.o.length,R=P-1,P&&(P=this.o[R],Ei(P))){this.B=P,this.i=R-this.G;break e}C!==void 0&&-1<C?(this.i=Math.max(C,R+1-this.G),this.B=void 0):this.i=Number.MAX_VALUE}if(!$&&this.B&&"g"in this.B)throw Error('Unexpected "g" flag in sparse object of message that is not a group type.');if(S){C=se&&!O&&!0,$=this.i;var ze;for(se=0;se<S.length;se++)O=S[se],O<$?(O+=this.G,(R=y[O])?Ti(R,C):y[O]=Ur):(ze||(ze=X(this)),(R=ze[O])?Ti(R,C):ze[O]=Ur)}}un.prototype.toJSON=function(){return Tn(this.o,Dn,Wt)},un.prototype.C=function(){return!!(Xt(this.o)&2)};function Ti(y,C){if(Array.isArray(y)){var S=Xt(y),R=1;!C||S&2||(R|=16),(S&R)!==R&&ls(y,S|R)}}un.prototype.ja=Si,un.prototype.toString=function(){return this.o.toString()};function Un(y,C,S){if(S){var R={},$;for($ in S){var P=S[$],O=P.ra;O||(R.J=P.xa||P.oa.W,P.ia?(R.aa=Rl(P.ia),O=(function(Y){return function(se,Ce,Le){return Y.J(se,Ce,Le,Y.aa)}})(R)):P.ka?(R.Z=Ml(P.da.P,P.ka),O=(function(Y){return function(se,Ce,Le){return Y.J(se,Ce,Le,Y.Z)}})(R)):O=R.J,P.ra=O),O(C,y,P.da),R={J:R.J,aa:R.aa,Z:R.Z}}}wi(C,y)}var Fn=Symbol();function Os(y,C,S){return y[Fn]||(y[Fn]=function(R,$){return C(R,$,S)})}function cs(y){var C=y[Fn];if(!C){var S=ha(y);C=function(R,$){return Tc(R,$,S)},y[Fn]=C}return C}function Qs(y){var C=y.ia;if(C)return cs(C);if(C=y.wa)return Os(y.da.P,C,y.ka)}function No(y){var C=Qs(y),S=y.da,R=y.oa.U;return C?function($,P){return R($,P,S,C)}:function($,P){return R($,P,S)}}function li(y,C){var S=y[C];return typeof S=="function"&&S.length===0&&(S=S(),y[C]=S),Array.isArray(S)&&(ki in S||Ki in S||0<S.length&&typeof S[0]=="function")?S:void 0}function Ec(y,C,S,R,$,P){C.P=y[0];var O=1;if(y.length>O&&typeof y[O]!="number"){var Y=y[O++];S(C,Y)}for(;O<y.length;){S=y[O++];for(var se=O+1;se<y.length&&typeof y[se]!="number";)se++;switch(Y=y[O++],se-=O,se){case 0:R(C,S,Y);break;case 1:(se=li(y,O))?(O++,$(C,S,Y,se)):R(C,S,Y,y[O++]);break;case 2:se=O++,se=li(y,se),$(C,S,Y,se,y[O++]);break;case 3:P(C,S,Y,y[O++],y[O++],y[O++]);break;case 4:P(C,S,Y,y[O++],y[O++],y[O++],y[O++]);break;default:throw Error("unexpected number of binary field arguments: "+se)}}return C}var Bi=Symbol();function Rl(y){var C=y[Bi];if(!C){var S=ua(y);C=function(R,$){return Bc(R,$,S)},y[Bi]=C}return C}function Ml(y,C){var S=y[Bi];return S||(S=function(R,$){return Un(R,$,C)},y[Bi]=S),S}var Ki=Symbol();function Dp(y,C){y.push(C)}function _c(y,C,S){y.push(C,S.W)}function Yh(y,C,S,R){var $=Rl(R),P=ua(R).P,O=S.W;y.push(C,function(Y,se,Ce){return O(Y,se,Ce,P,$)})}function jh(y,C,S,R,$,P){var O=Ml(R,P),Y=S.W;y.push(C,function(se,Ce,Le){return Y(se,Ce,Le,R,O)})}function ua(y){var C=y[Ki];return C||(C=Ec(y,y[Ki]=[],Dp,_c,Yh,jh),ki in y&&Ki in y&&(y.length=0),C)}var ki=Symbol();function Xh(y,C){y[0]=C}function Kh(y,C,S,R){var $=S.U;y[C]=R?function(P,O,Y){return $(P,O,Y,R)}:$}function Jh(y,C,S,R,$){var P=S.U,O=cs(R),Y=ha(R).P;y[C]=function(se,Ce,Le){return P(se,Ce,Le,Y,O,$)}}function Fp(y,C,S,R,$,P,O){var Y=S.U,se=Os(R,$,P);y[C]=function(Ce,Le,qe){return Y(Ce,Le,qe,R,se,O)}}function ha(y){var C=y[ki];return C||(C=Ec(y,y[ki]={},Xh,Kh,Jh,Fp),ki in y&&Ki in y&&(y.length=0),C)}function Tc(y,C,S){for(;Mn(C)&&C.i!=4;){var R=C.l,$=S[R];if(!$){var P=S[0];P&&(P=P[R])&&($=S[R]=No(P))}if(!$||!$(C,y,R)){$=C,R=y,P=$.j,mn($);var O=$;if(!O.ca){if($=O.h.h-P,O.h.h=P,O=O.h,$==0)$=ct();else{if(P=at(O,$),O.S&&O.m)$=O.i.subarray(P,P+$);else{O=O.i;var Y=P;$=P+$,$=Y===$?Qe():_t?O.slice(Y,$):new Uint8Array(O.subarray(Y,$))}$=$.length==0?ct():new We($,Ye)}(P=R.R)?P.push($):R.R=[$]}}}return y}function Bc(y,C,S){for(var R=S.length,$=R%2==1,P=$?1:0;P<R;P+=2)(0,S[P+1])(C,y,S[P]);Un(y,C,$?S[0]:void 0)}function ci(y,C){return{U:y,W:C}}var bs=ci(function(y,C,S){if(y.i!==5)return!1;y=y.h;var R=y.i,$=y.h,P=R[$],O=R[$+1],Y=R[$+2];return R=R[$+3],de(y,y.h+4),O=(P<<0|O<<8|Y<<16|R<<24)>>>0,y=2*(O>>31)+1,P=O>>>23&255,O&=8388607,Ee(C,S,P==255?O?NaN:1/0*y:P==0?y*Math.pow(2,-149)*O:y*Math.pow(2,P-150)*(O+Math.pow(2,23))),!0},function(y,C,S){if(C=Je(C,S),C!=null){ut(y.h,8*S+5),y=y.h;var R=+C;R===0?0<1/R?J=ht=0:(ht=0,J=2147483648):isNaN(R)?(ht=0,J=2147483647):(R=(S=0>R?-2147483648:0)?-R:R,34028234663852886e22<R?(ht=0,J=(S|2139095040)>>>0):11754943508222875e-54>R?(R=Math.round(R/Math.pow(2,-149)),ht=0,J=(S|R)>>>0):(C=Math.floor(Math.log(R)/Math.LN2),R*=Math.pow(2,-C),R=Math.round(8388608*R),16777216<=R&&++C,ht=0,J=(S|C+127<<23|R&8388607)>>>0)),S=J,y.h.push(S>>>0&255),y.h.push(S>>>8&255),y.h.push(S>>>16&255),y.h.push(S>>>24&255)}}),$p=ci(function(y,C,S){if(y.i!==0)return!1;var R=y.h,$=0,P=y=0,O=R.i,Y=R.h;do{var se=O[Y++];$|=(se&127)<<P,P+=7}while(32>P&&se&128);for(32<P&&(y|=(se&127)>>4),P=3;32>P&&se&128;P+=7)se=O[Y++],y|=(se&127)<<P;if(de(R,Y),128>se)R=$>>>0,se=y>>>0,(y=se&2147483648)&&(R=~R+1>>>0,se=~se>>>0,R==0&&(se=se+1>>>0)),R=4294967296*se+(R>>>0);else throw sn();return Ee(C,S,y?-R:R),!0},function(y,C,S){C=me(C,S),C!=null&&(typeof C=="string"&&Xe(C),C!=null&&(ut(y.h,8*S),typeof C=="number"?(y=y.h,dt(C),Ve(y,J,ht)):(S=Xe(C),Ve(y.h,S.i,S.h))))}),Pp=ci(function(y,C,S){return y.i!==0?!1:(Ee(C,S,je(y.h)),!0)},function(y,C,S){if(C=me(C,S),C!=null&&C!=null)if(ut(y.h,8*S),y=y.h,S=C,0<=S)ut(y,S);else{for(C=0;9>C;C++)y.h.push(S&127|128),S>>=7;y.h.push(1)}}),kc=ci(function(y,C,S){if(y.i!==2)return!1;var R=je(y.h)>>>0;y=y.h;var $=at(y,R);if(y=y.i,Re){var P=y,O;(O=Ue)||(O=Ue=new TextDecoder("utf-8",{fatal:!0})),y=$+R,P=$===0&&y===P.length?P:P.subarray($,y);try{var Y=O.decode(P)}catch(qe){if(ke===void 0){try{O.decode(new Uint8Array([128]))}catch{}try{O.decode(new Uint8Array([97])),ke=!0}catch{ke=!1}}throw!ke&&(Ue=void 0),qe}}else{Y=$,R=Y+R,$=[];for(var se=null,Ce,Le;Y<R;)Ce=y[Y++],128>Ce?$.push(Ce):224>Ce?Y>=R?G():(Le=y[Y++],194>Ce||(Le&192)!==128?(Y--,G()):$.push((Ce&31)<<6|Le&63)):240>Ce?Y>=R-1?G():(Le=y[Y++],(Le&192)!==128||Ce===224&&160>Le||Ce===237&&160<=Le||((P=y[Y++])&192)!==128?(Y--,G()):$.push((Ce&15)<<12|(Le&63)<<6|P&63)):244>=Ce?Y>=R-2?G():(Le=y[Y++],(Le&192)!==128||(Ce<<28)+(Le-144)>>30!==0||((P=y[Y++])&192)!==128||((O=y[Y++])&192)!==128?(Y--,G()):(Ce=(Ce&7)<<18|(Le&63)<<12|(P&63)<<6|O&63,Ce-=65536,$.push((Ce>>10&1023)+55296,(Ce&1023)+56320))):G(),8192<=$.length&&(se=we(se,$),$.length=0);Y=we(se,$)}return Ee(C,S,Y),!0},function(y,C,S){if(C=me(C,S),C!=null){var R=!1;if(R=R===void 0?!1:R,et){if(R&&/(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])/.test(C))throw Error("Found an unpaired surrogate");C=(bt||(bt=new TextEncoder)).encode(C)}else{for(var $=0,P=new Uint8Array(3*C.length),O=0;O<C.length;O++){var Y=C.charCodeAt(O);if(128>Y)P[$++]=Y;else{if(2048>Y)P[$++]=Y>>6|192;else{if(55296<=Y&&57343>=Y){if(56319>=Y&&O<C.length){var se=C.charCodeAt(++O);if(56320<=se&&57343>=se){Y=1024*(Y-55296)+se-56320+65536,P[$++]=Y>>18|240,P[$++]=Y>>12&63|128,P[$++]=Y>>6&63|128,P[$++]=Y&63|128;continue}else O--}if(R)throw Error("Found an unpaired surrogate");Y=65533}P[$++]=Y>>12|224,P[$++]=Y>>6&63|128}P[$++]=Y&63|128}}C=$===P.length?P:P.subarray(0,$)}ut(y.h,8*S+2),ut(y.h,C.length),rr(y,y.h.end()),rr(y,C)}}),Nc=ci(function(y,C,S,R,$){if(y.i!==2)return!1;C=Vt(C,S,R),S=y.h.j,R=je(y.h)>>>0;var P=y.h.h+R,O=P-S;if(0>=O&&(y.h.j=P,$(C,y,void 0,void 0,void 0),O=P-y.h.h),O)throw Error("Message parsing ended unexpectedly. Expected to read "+(R+" bytes, instead read "+(R-O)+" bytes, either the data ended unexpectedly or the message misreported its own length"));return y.h.h=P,y.h.j=S,!0},function(y,C,S,R,$){if(C=Et(C,R,S),C!=null)for(R=0;R<C.length;R++){var P=y;ut(P.h,8*S+2);var O=P.h.end();rr(P,O),O.push(P.i),P=O,$(C[R],y),O=y;var Y=P.pop();for(Y=O.i+O.h.length()-Y;127<Y;)P.push(Y&127|128),Y>>>=7,O.i++;P.push(Y),O.i++}});function da(y){return function(C,S){e:{if(Ds.length){var R=Ds.pop();R.setOptions(S),Yt(R.h,C,S),C=R}else C=new qt(C,S);try{var $=ha(y),P=Tc(new $.P,C,$);break e}finally{$=C.h,$.i=null,$.m=!1,$.l=0,$.j=0,$.h=0,$.S=!1,C.l=-1,C.i=-1,100>Ds.length&&Ds.push(C)}P=void 0}return P}}function Va(y){return function(){var C=new Qr;Bc(this,C,ua(y)),rr(C,C.h.end());for(var S=new Uint8Array(C.i),R=C.j,$=R.length,P=0,O=0;O<$;O++){var Y=R[O];S.set(Y,P),P+=Y.length}return C.j=[S],S}}function ui(y){un.call(this,y)}m(ui,un);var Wa=[ui,1,Pp,2,bs,3,kc,4,kc];ui.prototype.l=Va(Wa);function Ha(y){un.call(this,y,-1,Lp)}m(Ha,un),Ha.prototype.addClassification=function(y,C){return Vt(this,1,ui,y,C),this};var Lp=[1],Op=da([Ha,1,Nc,Wa]);function zr(y){un.call(this,y)}m(zr,un);var Rc=[zr,1,bs,2,bs,3,bs,4,bs,5,bs];zr.prototype.l=Va(Rc);function Mc(y){un.call(this,y,-1,Qp)}m(Mc,un);var Qp=[1],Zh=da([Mc,1,Nc,Rc]);function E(y){un.call(this,y)}m(E,un);var F=[E,1,bs,2,bs,3,bs,4,bs,5,bs,6,$p],Q=da(F);E.prototype.l=Va(F);function j(y,C,S){if(S=y.createShader(S===0?y.VERTEX_SHADER:y.FRAGMENT_SHADER),y.shaderSource(S,C),y.compileShader(S),!y.getShaderParameter(S,y.COMPILE_STATUS))throw Error(`Could not compile WebGL shader.

`+y.getShaderInfoLog(S));return S}function oe(y){return Et(y,ui,1).map(function(C){var S=me(C,1);return{index:S??0,qa:vt(C,2),label:me(C,3)!=null?Gt(me(C,3),""):void 0,displayName:me(C,4)!=null?Gt(me(C,4),""):void 0}})}function be(y){return{x:vt(y,1),y:vt(y,2),z:vt(y,3),visibility:Je(y,4)!=null?vt(y,4):void 0}}function ce(y){return Et(Zh(y),zr,1).map(be)}function _e(y,C){this.i=y,this.h=C,this.m=0}function Fe(y,C,S){return nt(y,C),typeof y.h.canvas.transferToImageBitmap=="function"?Promise.resolve(y.h.canvas.transferToImageBitmap()):S?Promise.resolve(y.h.canvas):typeof createImageBitmap=="function"?createImageBitmap(y.h.canvas):(y.j===void 0&&(y.j=document.createElement("canvas")),new Promise(function(R){y.j.height=y.h.canvas.height,y.j.width=y.h.canvas.width,y.j.getContext("2d",{}).drawImage(y.h.canvas,0,0,y.h.canvas.width,y.h.canvas.height),R(y.j)}))}function nt(y,C){var S=y.h;if(y.s===void 0){var R=j(S,`
  attribute vec2 aVertex;
  attribute vec2 aTex;
  varying vec2 vTex;
  void main(void) {
    gl_Position = vec4(aVertex, 0.0, 1.0);
    vTex = aTex;
  }`,0),$=j(S,`
  precision mediump float;
  varying vec2 vTex;
  uniform sampler2D sampler0;
  void main(){
    gl_FragColor = texture2D(sampler0, vTex);
  }`,1),P=S.createProgram();if(S.attachShader(P,R),S.attachShader(P,$),S.linkProgram(P),!S.getProgramParameter(P,S.LINK_STATUS))throw Error(`Could not compile WebGL program.

`+S.getProgramInfoLog(P));R=y.s=P,S.useProgram(R),$=S.getUniformLocation(R,"sampler0"),y.l={O:S.getAttribLocation(R,"aVertex"),N:S.getAttribLocation(R,"aTex"),ya:$},y.v=S.createBuffer(),S.bindBuffer(S.ARRAY_BUFFER,y.v),S.enableVertexAttribArray(y.l.O),S.vertexAttribPointer(y.l.O,2,S.FLOAT,!1,0,0),S.bufferData(S.ARRAY_BUFFER,new Float32Array([-1,-1,-1,1,1,1,1,-1]),S.STATIC_DRAW),S.bindBuffer(S.ARRAY_BUFFER,null),y.u=S.createBuffer(),S.bindBuffer(S.ARRAY_BUFFER,y.u),S.enableVertexAttribArray(y.l.N),S.vertexAttribPointer(y.l.N,2,S.FLOAT,!1,0,0),S.bufferData(S.ARRAY_BUFFER,new Float32Array([0,1,0,0,1,0,1,1]),S.STATIC_DRAW),S.bindBuffer(S.ARRAY_BUFFER,null),S.uniform1i($,0)}R=y.l,S.useProgram(y.s),S.canvas.width=C.width,S.canvas.height=C.height,S.viewport(0,0,C.width,C.height),S.activeTexture(S.TEXTURE0),y.i.bindTexture2d(C.glName),S.enableVertexAttribArray(R.O),S.bindBuffer(S.ARRAY_BUFFER,y.v),S.vertexAttribPointer(R.O,2,S.FLOAT,!1,0,0),S.enableVertexAttribArray(R.N),S.bindBuffer(S.ARRAY_BUFFER,y.u),S.vertexAttribPointer(R.N,2,S.FLOAT,!1,0,0),S.bindFramebuffer(S.DRAW_FRAMEBUFFER?S.DRAW_FRAMEBUFFER:S.FRAMEBUFFER,null),S.clearColor(0,0,0,0),S.clear(S.COLOR_BUFFER_BIT),S.colorMask(!0,!0,!0,!0),S.drawArrays(S.TRIANGLE_FAN,0,4),S.disableVertexAttribArray(R.O),S.disableVertexAttribArray(R.N),S.bindBuffer(S.ARRAY_BUFFER,null),y.i.bindTexture2d(0)}function Nt(y){this.h=y}var Zt=new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11]);function Jt(y,C){return C+y}function Lt(y,C){window[y]=C}function hn(y){var C=document.createElement("script");return C.setAttribute("src",y),C.setAttribute("crossorigin","anonymous"),new Promise(function(S){C.addEventListener("load",function(){S()},!1),C.addEventListener("error",function(){S()},!1),document.body.appendChild(C)})}function Cn(){return B(function(y){switch(y.h){case 1:return y.s=2,b(y,WebAssembly.instantiate(Zt),4);case 4:y.h=3,y.s=0;break;case 2:return y.s=0,y.l=null,y.return(!1);case 3:return y.return(!0)}})}function qn(y){if(this.h=y,this.listeners={},this.l={},this.L={},this.s={},this.v={},this.M=this.u=this.ga=!0,this.I=Promise.resolve(),this.fa="",this.D={},this.locateFile=y&&y.locateFile||Jt,typeof window=="object")var C=window.location.pathname.toString().substring(0,window.location.pathname.toString().lastIndexOf("/"))+"/";else if(typeof location<"u")C=location.pathname.toString().substring(0,location.pathname.toString().lastIndexOf("/"))+"/";else throw Error("solutions can only be loaded on a web page or in a web worker");if(this.ha=C,y.options){C=a(Object.keys(y.options));for(var S=C.next();!S.done;S=C.next()){S=S.value;var R=y.options[S].default;R!==void 0&&(this.l[S]=typeof R=="function"?R():R)}}}n=qn.prototype,n.close=function(){return this.j&&this.j.delete(),Promise.resolve()};function Yn(y){var C,S,R,$,P,O,Y,se,Ce,Le,qe;return B(function(Pe){switch(Pe.h){case 1:return y.ga?(C=y.h.files===void 0?[]:typeof y.h.files=="function"?y.h.files(y.l):y.h.files,b(Pe,Cn(),2)):Pe.return();case 2:if(S=Pe.i,typeof window=="object")return Lt("createMediapipeSolutionsWasm",{locateFile:y.locateFile}),Lt("createMediapipeSolutionsPackedAssets",{locateFile:y.locateFile}),O=C.filter(function(ze){return ze.data!==void 0}),Y=C.filter(function(ze){return ze.data===void 0}),se=Promise.all(O.map(function(ze){var lt=zs(y,ze.url);if(ze.path!==void 0){var Ft=ze.path;lt=lt.then(function(Kt){return y.overrideFile(Ft,Kt),Promise.resolve(Kt)})}return lt})),Ce=Promise.all(Y.map(function(ze){return ze.simd===void 0||ze.simd&&S||!ze.simd&&!S?hn(y.locateFile(ze.url,y.ha)):Promise.resolve()})).then(function(){var ze,lt,Ft;return B(function(Kt){if(Kt.h==1)return ze=window.createMediapipeSolutionsWasm,lt=window.createMediapipeSolutionsPackedAssets,Ft=y,b(Kt,ze(lt),2);Ft.i=Kt.i,Kt.h=0})}),Le=(function(){return B(function(ze){return y.h.graph&&y.h.graph.url?ze=b(ze,zs(y,y.h.graph.url),0):(ze.h=0,ze=void 0),ze})})(),b(Pe,Promise.all([Ce,se,Le]),7);if(typeof importScripts!="function")throw Error("solutions can only be loaded on a web page or in a web worker");return R=C.filter(function(ze){return ze.simd===void 0||ze.simd&&S||!ze.simd&&!S}).map(function(ze){return y.locateFile(ze.url,y.ha)}),importScripts.apply(null,l(R)),$=y,b(Pe,createMediapipeSolutionsWasm(Module),6);case 6:$.i=Pe.i,y.m=new OffscreenCanvas(1,1),y.i.canvas=y.m,P=y.i.GL.createContext(y.m,{antialias:!1,alpha:!1,va:typeof WebGL2RenderingContext<"u"?2:1}),y.i.GL.makeContextCurrent(P),Pe.h=4;break;case 7:if(y.m=document.createElement("canvas"),qe=y.m.getContext("webgl2",{}),!qe&&(qe=y.m.getContext("webgl",{}),!qe))return alert("Failed to create WebGL canvas context when passing video frame."),Pe.return();y.K=qe,y.i.canvas=y.m,y.i.createContext(y.m,!0,!0,{});case 4:y.j=new y.i.SolutionWasm,y.ga=!1,Pe.h=0}})}function Us(y){var C,S,R,$,P,O,Y,se;return B(function(Ce){if(Ce.h==1){if(y.h.graph&&y.h.graph.url&&y.fa===y.h.graph.url)return Ce.return();if(y.u=!0,!y.h.graph||!y.h.graph.url){Ce.h=2;return}return y.fa=y.h.graph.url,b(Ce,zs(y,y.h.graph.url),3)}for(Ce.h!=2&&(C=Ce.i,y.j.loadGraph(C)),S=a(Object.keys(y.D)),R=S.next();!R.done;R=S.next())$=R.value,y.j.overrideFile($,y.D[$]);if(y.D={},y.h.listeners)for(P=a(y.h.listeners),O=P.next();!O.done;O=P.next())Y=O.value,Ji(y,Y);se=y.l,y.l={},y.setOptions(se),Ce.h=0})}n.reset=function(){var y=this;return B(function(C){y.j&&(y.j.reset(),y.s={},y.v={}),C.h=0})},n.setOptions=function(y,C){var S=this;if(C=C||this.h.options){for(var R=[],$=[],P={},O=a(Object.keys(y)),Y=O.next();!Y.done;P={X:P.X,Y:P.Y},Y=O.next())if(Y=Y.value,!(Y in this.l&&this.l[Y]===y[Y])){this.l[Y]=y[Y];var se=C[Y];se!==void 0&&(se.onChange&&(P.X=se.onChange,P.Y=y[Y],R.push((function(Ce){return function(){var Le;return B(function(qe){if(qe.h==1)return b(qe,Ce.X(Ce.Y),2);Le=qe.i,Le===!0&&(S.u=!0),qe.h=0})}})(P))),se.graphOptionXref&&(Y=Object.assign({},{calculatorName:"",calculatorIndex:0},se.graphOptionXref,{valueNumber:se.type===1?y[Y]:0,valueBoolean:se.type===0?y[Y]:!1,valueString:se.type===2?y[Y]:""}),$.push(Y)))}(R.length!==0||$.length!==0)&&(this.u=!0,this.H=(this.H===void 0?[]:this.H).concat($),this.F=(this.F===void 0?[]:this.F).concat(R))}};function ir(y){var C,S,R,$,P,O,Y;return B(function(se){switch(se.h){case 1:if(!y.u)return se.return();if(!y.F){se.h=2;break}C=a(y.F),S=C.next();case 3:if(S.done){se.h=5;break}return R=S.value,b(se,R(),4);case 4:S=C.next(),se.h=3;break;case 5:y.F=void 0;case 2:if(y.H){for($=new y.i.GraphOptionChangeRequestList,P=a(y.H),O=P.next();!O.done;O=P.next())Y=O.value,$.push_back(Y);y.j.changeOptions($),$.delete(),y.H=void 0}y.u=!1,se.h=0}})}n.initialize=function(){var y=this;return B(function(C){return C.h==1?b(C,Yn(y),2):C.h!=3?b(C,Us(y),3):b(C,ir(y),0)})};function zs(y,C){var S,R;return B(function($){return C in y.L?$.return(y.L[C]):(S=y.locateFile(C,""),R=fetch(S).then(function(P){return P.arrayBuffer()}),y.L[C]=R,$.return(R))})}n.overrideFile=function(y,C){this.j?this.j.overrideFile(y,C):this.D[y]=C},n.clearOverriddenFiles=function(){this.D={},this.j&&this.j.clearOverriddenFiles()},n.send=function(y,C){var S=this,R,$,P,O,Y,se,Ce,Le,qe;return B(function(Pe){switch(Pe.h){case 1:return S.h.inputs?(R=1e3*(C??performance.now()),b(Pe,S.I,2)):Pe.return();case 2:return b(Pe,S.initialize(),3);case 3:for($=new S.i.PacketDataList,P=a(Object.keys(y)),O=P.next();!O.done;O=P.next())if(Y=O.value,se=S.h.inputs[Y]){e:{var ze=y[Y];switch(se.type){case"video":var lt=S.s[se.stream];if(lt||(lt=new _e(S.i,S.K),S.s[se.stream]=lt),lt.m===0&&(lt.m=lt.i.createTexture()),typeof HTMLVideoElement<"u"&&ze instanceof HTMLVideoElement)var Ft=ze.videoWidth,Kt=ze.videoHeight;else typeof HTMLImageElement<"u"&&ze instanceof HTMLImageElement?(Ft=ze.naturalWidth,Kt=ze.naturalHeight):(Ft=ze.width,Kt=ze.height);Kt={glName:lt.m,width:Ft,height:Kt},Ft=lt.h,Ft.canvas.width=Kt.width,Ft.canvas.height=Kt.height,Ft.activeTexture(Ft.TEXTURE0),lt.i.bindTexture2d(lt.m),Ft.texImage2D(Ft.TEXTURE_2D,0,Ft.RGBA,Ft.RGBA,Ft.UNSIGNED_BYTE,ze),lt.i.bindTexture2d(0),lt=Kt;break e;case"detections":for(lt=S.s[se.stream],lt||(lt=new Nt(S.i),S.s[se.stream]=lt),lt.data||(lt.data=new lt.h.DetectionListData),lt.data.reset(ze.length),Kt=0;Kt<ze.length;++Kt){Ft=ze[Kt];var pn=lt.data,jn=pn.setBoundingBox,us=Kt,ln=Ft.la,en=new E;if(st(en,1,ln.sa),st(en,2,ln.ta),st(en,3,ln.height),st(en,4,ln.width),st(en,5,ln.rotation),Ee(en,6,ln.pa),ln=en.l(),jn.call(pn,us,ln),Ft.ea)for(pn=0;pn<Ft.ea.length;++pn){en=Ft.ea[pn],jn=lt.data,us=jn.addNormalizedLandmark,ln=Kt,en=Object.assign({},en,{visibility:en.visibility?en.visibility:0});var vs=new zr;st(vs,1,en.x),st(vs,2,en.y),st(vs,3,en.z),en.visibility&&st(vs,4,en.visibility),en=vs.l(),us.call(jn,ln,en)}if(Ft.ba)for(pn=0;pn<Ft.ba.length;++pn)jn=lt.data,us=jn.addClassification,ln=Kt,en=Ft.ba[pn],vs=new ui,st(vs,2,en.qa),en.index&&Ee(vs,1,en.index),en.label&&Ee(vs,3,en.label),en.displayName&&Ee(vs,4,en.displayName),en=vs.l(),us.call(jn,ln,en)}lt=lt.data;break e;default:lt={}}}switch(Ce=lt,Le=se.stream,se.type){case"video":$.pushTexture2d(Object.assign({},Ce,{stream:Le,timestamp:R}));break;case"detections":qe=Ce,qe.stream=Le,qe.timestamp=R,$.pushDetectionList(qe);break;default:throw Error("Unknown input config type: '"+se.type+"'")}}return S.j.send($),b(Pe,S.I,4);case 4:$.delete(),Pe.h=0}})};function Bn(y,C,S){var R,$,P,O,Y,se,Ce,Le,qe,Pe,ze,lt,Ft,Kt;return B(function(pn){switch(pn.h){case 1:if(!S)return pn.return(C);for(R={},$=0,P=a(Object.keys(S)),O=P.next();!O.done;O=P.next())Y=O.value,se=S[Y],typeof se!="string"&&se.type==="texture"&&C[se.stream]!==void 0&&++$;1<$&&(y.M=!1),Ce=a(Object.keys(S)),O=Ce.next();case 2:if(O.done){pn.h=4;break}if(Le=O.value,qe=S[Le],typeof qe=="string")return Ft=R,Kt=Le,b(pn,Ns(y,Le,C[qe]),14);if(Pe=C[qe.stream],qe.type==="detection_list"){if(Pe){for(var jn=Pe.getRectList(),us=Pe.getLandmarksList(),ln=Pe.getClassificationsList(),en=[],vs=0;vs<jn.size();++vs){var fa=Q(jn.get(vs)),e2=vt(fa,1),t2=vt(fa,2),n2=vt(fa,3),s2=vt(fa,4),ed=vt(fa,5,0),YA=void 0;YA=YA===void 0?0:YA,fa={la:{sa:e2,ta:t2,height:n2,width:s2,rotation:ed,pa:Gt(me(fa,6),YA)},ea:ce(us.get(vs)),ba:oe(Op(ln.get(vs)))},en.push(fa)}jn=en}else jn=[];R[Le]=jn,pn.h=7;break}if(qe.type==="proto_list"){if(Pe){for(jn=Array(Pe.size()),us=0;us<Pe.size();us++)jn[us]=Pe.get(us);Pe.delete()}else jn=[];R[Le]=jn,pn.h=7;break}if(Pe===void 0){pn.h=3;break}if(qe.type==="float_list"){R[Le]=Pe,pn.h=7;break}if(qe.type==="proto"){R[Le]=Pe,pn.h=7;break}if(qe.type!=="texture")throw Error("Unknown output config type: '"+qe.type+"'");return ze=y.v[Le],ze||(ze=new _e(y.i,y.K),y.v[Le]=ze),b(pn,Fe(ze,Pe,y.M),13);case 13:lt=pn.i,R[Le]=lt;case 7:qe.transform&&R[Le]&&(R[Le]=qe.transform(R[Le])),pn.h=3;break;case 14:Ft[Kt]=pn.i;case 3:O=Ce.next(),pn.h=2;break;case 4:return pn.return(R)}})}function Ns(y,C,S){var R;return B(function($){return typeof S=="number"||S instanceof Uint8Array||S instanceof y.i.Uint8BlobList?$.return(S):S instanceof y.i.Texture2dDataOut?(R=y.v[C],R||(R=new _e(y.i,y.K),y.v[C]=R),$.return(Fe(R,S,y.M))):$.return(void 0)})}function Ji(y,C){for(var S=C.name||"$",R=[].concat(l(C.wants)),$=new y.i.StringList,P=a(C.wants),O=P.next();!O.done;O=P.next())$.push_back(O.value);P=y.i.PacketListener.implement({onResults:function(Y){for(var se={},Ce=0;Ce<C.wants.length;++Ce)se[R[Ce]]=Y.get(Ce);var Le=y.listeners[S];Le&&(y.I=Bn(y,se,C.outs).then(function(qe){qe=Le(qe);for(var Pe=0;Pe<C.wants.length;++Pe){var ze=se[R[Pe]];typeof ze=="object"&&ze.hasOwnProperty&&ze.hasOwnProperty("delete")&&ze.delete()}qe&&(y.I=qe)}))}}),y.j.attachMultiListener($,P),$.delete()}n.onResults=function(y,C){this.listeners[C||"$"]=y},W("Solution",qn),W("OptionType",{BOOL:0,NUMBER:1,ua:2,0:"BOOL",1:"NUMBER",2:"STRING"});function Up(y){switch(y===void 0&&(y=0),y){case 1:return"pose_landmark_full.tflite";case 2:return"pose_landmark_heavy.tflite";default:return"pose_landmark_lite.tflite"}}function I(y){var C=this;y=y||{},this.h=new qn({locateFile:y.locateFile,files:function(S){return[{url:"pose_solution_packed_assets_loader.js"},{simd:!1,url:"pose_solution_wasm_bin.js"},{simd:!0,url:"pose_solution_simd_wasm_bin.js"},{data:!0,url:Up(S.modelComplexity)}]},graph:{url:"pose_web.binarypb"},listeners:[{wants:["pose_landmarks","world_landmarks","segmentation_mask","image_transformed"],outs:{image:{type:"texture",stream:"image_transformed"},poseLandmarks:{type:"proto",stream:"pose_landmarks",transform:ce},poseWorldLandmarks:{type:"proto",stream:"world_landmarks",transform:ce},segmentationMask:{type:"texture",stream:"segmentation_mask"}}}],inputs:{image:{type:"video",stream:"input_frames_gpu"}},options:{useCpuInference:{type:0,graphOptionXref:{calculatorType:"InferenceCalculator",fieldName:"use_cpu_inference"},default:typeof window!="object"||window.navigator===void 0?!1:"iPad Simulator;iPhone Simulator;iPod Simulator;iPad;iPhone;iPod".split(";").includes(navigator.platform)||navigator.userAgent.includes("Mac")&&"ontouchend"in document},selfieMode:{type:0,graphOptionXref:{calculatorType:"GlScalerCalculator",calculatorIndex:1,fieldName:"flip_horizontal"}},modelComplexity:{type:1,graphOptionXref:{calculatorType:"ConstantSidePacketCalculator",calculatorName:"ConstantSidePacketCalculatorModelComplexity",fieldName:"int_value"},onChange:function(S){var R,$,P;return B(function(O){return O.h==1?(R=Up(S),$="third_party/mediapipe/modules/pose_landmark/"+R,b(O,zs(C.h,R),2)):(P=O.i,C.h.overrideFile($,P),O.return(!0))})}},smoothLandmarks:{type:0,graphOptionXref:{calculatorType:"ConstantSidePacketCalculator",calculatorName:"ConstantSidePacketCalculatorSmoothLandmarks",fieldName:"bool_value"}},enableSegmentation:{type:0,graphOptionXref:{calculatorType:"ConstantSidePacketCalculator",calculatorName:"ConstantSidePacketCalculatorEnableSegmentation",fieldName:"bool_value"}},smoothSegmentation:{type:0,graphOptionXref:{calculatorType:"ConstantSidePacketCalculator",calculatorName:"ConstantSidePacketCalculatorSmoothSegmentation",fieldName:"bool_value"}},minDetectionConfidence:{type:1,graphOptionXref:{calculatorType:"TensorsToDetectionsCalculator",calculatorName:"poselandmarkgpu__posedetectiongpu__TensorsToDetectionsCalculator",fieldName:"min_score_thresh"}},minTrackingConfidence:{type:1,graphOptionXref:{calculatorType:"ThresholdingCalculator",calculatorName:"poselandmarkgpu__poselandmarkbyroigpu__tensorstoposelandmarksandsegmentation__ThresholdingCalculator",fieldName:"threshold"}}}})}n=I.prototype,n.reset=function(){this.h.reset()},n.close=function(){return this.h.close(),Promise.resolve()},n.onResults=function(y){this.h.onResults(y)},n.initialize=function(){var y=this;return B(function(C){return b(C,y.h.initialize(),0)})},n.send=function(y,C){var S=this;return B(function(R){return b(R,S.h.send(y,C),0)})},n.setOptions=function(y){this.h.setOptions(y)},W("Pose",I),W("POSE_CONNECTIONS",[[0,1],[1,2],[2,3],[3,7],[0,4],[4,5],[5,6],[6,8],[9,10],[11,12],[11,13],[13,15],[15,17],[15,19],[15,21],[17,19],[12,14],[14,16],[16,18],[16,20],[16,22],[18,20],[11,23],[12,24],[23,24],[23,25],[24,26],[25,27],[26,28],[27,29],[28,30],[29,31],[30,32],[27,31],[28,32]]),W("POSE_LANDMARKS",{NOSE:0,LEFT_EYE_INNER:1,LEFT_EYE:2,LEFT_EYE_OUTER:3,RIGHT_EYE_INNER:4,RIGHT_EYE:5,RIGHT_EYE_OUTER:6,LEFT_EAR:7,RIGHT_EAR:8,LEFT_RIGHT:9,RIGHT_LEFT:10,LEFT_SHOULDER:11,RIGHT_SHOULDER:12,LEFT_ELBOW:13,RIGHT_ELBOW:14,LEFT_WRIST:15,RIGHT_WRIST:16,LEFT_PINKY:17,RIGHT_PINKY:18,LEFT_INDEX:19,RIGHT_INDEX:20,LEFT_THUMB:21,RIGHT_THUMB:22,LEFT_HIP:23,RIGHT_HIP:24,LEFT_KNEE:25,RIGHT_KNEE:26,LEFT_ANKLE:27,RIGHT_ANKLE:28,LEFT_HEEL:29,RIGHT_HEEL:30,LEFT_FOOT_INDEX:31,RIGHT_FOOT_INDEX:32}),W("POSE_LANDMARKS_LEFT",{LEFT_EYE_INNER:1,LEFT_EYE:2,LEFT_EYE_OUTER:3,LEFT_EAR:7,LEFT_RIGHT:9,LEFT_SHOULDER:11,LEFT_ELBOW:13,LEFT_WRIST:15,LEFT_PINKY:17,LEFT_INDEX:19,LEFT_THUMB:21,LEFT_HIP:23,LEFT_KNEE:25,LEFT_ANKLE:27,LEFT_HEEL:29,LEFT_FOOT_INDEX:31}),W("POSE_LANDMARKS_RIGHT",{RIGHT_EYE_INNER:4,RIGHT_EYE:5,RIGHT_EYE_OUTER:6,RIGHT_EAR:8,RIGHT_LEFT:10,RIGHT_SHOULDER:12,RIGHT_ELBOW:14,RIGHT_WRIST:16,RIGHT_PINKY:18,RIGHT_INDEX:20,RIGHT_THUMB:22,RIGHT_HIP:24,RIGHT_KNEE:26,RIGHT_ANKLE:28,RIGHT_HEEL:30,RIGHT_FOOT_INDEX:32}),W("POSE_LANDMARKS_NEUTRAL",{NOSE:0}),W("VERSION","0.5.1675469404")}).call(pb)),pb}var Sxe=wxe();/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mo=xe();mo.registerFlag("WEBGPU_DEFERRED_SUBMIT_BATCH_SIZE",()=>15);mo.registerFlag("WEBGPU_CPU_FORWARD",()=>!0);mo.registerFlag("WEBGPU_MATMUL_PROGRAM_TYPE",()=>-1);mo.registerFlag("WEBGPU_USE_NAIVE_CONV2D_TRANSPOSE",()=>!0);mo.registerFlag("WEBGPU_USE_LOW_POWER_GPU",()=>!1);mo.registerFlag("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e3);mo.registerFlag("WEBGPU_USE_PROFILE_TOOL",()=>!1);mo.registerFlag("WEBGPU_IMPORT_EXTERNAL_TEXTURE",()=>!0);mo.registerFlag("WEBGPU_USE_NAIVE_CONV2D_DEBUG",()=>!1);mo.registerFlag("WEBGPU_THRESHOLD_TO_INCREASE_WORKGROUPS_FOR_MATMUL",()=>-1);mo.registerFlag("WEBGPU_CONV_SEPARATE_IM2COL_SHADER",()=>!1);mo.registerFlag("WEBGPU_PRINT_SHADER",()=>"");mo.registerFlag("WEBGPU_ENGINE_COMPILE_ONLY",()=>!1);/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Exe{constructor(e){e&&(this.vendor=e.vendor,this.architecture=e.architecture,this.intelGPUGeneration=this.getIntelGPUGeneration())}getIntelGPUGeneration(){if(this.isIntel()){if(this.architecture.startsWith("gen"))return Number(this.architecture.match(/\d+/));if(this.architecture.startsWith("xe"))return 12}return 0}isIntel(){return this.vendor==="intel"}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class _xe{constructor(e){this.device=e,this.numUsedBuffers=0,this.numFreeBuffers=0,this.freeBuffers=new Map,this.usedBuffers=new Map,this.numBytesUsed=0,this.numBytesAllocated=0}acquireBuffer(e,t,s=!1,r=!0){let i;const o=L3(e,t);return r?(this.freeBuffers.has(o)||this.freeBuffers.set(o,[]),this.freeBuffers.get(o).length>0?(i=this.freeBuffers.get(o).pop(),this.numFreeBuffers--):(i=this.device.createBuffer({size:e,usage:t,mappedAtCreation:s}),this.numBytesAllocated+=e)):(i=this.device.createBuffer({size:e,usage:t,mappedAtCreation:s}),this.numBytesAllocated+=e),this.usedBuffers.has(o)||this.usedBuffers.set(o,[]),this.usedBuffers.get(o).push(i),this.numUsedBuffers++,this.numBytesUsed+=e,i}releaseBuffer(e,t=!0){if(this.freeBuffers.size===0)return;const s=e.size,r=e.usage,i=L3(s,r),o=this.usedBuffers.get(i),a=o.indexOf(e);if(a<0)throw new Error("Cannot find the buffer in buffer manager");o[a]=o[o.length-1],o.pop(),this.numUsedBuffers--,this.numBytesUsed-=s,t?(this.freeBuffers.get(i).push(e),this.numFreeBuffers++):(e.destroy(),this.numBytesAllocated-=s)}getNumUsedBuffers(){return this.numUsedBuffers}getNumFreeBuffers(){return this.numFreeBuffers}dispose(){this.freeBuffers.forEach((e,t)=>{e.forEach(s=>{s.destroy()})}),this.usedBuffers.forEach((e,t)=>{e.forEach(s=>{s.destroy()})}),this.freeBuffers=new Map,this.usedBuffers=new Map,this.numUsedBuffers=0,this.numFreeBuffers=0,this.numBytesUsed=0,this.numBytesAllocated=0}}function L3(n,e){return`${n}_${e}`}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Txe{constructor(e){this.device=e,this.numUsedTextures=0,this.numFreeTextures=0,this.freeTextures=new Map,this.usedTextures=new Map,this.numBytesUsed=0,this.numBytesAllocated=0}acquireTexture(e,t,s,r){const i=Q3(s),o=e*t*i,a=O3(e,t,s,r);if(this.freeTextures.has(a)||this.freeTextures.set(a,[]),this.usedTextures.has(a)||this.usedTextures.set(a,[]),this.numBytesUsed+=o,this.numUsedTextures++,this.freeTextures.get(a).length>0){this.numFreeTextures--;const c=this.freeTextures.get(a).shift();return this.usedTextures.get(a).push(c),c}this.numBytesAllocated+=o;const l=this.device.createTexture({size:[e,t],format:s,usage:r});return this.usedTextures.get(a).push(l),l}releaseTexture(e){if(this.freeTextures.size===0)return;const t=e.width,s=e.height,r=e.format,i=e.usage,o=O3(t,s,r,i);this.freeTextures.has(o)||this.freeTextures.set(o,[]),this.freeTextures.get(o).push(e),this.numFreeTextures++,this.numUsedTextures--;const a=this.usedTextures.get(o),l=a.indexOf(e);if(l<0)throw new Error("Cannot release a texture that was never provided by this texture manager");a.splice(l,1);const c=Q3(r),u=t*s*c;this.numBytesUsed-=u}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){this.freeTextures.forEach((e,t)=>{e.forEach(s=>{s.destroy()})}),this.usedTextures.forEach((e,t)=>{e.forEach(s=>{s.destroy()})}),this.freeTextures=new Map,this.usedTextures=new Map,this.numUsedTextures=0,this.numFreeTextures=0,this.numBytesUsed=0,this.numBytesAllocated=0}}function O3(n,e,t,s){return`${n}_${e}_${t}_${s}`}function Q3(n){if(n==="rgba8unorm")return 16;throw new Error(`${n} is not supported!`)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bxe(n,e){if(Math.max(...n)>5)throw new Error("Cannot symbolically compute strides for rank > 6 tensor.");const t=n.length,s="xyzwuv",r=n.map(o=>`${e}.${s[o]}`),i=new Array(t-1);i[t-2]=r[t-1];for(let o=t-3;o>=0;--o)i[o]=`(${i[o+1]} * ${r[o+1]})`;return i}const Sc=(n,e,t)=>t==="int32"?`atomicAdd(${n}, bitcast<i32>(${e}));`:`
          {
            var oldValue = 0;
            loop {
              let newValueF32 = bitcast<f32>(oldValue) + (${e});
              let newValue = bitcast<i32>(newValueF32);
              let res = atomicCompareExchangeWeak(${n}, oldValue, newValue);
              if res.exchanged {
                break;
              }
              oldValue = res.old_value;
            }
          }`;/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var af;(function(n){n[n.FROM_PIXELS=0]="FROM_PIXELS",n[n.DRAW=1]="DRAW"})(af||(af={}));const kxe=(n,e,t,s,r)=>{const i={dtype:s.dtype,shape:s.shape},o=Rxe(t,i,e),a=n.createShaderModule({code:o,label:e.constructor.name});let l=xe().get("WEBGPU_PRINT_SHADER");if(l!==""){l=l.toLowerCase();const c=l.split(",");(l==="all"||c.some(u=>e.shaderKey.toLowerCase().includes(u)))&&(console.group(e.shaderKey),console.debug(o),console.groupEnd())}return r?n.createComputePipelineAsync({compute:{module:a,entryPoint:"_start"},label:e.constructor.name,layout:"auto"}):n.createComputePipeline({compute:{module:a,entryPoint:"_start"},label:e.constructor.name,layout:"auto"})},yn=(n,e="f32")=>{switch(n){case 1:return`${e}`;case 2:return`vec2<${e}>`;case 3:return`vec3<${e}>`;case 4:return`vec4<${e}>`;default:throw new Error(`${n}-component ${e} is not supported.`)}};function Fs(n){if(n<=1)return"i32";if(n===2)return"vec2<i32>";if(n===3)return"vec3<i32>";if(n===4)return"vec4<i32>";if(n===5)return"vec5";if(n===6)return"vec6";throw Error(`GPU for rank ${n} is not yet supported`)}function dl(n){if(n===0)return"x";if(n===1)return"y";if(n===2)return"z";if(n===3)return"w";if(n===4)return"u";if(n===5)return"v";throw Error(`Index ${n} is not yet supported`)}function ft(...n){let e;switch(n.length){case 0:e=`
        fn main()
      `;break;case 1:e=`
        fn main(${n[0]} : i32)
      `;break;default:throw Error("Unreachable")}return e}function U3(n,e){let t;return t=`
     ${Nxe(e)}
      fn _start(@builtin(local_invocation_id) LocalId : vec3<u32>,
                @builtin(global_invocation_id) GlobalId : vec3<u32>,
                @builtin(local_invocation_index) LocalIndex: u32,
                @builtin(workgroup_id) WorkgroupId : vec3<u32>,
                @builtin(num_workgroups) NumWorkgroups : vec3<u32>) {
        localId = LocalId;
        localIndex = LocalIndex;
        globalId = GlobalId;
        numWorkgroups = NumWorkgroups;
        workgroupId = WorkgroupId;
        ${n?"main(getGlobalIndex());":"main();"};
      }
    `,t}function Nxe(n){return`
  @compute @workgroup_size(${n.workgroupSize[0]}, ${n.workgroupSize[1]}, ${n.workgroupSize[2]})
`}function Rxe(n,e,t){const s=[],r=t.workgroupSize[0]*t.workgroupSize[1]*t.workgroupSize[2];if(t.outputComponent=t.outputComponent?t.outputComponent:1,s.push(`

      var<private> localId: vec3<u32>;
      var<private> localIndex: u32;
      var<private> globalId: vec3<u32>;
      var<private> numWorkgroups: vec3<u32>;
      var<private> workgroupId: vec3<u32>;

      // Only used when the y/z dimension of workgroup size is 1.
      fn getGlobalIndex() -> i32 {
        ${CP(t)?"  return i32(globalId.x);":`  return i32((workgroupId.z * numWorkgroups.x * numWorkgroups.y +
                workgroupId.y * numWorkgroups.x + workgroupId.x) * ${r}u +
                localIndex);
        `}
      }
    `),t.pixelsOpType!=null){const p=t.pixelsOpType===af.FROM_PIXELS?`@group(0) @binding(0) var<storage, read_write> result: array<${su(e.dtype,t.outputComponent)}>;`:`@group(0) @binding(1) var<storage, read> inBuf : array<${su(n[0].dtype,t.outputComponent)}>;`,A=e.shape.length===3?"vec2<i32>":"i32";s.push(`
        struct Uniform {
          outShapeStrides : ${A},
          size            : i32,
          numChannels     : i32,
          alpha           : f32,
        };

        ${p}
        @group(0) @binding(2) var<uniform> uniforms: Uniform;
      `);const m=G3(t);return[z3,s.join(`
`),c0(e.shape),t.getUserCode(),U3(m,t)].join(`
`)}let i,o,a="struct Uniforms { NAN : f32, INFINITY : f32, ";t.variableNames.forEach((p,A)=>{const m=Fs(n[A].shape.length);a+=`${p.charAt(0).toLowerCase()+p.slice(1)}Shape : ${m}, `,i=n[A].shape.length-1,o=Fs(i),a+=`${p.charAt(0).toLowerCase()+p.slice(1)}ShapeStrides: ${o}, `});const l=Fs(e.shape.length);a+=`outShape : ${l}, `,i=e.shape.length-1,o=Fs(i),a+=`
         outShapeStrides: ${o}, `,t.size&&(a+="size : i32, "),t.uniforms&&(a+=t.uniforms),a+="};",a=Uxe(a),s.push(a),t.atomic?s.push(`
      @group(0) @binding(0) var<storage, read_write> result: array<atomic<i32>>;
    `):s.push(`
      @group(0) @binding(0) var<storage, read_write> result: array<${su(e.dtype,t.outputComponent)}>;
    `),t.variableNames.forEach((p,A)=>{s.push(`
      @group(0) @binding(${1+A}) var<storage, read> ${p}: array<${t.variableComponents?su(n[A].dtype,t.variableComponents[A]):su(n[A].dtype,t.outputComponent)}>;
        `)}),a!==""&&s.push(`
      @group(0) @binding(${1+t.variableNames.length}) var<uniform> uniforms: Uniforms;
      `);const c=Lxe(e.shape,t.dispatchLayout),u=[z3,s.join(`
`)+Dxe,c0(e.shape),c,Oxe(e.shape.length)];t.atomic||u.push(Qxe(e.shape,e.dtype,t.outputComponent)),t.variableNames.forEach((p,A)=>{u.push(`${c0(n[A].shape,p)}`)});const h=n.map((p,A)=>Pxe(p,e.shape,t.variableComponents?t.variableComponents[A]:t.outputComponent,t.dispatchLayout.x.length===e.shape.length)).join(`
`);u.push(h),u.push(t.getUserCode());const d=G3(t);return u.push(U3(d,t)),u.join(`
`)}function Mxe(n,e,t){let s=n.shaderKey;if(n.pixelsOpType!=null)return s;const r=[],i=[];e.forEach(u=>{r.push(u.shape),i.push(u.dtype)}),r.push(t.shape),i.push(t.dtype);const o=e.map(u=>bl(u.shape,t.shape)),a=e.map(u=>dn(u.shape,t.shape)).join("_"),l=o.map(u=>u.join("_")).join(";"),c=CP(n)?"flatDispatch":"";return s+="_"+(n.workgroupSize?n.workgroupSize.join(","):"")+r.map(u=>u.length).join(",")+i.join(",")+n.variableNames.join(",")+l+a+c,s}const z3=`
  struct vec5 {x: i32, y: i32, z: i32, w: i32, u: i32};
  struct vec6 {x: i32, y: i32, z: i32, w: i32, u: i32, v: i32};

  // Checks whether coordinates lie within the bounds of the shape.
  fn coordsInBounds2D(coord : vec2<i32>, shape : vec2<i32>) -> bool {
    return all(coord >= vec2<i32>(0)) && all(coord < shape);
  }
  fn coordsInBounds3D(coord : vec3<i32>, shape : vec3<i32>) -> bool {
    return all(coord >= vec3<i32>(0)) && all(coord < shape);
  }
  fn coordsInBounds4D(coord : vec4<i32>, shape : vec4<i32>) -> bool {
    return all(coord >= vec4<i32>(0)) && all(coord < shape);
  }

  fn getIndexFromCoords1D(coord : i32, shape : i32) -> i32 {
    return coord;
  }
  fn getIndexFromCoords2D(coords : vec2<i32>, shape : vec2<i32>) -> i32 {
    return dot(coords, vec2<i32>(shape.y, 1));
  }
  fn getIndexFromCoords3D(coords : vec3<i32>, shape : vec3<i32>) -> i32 {
    return dot(coords, vec3<i32>(shape.y * shape.z, shape.z, 1));
  }
  fn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {
    return dot(coords, vec4<i32>(
        shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));
  }
  fn getIndexFromCoords5D(coords : vec5, shape : vec5) -> i32 {
    let shapeStrides: vec5 = vec5(shape.y * shape.z * shape.w * shape.u, shape.z * shape.w * shape.u, shape.w * shape.u, shape.u, 1);
    return coords.x*shapeStrides.x + coords.y*shapeStrides.y + coords.z*shapeStrides.z + coords.w*shapeStrides.w + coords.u*shapeStrides.u;
  }
  fn getIndexFromCoords6D(coords : vec6, shape : vec6) -> i32 {
    let shapeStrides: vec6 = vec6(shape.y * shape.z * shape.w * shape.u * shape.v, shape.z * shape.w * shape.u * shape.v, shape.w * shape.u * shape.v, shape.u * shape.v, shape.v, 1);
    return coords.x*shapeStrides.x + coords.y*shapeStrides.y + coords.z*shapeStrides.z + coords.w*shapeStrides.w + coords.u*shapeStrides.u + coords.v*shapeStrides.v;
  }

  // NaN defination in IEEE 754-1985 is :
  //   - sign = either 0 or 1.
  //   - biased exponent = all 1 bits.
  //   - fraction = anything except all 0 bits (since all 0 bits represents infinity).
  // https://en.wikipedia.org/wiki/IEEE_754-1985#Representation_of_non-numbers
  fn isnan(val: f32) -> bool {
    let floatToUint: u32 = bitcast<u32>(val);
    return (floatToUint & 0x7fffffffu) > 0x7f800000u;
  }
  fn isnanVec4(val : vec4<f32>) -> vec4<bool> {
    let floatToUint: vec4<u32> = bitcast<vec4<u32>>(val);
    return (floatToUint & vec4<u32>(0x7fffffffu)) > vec4<u32>(0x7f800000u);
  }
`,Dxe=`
  fn isinf(val: f32) -> bool {
    return abs(val) == uniforms.INFINITY;
  }
`;function c0(n,e=""){const t=n.length,s=e!==""?`get${e.charAt(0).toUpperCase()+e.slice(1)}CoordsFromIndex`:"getCoordsFromIndex",r=e!==""?`${e.charAt(0).toLowerCase()+e.slice(1)}ShapeStrides`:"outShapeStrides";if(t<=1)return`fn ${s}(index : i32) -> i32 { return index; }`;const i=Ot(n),o=Fs(t),a=[];for(let c=0;c<t;c++)a.push(`d${c}`);if(i.length===1)return`    fn ${s}(index : i32) -> vec2<i32> {
      let d0 = index / uniforms.${r}; let d1 = index - d0 * uniforms.${r};
      return vec2<i32>(d0, d1);
    }`;let l;return l="var index2 = index;"+i.map((c,u)=>{const h=`let ${a[u]} = index2 / uniforms.${r}.${dl(u)}`,d=u===i.length-1?`let ${a[u+1]} = index2 - ${a[u]} * uniforms.${r}.${dl(u)}`:`index2 = index2 - ${a[u]} * uniforms.${r}.${dl(u)}`;return`${h}; ${d};`}).join(""),`
    fn ${s}(index : i32) -> ${o} {
      ${l}
      return ${o}(${a.join(",")});
    }
  `}function Fxe(n,e){const t=n.name,s=n.shape.length,r=Fs(s),i="get"+t.charAt(0).toUpperCase()+t.slice(1),o=["d0","d1","d2","d3","d4","d5"].slice(0,s),a=o.map(u=>`${u} : i32`).join(", ");if(s<1)return`
      fn ${i}() -> ${yn(e)} {
        return ${yn(e)}(${t}[0]);
      }
    `;const l=`uniforms.${t.charAt(0).toLowerCase()+t.slice(1)}Shape`;let c=`${s}D`;return s===0&&(c="1D"),`
    fn ${i}(${a}) -> ${yn(e)} {
      return ${yn(e)}(${t}[getIndexFromCoords${c}(${r}(${o.join(",")}),
        ${l})${e===1?"":` / ${e}`}]);
    }
   `}function $xe(n,e,t,s){const r=n.name,i=r.charAt(0).toUpperCase()+r.slice(1),o="get"+i+"ByOutput",a=n.shape.length,l=e.length,c=Fs(l);if(dn(n.shape,e)&&s)return`
    fn ${o}Index(globalIndex : i32) -> ${yn(t)} {
      return ${yn(t)}(${r}[globalIndex]);
    }

    fn ${o}Coords(coords : ${c}) -> ${yn(t)} {
      return ${yn(t)}(${r}[${l>1?"getOutputIndexFromCoords(coords)":"coords"}${t===1?"":` / ${t}`}]);
    }
    `;const u=bl(n.shape,e),h=l-a;let d="";if(a===0)return`
    fn ${o}Index(globalIndex : i32) -> ${yn(t)}{
      return get${i}();
    }

    fn ${o}Coords(coords : ${c}) -> ${yn(t)}{
      return get${i}();
    }
  `;l<2&&u.length>=1?d="coords = 0;":d=u.map(m=>`coords.${dl(m+h)} = 0;`).join(`
`);let f="";if(l<2&&a>0)f="coords";else if(l>1){const m=Fs(a),g=n.shape.map((x,v)=>`coords.${dl(v+h)}`).join(", ");f=`${m}(${g})`}else f="coords";const p=`uniforms.${r.charAt(0).toLowerCase()+r.slice(1)}Shape`,A=`${a}D`;return`
  fn ${o}Index(globalIndex : i32) -> ${yn(t)} {
    var coords = getCoordsFromIndex(globalIndex);
    ${d}
    return ${yn(t)}(${r}[getIndexFromCoords${A}(${f}, ${p})${t===1?"":` / ${t}`}]);
  }

  fn ${o}Coords(coordsIn : ${c}) -> ${yn(t)} {
    var coords = coordsIn;
    ${d}
    return ${yn(t)}(${r}[getIndexFromCoords${A}(${f}, ${p})${t===1?"":` / ${t}`}]);
  }
`}function Pxe(n,e,t,s){let r=Fxe(n,t);return n.shape.length<=e.length&&(r+=$xe(n,e,t,s)),r}function Lxe(n,e){const{x:t,y:s=[],z:r=[]}=e,i=n.length,o=t.length+s.length+r.length;if(o!==i)return"";if(t.length===i)return`fn getOutputCoords() -> ${Fs(i)}{
    let globalIndex = getGlobalIndex();
    return getCoordsFromIndex(globalIndex);
  }
  `;let a="";const l=[t,s,r];for(let d=0;d<l.length;d++){const f=l[d];if(f.length!==0)if(f.length===1)a+=`let d${f[0]} = i32(globalId[${d}]);`;else{const p=Bxe(f,"uniforms.outShape");a+=`var index${d} = i32(globalId[${d}]);`;for(let A=0;A<p.length;A++)a+=`let d${f[A]} = index${d} / ${p[A]};`,A===p.length-1?a+=`let d${f[A+1]} = index${d} - d${f[A]} * ${p[A]};`:a+=`index${d} = index${d} - d${f[A]} * ${p[A]};`}}const c=[];for(let d=0;d<o;d++)c.push(`d${d}`);const u=Fs(o);let h=`fn getOutputCoords() -> ${u} {
  ${a}
`;return c.length===0?h+=`return ${u}(0); }`:h+=`return ${u}(${c.join(",")}); }`,h}function Oxe(n){let e="";switch(n){case 0:case 1:e+=`
        fn getOutputIndexFromCoords(coords : i32) -> i32 {
          return coords;
        }
        `;break;case 2:e+=`
        fn getOutputIndexFromCoords(coords : vec2<i32>) -> i32 {
          return dot(coords, vec2<i32>(uniforms.outShapeStrides, 1));
        }
        `;break;case 3:e+=`
        fn getOutputIndexFromCoords(coords : vec3<i32>) -> i32 {
          return dot(coords, vec3<i32>(uniforms.outShapeStrides.x, uniforms.outShapeStrides.y, 1));
        }
        `;break;case 4:e+=`
        fn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {
          return dot(coords, vec4<i32>(
            uniforms.outShapeStrides.x, uniforms.outShapeStrides.y, uniforms.outShapeStrides.z, 1));
        }
        `;break;case 5:e+=`
        fn getOutputIndexFromCoords(coords : vec5) -> i32 {
          return coords.x * uniforms.outShapeStrides.x +
              coords.y * uniforms.outShapeStrides.y +
              coords.z * uniforms.outShapeStrides.z +
              coords.w * uniforms.outShapeStrides.w +
              coords.u;
        }
        `;break;case 6:e+=`
        fn getOutputIndexFromCoords(coords : vec6) -> i32 {
          return coords.x * uniforms.outShapeStrides.x +
              coords.y * uniforms.outShapeStrides.y +
              coords.z * uniforms.outShapeStrides.z +
              coords.w * uniforms.outShapeStrides.w +
              coords.u * uniforms.outShapeStrides.u +
              coords.v;
        }
        `;break;default:z(!1,()=>`Unsupported ${n}D shape`);break}return e}function CP(n){return n.dispatch[1]===1&&n.dispatch[2]===1}function su(n,e=1){if(n==="float32")return yn(e,"f32");if(n==="int32"||n==="bool")return yn(e,"i32");throw new Error(`type ${n} is not supported.`)}function Qxe(n,e,t){const s=n.length,r=su(e,t);let i=`fn setOutputAtIndex(flatIndex : i32, value : ${yn(t)}) {
      result[flatIndex] = ${r}(value);
    }

    fn setOutputAtIndexI32(flatIndex : i32, value : ${yn(t,"i32")}) {
      result[flatIndex] = ${r}(value);
    }
    `;if(s>=2){const o=["d0","d1","d2","d3","d4","d5"].slice(0,s),a=Fs(s);i+=`
      fn setOutputAtCoords(${o.map(l=>`${l} : i32`).join(", ")}, value : ${yn(t)}) {
        let flatIndex = getOutputIndexFromCoords(${a}(${o.join(", ")}));
        setOutputAtIndex(flatIndex${t===1?"":` / ${t}`}, value);
      }
      fn setOutputAtCoordsI32(${o.map(l=>`${l} : i32`).join(", ")}, value : ${yn(t,"i32")}) {
        let flatIndex = getOutputIndexFromCoords(${a}(${o.join(", ")}));
        setOutputAtIndexI32(flatIndex${t===1?"":` / ${t}`}, value);
      }
    `}return i}function Uxe(n){const e=/(\w+)\s*:\s*vec(5|6)/g;n=n.replace(e,s=>"@align(16) "+s);const t=/vec(5|6)\s*,\s*(\w+)/g;return n=n.replace(t,(s,r,i)=>`vec${r}, @align(16) ${i}`),n}function G3(n){return!(n.dispatchLayout.hasOwnProperty("y")&&n.dispatchLayout.y.length!==0||n.dispatchLayout.hasOwnProperty("z")&&n.dispatchLayout.z.length!==0)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Au=n=>{let e=1;for(let t=0;t<n.length;t++)e*=n[t];return e};function pt(n,e,t=[1,1,1],s=[1,1,1]){const[r,i,o]=[Math.ceil(Au(n.x.map(a=>e[a]))/(t[0]*s[0])),n.y?Math.ceil(Au(n.y.map(a=>e[a]))/(t[1]*s[1])):1,n.z?Math.ceil(Au(n.z.map(a=>e[a]))/(t[2]*s[2])):1];return[r,i,o]}function zxe(n,e,t,s=!1){const r=[8,8,1],i=[4,4,1];return s||(n<=8&&(i[1]=1),e<=16&&t<=16&&(r[0]=4)),{workgroupSize:r,elementsPerThread:i}}function IP(n,e,t=!1){if(t)return[8,8,1];const s=Au(n.x.map(i=>e[i])),r=Au(n.y.map(i=>e[i]));return s<=4?[4,16,1]:r<=4?[16,4,1]:[16,16,1]}function wP(n,e,t=!1){if(t)return[4,4,1];const s=Au(n.x.map(i=>e[i])),r=Au(n.y.map(i=>e[i]));return s<=4?[1,2,1]:r<=4?[2,1,1]:[2,2,1]}function Ct(n){return{x:n.map((e,t)=>t)}}function V3(n){if(n==="float32"||n==="int32"||n==="bool"||n==="string")return 4;if(n==="complex64")return 8;throw new Error(`Unknown dtype ${n}`)}function SP(){return!!(typeof globalThis<"u"&&globalThis.navigator&&globalThis.navigator.gpu)}function EP(n,e){Array.isArray(n)||(n=[n]),n.forEach(t=>{t!=null&&z(t.dtype!=="complex64",()=>`${e} does not support complex64 tensors in the WebGPU backend.`)})}var pa;(function(n){n[n.MatMulReduceProgram=0]="MatMulReduceProgram",n[n.MatMulSplitKProgram=1]="MatMulSplitKProgram",n[n.MatMulSmallOutputSizeProgram=2]="MatMulSmallOutputSizeProgram",n[n.MatMulPackedProgram=3]="MatMulPackedProgram",n[n.MatMulMax=4]="MatMulMax"})(pa||(pa={}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Gxe=xe().getNumber("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD"),Vxe=(n,e)=>{const t=n.limits.maxComputeWorkgroupsPerDimension,s=e.dispatchLayout,r=e.dispatch;if(r.every(o=>o<=t))return r;z(r[0]>t&&s.y===void 0&&s.z===void 0,()=>"Dispatch size exceeds WebGPU limits in Y or Z dimension.");let i=Math.ceil(Math.sqrt(r[0]));return i>t?(i=Math.ceil(Math.cbrt(r[0])),z(i<=t,()=>"Total dispatch size exceeds WebGPU maximum."),[i,i,i]):[i,i,1]};class Np extends og{nextDataId(){return Np.nextDataId++}constructor(e,t){if(super(),this.commandQueueOwnedIds=new WeakSet,this.dispatchCountInPass=0,this.disposed=!1,this.downloadWaitMs=0,this.tensorDataPendingDisposal=[],this.queryResolveBuffer=null,this.querySet=null,this.querySetCount=2,this.stagingPendingDisposal=[],this.uniformPendingDisposal=[],this.uploadWaitMs=0,this.hasReadSyncWarned=!1,this.hasTimestampQueryWarned=!1,!SP())throw new Error("WebGPU is not supported on this device");this.pipelineCache={},this.device=e,this.queue=e.queue,this.commandEncoder=null,this.computePassEncoder=null,this.adapterInfo=new Exe(t),this.supportTimestampQuery=this.device.features.has("timestamp-query"),this.thresholdToIncreaseWorkgroups=this.adapterInfo.intelGPUGeneration>=12?16:8,this.bufferManager=new _xe(this.device),this.textureManager=new Txe(this.device),this.tensorMap=new px(this,lr()),xe().getBool("WEBGPU_USE_PROFILE_TOOL")&&(this.dummyCanvas=document.createElement("canvas"),this.dummyCanvas.width=1,this.dummyCanvas.height=1,this.dummyContext=this.dummyCanvas.getContext("webgpu"),this.dummyContext.configure({device:e,format:"bgra8unorm"}),document.body.appendChild(this.dummyCanvas))}floatPrecision(){return 32}disposeData(e,t=!1){if(!this.tensorMap.has(e))return!0;const s=this.tensorMap.get(e);return t?s.refCount=0:s.refCount--,s.refCount>0?!1:(s.complexTensorInfos!=null&&(this.disposeData(s.complexTensorInfos.real.dataId),this.disposeData(s.complexTensorInfos.imag.dataId)),this.commandQueueOwnedIds.has(e)?(this.tensorDataPendingDisposal.push(e),!0):(this.releaseResource(e),this.tensorMap.delete(e),!0))}memory(){return{numBytesInGPU:this.bufferManager.numBytesUsed,numBytesAllocatedInGPU:this.bufferManager.numBytesAllocated,unreliable:!1}}releaseResource(e){const t=this.tensorMap.get(e);if(!(!t||!t.resource)){if(t.external){t.resource=null;return}t.resource instanceof GPUBuffer?this.bufferManager.releaseBuffer(t.resource):t.resource instanceof GPUTexture&&this.textureManager.releaseTexture(t.resource),t.resource=null}}refCount(e){return this.tensorMap.has(e)?this.tensorMap.get(e).refCount:0}incRef(e){const t=this.tensorMap.get(e);t.refCount++}decRef(e){if(this.tensorMap.has(e)){const t=this.tensorMap.get(e);t.refCount--}}write(e,t,s){if(s==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={id:this.nextDataId()};return this.tensorMap.set(r,{dtype:s,shape:t,values:e,refCount:1}),r}move(e,t,s,r,i){if(r==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.tensorMap.set(e,{dtype:r,shape:s,values:t,refCount:i})}submitQueue(){this.queue.submit([this.commandEncoder.finish()]),this.commandEncoder=null,this.dispatchCountInPass=0,this.commandQueueOwnedIds=new WeakSet,this.tensorDataPendingDisposal.forEach(e=>{this.releaseResource(e),this.tensorMap.delete(e)}),this.uniformPendingDisposal.forEach(e=>this.bufferManager.releaseBuffer(e)),this.stagingPendingDisposal.forEach(e=>this.bufferManager.releaseBuffer(e,!1)),this.tensorDataPendingDisposal=[],this.uniformPendingDisposal=[],this.stagingPendingDisposal=[]}ensureCommandEncoderReady(){this.commandEncoder||(this.commandEncoder=this.device.createCommandEncoder())}endComputePassEncoder(){this.computePassEncoder&&(this.computePassEncoder.end(),this.computePassEncoder=null)}async checkCompileCompletionAsync(){let e;try{e=await Promise.all(Object.values(this.pipelineCache))}catch(t){throw new Error(t.message)}Object.keys(this.pipelineCache).map((t,s)=>{this.pipelineCache[t]=e[s]})}async getBufferData(e){if(xe().getBool("WEBGPU_ENGINE_COMPILE_ONLY"))return console.warn("The data may be invalid since WEBGPU_ENGINE_COMPILE_ONLY is true, this can only be called when WEBGPU_ENGINE_COMPILE_ONLY is false"),null;const t=e.size,s=this.bufferManager.acquireBuffer(t,GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ);this.ensureCommandEncoderReady(),this.endComputePassEncoder(),this.commandEncoder.copyBufferToBuffer(e,0,s,0,t),this.submitQueue(),await s.mapAsync(GPUMapMode.READ);const r=s.getMappedRange().slice(0);return s.unmap(),s!=null&&this.bufferManager.releaseBuffer(s),xe().getBool("WEBGPU_USE_PROFILE_TOOL")&&(z(this.dummyContext!==void 0,()=>"Fail to get context for profiling tool"),this.dummyContext.getCurrentTexture()),r}convertAndCacheOnCPU(e,t){const s=this.tensorMap.get(e);return s.values=t,s.values}readSync(e){const t=this.tensorMap.get(e),{values:s,complexTensorInfos:r}=t;if(s!=null||t.dtype==="string")return s;if(t.dtype==="complex64"){const A=this.readSync(r.real.dataId),m=this.readSync(r.imag.dataId),g=ym(Jo(A,m).buffer,"float32");return this.convertAndCacheOnCPU(e,g),g}this.hasReadSyncWarned||(this.hasReadSyncWarned=!0,console.warn("The performance of synchronously reading data from GPU to CPU is poor on the webgpu backend, please use asynchronous APIs instead."));const i=["opaque","premultiplied"],o=t.resource,a=o.size;z(a%4===0,()=>"Because there is 4 bytes for one pixel, buffer size must be multiple of 4.");const l=a/4,c=new ArrayBuffer(a),u=256,h=256,d=i.map(A=>new OffscreenCanvas(u,h)),f=new OffscreenCanvas(u,h);this.endComputePassEncoder(),d.map((A,m)=>{const g=A.getContext("webgpu");return g.configure({device:this.device,format:"bgra8unorm",usage:GPUTextureUsage.COPY_DST,alphaMode:i[m]}),g.getCurrentTexture()}).map((A,m)=>{const g=u*4,x=(M,T,k)=>{this.ensureCommandEncoderReady(),this.commandEncoder.copyBufferToTexture({buffer:o,bytesPerRow:g,offset:k},{texture:A},{width:M,height:T}),this.submitQueue();const B=f.getContext("2d",{willReadFrequently:!0});B.clearRect(0,0,M,T),B.drawImage(d[m],0,0);const L=B.getImageData(0,0,M,T).data,U=i[m],V=new Uint8ClampedArray(c,k,M*T*4);for(let W=0;W<V.length;W+=4)if(U==="premultiplied")V[W+3]=L[W+3];else{const H=L[W];V[W]=L[W+2],V[W+1]=L[W+1],V[W+2]=H}},v=Math.floor(l/(u*h));let b=u,w=h,_=0;for(let M=0;M<v;M++)x(b,w,_),_+=u*h*4;const N=l%(u*h);w=Math.floor(N/u),w>0&&(x(b,w,_),_+=w*(u*4)),b=N%u,b>0&&x(b,1,_)});const p=ym(c,t.dtype);return this.convertAndCacheOnCPU(e,p),p}async read(e){if(!this.tensorMap.has(e))throw new Error(`Tensor ${e} was not registered!`);const t=this.tensorMap.get(e),{values:s}=t;if(s!=null)return s;let r;if(t.dtype==="complex64"){const i=await Promise.all([this.read(t.complexTensorInfos.real.dataId),this.read(t.complexTensorInfos.imag.dataId)]),o=i[0],a=i[1];r=Jo(o,a)}else{const i=await this.getBufferData(t.resource);r=ym(i,t.dtype)}return this.convertAndCacheOnCPU(e,r),r}copyBuffer(e){const t=e.size,s=e.usage,r=this.bufferManager.acquireBuffer(t,s);return this.ensureCommandEncoderReady(),this.endComputePassEncoder(),this.commandEncoder.copyBufferToBuffer(e,0,r,0,t),this.submitQueue(),r}createTensorFromGPUData(e,t,s){let r=e.buffer;if(s==="complex64")throw new Error("Cannot write to a complex64 dtype. ");const i={id:this.nextDataId()};this.tensorMap.set(i,{dtype:s,shape:t,values:null,refCount:1,external:e.zeroCopy});const o=this.tensorMap.get(i),a=V3(o.dtype)*ye(o.shape);if(e.buffer.size<a)throw new Error(`GPUBuffer size(${e.buffer.size}) is smaller than tensor size(${a})!`);if((e.buffer.usage&(GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC))!==(GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC))throw new Error("GPUBuffer.usage should include GPUBufferUsage.STORAGE | GPUBufferUsage.COPY_SRC!");return e.zeroCopy!==!0&&(r=this.copyBuffer(r)),o.resource=r,lr().makeTensorFromDataId(i,t,s,this)}readToGPU(e){const t=this.tensorMap.get(e),{values:s,dtype:r,shape:i,resource:o}=t;if(r==="complex64")throw new Error("Does not support reading buffer for complex64 dtype.");if(o==null)throw s!=null?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const a=o,l=a.size,c=a.usage,u=this.bufferManager.acquireBuffer(l,c);this.ensureCommandEncoderReady(),this.endComputePassEncoder(),this.commandEncoder.copyBufferToBuffer(o,0,u,0,l),this.submitQueue();const h=this.makeTensorInfo(i,r),d=lr().makeTensorFromTensorInfo(h),f=this.tensorMap.get(h.dataId);return f.resource=u,{tensorRef:d,buffer:u}}bufferSync(e){const t=this.readSync(e.dataId);if(e.dtype==="string")try{const s=t.map(r=>Eo(r));return rn(e.shape,e.dtype,s)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return rn(e.shape,e.dtype,t)}async time(e){!this.supportTimestampQuery&&!this.hasTimestampQueryWarned&&(console.warn("This device doesn't support timestamp-query extension. Start Chrome browser with flag --enable-dawn-features=allow_unsafe_apis to try it again. Otherwise, zero will be shown for the kernel time when profiling mode is enabled."),this.hasTimestampQueryWarned=!0);const t=this.activeTimers,s=[];let r=!1;this.programTimersStack==null?(this.programTimersStack=s,r=!0):this.activeTimers.push(s),this.activeTimers=s,e();const i=_o(this.activeTimers.map(c=>c.query)).filter(c=>c!=null),o=_o(this.activeTimers.map(c=>c.name)).filter(c=>c!=null);this.activeTimers=t,r&&(this.programTimersStack=null);const a={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null},l=await Promise.all(i);return a.kernelMs=cI(l),a.getExtraProfileInfo=()=>l.map((c,u)=>({name:o[u],ms:c})).map(c=>`${c.name}: ${c.ms}`).join(", "),this.uploadWaitMs=0,this.downloadWaitMs=0,a}makeTensorInfo(e,t,s){return t==="string"&&s!=null&&s.length>0&&Wo(s[0])&&(s=s.map(i=>Yo(i))),{dataId:this.write(s,e,t),shape:e,dtype:t}}tensorToBinding(e){if(!e)return null;const s=this.tensorMap.get(e.dataId).resource;return s instanceof GPUBuffer?{buffer:s}:s instanceof GPUTexture?s.createView():s}uploadToGPU(e){const t=this.tensorMap.get(e);if(t.resource!=null)return;const s=V3(t.dtype)*ye(t.shape);let r;const i=GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST;if(t.values){if(r=this.bufferManager.acquireBuffer(s,i,!0),r.mapState==="unmapped"){const o=this.bufferManager.acquireBuffer(s,GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC,!0,!1),a=o.getMappedRange();t.dtype==="int32"||t.dtype==="bool"?new Int32Array(a).set(t.values):new Float32Array(a).set(t.values),o.unmap(),this.ensureCommandEncoderReady(),this.endComputePassEncoder(),this.commandEncoder.copyBufferToBuffer(o,0,r,0,s),this.stagingPendingDisposal.push(o)}else{const o=r.getMappedRange();t.dtype==="int32"||t.dtype==="bool"?new Int32Array(o).set(t.values):new Float32Array(o).set(t.values),r.unmap()}t.values=null}else r=this.bufferManager.acquireBuffer(s,i);t.resource=r}makeUniforms(e){let t=0,s=0;const r=[];let i=1;e.forEach(l=>{l.data.length===0&&(l.data=[1]);let c;switch(l.data.length){case 1:c=4;break;case 2:c=8;break;case 3:c=16;break;case 4:c=16;break;case 5:c=16;break;case 6:c=16;break;default:z(!1,()=>`Unsupported ${l.data.length}D shape`)}(s===5||s===6)&&(c=16),c>i&&(i=c),t=Math.ceil(t/c)*c,s=l.data.length,r.push(t),t+=l.data.length*4}),t=Math.ceil(t/i)*i;const o=new ArrayBuffer(t);e.forEach((l,c)=>{const u=r[c];l.type==="int32"?new Int32Array(o,u,l.data.length).set(l.data):l.type==="uint32"?new Uint32Array(o,u,l.data.length).set(l.data):new Float32Array(o,u,l.data.length).set(l.data)});const a=this.bufferManager.acquireBuffer(t,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);return this.queue.writeBuffer(a,0,o,0,t),this.uniformPendingDisposal.push(a),{offset:0,size:t,buffer:a}}runWebGPUProgram(e,t,s,r,i){if(i||(i=this.makeTensorInfo(e.outputShape,s)),ye(i.shape)===0)return this.tensorMap.get(i.dataId).values=Ws(i.dtype,0),i;this.uploadToGPU(i.dataId),e.dispatch=Vxe(this.device,e);const o=t.map((l,c)=>{if(l.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");return this.uploadToGPU(l.dataId),{dtype:this.tensorMap.get(l.dataId).dtype,shape:l.shape,name:e.variableNames[c]}});e.shaderKey=Mxe(e,o,i);const a=xe().getBool("WEBGPU_ENGINE_COMPILE_ONLY");return e.shaderKey in this.pipelineCache||(this.pipelineCache[e.shaderKey]=kxe(this.device,e,o,i,a)),e.pipeline=this.pipelineCache[e.shaderKey],a||this.recordAndSubmit(e,i,t,r),i}recordAndSubmit(e,t,s,r){if(e.pipeline instanceof Promise)throw new Error("Please call checkCompileCompletionAsync to ensure parallel compilation is done!");let i=[],o=[];const a="int32";if(e.pixelsOpType==null){i.push({type:"float32",data:[NaN]},{type:"float32",data:[1/0]}),o=s.concat(t).map(f=>f.shape);const d="int32";o.map(f=>{i.push({type:d,data:f});const p=Ot(f);i.push({type:d,data:p})})}else{const d=Ot(t.shape);i.push({type:a,data:d})}if(e.size){const d=ye(e.outputShape);i.push({type:a,data:[e.outputComponent?d/e.outputComponent:d]})}r&&(i=[...i,...r]);const l=[this.tensorToBinding(t),...s.map(d=>this.tensorToBinding(d)),this.makeUniforms(i)];s.forEach(d=>{this.commandQueueOwnedIds.add(d.dataId)}),this.commandQueueOwnedIds.add(t.dataId);const c=this.device.createBindGroup({layout:e.pipeline.getBindGroupLayout(0),entries:l.map((d,f)=>({binding:f,resource:d}))}),u=this.activeTimers!=null;this.ensureCommandEncoderReady();const h={};u&&this.supportTimestampQuery?(this.endComputePassEncoder(),this.querySet==null&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:this.querySetCount})),h.timestampWrites={querySet:this.querySet,beginningOfPassWriteIndex:0,endOfPassWriteIndex:1},this.computePassEncoder=this.commandEncoder.beginComputePass(h)):this.computePassEncoder||(this.computePassEncoder=this.commandEncoder.beginComputePass(h)),this.computePassEncoder.setPipeline(e.pipeline),this.computePassEncoder.setBindGroup(0,c),this.computePassEncoder.dispatchWorkgroups(e.dispatch[0],e.dispatch[1],e.dispatch[2]),this.dispatchCountInPass++,(u||xe().get("WEBGPU_DEFERRED_SUBMIT_BATCH_SIZE")<=this.dispatchCountInPass||e.pixelsOpType===af.DRAW)&&(this.endComputePassEncoder(),u?this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime()}):this.submitQueue())}async getQueryTime(){if(!this.supportTimestampQuery)return 0;this.queryResolveBuffer==null&&(this.queryResolveBuffer=this.bufferManager.acquireBuffer(this.querySetCount*8,GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST|GPUBufferUsage.QUERY_RESOLVE)),this.commandEncoder.resolveQuerySet(this.querySet,0,this.querySetCount,this.queryResolveBuffer,0);const e=this.bufferManager.acquireBuffer(this.querySetCount*8,GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST);this.commandEncoder.copyBufferToBuffer(this.queryResolveBuffer,0,e,0,this.querySetCount*8),this.submitQueue(),await e.mapAsync(GPUMapMode.READ);const t=new BigUint64Array(e.getMappedRange()),s=Number(t[1]-t[0])/1e6;return e.unmap(),this.bufferManager.releaseBuffer(e),s}shouldExecuteOnCPU(e,t=Gxe){return xe().getBool("WEBGPU_CPU_FORWARD")&&e.every(s=>this.tensorMap.get(s.dataId).resource==null&&ye(s.shape)<t)}numDataIds(){return this.tensorMap.numDataIds()-this.tensorDataPendingDisposal.length}dispose(){this.disposed||(this.querySet!=null&&this.querySet.destroy(),this.bufferManager.dispose(),this.textureManager.dispose(),this.disposed=!0)}}Np.nextDataId=0;/**
 * @license
 * Copyright 2022 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */SP()&&Tx("webgpu",async()=>{const n={powerPreference:xe().get("WEBGPU_USE_LOW_POWER_GPU")?"low-power":"high-performance"},e=await navigator.gpu.requestAdapter(n),t={},s=[];e.features.has("timestamp-query")&&s.push("timestamp-query"),e.features.has("bgra8unorm-storage")&&s.push(["bgra8unorm-storage"]),t.requiredFeatures=s;const r=e.limits;t.requiredLimits={maxComputeWorkgroupStorageSize:r.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:r.maxComputeWorkgroupsPerDimension,maxStorageBufferBindingSize:r.maxStorageBufferBindingSize,maxBufferSize:r.maxBufferSize,maxComputeWorkgroupSizeX:r.maxComputeWorkgroupSizeX,maxComputeInvocationsPerWorkgroup:r.maxComputeInvocationsPerWorkgroup};const i=await e.requestDevice(t),o="info"in e?e.info:"requestAdapterInfo"in e?await e.requestAdapterInfo():void 0;return new Np(i,o)},3);/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var tn;(function(n){n[n.ADD=0]="ADD",n[n.ATAN2=1]="ATAN2",n[n.COMPLEX_MULTIPLY_IMAG=2]="COMPLEX_MULTIPLY_IMAG",n[n.COMPLEX_MULTIPLY_REAL=3]="COMPLEX_MULTIPLY_REAL",n[n.DIV=4]="DIV",n[n.ELU_DER=5]="ELU_DER",n[n.EQUAL=6]="EQUAL",n[n.FLOOR_DIV=7]="FLOOR_DIV",n[n.GREATER=8]="GREATER",n[n.GREATER_EQUAL=9]="GREATER_EQUAL",n[n.LESS=10]="LESS",n[n.LESS_EQUAL=11]="LESS_EQUAL",n[n.LOGICAL_AND=12]="LOGICAL_AND",n[n.LOGICAL_OR=13]="LOGICAL_OR",n[n.MAX=14]="MAX",n[n.MIN=15]="MIN",n[n.MOD=16]="MOD",n[n.MUL=17]="MUL",n[n.NOT_EQUAL=18]="NOT_EQUAL",n[n.POW=19]="POW",n[n.PRELU=20]="PRELU",n[n.SQUARED_DIFFERENCE=21]="SQUARED_DIFFERENCE",n[n.SUB=22]="SUB"})(tn||(tn={}));const Wxe="let resultTemp = a + b;",Hxe="let resultTemp = atan2(a, b);",qxe="let resultTemp = areal * breal - aimag * bimag;",Yxe="let resultTemp = areal * bimag + aimag * breal;",jxe="let resultTemp = a / b;",Xxe="let resultTemp = select(a * (b + 1.0), a, b >= b - b);",Kxe=`
  let zero = sign(a) * 0 + 0;
  let one = sign(b) * 0 + 1;
  let resultTemp = select(zero, one, a == b);
`,Jxe=`
  let remainder =
      select(a % b, round(a % b), (round(a) == a) & (round(b) == b));
  let quotient = (a - remainder) / b;
  let resultTemp =
      round(select(quotient, quotient - 1, sign(remainder) == -sign(b)));
`,Zxe=`
  let zero = sign(a) * 0 + 0;
  let one = sign(b) * 0 + 1;
  let resultTemp = select(zero, one, a > b);
`,e1e=`
  let zero = sign(a) * 0 + 0;
  let one = sign(b) * 0 + 1;
  let resultTemp = select(zero, one, a >= b);
`,t1e=`
  let zero = sign(a) * 0 + 0;
  let one = sign(b) * 0 + 1;
  let resultTemp = select(zero, one, a < b);
`,n1e=`
  let zero = sign(a) * 0 + 0;
  let one = sign(b) * 0 + 1;
  let resultTemp = select(zero, one, a <= b);
`,s1e="return f32(a >= 1.0 && b >= 1.0);",r1e=`return (vec4<f32>(a >= vec4<f32>(1.0)) *
  vec4<f32>(b >= vec4<f32>(1.0)));`,i1e="return f32(a >= 1.0 || b >= 1.0);",o1e=`return min(vec4<f32>(a >= vec4<f32>(1.0)) +
  vec4<f32>(b >= vec4<f32>(1.0)), vec4<f32>(1.0));`,a1e="let resultTemp = max(a, b);",l1e="let resultTemp = min(a, b);",c1e=`
  let isNaN = b == 0.;
  var resultTemp = a % b;
  resultTemp = select((resultTemp + b) % b, resultTemp,
      (a < 0. && b < 0.) || (a >= 0. && b > 0.));
`,u1e=`
  let isNaN = !vec4<bool>(b);
  var resultTemp = vec4<f32>(a % b);
  if (!((a[0] < 0. && b[0] < 0.) || (a[0] >= 0. && b[0] > 0.))) {
    resultTemp[0] = (resultTemp[0] + b[0]) % b[0];
  }
  if (!((a[1] < 0. && b[1] < 0.) || (a[1] >= 0. && b[1] > 0.))) {
    resultTemp[1] = (resultTemp[1] + b[1]) % b[1];
  }
  if (!((a[2] < 0. && b[2] < 0.) || (a[2] >= 0. && b[2] > 0.))) {
    resultTemp[2] = (resultTemp[2] + b[2]) % b[2];
  }
  if (!((a[3] < 0. && b[3] < 0.) || (a[3] >= 0. && b[3] > 0.))) {
    resultTemp[3] = (resultTemp[3] + b[3]) % b[3];
  }
`,h1e="let resultTemp = a * b;",d1e=`
  var resultTemp = f32(a != b);
  let valueForNaN = 1.0;
`,f1e=`
  var resultTemp = vec4<f32>(a != b);
  let valueForNaN = 1.0;
`,p1e=`
  let isNaN = a < 0.0 && floor(b) < b;
  if (b == 0.0) {
    return 1.0;
  }
  var resultTemp = select(sign(a) * pow(abs(a), b), pow(abs(a), b),
      round(abs(b) % 2.0) != 1.0);
`,m1e=`
  let isModRound1Bool = vec4<i32>(round(abs(b) % vec4<f32>(2.0))) == vec4<i32>(1);
  let isModRound1 = vec4<f32>(isModRound1Bool);
  let multiplier = sign(a) * isModRound1 + (vec4<f32>(1.0) - isModRound1);
  var resultTemp = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  let isExpZero = b == vec4<f32>(0.0);
  if (isExpZero.r) {
    resultTemp.r = 1.0;
  }
  if (isExpZero.g) {
    resultTemp.g = 1.0;
  }
  if (isExpZero.b) {
    resultTemp.b = 1.0;
  }
  if (isExpZero.a) {
    resultTemp.a = 1.0;
  }
  let isNaN = (a < vec4<f32>(0.0)) & (floor(b) < b);
`,g1e="if (a < 0.0) { return b * a; }  return a;",A1e=`
  let aLessThanZero = vec4<f32>(a < vec4<f32>(0.0));
  return (aLessThanZero * (b * a)) + ((vec4<f32>(1.0) - aLessThanZero) * a);
`,y1e="let resultTemp = (a - b) * (a - b);",x1e="let resultTemp = a - b;";function _S(n,e){let t;do{switch(n){case tn.ATAN2:t=Hxe;break;case tn.MAX:t=a1e;break;case tn.MIN:t=l1e;break;case tn.MOD:t=e?u1e:c1e;break;case tn.NOT_EQUAL:t=e?f1e:d1e;break;case tn.POW:t=e?m1e:p1e;break;default:continue}let s,r,i;return e?(s="isnanVec4",r="vec4<f32>",i="vec4<bool>"):(s="isnan",r="f32",i="bool"),`
      let aIsNaN = ${s}(a);
      let aPostLegalization = select(a, ${r}(42), aIsNaN);
      let bIsNaN = ${s}(b);
      let bPostLegalization = select(b, ${r}(42), bIsNaN);
      let isNaN = false;
      let valueForNaN = uniforms.NAN;
      {
        let a = aPostLegalization;
        let b = bPostLegalization;
        ${t}
        return select(
            resultTemp, ${r}(valueForNaN),
            ${i}(isNaN) | aIsNaN | bIsNaN);
      }
    `}while(!1);switch(n){case tn.ADD:t=Wxe;break;case tn.COMPLEX_MULTIPLY_IMAG:t=Yxe;break;case tn.COMPLEX_MULTIPLY_REAL:t=qxe;break;case tn.DIV:t=jxe;break;case tn.ELU_DER:t=Xxe;break;case tn.EQUAL:t=Kxe;break;case tn.FLOOR_DIV:t=Jxe;break;case tn.GREATER:t=Zxe;break;case tn.GREATER_EQUAL:t=e1e;break;case tn.LESS:t=t1e;break;case tn.LESS_EQUAL:t=n1e;break;case tn.LOGICAL_AND:return e?r1e:s1e;case tn.LOGICAL_OR:return e?o1e:i1e;case tn.MUL:t=h1e;break;case tn.PRELU:return e?A1e:g1e;case tn.SQUARED_DIFFERENCE:t=y1e;break;case tn.SUB:t=x1e;break}return`
    ${t}
    return resultTemp;
  `}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var it;(function(n){n[n.ABS=0]="ABS",n[n.ACOS=1]="ACOS",n[n.ACOSH=2]="ACOSH",n[n.ASIN=3]="ASIN",n[n.ASINH=4]="ASINH",n[n.ATAN=5]="ATAN",n[n.ATANH=6]="ATANH",n[n.CEIL=7]="CEIL",n[n.COS=8]="COS",n[n.COSH=9]="COSH",n[n.ELU=10]="ELU",n[n.ERF=11]="ERF",n[n.EXP=12]="EXP",n[n.EXPM1=13]="EXPM1",n[n.FLOOR=14]="FLOOR",n[n.IS_FINITE=15]="IS_FINITE",n[n.IS_INF=16]="IS_INF",n[n.IS_NAN=17]="IS_NAN",n[n.LINEAR=18]="LINEAR",n[n.LOG=19]="LOG",n[n.LOG1P=20]="LOG1P",n[n.LOGICAL_NOT=21]="LOGICAL_NOT",n[n.NEG=22]="NEG",n[n.RELU=23]="RELU",n[n.RELU6=24]="RELU6",n[n.LEAKYRELU=25]="LEAKYRELU",n[n.RECIPROCAL=26]="RECIPROCAL",n[n.ROUND=27]="ROUND",n[n.RSQRT=28]="RSQRT",n[n.SELU=29]="SELU",n[n.SIGMOID=30]="SIGMOID",n[n.SIGN=31]="SIGN",n[n.SIN=32]="SIN",n[n.SINH=33]="SINH",n[n.SOFTPLUS=34]="SOFTPLUS",n[n.SQRT=35]="SQRT",n[n.SQUARE=36]="SQUARE",n[n.STEP=37]="STEP",n[n.TAN=38]="TAN",n[n.TANH=39]="TANH",n[n.TO_INT=40]="TO_INT"})(it||(it={}));const b1e="return abs(a);",v1e=`
  if (abs(a) > 1.) {
    return uniforms.NAN;
  }
  return acos(a);
`,C1e=`
  if (a < 1.) {
    return uniforms.NAN;
  }
  return acosh(a);
`,I1e=`
  if (abs(a) > 1.) {
    return uniforms.NAN;
  }
  return asin(a);
`,w1e="return asinh(a);",S1e=`
  if (isnan(a)) {
    return uniforms.NAN;
  }
  return atan(a);
`,E1e=`
  if (abs(a) > 1.) {
    return uniforms.NAN;
  }
  if (a == 1.) {
    return uniforms.INFINITY;
  }
  if (a == -1.) {
    return -uniforms.INFINITY;
  }
  return atanh(a);
`,_1e="return ceil(a);",T1e="return cos(a);",B1e=`
  let e2x = exp(-a);
  return (e2x + 1.0 / e2x) / 2.0;
`,k1e="return exp(a) - 1.0;",N1e="if (a >= 0.0) { return a; }  return (exp(a) - 1.0);",R1e=`
  var resFloat = exp(a) - vec4<f32>(1.0);
  if (a.r >= 0.0) {
    resFloat.r = a.r;
  }
  if (a.g >= 0.0) {
    resFloat.g = a.g;
  }
  if (a.b >= 0.0) {
    resFloat.b = a.b;
  }
  if (a.a >= 0.0) {
    resFloat.a = a.a;
  }
  return resFloat;
`,M1e=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  let p = ${y1};
  let a1 = ${x1};
  let a2 = ${b1};
  let a3 = ${v1};
  let a4 = ${C1};
  let a5 = ${I1};

  let sign = sign(a);
  let absA = abs(a);
  let t = 1.0 / (1.0 + p * absA);
  return sign * (1.0 - (((((a5 * t + a4) * t) + a3) * t + a2) * t + a1) * t * exp(-absA * absA));
`,D1e="return exp(a);",F1e="return floor(a);",$1e="return f32(!isnan(a) && !isinf(a));",P1e="return f32(isinf(a));",L1e="return f32(isnan(a));",O1e="return a;",Q1e=`if (a < 0.0) { return uniforms.NAN; }
  return log(a);`,U1e=`
  if (isnan(a)) { return a; }
  return log(1.0 + a);
`,z1e="return f32(!(a >= 1.0));",G1e="return -a;",V1e="if (a < 0.0) { return uniforms.alpha * a; } return a;",W1e=`
  let aLessThanZero = vec4<f32>(a < vec4<f32>(0.0));
  return (aLessThanZero * (uniforms.alpha * a)) + ((vec4<f32>(1.0) - aLessThanZero) * a);
`,H1e="return 1.0 / a;",q1e="return select(a, 0.0, a < 0.0);",Y1e="return clamp(a, 0.0, 6.0);",j1e="return clamp(a, vec4<f32>(0.0, 0.0, 0.0, 0.0), vec4<f32>(6.0, 6.0, 6.0, 6.0));",X1e=`
  return select(a, vec4<f32>(0.0), a < vec4<f32>(0.0));
`,K1e="return round(a);",J1e="return inverseSqrt(a);",Z1e=`
  if (a >= 0.0) {
    return ${RA} * a;
  } else {
    return ${NA} * (exp(a) - 1.0);
  }
`,e2e="return 1.0 / (1.0 + exp(-1.0 * a));",t2e="return sign(a);",n2e="return sin(a);",s2e=`
  let e2x = exp(a);
  return (e2x - 1.0 / e2x) / 2.0;
`,r2e=`
  let epsilon = 1.1920928955078125e-7;
  let threshold = log(epsilon) + 2.0;

  let too_large = a > -threshold;
  let too_small = a < threshold;
  let exp_a = exp(a);

  if (too_large) {
    return a;
  } else if (too_small) {
    return exp_a;
  } else {
    return log(exp_a + 1.0);
  }
`,i2e="return sqrt(a);",o2e="return a * a;",a2e=`
  if (isnan(a)) {
    return a;
  }

  return select(uniforms.stepAlpha, 1.0, a > 0.0);
`,l2e="return tan(a);",c2e=`
  let e2x = exp(-2.0 * abs(a));
  return sign(a) * (1.0 - e2x) / (1.0 + e2x);
`,u2e="return f32(i32((a)));";function Yc(n,e){switch(n){case it.ABS:return b1e;case it.ACOS:return v1e;case it.ACOSH:return C1e;case it.ASIN:return I1e;case it.ASINH:return w1e;case it.ATAN:return S1e;case it.ATANH:return E1e;case it.COS:return T1e;case it.COSH:return B1e;case it.CEIL:return _1e;case it.ELU:return e?R1e:N1e;case it.ERF:return M1e;case it.EXP:return D1e;case it.EXPM1:return k1e;case it.FLOOR:return F1e;case it.IS_FINITE:return $1e;case it.IS_INF:return P1e;case it.IS_NAN:return L1e;case it.LINEAR:return O1e;case it.LOG:return Q1e;case it.LOG1P:return U1e;case it.LOGICAL_NOT:return z1e;case it.NEG:return G1e;case it.LEAKYRELU:return e?W1e:V1e;case it.RECIPROCAL:return H1e;case it.RELU:return e?X1e:q1e;case it.RELU6:return e?j1e:Y1e;case it.ROUND:return K1e;case it.RSQRT:return J1e;case it.SELU:return Z1e;case it.SIGMOID:return e2e;case it.SIGN:return t2e;case it.SIN:return n2e;case it.SINH:return s2e;case it.SOFTPLUS:return r2e;case it.SQRT:return i2e;case it.SQUARE:return o2e;case it.STEP:return a2e;case it.TAN:return l2e;case it.TANH:return c2e;case it.TO_INT:return u2e;default:throw new Error(`BinaryType ${n} is not implemented!`)}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nl(n,e=!1,t=!1,s=3){if(n===null)return"";let r="";if(n==="linear")r=Yc(it.LINEAR);else if(n==="relu")r=Yc(it.RELU,t);else if(n==="elu")r=Yc(it.ELU,t);else if(n==="relu6")r=Yc(it.RELU6,t);else if(n==="prelu")r=_S(tn.PRELU,t);else if(n==="sigmoid")r=Yc(it.SIGMOID,t);else if(n==="leakyrelu")r=Yc(it.LEAKYRELU,t);else throw new Error(`Activation ${n} has not been implemented for the WebGPU backend.`);const o=yn(t?4:1);let a="";return e?a=`
      fn activation(a : ${o}, coords : vec${s}<i32>) -> ${o} {
        let b = getPreluActivationWeightsByOutputCoords(coords);
        ${r}
      }`:a=`
      fn activation(a : ${o}, coords : vec${s}<i32>) -> ${o} {
        ${r}
      }`,a}function Wh(n,e){return`
      ${n?"value = value + getBiasByOutputCoords(coords);":""}
      ${e?"value = activation(value, coords);":""}
      `}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _P(n,e,t=!1,s=!1,r=!1,i=1){z(n&&i===1||!n,()=>`transposeA ${n} is not compatible with component size ${i}`);const o=`
      ${n?"value = getA(batch, col, row);":"value = getA(batch, row, col);"}

    `,a=e?"value = getB(batch, col, row);":"value = getB(batch, row, col);";return`
  fn mm_readA(batch: i32, row: i32, col: i32) -> ${yn(i)} {
    var value = ${yn(i)}(0.0);
    ${t&&r?o:`
    ${n?"if(row < uniforms.dimAOuter && col < uniforms.dimInner)":"if(row < uniforms.aShape[1] && col < uniforms.aShape[2])"}
    {
      ${o}
    }
    `}
    return value;
  }

  fn mm_readB(batch: i32, row: i32, col: i32) -> ${yn(i)} {
    var value = ${yn(i)}(0.0);
    ${a}
    return value;
  }
  `}function TS(n,e,t,s,r=!1,i=!1,o=!1,a=1){return`
  ${_P(t,s,r,i,o,a)}
  fn mm_write(batch: i32, row: i32, col: i32, valueIn: ${yn(a)}) {
    ${r&&i?"":"if (row < uniforms.dimAOuter && col < uniforms.dimBOuter)"}
    {
      var value = valueIn;
      let coords = vec3<i32>(batch, row, col);
      ${Wh(n,e)}
      setOutputAtCoords(coords[0], coords[1], coords[2], value);
    }
  }
  `}const h2e=(n,e)=>n?`
        mm_Asub[inputRow][inputCol] = mm_readA(batchA,
          kStart + inputRow,
          globalRowStart + inputCol * ${e});
        `:`
        mm_Asub[inputRow][inputCol] = mm_readA(batchA,
          globalRow + innerRow,
          kStart + inputCol * ${e});
        `,d2e=(n,e,t,s)=>{if(n)return`
      for (var k = 0; k < ${s}; k++) {
        let BCached0 = mm_Bsub[k][tileCol];
        let ACached0 = mm_Asub[k][localRow];
        for (var i = 0; i < ${t}; i++) {
          acc[i] = fma(BCached0, vec4<f32>(ACached0[i]), acc[i]);
        }
      }`;{let r="",i="";for(let o=0;o<e;o++)r+=`let BCached${o} = mm_Bsub[k * ${e} + ${o}][tileCol];`,i+=`acc[i] = fma(BCached${o}, vec4<f32>(ACached[${o}]), acc[i]);`;return`
      for (var k = 0; k < ${s/e}; k++) {
        ${r}
        for (var i = 0; i < ${t}; i++) {
          let ACached = mm_Asub[tileRow + i][k];
          ${i}
        }
      }`}};function Y1(n,e,t=!1,s=32,r=!1,i=32,o=!1){const a=e[1]*n[1],l=e[0]*n[0],c=t?a:s,u=t?s:a,h=c/e[0],d=s/e[1],f=n[1],p=n[0];return z((t&&h===4&&n[1]===4||!t&&(h===3||h===4))&&c%e[0]===0&&s%e[1]===0&&n[0]===4,()=>`If transposeA ${t} is true, innerElementSize ${h} and workPerThread[1] ${n[1]} must be 4.
          Otherwise, innerElementSize ${h} must be 3 or 4.
      tileAWidth ${c} must be divisible by workgroupSize[0]${e[0]}. tileInner ${s} must be divisible by workgroupSize[1] ${e[1]}. colPerThread ${n[0]} must be 4.`),`
  var<workgroup> mm_Asub : array<array<vec${h}<f32>, ${c/h}>, ${u}>;
  var<workgroup> mm_Bsub : array<array<vec4<f32>, ${l/n[0]}>, ${s}>;

  ${ft()} {
    let localRow = i32(localId.y);
    let tileRow = localRow * ${f};
    let tileCol = i32(localId.x);

    let globalRow = i32(globalId.y) * ${f};
    let globalCol = i32(globalId.x) * ${p};
    let batch = ${r?"0":"i32(globalId.z)"};
    let batchA = ${r||!o?"batch":"batch % uniforms.aShape[0]"};
    let batchB = ${r||!o?"batch":"batch % uniforms.bShape[0]"};
    let globalRowStart = i32(workgroupId.y) * ${a};

    let numTiles = ${r?`${Math.ceil(i/s)}`:`(uniforms.dimInner - 1) / ${s} + 1`};
    var kStart = ${r?`i32(globalId.z) * ${i}`:"0"};

    var acc: array<vec4<f32>, ${f}>;

    // Loop over shared dimension.
    let tileRowB = localRow * ${d};
    for (var t = 0; t < numTiles; t++) {
        // Load one tile of A into local memory.
        for (var innerRow = 0; innerRow < ${f}; innerRow++) {
            let inputRow = tileRow + innerRow;
            let inputCol = tileCol;
            ${h2e(t,h)}
        }

        // Load one tile of B into local memory.
        for (var innerRow = 0; innerRow < ${d}; innerRow++) {
            let inputRow = tileRowB + innerRow;
            let inputCol = tileCol;
            mm_Bsub[inputRow][inputCol] = mm_readB(batchB, kStart + inputRow, globalCol);
        }
        kStart = kStart + ${s};
        workgroupBarrier();

        // Compute acc values for a single thread.
        ${d2e(t,h,f,s)}
        workgroupBarrier();
    }

    for (var innerRow = 0; innerRow < ${f}; innerRow++) {
        mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);
    }
  }`}const W3=n=>n?`
        mm_Asub[inputRow][inputCol] = mm_readA(batchA,
          kStart + inputRow,
          globalRowStart + inputCol);
        `:`
        mm_Asub[inputRow][inputCol] = mm_readA(batchA,
          globalRowStart + inputRow,
          kStart + inputCol);
        `,f2e=n=>n?"let ACached = mm_Asub[k][tileRow + innerRow];":"let ACached = mm_Asub[tileRow + innerRow][k];";function j1(n,e,t=!1,s=32,r=!1,i=32,o=!1,a=!1){const l=n[1]*e[1],c=n[0]*e[0],u=t?l:s,h=t?s:l;z(h%e[1]===0&&u%e[0]===0&&s%e[1]===0,()=>`tileAHight ${h} must be divisible by workgroupSize[1]${e[1]}, tileAWidth ${u} must be divisible by workgroupSize[0]${e[0]}, tileInner ${s} must be divisible by workgroupSize[1]${e[1]}`);const d=h/e[1],f=u/e[0],p=s/e[1],A=n[1],m=n[0],g=o?`
      let localRow = i32(localId.y);
      let localCol = i32(localId.x);
      let globalRowStart = i32(workgroupId.y) * ${l};
      let globalColStart = i32(workgroupId.x) * ${c};

      // Loop over shared dimension.
      for (var t = 0; t < numTiles; t++) {
        // Load one tile of A into local memory.
        for (var inputRow = localRow; inputRow < ${h}; inputRow = inputRow + ${e[1]}) {
          for (var inputCol = localCol; inputCol < ${u}; inputCol = inputCol + ${e[0]}) {
            ${W3(t)}
          }
        }
        // Load one tile of B into local memory.
        for (var inputRow = localRow; inputRow < ${s}; inputRow = inputRow + ${e[1]}) {
              for (var inputCol = localCol; inputCol < ${c}; inputCol = inputCol + ${e[0]}) {
            mm_Bsub[inputRow][inputCol] = mm_readB(batchB,
              kStart + inputRow,
              globalColStart + inputCol);
          }
        }
        kStart = kStart + ${s};
        workgroupBarrier();

        // Compute acc values for a single thread.
        var BCached : array<f32, ${m}>;
        for (var k = 0; k < ${s}; k++) {
          for (var inner = 0; inner < ${m}; inner++) {
            BCached[inner] = mm_Bsub[k][localCol + inner * ${e[0]}];
          }
          for (var innerRow = 0; innerRow < ${A}; innerRow++) {
            let ACached = ${t?`mm_Asub[k][localRow + innerRow * ${e[1]}];`:`mm_Asub[localRow + innerRow * ${e[1]}][k];`}
            for (var innerCol = 0; innerCol < ${m}; innerCol++) {
              acc[innerRow][innerCol] =
                  fma(ACached, BCached[innerCol], acc[innerRow][innerCol]);
            }
          }
        }
        workgroupBarrier();
      }
      for (var innerRow = 0; innerRow < ${A}; innerRow++) {
        let gRow = globalRowStart + localRow + innerRow * ${e[1]};
        for (var innerCol = 0; innerCol < ${m}; innerCol++) {
          let gCol = globalColStart + localCol + innerCol * ${e[0]};
          mm_write(batch, gRow, gCol, acc[innerRow][innerCol]);
        }
      }
      `:`
  let tileRow = i32(localId.y) * ${A};
  let tileCol = i32(localId.x) * ${m};

  let globalRow = i32(globalId.y) * ${A};
  let globalCol = i32(globalId.x) * ${m};
  let globalRowStart = i32(workgroupId.y) * ${l};

  let tileRowA = i32(localId.y) * ${d};
  let tileColA = i32(localId.x) * ${f};
  let tileRowB = i32(localId.y) * ${p};
  // Loop over shared dimension.
  for (var t = 0; t < numTiles; t++) {
    // Load one tile of A into local memory.
    for (var innerRow = 0; innerRow < ${d}; innerRow++) {
      for (var innerCol = 0; innerCol < ${f}; innerCol++) {
        let inputRow = tileRowA + innerRow;
        let inputCol = tileColA + innerCol;
        ${W3(t)}
      }
    }

    // Load one tile of B into local memory.
    for (var innerRow = 0; innerRow < ${p}; innerRow++) {
      for (var innerCol = 0; innerCol < ${m}; innerCol++) {
        let inputRow = tileRowB + innerRow;
        let inputCol = tileCol + innerCol;
        mm_Bsub[inputRow][inputCol] = mm_readB(batchB,
          kStart + inputRow,
          globalCol + innerCol);
      }
    }
    kStart = kStart + ${s};
    workgroupBarrier();

    // Compute acc values for a single thread.
    var BCached : array<f32, ${m}>;
    for (var k = 0; k < ${s}; k++) {
      for (var inner = 0; inner < ${m}; inner++) {
        BCached[inner] = mm_Bsub[k][tileCol + inner];
      }

      for (var innerRow = 0; innerRow < ${A}; innerRow++) {
        ${f2e(t)}
        for (var innerCol = 0; innerCol < ${m}; innerCol++) {
          acc[innerRow][innerCol] =
              fma(ACached, BCached[innerCol], acc[innerRow][innerCol]);
        }
      }
    }

    workgroupBarrier();
  }

  for (var innerRow = 0; innerRow < ${A}; innerRow++) {
    for (var innerCol = 0; innerCol < ${m}; innerCol++) {
      mm_write(batch, globalRow + innerRow, globalCol + innerCol,
          acc[innerRow][innerCol]);
    }
  }
  `;return`
    var<workgroup> mm_Asub : array<array<f32, ${u}>, ${h}>;
    var<workgroup> mm_Bsub : array<array<f32, ${c}>, ${s}>;

    ${ft()} {
      let batch = ${r?"0":"i32(globalId.z)"};
      let batchA = ${r||!a?"batch":"batch % uniforms.aShape[0]"};
      let batchB = ${r||!a?"batch":"batch % uniforms.bShape[0]"};
      let numTiles = ${r?`${Math.ceil(i/s)}`:`(uniforms.dimInner - 1) / ${s} + 1`};
      var kStart = ${r?`i32(globalId.z) * ${i}`:"0"};

      var acc : array<array<f32, ${m}>, ${A}>;

      // Without this initialization strange values show up in acc.
      for (var innerRow = 0; innerRow < ${A}; innerRow++) {
        for (var innerCol = 0; innerCol < ${m}; innerCol++) {
          acc[innerRow][innerCol] = 0.0;
        }
      }
      ${g}
    }
  `}const p2e=n=>n?`
      mm_readA(batchA, colA, globalRow),
      mm_readA(batchA, colA + 1, globalRow),
      mm_readA(batchA, colA + 2, globalRow),
      mm_readA(batchA, colA + 3, globalRow)
  `:`
      mm_readA(batchA, globalRow, colA),
      mm_readA(batchA, globalRow, colA + 1),
      mm_readA(batchA, globalRow, colA + 2),
      mm_readA(batchA, globalRow, colA + 3)
  `;function m2e(n,e=!1){z(n[1]===1&&n[2]===1,()=>`A linear work group size is required. But got ${n}.`);const t=n[0]*4;return`
    var<workgroup> mm_Asub : array<vec4<f32>, ${n[0]}>;

    ${ft()} {
      let tileCol = i32(localId.x);
      let globalCol = i32(globalId.x);
      let globalRow = i32(globalId.y);

      let numTiles = (uniforms.dimInner - 1) / ${t} + 1;
      let batch = i32(globalId.z);
      let batchA = batch % uniforms.aShape[0];
      let batchB = batch % uniforms.bShape[0];
      // Without this initialization strange values show up in acc.
      var acc = 0.0;

      // Loop over shared dimension.
      for (var t = 0; t < numTiles; t++) {
        // Load one tile of A into local memory.
        let colA = t * ${t} + tileCol * 4;
        mm_Asub[tileCol] = vec4<f32>(${p2e(e)});
        workgroupBarrier();

        // Compute acc values for a single thread.
        for (var k = 0; k < ${t/4}; k++) {
          let rowB = t * ${t} + k * 4;
          let BCached = vec4<f32>(mm_readB(batchB, rowB, globalCol),
                              mm_readB(batchB, rowB + 1, globalCol),
                              mm_readB(batchB, rowB + 2, globalCol),
                              mm_readB(batchB, rowB + 3, globalCol));

          let ACached = mm_Asub[k];
          acc = acc + dot(ACached, BCached);
        }

        workgroupBarrier();
      }

      mm_write(batch, globalRow, globalCol, acc);
    }
  `}class g2e{constructor(e,t,s=!1,r=!1,i=null,o=null,a=null,l=!1){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.outputShape=t,this.dispatchLayout={x:[2],y:[1],z:[0]};const c=s?e[1]:e[2];if(this.isVec4=(c%4===0&&!s||t[1]%4===0&&s)&&t[2]%4===0&&!r,this.outputComponent=this.isVec4?4:1,this.isVectorA=t[1]===1&&!s,!this.isVec4&&this.isVectorA)this.elementsPerThread=[1,1,1],this.workgroupSize=[32,1,1];else{const d=zxe(t[1],c,t[2],s);this.workgroupSize=d.workgroupSize,this.elementsPerThread=d.elementsPerThread}this.dispatch=pt(this.dispatchLayout,this.outputShape,this.workgroupSize,this.elementsPerThread);const u=i!=null,h=a!=null;u&&this.variableNames.push("bias"),h&&this.variableNames.push("preluActivationWeights"),this.sequentialAccessByThreads=l,this.transposeA=s,this.transposeB=r,this.addBias=u,this.activation=o,this.hasPreluActivationWeights=h,[this.fitAOuter,this.fitBOuter,this.fitInner]=this.getShapeFit(t[1],t[2],c),this.shaderKey=`matMulPacked_${this.elementsPerThread}_${s}_${r}_${this.activation}_${this.fitAOuter}_${this.fitBOuter}_${this.fitInner}_${this.isVec4}_${this.isVectorA}_${this.sequentialAccessByThreads}`}getShapeFit(e,t,s){const r=this.workgroupSize[1]*this.elementsPerThread[1],i=this.workgroupSize[0]*this.elementsPerThread[0];!this.isVec4&&this.isVectorA?this.tileInner=this.workgroupSize[0]*4:this.tileInner=i;const o=e%r===0,a=t%i===0,l=s%this.tileInner===0;return[o,a,l]}getUserCode(){return`
      ${Nl(this.activation,this.hasPreluActivationWeights,this.isVec4)}
      ${TS(this.addBias,this.activation,!1,this.transposeB,this.fitAOuter,this.fitBOuter,this.fitInner,this.isVec4?4:1)}
      ${this.isVec4?Y1(this.elementsPerThread,this.workgroupSize,this.transposeA,this.tileInner,!1,null,!0):this.isVectorA?m2e(this.workgroupSize,this.transposeA):j1(this.elementsPerThread,this.workgroupSize,this.transposeA,this.tileInner,!1,null,this.sequentialAccessByThreads,!0)}
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function A2e(n){return`
    var<workgroup> sumValues : array<f32, ${n}>;
    ${ft()} {
      let coords = getOutputCoords();
      let batch = coords[0];
      let batchA = batch % uniforms.aShape[0];
      let batchB = batch % uniforms.bShape[0];
      let row = coords[1];
      let col = coords[2];
      var sum = 0.0;
      let Length = uniforms.dimInner;
      for (var k = i32(localId.x); k < Length; k = k + ${n}) {
        let dataA = mm_readA(batchA, row, k);
        let dataB = mm_readB(batchB, k, col);
        sum = sum + dataA * dataB;
      }
      sumValues[localId.x] = sum;
      workgroupBarrier();

      for(var currentSize = ${n/2}u; currentSize > 1u;
          currentSize = currentSize / 2u) {
        if (localId.x < currentSize)
        {
          sumValues[localId.x] = sumValues[localId.x] + sumValues[localId.x + currentSize];
        }
        workgroupBarrier();
      }

      if (localId.x == 0u) {
        sum = sumValues[0] + sumValues[1];
        mm_write(batch, row, col, sum);
      }
    }
  `}class y2e{constructor(e,t=!1,s=!1,r=null,i=null,o=null){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workgroupSize=[256,1,1],this.outputShape=e,this.dispatchLayout={x:[],y:[1,2],z:[0]},this.dispatch=pt(this.dispatchLayout,this.outputShape,this.workgroupSize);const a=r!=null,l=o!=null;a&&this.variableNames.push("bias"),l&&this.variableNames.push("preluActivationWeights"),this.transposeA=t,this.transposeB=s,this.addBias=a,this.activation=i,this.hasPreluActivationWeights=l,this.shaderKey=`matMulReduce_${this.activation}_${t}_${s}`}getUserCode(){return`
      ${Nl(this.activation,this.hasPreluActivationWeights)}
      ${TS(this.addBias,this.activation,this.transposeA,this.transposeB)}
      ${A2e(this.workgroupSize[0])}
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function x2e(n){const e=n[1],t=n[0],s=e>t?e:t;return`
  var<workgroup> mm_Asub : array<array<f32, ${s}>, ${e}>;
  var<workgroup> mm_Bsub : array<array<f32, ${t}>, ${s}>;

  // If the output size is small for matrix multiplication, avoid to use vec4
  // and handle some elements per thread to optimally utilize the ALU.
  // Read data from global memory to registers firstly, then store them into
  // shared memory, so it is instruction-Level parallelism for arithmetic
  // operations and others handle IO operations between barrier api, makes ALU
  // and load/store units work simultaneously, could improves the performance.
  ${ft()} {
    let tileRow = i32(localId.y);
    let tileCol = i32(localId.x);
    let globalRow = i32(globalId.y);
    let globalCol = i32(globalId.x);
    let batch = i32(globalId.z);
    let batchA = batch % uniforms.aShape[0];
    let batchB = batch % uniforms.bShape[0];

    // uniforms.dimInner should be greater than 0.
    let numTiles = (uniforms.dimInner - 1) / ${s} + 1;
    var acc = 0.0;

    var globalColA = tileCol;
    var globalRowB = 0;
    var regA = mm_readA(batchA, globalRow, globalColA);
    var regB0 = mm_readB(batchB, globalRowB + 2 * tileRow, globalCol);
    var regB1 = mm_readB(batchB, globalRowB + 2 * tileRow + 1, globalCol);
    globalColA = globalColA + ${s};
    globalRowB = globalRowB + ${s};

    for (var t = 0; t < numTiles; t = t + 1) {
      mm_Asub[tileRow][tileCol] = regA;
      mm_Bsub[2 * tileRow][tileCol] = regB0;
      mm_Bsub[2 * tileRow + 1][tileCol] = regB1;

      workgroupBarrier();

      regA = mm_readA(batchA, globalRow, globalColA);
      regB0 = mm_readB(batchB, globalRowB + 2 * tileRow, globalCol);
      regB1 = mm_readB(batchB, globalRowB + 2 * tileRow + 1, globalCol);
      globalColA = globalColA + ${s};
      globalRowB = globalRowB + ${s};

      for (var k = 0; k < ${s}; k = k + 1) {
        acc = acc + mm_Asub[tileRow][k] * mm_Bsub[k][tileCol];
      }
      workgroupBarrier();
    }

    mm_write(batch, globalRow, globalCol, acc);
  }
  `}class b2e{constructor(e,t,s,r=!1,i=!1,o=null,a=null,l=null){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workgroupSize=[16,8,1],this.outputShape=s,this.dispatchLayout={x:[2],y:[1],z:[0]},this.dispatch=[Math.ceil(s[2]/this.workgroupSize[0]),Math.ceil(s[1]/this.workgroupSize[1]),s[0]];const c=o!=null;c&&this.variableNames.push("bias");const u=l!=null;u&&this.variableNames.push("preluActivationWeights"),this.transposeA=r,this.transposeB=i,this.addBias=c,this.activation=a,this.hasPreluActivationWeights=u,this.shaderKey=`matMulSmallOutputSize_${this.activation}_${r}_${i}`}getUserCode(){return`
      ${Nl(this.activation,this.hasPreluActivationWeights)}
      ${TS(this.addBias,this.activation,this.transposeA,this.transposeB)}
      ${x2e(this.workgroupSize)}
    `}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class v2e{constructor(e,t,s=!1,r=!1){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.workgroupSize=[8,8,1],this.atomic=!0,this.splitedDimInner=128,z(e[0]===1,()=>"MatMulSplitKProgram only supports batch = 1."),this.outputShape=e,this.dispatchLayout={x:[2],y:[1],z:[0,3]};const i=(s&&this.outputShape[1]%4===0||!s&&t%4===0)&&this.outputShape[2]%4===0;this.elementsPerThread=[4,4,this.splitedDimInner],this.outputComponent=i?4:1,i||(this.outputShape[1]<16&&(this.elementsPerThread[1]=1),this.outputShape[2]<16&&(this.elementsPerThread[0]=1)),this.dispatch=pt(this.dispatchLayout,[this.outputShape[0],this.outputShape[1],this.outputShape[2],t],this.workgroupSize,this.elementsPerThread),this.transposeA=s,this.transposeB=r,this.shaderKey=`matMulSplitK_${s}_${r}_${this.elementsPerThread}_${this.outputComponent}`}getUserCode(){const e=this.outputComponent;return`
      ${_P(!1,this.transposeB,!1,!1,!1,e)}
      fn mm_write(batch: i32, row : i32, col : i32, value : ${yn(e)}) {
        if (row < uniforms.dimAOuter && col < uniforms.dimBOuter) {
          let coords = vec3<i32>(batch, row, col);
          let flatIndex = getOutputIndexFromCoords(coords);
          // The problem is that we should initialize output to zero before using.
          // Otherwise, the original value will be added to the result.
          for (var i = 0; i < ${e}; i = i + 1) {
            ${Sc("&result[flatIndex + i]",`${e>1?"value[i]":"value"}`,"float32")}
          }
        }
      }
      ${e===4?Y1(this.elementsPerThread,this.workgroupSize,this.transposeA,32,!0,this.splitedDimInner):j1(this.elementsPerThread,this.workgroupSize,this.transposeA,32,!0,this.splitedDimInner)}
    `}}class C2e{constructor(e,t=null,s=null,r=null){this.uniforms="",this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Ct(this.outputShape),this.dispatch=pt(this.dispatchLayout,this.outputShape,this.workgroupSize),this.addBias=t!=null,this.hasPreluActivationWeights=r!=null,this.activation=s,this.addBias&&this.variableNames.push("bias"),this.hasPreluActivationWeights&&this.variableNames.push("preluActivationWeights"),this.shaderKey=`biasActivation_${s}`}getUserCode(){return`
    ${Nl(this.activation,this.hasPreluActivationWeights)}
    ${ft("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        var value = getXByOutputIndex(index);
        ${Wh(this.addBias,this.activation)}
        setOutputAtIndex(index, value);
      }
    }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class I2e{constructor(e){this.variableNames=[],this.outputShape=[],this.uniforms="value : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Ct(this.outputShape),this.dispatch=pt(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="fill"}getUserCode(){return`
    ${ft("index")} {
      if (index < uniforms.size) {
        setOutputAtIndex(index, uniforms.value);
      }
    }
  `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bi(n){const{backend:e,attrs:t}=n,{shape:s,value:r}=t;let{dtype:i}=t;if(i=i||pc(r),i==="string"){const o=Ts(i,ye(s));return o.fill(r),e.makeTensorInfo(s,i,o)}else{const o=new I2e(s),a=[{type:"float32",data:[r]}];return e.runWebGPUProgram(o,[],i,a)}}const w2e={kernelName:Bg,backendName:"webgpu",kernelFunc:bi};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $t(n){const{inputs:e,attrs:t}=n,{x:s}=e,{shape:r}=t,i=ye(s.shape),o=gx(r,i),a=ye(o);return z(i===a,()=>`The new shape (${o}) has ${a} elements and the old shape (${s.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`),n.backend.incRef(s.dataId),{dataId:s.dataId,shape:o,dtype:s.dtype}}const S2e={kernelName:np,backendName:"webgpu",kernelFunc:$t};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function X1({a:n,b:e,transposeA:t,transposeB:s,backend:r,bias:i=null,preluActivationWeights:o=null,leakyreluAlpha:a=0,activation:l=null}){const c=n.shape.length,u=e.shape.length,h=t?n.shape[c-2]:n.shape[c-1],d=s?e.shape[u-1]:e.shape[u-2],f=t?n.shape[c-1]:n.shape[c-2],p=s?e.shape[u-2]:e.shape[u-1],A=n.shape.slice(0,-2),m=e.shape.slice(0,-2),g=ye(A),x=ye(m),b=jt(n.shape.slice(0,-2),e.shape.slice(0,-2)).concat([f,p]);z(h===d,()=>`Error in matMul: inner shapes (${h}) and (${d}) of Tensors with shapes ${n.shape} and ${e.shape} and transposeA=${t} and transposeB=${s} must match.`);const w=t?[g,h,f]:[g,f,h],_=s?[x,p,d]:[x,d,p],N=$t({inputs:{x:n},backend:r,attrs:{shape:w}}),M=$t({inputs:{x:e},backend:r,attrs:{shape:_}}),T=[N,M],k=Math.max(g,x),B=[N,M],L=[{type:"int32",data:[f]},{type:"int32",data:[p]},{type:"int32",data:[h]}];let U,V;const W=[k,f,p];let H=xe().get("WEBGPU_MATMUL_PROGRAM_TYPE");if(H<0){const K=xe().getNumber("WEBGPU_THRESHOLD_TO_INCREASE_WORKGROUPS_FOR_MATMUL"),te=K>0?K:r.thresholdToIncreaseWorkgroups,le=k*Math.ceil(f/32)*Math.ceil(p/32);le<=te||f<=8&&le<=te*2?k*f*p<=128?H=pa.MatMulReduceProgram:k===1&&d>=2e3?H=pa.MatMulSplitKProgram:H=pa.MatMulSmallOutputSizeProgram:H=pa.MatMulPackedProgram}switch(H){case pa.MatMulReduceProgram:U=new y2e(W,t,s,i,l,o);break;case pa.MatMulSplitKProgram:{if(V=bi({backend:r,attrs:{shape:W,value:0,dtype:n.dtype}}),U=new v2e(W,d,t,s),i||l){V=r.runWebGPUProgram(U,B,n.dtype,L,V);const te=new C2e(V.shape,i,l,o);let le=null;const fe=[V];i&&fe.push(i),o&&fe.push(o),l==="leakyrelu"&&(le=[{type:"float32",data:[a]}],te.uniforms+=" alpha : f32,");const Ie=r.runWebGPUProgram(te,fe,V.dtype,le);T.push(V);const Se=$t({inputs:{x:Ie},backend:r,attrs:{shape:b}});T.push(Ie);for(const De of T)r.disposeData(De.dataId);return Se}break}case pa.MatMulSmallOutputSizeProgram:U=new b2e(w,_,W,t,s,i,l,o);break;case pa.MatMulPackedProgram:const K=r.adapterInfo.isIntel();U=new g2e(w,W,t,s,i,l,o,K);break;default:throw new Error(`Unsupported MatMulProgramType ${H}.`)}i&&B.push(i),o&&B.push(o),l==="leakyrelu"&&(L.push({type:"float32",data:[a]}),U.uniforms+=" alpha : f32,"),V=r.runWebGPUProgram(U,B,n.dtype,L,V);const ee=$t({inputs:{x:V},backend:r,attrs:{shape:b}});T.push(V);for(const K of T)r.disposeData(K.dataId);return ee}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function E2e(n){const{inputs:e,backend:t,attrs:s}=n,{a:r,b:i,bias:o,preluActivationWeights:a}=e,{transposeA:l,transposeB:c,activation:u,leakyreluAlpha:h}=s;return X1({a:r,b:i,transposeA:l,transposeB:c,backend:t,bias:o,preluActivationWeights:a,leakyreluAlpha:h,activation:u})}const _2e={kernelName:Gd,backendName:"webgpu",kernelFunc:E2e};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class H3{constructor(e,t,s){this.variableNames=["AReal","AImag","BReal","BImag"],this.workgroupSize=[128,1,1],this.size=!0,this.outputShape=jt(t,s),this.dispatchLayout=Ct(this.outputShape),this.dispatch=pt(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey=`binaryOpComplex_${e}`,this.op=e}getUserCode(){return`
      fn binaryOpComplex(
          areal : f32, aimag : f32, breal : f32, bimag : f32) -> f32 {
        ${_S(this.op,!1)}
      }

      ${ft("index")} {
        if(index < uniforms.size) {
          let areal = getARealByOutputIndex(index);
          let aimag = getAImagByOutputIndex(index);
          let breal = getBRealByOutputIndex(index);
          let bimag = getBImagByOutputIndex(index);
          setOutputAtIndex(index, binaryOpComplex(areal, aimag, breal, bimag));
        }
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class q0{constructor(e,t,s){if(this.size=!0,this.variableNames=["A","B"],this.outputShape=jt(t,s),this.dispatchLayout=Ct(this.outputShape),this.op=e,this.useSharedMemoryWithA=t.length<=1&&s.length>1&&t[0]<128,this.useSharedMemoryWithB=s.length<=1&&t.length>1&&s[0]<128,this.useSharedMemoryWithA||this.useSharedMemoryWithB)this.outputComponent=1,this.variableComponents=[1,1],this.lastDimensionSize=this.useSharedMemoryWithB?s[0]:t[0],this.shaderKey=`binary_${e}_${this.lastDimensionSize}`,this.type="shared",this.workgroupSize=[256,1,1];else{const r=t.length>0&&t[t.length-1]%4===0,i=s.length>0&&s[s.length-1]%4===0;r&&i?(this.outputComponent=4,this.variableComponents=[4,4]):r&&($v(s)||s[s.length-1]===1)||i&&($v(t)||t[t.length-1]===1)?(this.outputComponent=4,this.variableComponents=r?[4,1]:[1,4]):(this.outputComponent=1,this.variableComponents=[1,1]),this.type="nonshared",this.shaderKey=`binary_${e}_${this.variableComponents}`,this.workgroupSize=[128,1,1]}this.dispatch=pt(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.outputComponent,1,1])}getUserCode(){let e;const t=this.outputComponent===4?"vec4<f32>":"f32",s=`
    fn binaryOperation(a : ${t}, b : ${t}) -> ${t} {
      ${_S(this.op,this.outputComponent===4)}
    };
    `;if(this.type==="shared"){const r=this.lastDimensionSize>1?`coords[${this.outputShape.length-1}]`:"0",i=this.useSharedMemoryWithB?`let a = getAByOutputIndex(index);
          let b = sharedBuf[${r}];`:`let a = sharedBuf[${r}];
          let b = getBByOutputIndex(index);`;e=`
        ${s}
        var<workgroup> sharedBuf : array<f32, ${this.lastDimensionSize}>;
        ${ft("index")} {
          // Fill in the shared memory buffer.
          let localIndex = i32(localId.x);
          if(localIndex < ${this.lastDimensionSize}) {
            sharedBuf[localIndex] = f32(${this.useSharedMemoryWithB?"B":"A"}[localIndex]);
          }
          workgroupBarrier();

          if(index < uniforms.size) {
            let coords = getCoordsFromIndex(index);
            ${i}
            setOutputAtIndex(index, binaryOperation(a, b));
          }
        }
        `}else e=`
       ${s}
       ${ft("index")} {
         if (index < uniforms.size) {
           let coords = getCoordsFromIndex(index * ${this.outputComponent});
           let a = ${t}(getAByOutputCoords(coords));
           let b = ${t}(getBByOutputCoords(coords));
           setOutputAtIndex(index, binaryOperation(a, b));
         }
       }
       `;return e}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qi(n){const{inputs:e}=n,{x:t}=e;return n.backend.incRef(t.dataId),{dataId:t.dataId,shape:t.shape,dtype:t.dtype}}const T2e={kernelName:nh,backendName:"webgpu",kernelFunc:qi};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hh(n){const{inputs:e,backend:t}=n,{real:s,imag:r}=e,i=t.makeTensorInfo(s.shape,"complex64"),o=t.tensorMap.get(i.dataId),a=qi({inputs:{x:s},backend:t}),l=qi({inputs:{x:r},backend:t});return o.complexTensorInfos={real:a,imag:l},i}const B2e={kernelName:pg,backendName:"webgpu",kernelFunc:Hh};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Rp{constructor(e,t,s=""){this.variableNames=["A"],this.size=!0;const r=128;this.workgroupSize=[r,1,1],this.outputShape=e,this.dispatchLayout=Ct(this.outputShape),this.dispatch=pt(this.dispatchLayout,this.outputShape,this.workgroupSize),this.op=t,s!==""&&(this.uniforms=s),this.shaderKey=`unary_${t}`}getUserCode(){return`
      fn unaryOperation(a : f32) -> f32 {
        ${Yc(this.op,!1)}
      }
      ${ft("index")} {
        if (index < uniforms.size) {
          let a = getAByOutputIndex(index);
          setOutputAtIndex(index, unaryOperation(a));
        }
      }
      `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pn({opType:n,cpuKernelImpl:e,dtype:t}){return({inputs:s,backend:r})=>{const{x:i}=s,o=r,a=t||i.dtype;if(o.shouldExecuteOnCPU([i])&&e!=null){const c=o.tensorMap.get(i.dataId),u=e(c.values,a);return o.makeTensorInfo(i.shape,a,u)}const l=new Rp(i.shape,n);return o.runWebGPUProgram(l,[i],a)}}function vr({opType:n,cpuKernelImpl:e,supportsComplex:t=!1,dtype:s}){return({inputs:r,backend:i})=>{const{a:o,b:a}=r,l=i;if(t&&o.dtype==="complex64"){const h=l.tensorMap.get(o.dataId),d=l.tensorMap.get(a.dataId);let f,p;if(n!==tn.MUL)[f,p]=[[h.complexTensorInfos.real,d.complexTensorInfos.real],[h.complexTensorInfos.imag,d.complexTensorInfos.imag]].map(m=>{const[g,x]=m,v={dataId:g.dataId,dtype:g.dtype,shape:o.shape},b={dataId:x.dataId,dtype:x.dtype,shape:a.shape},w=new q0(n,o.shape,a.shape);return l.runWebGPUProgram(w,[v,b],tr(g.dtype,x.dtype))});else{const m=new H3(tn.COMPLEX_MULTIPLY_REAL,o.shape,a.shape),g=new H3(tn.COMPLEX_MULTIPLY_IMAG,o.shape,a.shape),x=[{dataId:h.complexTensorInfos.real.dataId,dtype:h.complexTensorInfos.real.dtype,shape:o.shape},{dataId:h.complexTensorInfos.imag.dataId,dtype:h.complexTensorInfos.imag.dtype,shape:o.shape},{dataId:d.complexTensorInfos.real.dataId,dtype:d.complexTensorInfos.real.dtype,shape:a.shape},{dataId:d.complexTensorInfos.imag.dataId,dtype:d.complexTensorInfos.imag.dtype,shape:a.shape}];f=l.runWebGPUProgram(m,x,"float32"),p=l.runWebGPUProgram(g,x,"float32")}const A=Hh({inputs:{real:f,imag:p},backend:l});return l.disposeData(f.dataId),l.disposeData(p.dataId),A}const c=s||tr(o.dtype,a.dtype);if((o.dtype==="string"||a.dtype==="string"||l.shouldExecuteOnCPU([o,a]))&&e!=null){const h=l.tensorMap.get(o.dataId).values,d=l.tensorMap.get(a.dataId).values,f=o.dtype==="string"?Zo(h):h,p=o.dtype==="string"?Zo(d):d,[A,m]=e(o.shape,a.shape,f,p,c);return l.makeTensorInfo(m,c,A)}const u=new q0(n,o.shape,a.shape);return l.runWebGPUProgram(u,[o,a],c)}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{addImpl:k2e,castImpl:N2e,ceilImpl:R2e,concatImpl:M2e,equalImpl:D2e,expImpl:F2e,expm1Impl:$2e,floorImpl:P2e,floorDivImpl:L2e,gatherNdImpl:O2e,gatherV2Impl:Q2e,greaterEqualImpl:U2e,greaterImpl:z2e,lessEqualImpl:G2e,lessImpl:V2e,logImpl:W2e,maxImpl:H2e,maximumImpl:q2e,minimumImpl:Y2e,multiplyImpl:j2e,negImpl:X2e,notEqualImpl:K2e,prodImpl:J2e,rangeImpl:Z2e,rsqrtImpl:ebe,scatterImpl:tbe,simpleAbsImpl:nbe,sliceImpl:sbe,stridedSliceImpl:rbe,stringNGramsImpl:ibe,subImpl:obe,tileImpl:abe,topKImpl:lbe,transposeImpl:cbe}=p$;/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ube=Pn({opType:it.ABS,cpuKernelImpl:nbe}),hbe={kernelName:pf,backendName:"webgpu",kernelFunc:ube};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dbe=Pn({opType:it.ACOS}),fbe={kernelName:$u,backendName:"webgpu",kernelFunc:dbe};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pbe=Pn({opType:it.ACOSH}),mbe={kernelName:Pu,backendName:"webgpu",kernelFunc:pbe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gbe=vr({opType:tn.ADD,cpuKernelImpl:k2e,supportsComplex:!0}),Abe={kernelName:mc,backendName:"webgpu",kernelFunc:gbe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ybe{constructor(e){this.workPerThread=1,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e[0],this.variableNames=e.map((t,s)=>`T${s}`),this.dispatchLayout=Ct(this.outputShape),this.dispatch=pt(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.shaderKey="addN"}getUserCode(){const e=[];this.variableNames.forEach(r=>{e.push(`let v${r} = get${r}ByOutputCoords(coords);`)});const t=this.variableNames.map(r=>`v${r}`).join(" + ");return`
      ${ft("index")} {
        for (var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if (flatIndex < uniforms.size) {
            let coords = getCoordsFromIndex(flatIndex);
            ${e.join(`
        `)}
            setOutputAtIndex(flatIndex, ${t});
          }
        }
      }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xbe(n){const{inputs:e,backend:t}=n,s=e;if(s.length===1)return qi({inputs:{x:s[0]},backend:t});const r=s.map(a=>a.dtype).reduce((a,l)=>tr(a,l)),i=s.map(a=>a.shape),o=new ybe(i);return t.runWebGPUProgram(o,s,r)}const bbe={kernelName:mf,backendName:"webgpu",kernelFunc:xbe};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class vbe{constructor(e,t){this.variableNames=["A"],this.workgroupSize=[16,16,1];const s=new Array(e.length);for(let r=0;r<s.length;r++)s[r]=e[t[r]];this.outputShape=s,this.dispatchLayout={x:[0],y:[1]},this.dispatch=pt(this.dispatchLayout,this.outputShape,this.workgroupSize,[1,1,1]),this.shaderKey="transposeShared"}getUserCode(){z(this.workgroupSize[0]===this.workgroupSize[1],()=>`Must be a square tile, current tile shape is ${this.workgroupSize[0]} x ${this.workgroupSize[1]}`);const e=this.workgroupSize[0];return`
      var<workgroup> tile : array<array<f32, ${this.workgroupSize[0]+1}>, ${this.workgroupSize[0]}>;
      ${ft()} {
        var x = i32(workgroupId.x) * ${e} + i32(localId.x);
        var y = i32(workgroupId.y) * ${e} + i32(localId.y);
        let width = uniforms.outShape[0];
        let height = uniforms.outShape[1];
        if (x < width && y < height) {
          tile[localId.y][localId.x] = f32(A[y * width + x]);
        }
        workgroupBarrier();

        x = i32(workgroupId.y) * ${e} + i32(localId.x);
        y = i32(workgroupId.x) * ${e} + i32(localId.y);
        if (x < height && y < width) {
          setOutputAtIndex((y * height + x), tile[localId.x]
            [localId.y]);
        }
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Cbe{constructor(e,t){this.variableNames=["A"],this.workPerThread=1,this.workgroupSize=[64,1,1],this.size=!0;const s=new Array(e.length);for(let r=0;r<s.length;r++)s[r]=e[t[r]];this.outputShape=s,this.dispatchLayout=Ct(this.outputShape),this.dispatch=pt(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.newDim=t,this.shaderKey=`transpose_${t}`}getUserCode(){const e=Fs(this.outputShape.length),t=TP(this.newDim);return`
      ${ft("index")} {
        for(var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if(flatIndex < uniforms.size) {
            let coords = getCoordsFromIndex(flatIndex);
            setOutputAtIndex(flatIndex, A[getIndexFromCoords${this.outputShape.length}D(
              ${e}(${t}), uniforms.aShape)]);
          }
        }
      }
    `}}function TP(n){const e=n.length;if(e>6)throw Error(`Transpose for rank ${e} is not yet supported`);const t=new Array(e);for(let s=0;s<n.length;s++)t[n[s]]=`coords.${dl(s)}`;return t.join()}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fa(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{perm:i}=s,o=t,a=r.shape.length,l=new Array(a);for(let u=0;u<l.length;u++)l[u]=r.shape[i[u]];if(t.shouldExecuteOnCPU([r])){const h=o.tensorMap.get(r.dataId).values,d=cbe(h,r.shape,r.dtype,i,l);return t.makeTensorInfo(l,r.dtype,d)}if(r.shape.length===2&&dn(i,[1,0])){const u=new vbe(r.shape,i);return o.runWebGPUProgram(u,[r],r.dtype)}const c=new Cbe(r.shape,i);return o.runWebGPUProgram(c,[r],r.dtype)}const Ibe={kernelName:Xl,backendName:"webgpu",kernelFunc:Fa};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class wbe{constructor(e,t,s){this.variableNames=["x"],this.uniforms="reduceSize : i32,",this.size=!0,this.inputShape=[e.batchSize,e.inSize];const[r]=$s(this.inputShape,[1]);this.outputShape=r.length===0?[1]:r,e.inSize>=32768&&s>=512?this.workgroupSize=[512,1,1]:e.inSize>=4096?this.workgroupSize=[256,1,1]:this.workgroupSize=[64,1,1],this.dispatchLayout=Ct(this.outputShape),this.dispatch=pt(this.dispatchLayout,this.outputShape,[1,1,1]),this.reduceType=t,this.shaderKey=`reduce_${t}`}getUserCode(){let e="",t="0.0";const s=this.workgroupSize[0];this.reduceType==="min"||this.reduceType==="max"?(e=`
         if (isnan(candidate)) {
          bestValue = uniforms.NAN;
         } else if (!isnan(bestValue) && candidate ${this.reduceType==="min"?"<":">"} bestValue)
           {  bestValue = candidate; }`,t="f32(x[offset])"):this.reduceType==="sum"||this.reduceType==="mean"?e=" bestValue = bestValue + candidate; ":this.reduceType==="prod"?(e=" bestValue = bestValue * candidate; ",t="1.0"):this.reduceType==="all"?(e=" bestValue = f32(bestValue >= 1.0 && candidate >= 1.0); ",t="1.0"):this.reduceType==="any"&&(e=" bestValue = f32(bestValue >= 1.0 || candidate >= 1.0); ",t="0.0");const r=this.reduceType==="mean"?"setOutputAtIndex(outputIndex, bestValue / f32(uniforms.reduceSize));":"setOutputAtIndex(outputIndex, bestValue);";return`
       fn DIV_CEIL(a : u32, b : u32) -> u32 {
        return ((a - 1u) / b + 1u);
       }

       ${`
         var<workgroup> xBestValues : array<f32, ${s}>;
       `}
       fn getOffset(outputIndex : i32) -> i32 {
         let outputCoords = getCoordsFromIndex(outputIndex);
         let offset = ${this.outputShape.length===1?"outputCoords":"outputCoords[0]"} * uniforms.reduceSize;
          return offset;
       }
       ${ft("index")} {
         let outputIndex = index / ${s};
         let offset = getOffset(outputIndex);
         var bestValue = ${t};
         let Length = uniforms.reduceSize;
         let WorkPerThread = DIV_CEIL(u32(Length), ${s}u);
         for (var k = i32(localId.x); k < Length && outputIndex < uniforms.size;
             k = k + ${s}) {
           let candidate = f32(x[offset + k]);
           ${e}
         }
         xBestValues[localId.x] = bestValue;
         workgroupBarrier();

         var reduceSize = min(u32(Length), ${s}u);
         for (var currentSize = reduceSize / 2u; reduceSize > 1u;
             currentSize = reduceSize / 2u) {
           let interval = DIV_CEIL(reduceSize, 2u);
           if (localId.x < currentSize) {
            let candidate = xBestValues[localId.x + interval];
            ${e}
            xBestValues[localId.x] = bestValue;
           }
           reduceSize = interval;
           workgroupBarrier();
         }

         if (localId.x == 0u && outputIndex < uniforms.size) {
          ${r}
        }
       }
     `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Sbe={mean:"float32",all:"bool",any:"bool"};function qh(n,e,t,s,r){const i=n.shape.length,o=[],a=an(e,n.shape);let l=a;const c=ss(l,i);let u=n;c!=null&&(u=Fa({inputs:{x:n},attrs:{perm:c},backend:r}),l=ys(l.length,i),o.push(u)),qs(s,l,i);const[h,d]=$s(u.shape,l);let f=h;t&&(f=Ms(h,a));let p;if((s==="max"||s==="prod")&&r.shouldExecuteOnCPU([u])){const A=r.tensorMap.get(u.dataId).values;switch(s){case"max":const m=H2e(A,ye(d),f,n.dtype);p=r.makeTensorInfo(f,n.dtype,m);break;case"prod":const{outVals:g,outShape:x,outDtype:v}=J2e(u.shape,u.dtype,A,l);p=r.makeTensorInfo(x,v,g);break;default:throw new Error(`${s} CPU implementation is not yet supported.`)}}else{const A=ye(d),g=ye(u.shape)/A,x={windowSize:A,inSize:A,batchSize:g,outSize:1},v=Sbe[s]||aA(n.dtype),b=[{type:"int32",data:[A]}],w=new wbe(x,s,r.device.limits.maxComputeWorkgroupSizeX),_=r.runWebGPUProgram(w,[u],v,b);o.push(_),p=$t({inputs:{x:_},attrs:{shape:f},backend:r})}return o.forEach(A=>r.disposeData(A.dataId)),p}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ebe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{keepDims:i,axis:o}=s;return qh(r,o,i,"all",t)}const _be={kernelName:ag,backendName:"webgpu",kernelFunc:Ebe};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tbe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{keepDims:i,axis:o}=s;return qh(r,o,i,"any",t)}const Bbe={kernelName:lg,backendName:"webgpu",kernelFunc:Tbe};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class BP{constructor(e,t,s){this.workgroupSize=[64,1,1],this.variableNames=["x"],this.uniforms="infinityValue : f32,",this.size=!0;const r=[t];this.op=s==="min"?"<":">";const[i,o]=$s(e,r);this.outputShape=i.length===0?[1]:i,this.dispatchLayout=Ct(this.outputShape),ye(o)<32?(this.type="plain",this.dispatch=pt(this.dispatchLayout,this.outputShape,this.workgroupSize)):(this.type="shared",this.dispatch=pt(this.dispatchLayout,this.outputShape,[1,1,1])),this.inputShape=e,this.shaderKey=`argMinMax_${this.op}_${this.type}`}getUserCode(){const e=this.workgroupSize[0],t=()=>this.inputShape.length===1?"uniforms.xShape":`uniforms.xShape.${dl(this.inputShape.length-1)}`,s=()=>{let r="";if(this.outputShape.length===1)this.inputShape.length!==1&&(r+="outputCoords,");else for(let i=0;i<this.outputShape.length;i++)r+=`outputCoords.${dl(i)},`;return r};return this.type==="shared"?`
      fn DIV_CEIL(a : u32, b : u32) -> u32 {
        return ((a - 1u) / b + 1u);
      }

      ${`
      var<workgroup> xBestIndices : array<i32, ${e}>;
      var<workgroup> xBestValues : array<f32, ${e}>;
    `}

      ${ft("index")} {
        let outputIndex = index / ${e};
        let reduceLength = ${t()};

        var bestIndex = i32(localId.x);
        var bestValue = uniforms.infinityValue;
        let outputCoords = getCoordsFromIndex(outputIndex);
        for (var k = i32(localId.x); k < reduceLength && outputIndex < uniforms.size;
            k = k + ${e}) {
          let candidate = getX(${s()} k);
          if (!isnan(candidate) && candidate ${this.op} bestValue) {
            bestValue = candidate;
            bestIndex = k;
          }
        }
        xBestValues[localId.x] = bestValue;
        xBestIndices[localId.x] = bestIndex;
        workgroupBarrier();

        var reduceSize = min(u32(reduceLength), ${e}u);
        for (var currentSize = reduceSize / 2u; reduceSize > 1u;
            currentSize = reduceSize / 2u) {
          let interval = DIV_CEIL(reduceSize, 2u);
          if (localId.x < currentSize) {
            let candidate = xBestValues[localId.x + interval];
            if (candidate ${this.op} bestValue) {
              bestValue = candidate;
              xBestValues[localId.x] = bestValue;
              xBestIndices[localId.x] = xBestIndices[localId.x + interval];
            }
          }
          reduceSize = interval;
          workgroupBarrier();
        }

        if (localId.x == 0u && outputIndex < uniforms.size) {
          setOutputAtIndexI32(outputIndex, xBestIndices[localId.x]);
        }
      }
    `:`
      ${ft("index")} {
        if (index < uniforms.size) {
          let outputCoords = getCoordsFromIndex(index);
          var bestIndex = 0;
          var bestValue = getX(${s()} 0);
          let reduceLength = ${t()};
          for (var i = 1; i < reduceLength; i++) {
            let candidate = getX(${s()} i);
            if (candidate ${this.op} bestValue) {
              bestValue = candidate;
              bestIndex = i;
            }
          }
          setOutputAtIndexI32(index, bestIndex);
        }
      }
      `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kbe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:i}=s;let o=an(i,r.shape);const a=ss(o,r.shape.length);let l=r;const c=[];a!=null&&(l=Fa({inputs:{x:r},backend:t,attrs:{perm:a}}),c.push(l),o=ys(o.length,l.shape.length)),qs("argMax",[o[0]],l.shape.length);const u=new BP(l.shape,o[0],"max"),h=[{type:"float32",data:[Number.NEGATIVE_INFINITY]}],d=t.runWebGPUProgram(u,[l],"int32",h);return c.forEach(f=>t.disposeData(f.dataId)),d}const Nbe={kernelName:gf,backendName:"webgpu",kernelFunc:kbe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rbe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:i}=s;let o=an(i,r.shape);const a=ss(o,r.shape.length);let l=r;const c=[];a!=null&&(l=Fa({inputs:{x:r},backend:t,attrs:{perm:a}}),c.push(l),o=ys(o.length,l.shape.length)),qs("argMin",[o[0]],l.shape.length);const u=new BP(l.shape,o[0],"min"),h=[{type:"float32",data:[Number.POSITIVE_INFINITY]}],d=t.runWebGPUProgram(u,[l],"int32",h);return c.forEach(f=>t.disposeData(f.dataId)),d}const Mbe={kernelName:Af,backendName:"webgpu",kernelFunc:Rbe};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Dbe=Pn({opType:it.ASIN}),Fbe={kernelName:Lu,backendName:"webgpu",kernelFunc:Dbe};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $be=Pn({opType:it.ASINH}),Pbe={kernelName:Ou,backendName:"webgpu",kernelFunc:$be};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Lbe=Pn({opType:it.ATAN}),Obe={kernelName:Qu,backendName:"webgpu",kernelFunc:Lbe};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qbe=vr({opType:tn.ATAN2}),Ube={kernelName:zu,backendName:"webgpu",kernelFunc:Qbe};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zbe=Pn({opType:it.ATANH}),Gbe={kernelName:Uu,backendName:"webgpu",kernelFunc:zbe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Vbe{constructor(e){this.variableNames=["x"],this.uniforms="strides : vec2<i32>,",this.workgroupSize=[256,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=Ct(this.outputShape),this.dispatch=pt(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="poolWithFilterSizeEqualsOne"}getUserCode(){return`
      ${ft("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let batch = coords[0];
          let d = coords[3];

          let xRCCorner = coords.yz * uniforms.strides;
          let xRCorner = xRCCorner.x;
          let xCCorner = xRCCorner.y;

          let value = getX(batch, xRCorner, xCCorner, d);
          setOutputAtIndex(index, value);
        }
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Km{constructor(e,t,s=!1,r=!1,i=!1){if(this.variableNames=["x"],this.uniforms="strides : vec2<i32>, pads : vec2<i32>, dilations : vec2<i32>, convDims : vec2<i32>, filterDims : vec2<i32>,",this.workgroupSize=[128,1,1],this.size=!0,t==="avg"&&s)throw new Error("Cannot compute positions for average pool.");this.outputShape=e.outShape,this.dispatchLayout=Ct(this.outputShape),this.dispatch=pt(this.dispatchLayout,this.outputShape,this.workgroupSize),this.poolType=t,this.computePositions=s,this.flattenPositions=r,this.includeBatchIndex=i,this.shaderKey=`pool2D_${t}_${s}_${r}_${i}`}getUserCode(){let e;this.poolType==="avg"?e="resultValue = resultValue + value; count = count + 1.0;":this.computePositions?e=`let currMaxValue = mix(value, maxValue, maxValueFound);
      if (value >= currMaxValue) {
        maxValue = value;
        maxValueFound = 1.0;
        maxPosition = ${this.flattenPositions?this.includeBatchIndex?"((batch * uniforms.xShape[1] + xR) * uniforms.xShape[2] + xC) * uniforms.xShape[3] + d":"(xR * uniforms.xShape[2] + xC) * uniforms.xShape[3] + d":"wR * uniforms.filterDims.y + wC"};
      }`:e="resultValue = max(value, resultValue);";let t="resultValue";return this.poolType==="avg"&&(t="resultValue / max(count, 1.0)"),`
      ${ft("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
          let batch = coords[0];
          let d = coords[3];
          let xRCCorner = vec2<i32>(coords.yz) * uniforms.strides - uniforms.pads;
          let xRCorner = xRCCorner.x;
          let xCCorner = xRCCorner.y;

          ${this.computePositions?`var maxValue = 0.0;
            var maxValueFound = 0.0;
            var maxPosition = 0;`:`var resultValue = ${this.poolType==="avg"?"0.0":"-1.0 / pow(10.0, -20.0)"};`}

          var count = 0.0;
          for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + uniforms.dilations.x) {
            let xR = xRCorner + wR;

            if (xR < 0 || xR >= uniforms.convDims.x) {
              continue;
            }

            for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + uniforms.dilations.y) {
              let xC = xCCorner + wC;
              if (xC < 0 || xC >= uniforms.convDims.y) {
                continue;
              }

              let value = getX(batch, xR, xC, d);
              ${e}
            }
          }

          ${this.computePositions?"setOutputAtIndexI32(index, maxPosition);":`setOutputAtIndex(index, ${t});`}
        }
      }
    `}}class BS{constructor(e,t,s=!1,r=!1,i=!1){if(this.variableNames=["x"],this.uniforms="strides : vec3<i32>, pads : vec3<i32>, convDims : vec3<i32>, filterDims : vec3<i32>,",this.workgroupSize=[128,1,1],this.size=!0,t==="avg"&&s)throw new Error("Cannot compute positions for average pool.");this.outputShape=e.outShape,this.dispatchLayout=Ct(this.outputShape),this.dispatch=pt(this.dispatchLayout,this.outputShape,this.workgroupSize),this.poolType=t,this.computePositions=s,this.flattenPositions=r,this.includeBatchIndex=i,this.shaderKey=`pool3D_${t}_${s}_${r}_${i}`}getUserCode(){let e;this.poolType==="avg"?e="resultValue += value; count += 1.0;":this.computePositions?e=`let currMaxValue = mix(value, maxValue, maxValueFound);
      if (value >= currMaxValue) {
        maxValue = value;
        maxValueFound = 1.0;
        maxPosition = ${this.flattenPositions?this.includeBatchIndex?"(((batch * uniforms.xShape.y + xD) * uniforms.xShape.z + xR) * uniforms.xShape.w + xC) * uniforms.xShape.u + ch":"((xD * uniforms.xShape.z + xR) * uniforms.xShape.w + xC) * uniforms.xShape.u + ch":"wD * uniforms.filterDims.y * uniforms.filterDims.y + wR * uniforms.filterDims.z + wC"};
      }`:e="resultValue = max(value, resultValue);";let t="resultValue";return this.poolType==="avg"&&(t="resultValue / max(count, 1.0)"),`
      ${ft("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let batch = coords.x;
          let ch = coords.u;

          let xCorner = vec3<i32>(coords.y, coords.z, coords.w) * uniforms.strides - uniforms.pads;
          let xDCorner = xCorner.x;
          let xRCorner = xCorner.y;
          let xCCorner = xCorner.z;

          ${this.computePositions?`var maxValue = 0.0;
            var maxValueFound = 0.0;
            var maxPosition = 0;`:`var resultValue = ${this.poolType==="avg"?"0.0":"-1.0 / pow(10.0, -20.0)"};`}

          var count = 0.0;
          for (var wD = 0; wD < uniforms.filterDims.x; wD++) {
            let xD = xDCorner + wD;
            if (xD < 0 || xD >= uniforms.convDims.x) {
              continue;
            }

            for (var wR = 0; wR < uniforms.filterDims.y; wR++) {
              let xR = xRCorner + wR;
              if (xR < 0 || xR >= uniforms.convDims.y) {
                continue;
              }

              for (var wC = 0; wC < uniforms.filterDims.z; wC++) {
                let xC = xCCorner + wC;
                if (xC < 0 || xC >= uniforms.convDims.z) {
                  continue;
                }

                let value = getX(batch, xD, xR, xC, ch);
                ${e}
              }
            }
          }

          ${this.computePositions?"setOutputAtIndexI32(index, maxPosition);":`setOutputAtIndex(index, ${t});`}
        }
      }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kP(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{reductionIndices:i,keepDims:o}=s;return qh(r,i,o,"max",t)}const Wbe={kernelName:zf,backendName:"webgpu",kernelFunc:kP};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NP(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{keepDims:i,axis:o}=s;return qh(r,o,i,"mean",t)}const Hbe={kernelName:Wf,backendName:"webgpu",kernelFunc:NP};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RP(n,e,t,s){if(e.filterWidth===1&&e.filterHeight===1&&dn(e.inShape,e.outShape))return qi({inputs:{x:n},backend:s});if(e.filterWidth===e.inWidth&&e.filterHeight===e.inHeight&&e.batchSize===1&&e.padInfo.type==="VALID"){const o=n.shape.length,a=$t({inputs:{x:n},backend:s,attrs:{shape:[n.shape[o-3]*n.shape[o-2],n.shape[o-1]]}});let l;t==="avg"?l=NP({inputs:{x:a},backend:s,attrs:{axis:0,keepDims:!1}}):(z(t==="max",()=>`Invalid pool type ${t}`),l=kP({inputs:{x:a},backend:s,attrs:{reductionIndices:0,keepDims:!1}}));const c=$t({inputs:{x:l},backend:s,attrs:{shape:e.outShape}});return s.disposeData(a.dataId),s.disposeData(l.dataId),c}let r;const i=[{type:"int32",data:[e.strideHeight,e.strideWidth]}];return e.filterHeight===1&&e.filterWidth===1?r=new Vbe(e):(t==="avg"?r=new Km(e,"avg"):(z(t==="max",()=>`Invalid pool type ${t}`),r=new Km(e,"max")),i.push({type:"int32",data:[e.padInfo.top,e.padInfo.left]},{type:"int32",data:[e.dilationHeight,e.dilationWidth]},{type:"int32",data:[e.inHeight,e.inWidth]},{type:"int32",data:[e.effectiveFilterHeight,e.effectiveFilterWidth]})),s.runWebGPUProgram(r,[n],n.dtype,i)}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qbe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{filterSize:i,strides:o,pad:a,dimRoundingMode:l}=s,u=Pr(r.shape,i,o,1,a,l);return RP(r,u,"avg",t)}const Ybe={kernelName:yf,backendName:"webgpu",kernelFunc:qbe};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jbe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{filterSize:i,strides:o,pad:a,dataFormat:l,dimRoundingMode:c}=s,u=[1,1,1],h=fo(r.shape,i,o,u,a,c,l),d=new BS(h,"avg"),f=[{type:"int32",data:[h.strideDepth,h.strideHeight,h.strideWidth]},{type:"int32",data:[h.padInfo.front,h.padInfo.top,h.padInfo.left]},{type:"int32",data:[h.inDepth,h.inHeight,h.inWidth]},{type:"int32",data:[h.effectiveFilterDepth,h.effectiveFilterHeight,h.effectiveFilterWidth]}];return t.runWebGPUProgram(d,[r],r.dtype,f)}const Xbe={kernelName:xf,backendName:"webgpu",kernelFunc:jbe};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Kbe{constructor(e){this.variableNames=["dy"],this.uniforms=`strides : vec2<i32>, pads : vec2<i32>, dilations : vec2<i32>, filterDims : vec2<i32>,
       outHeight : i32, outWidth : i32, avgMultiplier : f32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=Ct(this.outputShape),this.dispatch=pt(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="avgPool2DBackprop"}getUserCode(){return`
      ${ft("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords[0];
        let d = coords[3];

        let dyRCCorner = vec2<i32>(coords.yz) - uniforms.pads;
        let dyRCorner = dyRCCorner.x;
        let dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        for (var wR = 0; wR < uniforms.filterDims[0]; wR = wR + uniforms.dilations[0]) {
          let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[0]);

          if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {
            continue;
          }
          let idyR = i32(dyR);

          for (var wC = 0; wC < uniforms.filterDims[1]; wC = wC + uniforms.dilations[1]) {
            let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[1]);

            if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {
              continue;
            }
            let idyC = i32(dyC);

            let dyValue = getDy(batch, idyR, idyC, d);

            dotProd = dotProd + dyValue * uniforms.avgMultiplier;
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
    `}}class Jbe{constructor(e){this.variableNames=["dy"],this.uniforms=`strides : vec3<i32>, pads : vec3<i32>, filterDims : vec3<i32>,
       outDepth : i32, outHeight : i32, outWidth : i32, avgMultiplier : f32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=Ct(this.outputShape),this.dispatch=pt(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="avgPool3DBackprop"}getUserCode(){return`
      ${ft("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords.x;
        let ch = coords.u;

        let dyCorner = vec3<i32>(coords.y, coords.z, coords.w) - uniforms.pads;
        let dyDCorner = dyCorner.x;
        let dyRCorner = dyCorner.y;
        let dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        for (var wD = 0; wD < uniforms.filterDims[0]; wD++) {
          let dyD = f32(dyDCorner + wD) / f32(uniforms.strides[0]);

          if (dyD < 0.0 || dyD >= f32(uniforms.outDepth) || fract(dyD) > 0.0) {
            continue;
          }
          let idyD = i32(dyD);

          for (var wR = 0; wR < uniforms.filterDims[1]; wR++) {
            let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[1]);

            if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {
              continue;
            }
            let idyR = i32(dyR);

            for (var wC = 0; wC < uniforms.filterDims[2]; wC++) {
              let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[2]);

              if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {
                continue;
              }
              let idyC = i32(dyC);

              let dyValue = getDy(batch, idyD, idyR, idyC, ch);
              dotProd += dyValue * uniforms.avgMultiplier;
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
    `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zbe(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:i}=e,o=i,{filterSize:a,strides:l,pad:c,dimRoundingMode:u}=s,h=fo(o.shape,a,l,1,c,u),d=new Jbe(h),f=1/(h.filterDepth*h.filterHeight*h.filterWidth),p=[{type:"int32",data:[h.strideDepth,h.strideHeight,h.strideWidth]},{type:"int32",data:[h.effectiveFilterDepth-1-h.padInfo.front,h.effectiveFilterHeight-1-h.padInfo.top,h.effectiveFilterWidth-1-h.padInfo.left]},{type:"int32",data:[h.effectiveFilterDepth,h.effectiveFilterHeight,h.effectiveFilterWidth]},{type:"int32",data:[h.outDepth]},{type:"int32",data:[h.outHeight]},{type:"int32",data:[h.outWidth]},{type:"float32",data:[f]}];return t.runWebGPUProgram(d,[r],o.dtype,p)}const eve={kernelName:ug,backendName:"webgpu",kernelFunc:Zbe};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tve(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:i}=e,o=i;EP([r,i],"avgPoolGrad");const{filterSize:a,strides:l,pad:c}=s,u=Pr(o.shape,a,l,1,c),h=new Kbe(u),d=1/(u.filterHeight*u.filterWidth),f=[{type:"int32",data:[u.strideHeight,u.strideWidth]},{type:"int32",data:[u.effectiveFilterHeight-1-u.padInfo.top,u.effectiveFilterWidth-1-u.padInfo.left]},{type:"int32",data:[u.dilationHeight,u.dilationWidth]},{type:"int32",data:[u.effectiveFilterHeight,u.effectiveFilterWidth]},{type:"int32",data:[u.outHeight]},{type:"int32",data:[u.outWidth]},{type:"float32",data:[d]}];return t.runWebGPUProgram(h,[r],o.dtype,f)}const nve={kernelName:cg,backendName:"webgpu",kernelFunc:tve};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sve(n){const{inputs:e,backend:t,attrs:s}=n,{a:r,b:i}=e,{transposeA:o,transposeB:a}=s;return X1({a:r,b:i,transposeA:o,transposeB:a,backend:t})}const rve={kernelName:bf,backendName:"webgpu",kernelFunc:sve};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ive{constructor(e,t){this.variableNames=["source"],this.workPerThread=1,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.rank=t.length,this.dispatchLayout=Ct(this.outputShape),this.dispatch=pt(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.start=e,this.uniforms=`start : ${Fs(e.length)}, `,this.shaderKey="slice"}getUserCode(){const e=Fs(this.rank),t=ove(this.rank);let s;return this.start.length===1?s=this.outputShape.map((i,o)=>"sourceLoc = uniforms.start + coords;"):s=this.outputShape.map((i,o)=>`sourceLoc.${RC[o]} = uniforms.start.${dl(o)} + coords.${RC[o]};`),`
      ${ft("index")} {
        if (index < uniforms.size) {
          var sourceLoc : ${e};
          let coords = getCoordsFromIndex(index);
          ${s.join(`
`)}
          setOutputAtIndex(index, getSource(${t}));
        }
      }
    `}}const RC=["x","y","z","w","u","v"];function ove(n){if(n===1)return"sourceLoc";if(n<=6)return RC.slice(0,n).map(e=>`sourceLoc.${e}`).join(",");throw Error(`Slicing for rank ${n} is not yet supported`)}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mp(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{begin:i,size:o}=s,[a,l]=kA(r,i,o);if(u1(r,a,l),t.shouldExecuteOnCPU([r])||r.dtype==="string"){const h=t.tensorMap.get(r.dataId),d=sbe(h.values,a,l,r.shape,r.dtype);return t.makeTensorInfo(l,r.dtype,d)}if(ye(l)===0)return t.makeTensorInfo(l,r.dtype,[]);const c=new ive(a,l),u=[{type:"int32",data:a}];return t.runWebGPUProgram(c,[r],r.dtype,u)}const ave={kernelName:ap,backendName:"webgpu",kernelFunc:Mp};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lve=n=>{const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{blockShape:i,crops:o}=s;z(r.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGPU backend not implemented yet");const a=i.reduce((x,v)=>x*v),l=$h(r.shape,i,a),c=Ph(l.length,i.length),u=Lh(r.shape,i,a),h=g1(o,i.length),d=A1(u,o,i.length),f=[],p=$t({inputs:{x:r},backend:t,attrs:{shape:l}}),A=Fa({inputs:{x:p},backend:t,attrs:{perm:c}}),m=$t({inputs:{x:A},backend:t,attrs:{shape:u}}),g=Mp({inputs:{x:m},backend:t,attrs:{begin:h,size:d}});return f.push(p),f.push(A),f.push(m),f.forEach(x=>t.disposeData(x.dataId)),g},cve={kernelName:vf,backendName:"webgpu",kernelFunc:lve};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uve=`
  fn bincount_write(index: i32, value: f32) {
    ${Sc("&result[index]","value","float32")}
  }
`,hve=`
  fn bincount_write(index: i32, value: f32) {
    atomicStore(&result[index], bitcast<i32>(value));
  }
`;class MP{constructor(e,t,s=!1){this.outputShape=[],this.variableNames=["x"],this.uniforms="binCountSize : i32,",this.workgroupSize=[64,1,1],this.atomic=!0,this.hasWeights=!0,this.binaryOutput=!1,this.outputShape=e,this.rank=e.length,this.dispatchLayout=Ct(this.outputShape),this.dispatch=pt(this.dispatchLayout,this.outputShape,this.workgroupSize),this.binaryOutput=s,s&&(this.atomic=!1),this.hasWeights=t,this.hasWeights&&this.variableNames.push("w"),this.shaderKey=`bincount_${this.hasWeights}_${this.binaryOutput}_${this.rank}`}getUserCode(){return`
    ${this.binaryOutput?hve:uve}
  ${ft("index")} {
    ${this.rank===1?`if (index < uniforms.xShape) {
      let indexVal = i32(getX(index));
      if (indexVal < uniforms.binCountSize) {
        let value = ${this.binaryOutput?1:this.hasWeights?"getW(index)":"1."};
        bincount_write(indexVal, value);
      }
    }`:`let coord = getCoordsFromIndex(index);
    if (coordsInBounds2D(coord, uniforms.xShape)) {
      let indexVal = i32(getX(coord[0], coord[1]));
      if (indexVal < uniforms.binCountSize) {
        let value = ${this.binaryOutput?1:this.hasWeights?"getW(coord[0], coord[1])":"1."};
        bincount_write(coord.x * uniforms.binCountSize + indexVal, value);
      }
    }`}
  }
  `}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dve(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,weights:i}=e,{size:o}=s,a=ye(r.shape),c=ye(i.shape)>0,u=[o],h=i.dtype,d=bi({backend:t,attrs:{shape:u,value:0,dtype:h}}),f=new MP([a],c),p=[{type:"int32",data:[o]}],A=c?[r,i]:[r];return t.runWebGPUProgram(f,A,h,p,d)}const fve={kernelName:hg,backendName:"webgpu",kernelFunc:dve};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class pve{constructor(e){this.outputShape=[],this.variableNames=["s0","s1"],this.uniforms="s0Size : i32, s1Size : i32, ",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e],this.dispatchLayout=Ct(this.outputShape),this.dispatch=pt(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="broadcastArgs"}getUserCode(){return`
  ${ft("index")} {
    if (index < uniforms.size) {
      var s0 = 1.0;
      var s1 = 1.0;
      let indexS0 = index - uniforms.size + uniforms.s0Size;
      let indexS1 = index - uniforms.size + uniforms.s1Size;
      if (indexS0 >= 0) {
        s0 = getS0(indexS0);
      }
      if (indexS1 >= 0) {
        s1 = getS1(indexS1);
      }

      if (s0 == 1.0) {
        setOutputAtIndex(index, s1);
      } else if (s1 == 1.0) {
        setOutputAtIndex(index, s0);
      } else if (s0 != s1) {
        setOutputAtIndex(index, uniforms.NAN);
      } else {
        setOutputAtIndex(index, s0);
      }
    }
  }
  `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mve(n){const{inputs:e,backend:t}=n,{s0:s,s1:r}=e;if(t.shouldExecuteOnCPU([s,r])){const u=t.tensorMap.get(s.dataId),h=t.tensorMap.get(r.dataId),d=u.values,f=h.values,p=jt(Array.from(d),Array.from(f));return t.makeTensorInfo([p.length],"int32",Int32Array.from(p))}const i=ye(s.shape),o=ye(r.shape),a=Math.max(i,o),l=new pve(a),c=[{type:"int32",data:[i]},{type:"int32",data:[o]}];return t.runWebGPUProgram(l,[s,r],"int32",c)}const gve={kernelName:fg,backendName:"webgpu",kernelFunc:mve};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DP=vr({opType:tn.NOT_EQUAL,dtype:"bool",cpuKernelImpl:K2e}),Ave={kernelName:jf,backendName:"webgpu",kernelFunc:DP};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qA(n){const{inputs:e,backend:t}=n,{input:s}=e,r=t.tensorMap.get(s.dataId);return qi({inputs:{x:r.complexTensorInfos.real},backend:t})}const yve={kernelName:Gg,backendName:"webgpu",kernelFunc:qA};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xve(n,e){const t=new Rp(n.shape,it.TO_INT),s=e.runWebGPUProgram(t,[n],"int32");return{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MC(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{dtype:i}=s;if(i==="complex64"){if(r.dtype==="complex64")return qi({inputs:{x:r},backend:t});const o=Rs(r.shape),a=MC({inputs:{x:r},backend:t,attrs:{dtype:"float32"}}),l=Hh({inputs:{real:a,imag:o},backend:t});return o.dispose(),t.disposeData(a.dataId),l}if(r.dtype==="complex64"){const o=qA({inputs:{input:r},backend:t}),a=MC({inputs:{x:o},backend:t,attrs:{dtype:i}});return t.disposeData(o.dataId),a}if(!Ax(r.dtype,i)){const o=qi({inputs:{x:r},backend:t});return{dataId:o.dataId,shape:o.shape,dtype:i}}if(t.shouldExecuteOnCPU([r])){const o=t.tensorMap.get(r.dataId).values,[a,l,c]=N2e(o,r.shape,r.dtype,i);return t.makeTensorInfo(a,l,c)}if(i==="int32")return xve(r,t);if(i==="bool"){const o=t.makeTensorInfo([],"bool",Ws("bool",1)),l=DP({inputs:{a:r,b:o},backend:t});return t.disposeData(o.dataId),l}throw new Error(`Error in Cast: failed to cast ${r.dtype} to ${i}`)}const bve={kernelName:Gu,backendName:"webgpu",kernelFunc:MC};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vve=Pn({opType:it.CEIL,cpuKernelImpl:R2e}),Cve={kernelName:Vu,backendName:"webgpu",kernelFunc:vve};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ive{constructor(e){this.variableNames=["A"],this.uniforms="minVal : f32, maxVal : f32,",this.workPerThread=4,this.workgroupSize=[64,1,1],this.outputComponent=4,this.size=!0,this.outputShape=e,this.dispatchLayout=Ct(this.outputShape),this.dispatch=pt(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.shaderKey="clipVec4"}getUserCode(){return`
      ${ft("index")} {
        if(index < uniforms.size) {
          let value = getAByOutputIndex(index);
          var clampedValue = clamp(
              value, vec4<f32>(uniforms.minVal), vec4<f32>(uniforms.maxVal));
          clampedValue = select(clampedValue, value, isnanVec4(value));
          setOutputAtIndex(index, clampedValue);
        }
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class wve{constructor(e){this.variableNames=["A"],this.uniforms="minVal : f32, maxVal : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Ct(this.outputShape),this.dispatch=pt(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="clip"}getUserCode(){return`
      ${ft("index")} {
        if(index < uniforms.size) {
          let value = getAByOutputIndex(index);
          if (isnan(value)) {
            setOutputAtIndex(index, value);
            return;
          }
          setOutputAtIndex(index, clamp(value, uniforms.minVal, uniforms.maxVal));
        }
      }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sve(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{clipValueMin:i,clipValueMax:o}=s;let a;const l=[{type:"float32",data:[i]},{type:"float32",data:[o]}];return ye(r.shape)%4===0?a=new Ive(r.shape):a=new wve(r.shape),t.runWebGPUProgram(a,[r],r.dtype,l)}const Eve={kernelName:Wu,backendName:"webgpu",kernelFunc:Sve};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class _ve{constructor(e){this.outputShape=[],this.variableNames=["real","imag"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Ct(this.outputShape),this.dispatch=pt(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="complexAbs"}getUserCode(){return`
    ${ft("index")} {
      if (index < uniforms.size) {
        let re = abs(getRealByOutputIndex(index));
        let im = abs(getImagByOutputIndex(index));
        let mx = max(re, im);

        // The length function in wgsl may be not underflow-safe on some GPUs.
        // So the safe solution is to ensure underflow-safety in all cases.
        setOutputAtIndex(index, select(mx * length(vec2<f32>(1, min(re, im)/mx)), 0.0, mx == 0.0));
      }
    }
  `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function q3(n,e){return{dataId:e.dataId,dtype:e.dtype,shape:n.shape}}function Tve(n){const{inputs:e,backend:t}=n,{x:s}=e,r=t.tensorMap.get(s.dataId),i=new _ve(s.shape),o=[q3(s,r.complexTensorInfos.real),q3(s,r.complexTensorInfos.imag)];return t.runWebGPUProgram(i,o,o[0].dtype)}const Bve={kernelName:Cf,backendName:"webgpu",kernelFunc:Tve};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class kve{constructor(e){this.uniforms="",this.workPerThread=1,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=xi(e,1),this.variableNames=e.map((t,s)=>`T${s}`),this.dispatchLayout=Ct(this.outputShape),this.dispatch=pt(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]),this.offsetLength=e.length-1;for(let t=0;t<this.offsetLength;t++)this.uniforms+=`offset${t} : i32,`;this.shaderKey="concat"}getUserCode(){const e=[];if(this.offsetLength>0){e.push("if (yC < uniforms.offset0){ setOutputAtCoords(coords.x, coords.y, getT0(yR, yC)); }");for(let i=1;i<this.offsetLength;i++)e.push(`else if (yC < uniforms.offset${[i]}){ setOutputAtCoords(coords.x, coords.y, getT${i}(yR, yC - uniforms.offset${i-1})); }`);const s=this.offsetLength,r=this.offsetLength-1;e.push(`else { setOutputAtCoords(coords.x, coords.y, getT${s}(yR, yC - uniforms.offset${r})); }`)}else e.push("setOutputAtCoords(coords.x, coords.y, getT0(yR, yC));");return`
      ${ft("index")} {
        for(var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let flatIndex = index * ${this.workPerThread} + i;
          if(flatIndex < uniforms.size) {
            let coords = getCoordsFromIndex(flatIndex);
            let yR = coords.x;
            let yC = coords.y;

            ${e.join(`
        `)}
          }
        }
      }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function K1(n){const{inputs:e,backend:t}=n,{input:s}=e,r=t.tensorMap.get(s.dataId);return qi({inputs:{x:r.complexTensorInfos.imag},backend:t})}const Nve={kernelName:Mg,backendName:"webgpu",kernelFunc:K1};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cm(n,e,t){const s=n[0].dtype;if(s==="complex64"){const p=n.map(v=>qA({inputs:{input:v},backend:t})),A=n.map(v=>K1({inputs:{input:v},backend:t})),m=cm(p,e,t),g=cm(A,e,t),x=Hh({inputs:{real:m,imag:g},backend:t});return p.forEach(v=>t.disposeData(v.dataId)),A.forEach(v=>t.disposeData(v.dataId)),t.disposeData(m.dataId),t.disposeData(g.dataId),x}let r=t.shouldExecuteOnCPU(n);if(s==="string"&&(r=!0),r){const p=n.map(w=>{const N=[-1,ye(w.shape.slice(e))];return $t({inputs:{x:w},backend:t,attrs:{shape:N}})}),A=p.map(w=>({vals:t.readSync(w.dataId),shape:w.shape})),m=xi(p.map(w=>w.shape),1),g=p[0].shape[0]===1,x=M2e(A,m,s,g),v=xi(n.map(w=>w.shape),e),b=t.makeTensorInfo(v,s,x);return p.forEach(w=>t.disposeData(w.dataId)),b}const i=t.device.limits.maxStorageBuffersPerShaderStage-1;if(n.length>i){const p=[];for(let m=0;m<n.length;m+=i){const g=n.slice(m,m+i);p.push(cm(g,e,t))}const A=cm(p,e,t);for(const m of p)t.disposeData(m.dataId);return A}const{tensors2D:o,outShape:a}=Rve(n,e,t),l=o.map(p=>p.shape),c=new kve(l),u=[],h=new Array(l.length-1);if(h.length>0){h[0]=l[0][1],u.push({type:"int32",data:[h[0]]});for(let p=1;p<h.length;p++)h[p]=h[p-1]+l[p][1],u.push({type:"int32",data:[h[p]]})}const d=t.runWebGPUProgram(c,o,o[0].dtype,u);o.forEach(p=>t.disposeData(p.dataId));const f=$t({inputs:{x:d},backend:t,attrs:{shape:a}});return t.disposeData(d.dataId),f}function Rve(n,e,t){const s=xi(n.map(i=>i.shape),e);return{tensors2D:n.map(i=>$t({inputs:{x:i},backend:t,attrs:{shape:[ye(i.shape.slice(0,e)),ye(i.shape.slice(e))]}})),outShape:s}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FP(n){const{inputs:e,backend:t,attrs:s}=n,{axis:r}=s,i=an(r,e[0].shape)[0],o=e.map(c=>c.shape);f1(o,i);const a=xi(e.map(c=>c.shape),i);if(ye(a)===0)return t.makeTensorInfo(a,e[0].dtype,[]);const l=e.filter(c=>ye(c.shape)>0);return l.length===1?qi({inputs:{x:l[0]},backend:t}):cm(l,i,t)}const Mve={kernelName:If,backendName:"webgpu",kernelFunc:FP};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dve(n,e,t,s,r=!1,i=null,o=!1,a=4,l=4,c=4){const u=T=>{switch(T){case 1:return"resData = f32(x[xIndex]);";case 3:return"resData = vec3<f32>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);";case 4:return"resData = vec4<f32>(x[xIndex / 4]);";default:throw new Error(`innerElementSize ${T} is not supported.`)}},h=T=>{switch(T){case 1:return"return f32(W[row * uniforms.wShape[3] + col]);";case 4:return"return vec4<f32>(W[(row * uniforms.wShape[3] + col) / 4]);";default:throw new Error(`innerElementSize ${T} is not supported.`)}},d=n?`
      let coord = vec4<i32>(batch, xRow, xCol, xCh);
      `:`
      let coord = vec4<i32>(batch, xCh, xRow, xCol);
      `,f=n?`
      let coords = vec4<i32>(
        batch,
        row / outWidth,
        row % outWidth,
        col);
      `:`
      let coords = vec4<i32>(
        batch,
        row,
        col / outWidth,
        col % outWidth);
      `,p=n?"uniforms.xShape[1]":"uniforms.xShape[2]",A=n?"uniforms.xShape[2]":"uniforms.xShape[3]",m=n?"row":"col",g=n?"col":"row",x=`
      let inChannels = uniforms.wShape[2];
      let outWidth = ${n?"uniforms.outShape[2]":"uniforms.outShape[3]"};
      let outRow = ${m} / outWidth;
      let outCol = ${m} % outWidth;

      let WRow = ${g} / (uniforms.filterDims[1] * inChannels);
      let WCol = ${g} / inChannels % uniforms.filterDims[1];
      let xRow = outRow * uniforms.strides[0] + uniforms.dilations[0] * WRow - uniforms.pads[0];
      let xCol = outCol * uniforms.strides[1] + uniforms.dilations[1] * WCol - uniforms.pads[1];
      let xCh = ${g} % inChannels;
      var resData = ${yn(a)}(0.0);
      // The bounds checking is always needed since we use it to pad zero for
      // the 'same' padding type.
      if (xRow >= 0 && xRow < ${p} && xCol >= 0 && xCol < ${A}) {
        ${d}
        let xIndex = getIndexFromCoords4D(coord, uniforms.xShape);
        ${u(a)}
      }
      return resData;`,v=n?e&&s?`
      ${x}`:`
      if (row < uniforms.dimAOuter && col < uniforms.dimInner) {
        ${x}
      }
      return ${yn(a)}(0.0);`:s&&t?`
      ${x}`:`
      if (row < uniforms.dimInner && col < uniforms.dimBOuter) {
        ${x}
      }
      return ${yn(a)}(0.0);`,b=`${h(l)}`,w=yn(c),_=yn(n?a:l),N=yn(n?l:a);return`
      ${Nl(i,o,c===4,4)}
      fn mm_readA(batch: i32, row : i32, col : i32) -> ${_} {
        ${n?v:b}
      }

      fn mm_readB(batch: i32, row : i32, col : i32) -> ${N} {
        ${n?b:v}
      }

      fn mm_write(batch: i32, row : i32, col : i32, valueIn : ${w}) {
        if (row < uniforms.dimAOuter && col < uniforms.dimBOuter)
        {
        var value = valueIn;
        let outWidth = ${n?"uniforms.outShape[2]":"uniforms.outShape[3]"};
        ${f}
        ${Wh(r,i)}
        setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
        }
      }`}class Fve{constructor(e,t,s,r,i=!1,o=null,a=!1,l=!1){this.variableNames=["x","W"],this.uniforms="filterDims : vec2<i32>, pads : vec2<i32>, strides : vec2<i32>, dilations : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.outputShape=e.outShape,this.isChannelsLast=e.dataFormat==="channelsLast",this.isVec4=((e.inChannels%4===0||e.inChannels%3===0)&&this.isChannelsLast||e.outWidth%4===0&&!this.isChannelsLast)&&e.outChannels%4===0,this.dispatchLayout=this.isChannelsLast?{x:[3],y:[1,2],z:[0]}:{x:[2,3],y:[1],z:[0]},this.workgroupSize=IP(this.dispatchLayout,this.outputShape,this.isVec4),this.elementsPerThread=wP(this.dispatchLayout,this.outputShape,this.isVec4),this.dispatch=pt(this.dispatchLayout,this.outputShape,this.workgroupSize,this.elementsPerThread),this.isVec4?(this.outputComponent=4,this.isChannelsLast&&e.inChannels%4!==0?(this.innerElementSize=3,this.variableComponents=[1,4]):(this.innerElementSize=4,this.variableComponents=[4,4]),i&&(this.variableNames.push("bias"),this.variableComponents.push(4)),a&&(this.variableNames.push("preluActivationWeights"),this.variableComponents.push(4))):(this.innerElementSize=this.elementsPerThread[0],i&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights")),this.sequentialAccessByThreads=l,this.addBias=i,this.activation=o,this.hasPreluActivationWeights=a,this.tileAOuter=this.workgroupSize[1]*this.elementsPerThread[1],this.tileBOuter=this.workgroupSize[0]*this.elementsPerThread[0],this.tileInner=Math.max(this.workgroupSize[0]*this.innerElementSize,this.workgroupSize[1]),this.fitAOuter=t%this.tileAOuter===0,this.fitBOuter=s%this.tileBOuter===0,this.fitInner=r%this.tileInner===0,this.shaderKey=`conv2DMM_${this.elementsPerThread}_${this.activation}}_${this.fitAOuter}_${this.fitBOuter}_${this.fitInner}_${this.isVec4}_${this.innerElementSize}_${this.isChannelsLast}_${this.sequentialAccessByThreads}`}getUserCode(){const e=this.isVec4?Y1(this.elementsPerThread,this.workgroupSize,!this.isChannelsLast,this.tileInner):j1(this.elementsPerThread,this.workgroupSize,!this.isChannelsLast,this.tileInner,!1,null,this.sequentialAccessByThreads),t=this.isVec4?[this.innerElementSize,4,4]:[1,1,1];return`
    ${Dve(this.isChannelsLast,this.fitAOuter,this.fitBOuter,this.fitInner,this.addBias,this.activation,this.hasPreluActivationWeights,t[0],t[1],t[2])}
    ${e}
  `}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class $ve{constructor(e,t=!1,s=null,r=!1){this.variableNames=["x","W"],this.uniforms="filterDims: vec2<i32>, pads: vec2<i32>, strides: vec2<i32>, dilations: vec2<i32>,",this.workgroupSize=[4,4,8],this.outputShape=e.outShape,this.isChannelsLast=e.dataFormat==="channelsLast",this.dispatchLayout=this.isChannelsLast?{x:[2],y:[1],z:[0,3]}:{x:[3],y:[2],z:[0,1]},this.dispatch=pt(this.dispatchLayout,this.outputShape,this.workgroupSize),this.addBias=t,this.activation=s,this.hasPreluActivationWeights=r,t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),this.shaderKey=`conv2dnaive_${this.activation}_${this.isChannelsLast}`}getUserCode(){return`
       ${Nl(this.activation,this.hasPreluActivationWeights,!1,4)}
       fn readInp(batch : i32, row : i32, col : i32, chan : i32) -> f32{
         let coords = vec4<i32>(batch, row, col, chan);
         if (coordsInBounds4D(coords, uniforms.xShape)) {
           return  getX(batch, row, col, chan);
         } else {
          return 0.0;
         }
       }
       fn readFilt(row : i32, col : i32, xChannel : i32, outChannel : i32) -> f32{
         let coords = vec4<i32>(row, col, xChannel, outChannel);
         if(coordsInBounds4D(coords, uniforms.wShape)) {
           return getW(row, col, xChannel, outChannel);
          } else {
            return 0.0;
          }
       }
       fn writeResult(batch : i32, row : i32, col : i32, chan : i32, valueIn : f32) {
         let coords = ${this.isChannelsLast?"vec4<i32>(batch, row, col, chan);":"vec4<i32>(batch, chan, row, col);"}
         if (coordsInBounds4D(coords, uniforms.outShape)) {
           var value = valueIn;
           ${Wh(this.addBias,this.activation)}
           setOutputAtCoords(coords.x, coords.y, coords.z, coords.w, value);
         }
       }
       ${ft("index")} {
         let coords = getOutputCoords();
         let batch = coords[0];
         let outChannel = ${this.isChannelsLast?"coords[3];":"coords[1];"}
         let outRow = ${this.isChannelsLast?"coords[1];":"coords[2];"}
         let outCol = ${this.isChannelsLast?"coords[2];":"coords[3];"}
         var acc : f32 = 0.0;
         for (var row = 0; row < uniforms.filterDims[0]; row = row + 1) {
           for (var col = 0; col < uniforms.filterDims[1]; col = col + 1) {
             let xRow = outRow * uniforms.strides[0] + uniforms.dilations[0] * row - uniforms.pads[0];
             let xCol = outCol * uniforms.strides[1] + uniforms.dilations[1] * col - uniforms.pads[1];
             for (var xChannel = 0; xChannel < ${this.isChannelsLast?"uniforms.xShape[3];":"uniforms.xShape[1];"} xChannel = xChannel + 1) {
               ${this.isChannelsLast?"let v = readInp(batch, xRow, xCol, xChannel);":"let v = readInp(batch, xChannel, xRow, xCol);"}
               let f = readFilt(row, col, xChannel, outChannel);
               acc = acc + v * f;
             }
           }
         }
         writeResult(batch, outRow, outCol, outChannel, acc);
       }
     `}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Pve{constructor(e,t){this.variableNames=["x"],this.uniforms=`pads : vec2<i32>, strides : vec2<i32>, dilations : vec2<i32>, outWidth : i32, itemsPerBlockRow : i32,
       inChannels : i32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Ct(this.outputShape),this.dispatch=pt(this.dispatchLayout,this.outputShape,this.workgroupSize),this.isChannelsLast=t,this.shaderKey=`im2col_${this.isChannelsLast}`}getUserCode(){const e=this.isChannelsLast?1:2,t=this.isChannelsLast?2:3,s=this.isChannelsLast?"coords[1]":"coords[2]",r=this.isChannelsLast?"coords[2]":"coords[1]",i=this.isChannelsLast?"getX(batch, xRow, xCol, ch)":"getX(batch, ch, xRow, xCol)";return`
    ${ft("index")} {
      let coords = getCoordsFromIndex(index);
      if(index < uniforms.size) {
        let batch = coords[0];
        let row = ${s};
        let col = ${r};
        let offsetY = (row / uniforms.outWidth) * uniforms.strides[0] - uniforms.pads[0];
        let xRow = offsetY + uniforms.dilations[0] * (col / uniforms.itemsPerBlockRow);
        var value = 0.0;
        if(xRow < uniforms.xShape[${e}] && xRow >= 0) {
          let offsetX = (row % uniforms.outWidth) * uniforms.strides[1] -
              uniforms.pads[1];
          let xCol = offsetX + uniforms.dilations[1] * ((col %
              uniforms.itemsPerBlockRow) / uniforms.inChannels);
          let ch = col % uniforms.inChannels;
          if(xCol < uniforms.xShape[${t}] && xCol >= 0) {
            value = ${i};
          }
        }
        setOutputAtIndex(index, value);
      }
    }
   `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Y0(n,e){const t=n.length;return t>=3?e?[...n.slice(0,-3),n[t-3]*n[t-2],n[t-1]]:[...n.slice(0,-3),n[t-3],n[t-2]*n[t-1]]:!e&&t===1&&n[0]>1?[n[0],1]:null}function Lve({x:n,filter:e,convInfo:t,backend:s,bias:r=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:a=null}){const l=t.dataFormat==="channelsLast",c=!l,u=!1,h=l&&t.filterHeight===t.inHeight&&t.filterWidth===t.inWidth&&t.padInfo.type==="VALID",d=[];let f,p;if(h){const g=t.inHeight*t.inWidth*t.inChannels;f=$t({inputs:{x:n},backend:s,attrs:{shape:[1,t.batchSize,g]}}),p=$t({inputs:{x:e},backend:s,attrs:{shape:[1,g,t.outChannels]}})}else f=$t({inputs:{x:n},backend:s,attrs:{shape:l?[t.batchSize,t.inHeight*t.inWidth,t.inChannels]:[t.batchSize,t.inChannels,t.inHeight*t.inWidth]}}),p=$t({inputs:{x:e},backend:s,attrs:{shape:[1,t.inChannels,t.outChannels]}});if(d.push(f),d.push(p),i!=null){const g=Y0(i.shape,l);g!=null&&(i=$t({inputs:{x:i},backend:s,attrs:{shape:g}}),d.push(i))}if(r!=null){const g=Y0(r.shape,l);g!=null&&(r=$t({inputs:{x:r},backend:s,attrs:{shape:g}}),d.push(r))}const A=X1({a:l?f:p,b:l?p:f,transposeA:c,transposeB:u,backend:s,bias:r,activation:a,preluActivationWeights:i,leakyreluAlpha:o}),m=$t({inputs:{x:A},backend:s,attrs:{shape:t.outShape}});d.push(A);for(const g of d)s.disposeData(g.dataId);return m}function Ove({x:n,filter:e,convInfo:t,backend:s,bias:r=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:a=null}){const{filterWidth:l,filterHeight:c,inChannels:u,strideWidth:h,strideHeight:d,padInfo:f,outWidth:p,outHeight:A,dilationWidth:m,dilationHeight:g,dataFormat:x}=t,v=x==="channelsLast",b=l*c*u,w=A*p,_=v?[t.batchSize,w,b]:[t.batchSize,b,w],N=new Pve(_,v),M=[{type:"int32",data:[f.top,f.left]},{type:"int32",data:[d,h]},{type:"int32",data:[g,m]},{type:"int32",data:[p]},{type:"int32",data:[u*l]},{type:"int32",data:[u]}],T=s.runWebGPUProgram(N,[n],n.dtype,M),k=[];k.push(T);const B=$t({inputs:{x:e},backend:s,attrs:{shape:[1,b,-1]}});if(k.push(B),i!=null){const H=Y0(i.shape,v);H!=null&&(i=$t({inputs:{x:i},backend:s,attrs:{shape:H}}),k.push(i))}if(r!=null){const H=Y0(r.shape,v);H!=null&&(r=$t({inputs:{x:r},backend:s,attrs:{shape:H}}),k.push(r))}const V=X1({a:v?T:B,b:v?B:T,transposeA:!v,transposeB:!1,backend:s,bias:r,activation:a,preluActivationWeights:i,leakyreluAlpha:o}),W=$t({inputs:{x:V},backend:s,attrs:{shape:t.outShape}});k.push(V);for(const H of k)s.disposeData(H.dataId);return W}function $P({x:n,filter:e,convInfo:t,backend:s,bias:r=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:a=null}){const l=r!=null,c=i!=null,u=t.dataFormat==="channelsLast",h=u&&t.filterHeight===t.inHeight&&t.filterWidth===t.inWidth&&t.padInfo.type==="VALID",d=xe().getBool("WEBGPU_USE_NAIVE_CONV2D_DEBUG");if(!d&&(h||t.filterHeight===1&&t.filterWidth===1&&t.dilationHeight===1&&t.dilationWidth===1&&t.strideHeight===1&&t.strideWidth===1&&(t.padInfo.type==="SAME"||t.padInfo.type==="VALID")))return Lve({x:n,filter:e,convInfo:t,backend:s,bias:r,activation:a,preluActivationWeights:i,leakyreluAlpha:o});const f=xe().getNumber("WEBGPU_THRESHOLD_TO_INCREASE_WORKGROUPS_FOR_MATMUL"),p=f>-1?f:s.thresholdToIncreaseWorkgroups,A=t.batchSize*Math.ceil(t.outHeight*t.outWidth/32)*Math.ceil(t.outChannels/32);if(xe().getBool("WEBGPU_CONV_SEPARATE_IM2COL_SHADER")||A<=p)return Ove({x:n,filter:e,convInfo:t,backend:s,bias:r,preluActivationWeights:i,leakyreluAlpha:o,activation:a});let m;const g=[t.padInfo.top,t.padInfo.left],x=[{type:"int32",data:[t.filterHeight,t.filterWidth]},{type:"int32",data:[...g]},{type:"int32",data:[t.strideHeight,t.strideWidth]},{type:"int32",data:[t.dilationHeight,t.dilationWidth]}];if(d)m=new $ve(t,l,a,c);else{const _=u?t.outHeight*t.outWidth:t.outChannels,N=u?t.outChannels:t.outHeight*t.outWidth,M=t.filterHeight*t.filterWidth*t.inChannels;x.push({type:"int32",data:[_]},{type:"int32",data:[N]},{type:"int32",data:[M]});const T=s.adapterInfo.isIntel();m=new Fve(t,_,N,M,l,a,c,T)}const v=[],b=[n,e];l&&(!u&&r.shape.length===1&&(r=$t({inputs:{x:r},backend:s,attrs:{shape:[r.shape[0],1,1]}}),v.push(r)),b.push(r)),c&&(!u&&i.shape.length===1&&(i=$t({inputs:{x:i},backend:s,attrs:{shape:[i.shape[0],1,1]}}),v.push(i)),b.push(i)),a==="leakyrelu"&&(x.push({type:"float32",data:[o]}),m.uniforms+=" alpha : f32,");const w=s.runWebGPUProgram(m,b,n.dtype,x);for(const _ of v)s.disposeData(_.dataId);return w}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qve(n){const{inputs:e,attrs:t,backend:s}=n,{x:r,filter:i}=e,{strides:o,pad:a,dataFormat:l,dilations:c,dimRoundingMode:u}=t,h=Xi(l),d=As(r.shape,i.shape,o,c,a,u,!1,h);return $P({x:r,filter:i,convInfo:d,backend:s})}const Uve={kernelName:wf,backendName:"webgpu",kernelFunc:Qve};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class zve{constructor(e){this.variableNames=["dy","W"],this.uniforms="filterDims : vec2<i32>, pads : vec2<i32>, strides : vec2<i32>, outBackprop : vec4<i32>,",this.workgroupSize=[64,1,1],this.size=!1,this.isVec4=!1,this.workPerThread=1,this.outputShape=e.inShape,this.isChannelsLast=e.dataFormat==="channelsLast",this.isVec4=this.isChannelsLast&&e.outChannels%4===0&&e.inChannels%4===0,this.isVec4?(this.workPerThread=2,this.outputComponent=4,this.workgroupSize=[4,4,4],this.dispatchLayout={x:[3],y:[2],z:[0,1]},this.dispatch=pt(this.dispatchLayout,this.outputShape,this.workgroupSize,[4,this.workPerThread,1])):(this.size=!0,this.workPerThread=1,this.workgroupSize=[64,1,1],this.dispatchLayout=Ct(this.outputShape),this.dispatch=pt(this.dispatchLayout,this.outputShape,this.workgroupSize)),this.shaderKey=`conv2DDerInput_${this.isChannelsLast}_${this.isVec4}_${this.workPerThread}`}getUserCode(){const e=this.isChannelsLast?1:2,t=this.isChannelsLast?2:3,s=this.isChannelsLast?3:1,r=`
    ${ft()} {
      let batch = i32(globalId.z) / uniforms.outShape[1];
      let r = i32(globalId.z) % uniforms.outShape[1];
      let c = i32(globalId.y) * ${this.workPerThread};
      let d1 = i32(globalId.x) * 4;

      let dyCorner = vec2<i32>(r, c) - uniforms.pads;

      // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
      // ? = to be determined. : = across all values in that axis.
      var dotProd: array<vec4<f32>, ${this.workPerThread}>;
      for (var i = 0; i < ${this.workPerThread}; i++) {
        dotProd[i] = vec4<f32>(0.0);
      }
      for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + 1) {
        let dyR = f32(dyCorner.x + wR) / f32(uniforms.strides.x);
        let wRPerm = uniforms.filterDims.x - 1 - wR;
        if (dyR < 0.0 || dyR >= f32(uniforms.outBackprop[1]) ||
            fract(dyR) > 0.0) {
          continue;
        }
        let idyR = i32(dyR);

        for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + 1) {
          let dyC = f32(dyCorner.y + wC) / f32(uniforms.strides.y);
          let dyC2 = f32(dyCorner.y + 1 + wC) / f32(uniforms.strides.y);
          let wCPerm = uniforms.filterDims.y - 1 - wC;
          var bDyCVal = true;
          var bDyCVal2 = true;
          if (dyC < 0.0 || dyC >= f32(uniforms.outBackprop[2]) ||
              fract(dyC) > 0.0) {
            bDyCVal = false;
          }
          if (dyC2 < 0.0 || dyC2 >= f32(uniforms.outBackprop[2]) ||
              fract(dyC2) > 0.0) {
            bDyCVal2 = false;
          }

          let idyC = i32(dyC);
          let idyC2 = i32(dyC2);
          if (bDyCVal && bDyCVal2) {
            let d2Length = uniforms.outBackprop[3];
            for (var d2 = 0; d2 < d2Length; d2 = d2 + 4) {
              let wValue0 = getW(wRPerm, wCPerm, d1, d2);
              let wValue1 = getW(wRPerm, wCPerm, d1 + 1, d2);
              let wValue2 = getW(wRPerm, wCPerm, d1 + 2, d2);
              let wValue3 = getW(wRPerm, wCPerm, d1 + 3, d2);
              var xValue =  getDy(batch, idyR, idyC, d2);
              let tmpval = vec4<f32>(dot(xValue, wValue0),
                                     dot(xValue, wValue1),
                                     dot(xValue, wValue2),
                                     dot(xValue, wValue3));
              dotProd[0] = dotProd[0] + tmpval;
              xValue = getDy(batch, idyR, idyC2, d2);
              dotProd[1] = dotProd[1] + vec4<f32>(dot(xValue, wValue0),
                                                  dot(xValue, wValue1),
                                                  dot(xValue, wValue2),
                                                  dot(xValue, wValue3));
            }
          } else if (bDyCVal) {
            let d2Length = uniforms.outBackprop[3];
            for (var d2 = 0; d2 < d2Length; d2 = d2 + 4) {
              let wValue0 = getW(wRPerm, wCPerm, d1, d2);
              let wValue1 = getW(wRPerm, wCPerm, d1 + 1, d2);
              let wValue2 = getW(wRPerm, wCPerm, d1 + 2, d2);
              let wValue3 = getW(wRPerm, wCPerm, d1 + 3, d2);
              var xValue =  getDy(batch, idyR, idyC, d2);
              let tmpval = vec4<f32>(dot(xValue, wValue0),
                                     dot(xValue, wValue1),
                                     dot(xValue, wValue2),
                                     dot(xValue, wValue3));
              dotProd[0] = dotProd[0] + tmpval;
            }
          } else if (bDyCVal2) {
            let d2Length = uniforms.outBackprop[3];
            for (var d2 = 0; d2 < d2Length; d2 = d2 + 4) {
              let wValue0 = getW(wRPerm, wCPerm, d1, d2);
              let wValue1 = getW(wRPerm, wCPerm, d1 + 1, d2);
              let wValue2 = getW(wRPerm, wCPerm, d1 + 2, d2);
              let wValue3 = getW(wRPerm, wCPerm, d1 + 3, d2);
              var xValue =  getDy(batch, idyR, idyC2, d2);
              let tmpval = vec4<f32>(dot(xValue, wValue0),
                                     dot(xValue, wValue1),
                                     dot(xValue, wValue2),
                                     dot(xValue, wValue3));
              dotProd[1] = dotProd[1] + tmpval;
            }
          }
        }
      }

      for (var i = 0; i < ${this.workPerThread}; i = i + 1) {
        let coords = vec4<i32>(batch, r, c + i, d1);
        if (coordsInBounds4D(coords, uniforms.outShape)) {
          setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], dotProd[i]);
        }
      }
    }
    `;return this.isVec4?`
    ${r}
    `:`
    ${ft("index")} {
      if(index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords[0];
        let d1 = coords[${s}];

        let dyCorner = vec2<i32>(coords[${e}], coords[${t}]) - uniforms.pads;
        let dyRCorner = dyCorner.x;
        let dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + 1) {
          let dyR = (f32(dyRCorner) + f32(wR)) / f32(uniforms.strides.x);
          let wRPerm = uniforms.filterDims.x - 1 - wR;
          if (dyR < 0.0 || dyR >= f32(uniforms.outBackprop[1]) || fract(dyR) > 0.0 ||
              wRPerm < 0) {
            continue;
          }
          let idyR = i32(dyR);

          for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + 1) {
            let dyC = (f32(dyCCorner) + f32(wC)) / f32(uniforms.strides.y);
            let wCPerm = uniforms.filterDims.y - 1 - wC;
            if (dyC < 0.0 || dyC >= f32(uniforms.outBackprop[2]) ||
                fract(dyC) > 0.0 || wCPerm < 0) {
              continue;
            }
            let idyC = i32(dyC);

            for (var d2 = 0; d2 < uniforms.outBackprop[3]; d2 = d2 + 1) {
              let xValue = ${this.isChannelsLast?"getDy(batch, idyR, idyC, d2)":"getDy(batch, d2, idyR, idyC)"};
              let wValue = getW(wRPerm, wCPerm, d1, d2);
              dotProd = dotProd + xValue * wValue;
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
  `}}class Gve{constructor(e){this.variableNames=["x","dy"],this.uniforms="pads : vec2<i32>, strides : vec2<i32>, batchSize : i32, outHeight : i32, outWidth : i32, inHeight : i32, inWidth : i32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.filterShape,this.dispatchLayout=Ct(this.outputShape),this.dispatch=pt(this.dispatchLayout,this.outputShape,this.workgroupSize),this.isChannelsLast=e.dataFormat==="channelsLast",this.shaderKey=`conv2DDerFilter_${this.isChannelsLast}`}getUserCode(){return`
    ${ft("index")} {
      if(index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let wR = coords[0];
        let wC = coords[1];
        let d1 = coords[2];
        let d2 = coords[3];

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        for (var b = 0; b < uniforms.batchSize; b = b + 1) {
          for (var yR = 0; yR < uniforms.outHeight; yR = yR + 1) {
            let xR = wR + yR * uniforms.strides[0] - uniforms.pads[0];
            if (xR < 0 || xR >= uniforms.inHeight) {
              continue;
            }

            for (var yC = 0; yC < uniforms.outWidth; yC = yC + 1) {
              let xC = wC + yC * uniforms.strides[1] - uniforms.pads[1];

              if (xC < 0 || xC >= uniforms.inWidth) {
                continue;
              }

              if (${this.isChannelsLast}) {
                let dyValue = getDy(b, yR, yC, d2);
                let xValue = getX(b, xR, xC, d1);
                dotProd = dotProd + xValue * dyValue;
              } else {
                let dyValue = getDy(b, d2, yR, yC);
                let xValue = getX(b, d1, xR, xC);
                dotProd = dotProd + xValue * dyValue;
              }
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
  `}}class Vve{constructor(e){this.variableNames=["x","dy"],this.uniforms=`pads : vec3<i32>, strides : vec3<i32>, batchSize : i32, outDepth : i32,
       outHeight : i32, outWidth : i32, inDepth : i32, inHeight : i32, inWidth : i32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.filterShape,this.dispatchLayout=Ct(this.outputShape),this.dispatch=pt(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="conv3DDerFilter"}getUserCode(){return`
    ${ft("index")} {
      if(index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let wF = coords.x;
        let wR = coords.y;
        let wC = coords.z;
        let d1 = coords.w;
        let d2 = coords.u;

        var dotProd = 0.0;
        for (var b = 0; b < uniforms.batchSize; b++) {
          for (var yF = 0; yF < uniforms.outDepth; yF++) {
            let xF = wF + yF * uniforms.strides[0] - uniforms.pads[0];
            if (xF < 0 || xF >= uniforms.inDepth) {
              continue;
            }

            for (var yR = 0; yR < uniforms.outHeight; yR++) {
              let xR = wR + yR * uniforms.strides[1] - uniforms.pads[1];
              if (xR < 0 || xR >= uniforms.inHeight) {
                continue;
              }

              for (var yC = 0; yC < uniforms.outWidth; yC++) {
                let xC = wC + yC * uniforms.strides[2] - uniforms.pads[2];
                if (xC < 0 || xC >= uniforms.inWidth) {
                  continue;
                }

                let dyValue = getDy(b, yF, yR, yC, d2);
                let xValue = getX(b, xF, xR, xC, d1);
                dotProd += xValue * dyValue;
              }
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
  `}}class Wve{constructor(e){this.variableNames=["dy","W"],this.uniforms=`filterDims : vec3<i32>, pads : vec3<i32>, strides : vec3<i32>,
      outDepth : i32, outHeight : i32, outWidth : i32, outChannels : i32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=Ct(this.outputShape),this.dispatch=pt(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="conv3DDerInput"}getUserCode(){return`
    ${ft("index")} {
      if(index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords.x;
        let d1 = coords.u;

        let dyCorner = vec3<i32>(coords.y, coords.z, coords.w) - uniforms.pads;
        let dyFCorner = dyCorner.x;
        let dyRCorner = dyCorner.y;
        let dyCCorner = dyCorner.z;

        var dotProd = 0.0;
        for (var wF = 0; wF < uniforms.filterDims[0]; wF++) {
          let dyF = f32(dyFCorner + wF) / f32(uniforms.strides[0]);
          if (dyF < 0.0 || dyF >= f32(uniforms.outDepth) || fract(dyF) > 0.0) {
            continue;
          }
          let idyF = i32(dyF);

          let wFPerm = uniforms.filterDims[0] - 1 - wF;

          for (var wR = 0; wR < uniforms.filterDims[1]; wR++) {
            let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[1]);

            if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {
              continue;
            }
            let idyR = i32(dyR);

            let wRPerm = uniforms.filterDims[1] - 1 - wR;

            for (var wC = 0; wC < uniforms.filterDims[2]; wC++) {
              let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[2]);

              if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {
                continue;
              }
              let idyC = i32(dyC);

              let wCPerm = uniforms.filterDims[2] - 1 - wC;

              for (var d2 = 0; d2 < uniforms.outChannels; d2++) {
                let xValue = getDy(batch, idyF, idyR, idyC, d2);
                let wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
  `}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hve(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,dy:i}=e,{strides:o,pad:a,dataFormat:l,dimRoundingMode:c,filterShape:u}=s,h=Xi(l),d=As(r.shape,u,o,1,a,c,!1,h),f=new Gve(d),p=[{type:"int32",data:[d.padInfo.top,d.padInfo.left]},{type:"int32",data:[d.strideHeight,d.strideWidth]},{type:"int32",data:[d.batchSize]},{type:"int32",data:[d.outHeight]},{type:"int32",data:[d.outWidth]},{type:"int32",data:[d.inHeight]},{type:"int32",data:[d.inWidth]}];return t.runWebGPUProgram(f,[r,i],r.dtype,p)}const qve={kernelName:mg,backendName:"webgpu",kernelFunc:Hve};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yve(n=4){const e=i=>{switch(i){case 1:return"return W[getIndexFromCoords4D(coord, uniforms.wShape)];";case 4:return`
            let coord1 = vec4<i32>(coordX, coordY, col + 1, rowInner);
            let coord2 = vec4<i32>(coordX, coordY, col + 2, rowInner);
            let coord3 = vec4<i32>(coordX, coordY, col + 3, rowInner);
            let v0 = W[getIndexFromCoords4D(coord, uniforms.wShape)];
            let v1 = W[getIndexFromCoords4D(coord1, uniforms.wShape)];
            let v2 = W[getIndexFromCoords4D(coord2, uniforms.wShape)];
            let v3 = W[getIndexFromCoords4D(coord3, uniforms.wShape)];
            return vec4<f32>(v0, v1, v2, v3);
            `;default:throw new Error(`innerElementSize ${i} is not supported.`)}},s=`if (row < uniforms.dimAOuter && col < uniforms.dimInner) {
        ${`
      let outRow = row / uniforms.outShape[2];
      let outCol = row % uniforms.outShape[2];

      let WRow = col / (uniforms.filterDims[1] * uniforms.outBackprop[3]);
      let WCol = col / uniforms.outBackprop[3] % uniforms.filterDims[1];
      let xR = f32(outRow - uniforms.pads[0] + WRow) / f32(uniforms.strides[0]);
      let xC = f32(outCol - uniforms.pads[1] + WCol) / f32(uniforms.strides[1]);
      if (xR < 0.0 || xR >= f32(uniforms.outBackprop[1]) || fract(xR) > 0.0) {
        return ${yn(n)}(0.0);
      }
      if (xC < 0.0 || xC >= f32(uniforms.outBackprop[2]) || fract(xC) > 0.0) {
        return ${yn(n)}(0.0);
      }
      let coord = vec4<i32>(
          batch,
          i32(xR),
          i32(xC),
          col % uniforms.outBackprop[3]);
      return x[getIndexFromCoords4D(coord, uniforms.xShape)/${n}];`}
      }
      return ${yn(n)}(0.0);`;return`
  fn mm_readA(batch: i32, row : i32, col : i32) -> ${yn(n)} {
    ${s}
  }

  fn mm_readB(batch: i32, row : i32, col : i32) -> ${yn(n)} {
    let coordX = uniforms.filterDims.x - 1 -
        row / (uniforms.filterDims[1] * uniforms.outBackprop[3]);
    let coordY = uniforms.filterDims.y - 1 -
        (row / uniforms.outBackprop[3]) % uniforms.filterDims[1];
    if (row < uniforms.dimInner && col < uniforms.dimBOuter &&
        coordX >= 0 && coordY >= 0) {
      let rowInner = row % uniforms.outBackprop[3];
      let coord = vec4<i32>(coordX, coordY, col, rowInner);
      ${e(n)}
    }
    return ${yn(n)}(0.0);
  }

  fn mm_write(batch: i32, row : i32, col : i32, valueInput : ${yn(n)}) {
    if (row < uniforms.dimAOuter && col < uniforms.dimBOuter) {
      var value = valueInput;
      let outCoord = vec4<i32>(
          batch,
          row / uniforms.outShape[2],
          row % uniforms.outShape[2],
          col);
      result[getIndexFromCoords4D(outCoord, uniforms.outShape)/${n}] = value;
    }
  }`}class jve{constructor(e){this.variableNames=["x","W"],this.uniforms="filterDims : vec2<i32>, pads : vec2<i32>, strides : vec2<i32>, outBackprop : vec4<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32,",this.outputShape=e.inShape,z(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),this.isVec4=e.inChannels%4===0&&e.outChannels%4===0,this.dispatchLayout={x:[3],y:[1,2],z:[0]},this.workgroupSize=IP(this.dispatchLayout,this.outputShape,this.isVec4),this.elementsPerThread=wP(this.dispatchLayout,this.outputShape,this.isVec4),this.dispatch=pt(this.dispatchLayout,this.outputShape,this.workgroupSize,this.elementsPerThread),this.isVec4&&(this.outputComponent=4,this.variableComponents=[4,1]),this.shaderKey=`conv2DDerInputMM_${this.isVec4}_${this.elementsPerThread}`}getUserCode(){const e=this.isVec4?Y1(this.elementsPerThread,this.workgroupSize):j1(this.elementsPerThread,this.workgroupSize);return`
    ${Yve(this.isVec4?4:1)}
    ${e}
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xve(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,filter:i}=e,{inputShape:o,strides:a,pad:l,dataFormat:c,dimRoundingMode:u}=s,h=Xi(c),d=As(o,i.shape,a,1,l,u,!1,h),f=[{type:"int32",data:[d.filterHeight,d.filterWidth]},{type:"int32",data:[d.filterHeight-1-d.padInfo.top,d.filterWidth-1-d.padInfo.left]},{type:"int32",data:[d.strideHeight,d.strideWidth]},{type:"int32",data:[d.batchSize,d.outHeight,d.outWidth,d.outChannels]}];let p;if(xe().getBool("WEBGPU_USE_NAIVE_CONV2D_TRANSPOSE")||d.dataFormat!=="channelsLast")p=new zve(d);else{p=new jve(d);const A=d.inHeight*d.inWidth,m=d.inChannels,g=d.filterHeight*d.filterWidth*d.outChannels;f.push({type:"uint32",data:[A]},{type:"uint32",data:[m]},{type:"uint32",data:[g]})}return t.runWebGPUProgram(p,[r,i],"float32",f)}const Kve={kernelName:Sf,backendName:"webgpu",kernelFunc:Xve};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Jve{constructor(e){this.variableNames=["x","W"],this.uniforms="filterDims: vec3<i32>, pads: vec3<i32>, strides: vec3<i32>, dilations: vec3<i32>,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=Ct(this.outputShape),this.dispatch=pt(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="conv3dnaive"}getUserCode(){return`
    ${ft("index")} {
      if (index < uniforms.size) {
        let coords = getOutputCoords();
        let batch = coords.x;
        let d2 = coords.u;

        let xFRCCorner = vec3<i32>(coords.y, coords.z, coords.w) * uniforms.strides - uniforms.pads;
        let xFCorner = xFRCCorner.x;
        let xRCorner = xFRCCorner.y;
        let xCCorner = xFRCCorner.z;

        let inputDepthNearestVec4 = (uniforms.xShape.u / 4) * 4;
        let inputDepthVec4Remainder = uniforms.xShape.u % 4;

        var dotProd = 0.0;
        for (var wF = 0; wF < uniforms.filterDims[0]; wF++) {
          let xF = xFCorner + wF * uniforms.dilations[0];
          if (xF < 0 || xF >= uniforms.xShape.y) {
            continue;
          }

          for (var wR = 0; wR < uniforms.filterDims[1]; wR++) {
            let xR = xRCorner + wR * uniforms.dilations[1];
            if (xR < 0 || xR >= uniforms.xShape.z) {
              continue;
            }

            for (var wC = 0; wC < uniforms.filterDims[2]; wC++) {
              let xC = xCCorner + wC * uniforms.dilations[2];
              if (xC < 0 || xC >= uniforms.xShape.w) {
                continue;
              }

              for (var d1 = 0; d1 < inputDepthNearestVec4; d1 += 4) {
                let xValues = vec4<f32>(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                let wValues = vec4<f32>(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (inputDepthVec4Remainder == 1) {
                dotProd += getX(batch, xF, xR, xC, inputDepthNearestVec4) *
                  getW(wF, wR, wC, inputDepthNearestVec4, d2);
              } else if (inputDepthVec4Remainder == 2) {
                let xValues = vec2<f32>(
                  getX(batch, xF, xR, xC, inputDepthNearestVec4),
                  getX(batch, xF, xR, xC, inputDepthNearestVec4 + 1)
                );
                let wValues = vec2<f32>(
                  getW(wF, wR, wC, inputDepthNearestVec4, d2),
                  getW(wF, wR, wC, inputDepthNearestVec4 + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (inputDepthVec4Remainder == 3) {
                let xValues = vec3<f32>(
                  getX(batch, xF, xR, xC, inputDepthNearestVec4),
                  getX(batch, xF, xR, xC, inputDepthNearestVec4 + 1),
                  getX(batch, xF, xR, xC, inputDepthNearestVec4 + 2)
                );
                let wValues = vec3<f32>(
                  getW(wF, wR, wC, inputDepthNearestVec4, d2),
                  getW(wF, wR, wC, inputDepthNearestVec4 + 1, d2),
                  getW(wF, wR, wC, inputDepthNearestVec4 + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }`}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zve(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:i}=e,{strides:o,pad:a,dilations:l}=s,c=ia(r.shape,i.shape,o,l,a),u=[c.padInfo.front,c.padInfo.top,c.padInfo.left],h=[{type:"int32",data:[c.filterDepth,c.filterHeight,c.filterWidth]},{type:"int32",data:[...u]},{type:"int32",data:[c.strideDepth,c.strideHeight,c.strideWidth]},{type:"int32",data:[c.dilationDepth,c.dilationHeight,c.dilationWidth]}],d=new Jve(c),f=tr(r.dtype,i.dtype);return t.runWebGPUProgram(d,[r,i],f,h)}const eCe={kernelName:Ef,backendName:"webgpu",kernelFunc:Zve};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tCe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,dy:i}=e,{strides:o,pad:a,filterShape:l}=s,c=ia(r.shape,l,o,1,a),u=new Vve(c),h=[{type:"int32",data:[c.padInfo.front,c.padInfo.top,c.padInfo.left]},{type:"int32",data:[c.strideDepth,c.strideHeight,c.strideWidth]},{type:"int32",data:[c.batchSize]},{type:"int32",data:[c.outDepth]},{type:"int32",data:[c.outHeight]},{type:"int32",data:[c.outWidth]},{type:"int32",data:[c.inDepth]},{type:"int32",data:[c.inHeight]},{type:"int32",data:[c.inWidth]}];return t.runWebGPUProgram(u,[r,i],i.dtype,h)}const nCe={kernelName:gg,backendName:"webgpu",kernelFunc:tCe};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sCe(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,filter:i}=e,{strides:o,pad:a,inputShape:l}=s,c=ia(l,i.shape,o,1,a),u=new Wve(c),h=[{type:"int32",data:[c.filterDepth,c.filterHeight,c.filterWidth]},{type:"int32",data:[c.filterDepth-1-c.padInfo.front,c.filterHeight-1-c.padInfo.top,c.filterWidth-1-c.padInfo.left]},{type:"int32",data:[c.strideDepth,c.strideHeight,c.strideWidth]},{type:"int32",data:[c.outDepth]},{type:"int32",data:[c.outHeight]},{type:"int32",data:[c.outWidth]},{type:"int32",data:[c.outChannels]}];return t.runWebGPUProgram(u,[r,i],r.dtype,h)}const rCe={kernelName:Ag,backendName:"webgpu",kernelFunc:sCe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iCe=Pn({opType:it.COS}),oCe={kernelName:Hu,backendName:"webgpu",kernelFunc:iCe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aCe=Pn({opType:it.COSH}),lCe={kernelName:qu,backendName:"webgpu",kernelFunc:aCe};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class cCe{constructor(e,t,s,r){this.variableNames=["Image","Boxes","BoxInd"],this.uniforms="extrapolationValue : f32,",this.workgroupSize=[64,1,1],this.size=!0;const[i]=t;this.outputShape=[i,s[0],s[1],e],this.dispatchLayout=Ct(this.outputShape),this.dispatch=pt(this.dispatchLayout,this.outputShape,this.workgroupSize),this.methodId=r==="bilinear"?1:0,this.cropHeightBiggerThan1=this.outputShape[1]>1,this.cropWidthBiggerThan1=this.outputShape[2]>1,this.shaderKey=`cropAndResize_${this.methodId}_${this.cropHeightBiggerThan1}_${this.cropWidthBiggerThan1}`}getUserCode(){const[e,t]=["f32(uniforms.imageShape[1] - 1)","f32(uniforms.imageShape[2] - 1)"],[s,r,i]=this.cropHeightBiggerThan1?[`(${e} / f32(uniforms.outShape[1] - 1))`,"(y2-y1) * height_ratio",`y1*${e} + f32(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${e}`],[o,a,l]=this.cropWidthBiggerThan1?[`(${t} / f32(uniforms.outShape[2] - 1))`,"(x2-x1) * width_ratio",`x1*${t} + f32(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${t}`];return`
    ${ft("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let height_ratio = f32(${s});
        let width_ratio = f32(${o});
        let b = coords[0];
        let y = coords[1];
        let x = coords[2];
        let d = coords[3];
        // get box vals
        let y1 = getBoxes(b, 0);
        let x1 = getBoxes(b, 1);
        let y2 = getBoxes(b, 2);
        let x2 = getBoxes(b, 3);
        // get image in batch index
        let bInd = i32(round(getBoxInd(b)));
        if(bInd < 0 || bInd >= uniforms.outShape[0]) {
          return;
        }
        let height_scale = ${r};
        let width_scale = ${a};
        let in_y = ${i};
        if( in_y < 0.0 || in_y > ${e} ) {
          setOutputAtIndex(index, uniforms.extrapolationValue);
          return;
        }
        let in_x = ${l};
        if( in_x < 0.0 || in_x > ${t} ) {
          setOutputAtIndex(index, uniforms.extrapolationValue);
          return;
        }
        let sourceFracIndexCR = vec2<f32>(in_x,in_y);
        if(${this.methodId} == 1) {
          // Compute the four integer indices.
          let sourceFloorCR = vec2<i32>(sourceFracIndexCR);
          let sourceCeilCR = vec2<i32>(ceil(sourceFracIndexCR));
          let topLeft = getImage(bInd, sourceFloorCR.y, sourceFloorCR.x, d);
          let bottomLeft = getImage(bInd, sourceCeilCR.y, sourceFloorCR.x, d);
          let topRight = getImage(bInd, sourceFloorCR.y, sourceCeilCR.x, d);
          let bottomRight = getImage(bInd, sourceCeilCR.y, sourceCeilCR.x, d);
          let fracCR = sourceFracIndexCR - vec2<f32>(sourceFloorCR);
          let top = topLeft + (topRight - topLeft) * fracCR.x;
          let bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          let newValue = top + (bottom - top) * fracCR.y;
          setOutputAtIndex(index, newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          let sourceNearestCR = vec2<i32>(floor(
            sourceFracIndexCR + vec2<f32>(0.5,0.5)));
          let newValue = getImage(
            bInd, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutputAtIndex(index, newValue);
        }
      }
    }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uCe=n=>{const{inputs:e,backend:t,attrs:s}=n,{image:r,boxes:i,boxInd:o}=e,{cropSize:a,method:l,extrapolationValue:c}=s,u=new cCe(r.shape[3],i.shape,a,l),h=[{type:"float32",data:[c]}];return t.runWebGPUProgram(u,[r,i,o],"float32",h)},hCe={kernelName:xg,backendName:"webgpu",kernelFunc:uCe};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Jm;(function(n){n.Prod="*",n.Sum="+"})(Jm||(Jm={}));class Y3{constructor(e,t,s,r){this.variableNames=["x"],this.uniforms="index : f32,",this.size=!0,this.workgroupSize=[128,1,1],this.outputShape=t,this.dispatchLayout=Ct(this.outputShape),this.dispatch=pt(this.dispatchLayout,this.outputShape,this.workgroupSize),this.exclusive=s,this.reverse=r,this.op=e,this.shaderKey=`cum_${this.op}_${this.exclusive}_${this.reverse}`}getUserCode(){const e=this.outputShape.length,t=this.op===Jm.Prod?"1.0":"0.0",s=this.exclusive?t:`getX(${j3(e,"coords",this.op)})`,r=this.outputShape[this.outputShape.length-1];let i="",o="";return this.exclusive?(i=this.reverse?`end != ${r-1}`:"end != 0",o=this.reverse?"end + 1":"end - 1"):(i=this.reverse?`end + pow2 < ${r}`:"end >= pow2",o=this.reverse?"end + pow2":"end - pow2"),`
      ${ft("index")} {
       if (index < uniforms.size) {
         var coords = getCoordsFromIndex(index);

         let end = ${X3(e,"coords",this.op)};
         var val = ${s};
         let pow2 = i32(pow(2.0, uniforms.index));
         if (${i}) {
           let idx = ${o};
           ${X3(e,"coords",this.op)} = idx;
           val ${this.op}= getX(${j3(e,"coords",this.op)});
         }
         setOutputAtIndex(index, val);
       }
      }
    `}}function j3(n,e,t){if(n===1)return`${e}`;if(n===2)return`${e}.x, ${e}.y`;if(n===3)return`${e}.x, ${e}.y, ${e}.z`;if(n===4)return`${e}.x, ${e}.y, ${e}.z, ${e}.w`;throw Error(`Cumulative ${t} for rank ${n} is not yet supported`)}function X3(n,e,t){if(n===1)return`${e}`;if(n===2)return`${e}.y`;if(n===3)return`${e}.z`;if(n===4)return`${e}.w`;throw Error(`Cumulative ${t} for rank ${n} is not yet supported`)}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PP(n,e,t,s,r,i){const o=e.shape.length,a=ss([s],o);let l=e;a!=null&&(l=Fa({inputs:{x:e},backend:t,attrs:{perm:a}}));const c=ys(1,o)[0];if(c!==o-1)throw new Error(`WebGPU cumprod shader expects an inner-most axis=${e.shape.length-1} but got axis=${s}`);const u=l.shape[c];let h=qi({inputs:{x:l},backend:t});for(let d=0;d<=Math.ceil(Math.log2(u))-1;d++){const f=new Y3(n,l.shape,!1,i),p=h,A=[{type:"float32",data:[d]}];h=t.runWebGPUProgram(f,[h],h.dtype,A),t.disposeData(p.dataId)}if(r){const d=new Y3(n,l.shape,r,i),f=h,p=[{type:"float32",data:[0]}];h=t.runWebGPUProgram(d,[h],h.dtype,p),t.disposeData(f.dataId)}if(a!=null){const d=Oa(a),f=Fa({inputs:{x:h},backend:t,attrs:{perm:d}});return t.disposeData(h.dataId),t.disposeData(l.dataId),f}return h}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dCe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:i,exclusive:o,reverse:a}=s;return PP(Jm.Prod,r,t,i,o,a)}const fCe={kernelName:yg,backendName:"webgpu",kernelFunc:dCe};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pCe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:i,exclusive:o,reverse:a}=s;return PP(Jm.Sum,r,t,i,o,a)}const mCe={kernelName:_f,backendName:"webgpu",kernelFunc:pCe};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gCe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,weights:i}=e,{size:o,binaryOutput:a}=s,l=r.shape.length===1,u=ye(i.shape)>0,h=i.dtype,d=l?[r.shape[0]]:[r.shape[0],r.shape[1]],f=l?[o]:[r.shape[0],o],p=bi({backend:t,attrs:{shape:f,value:0,dtype:h}}),A=new MP(d,u,a),m=[{type:"int32",data:[o]}],g=u?[r,i]:[r];return t.runWebGPUProgram(A,g,h,m,p)}const ACe={kernelName:bg,backendName:"webgpu",kernelFunc:gCe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class yCe{constructor(e,t){this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.uniforms="blockSize : i32,",this.outputShape=e,this.dispatchLayout=Ct(this.outputShape),this.dispatch=pt(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey=`depthToSpace_${t}`,this.dataFormat=t}getUserCode(){return`
      ${ft("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let b = coords[0];
          let h = ${this.getHeightCoordString()};
          let w = ${this.getWidthCoordString()};
          let d = ${this.getDepthCoordString()};

          let in_h = h / uniforms.blockSize;
          let offset_h = h % uniforms.blockSize;
          let in_w = w / uniforms.blockSize;
          let offset_w = w % uniforms.blockSize;
          let offset_d = (offset_h * uniforms.blockSize + offset_w) *
            ${this.getOutputDepthSize()};
          let in_d = d + offset_d;

          let rlt = ${this.getInputSamplingString()};
          setOutputAtIndex(index, rlt);
        }
      }`}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?"uniforms.outShape[3]":"uniforms.outShape[1]"}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xCe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{blockSize:i,dataFormat:o}=s,a=r.shape[0],l=o==="NHWC"?r.shape[1]:r.shape[2],c=o==="NHWC"?r.shape[2]:r.shape[3],u=o==="NHWC"?r.shape[3]:r.shape[1],h=l*i,d=c*i,f=u/(i*i),p=o==="NHWC"?[a,h,d,f]:[a,f,h,d],A=[{type:"int32",data:[i]}],m=new yCe(p,o);return t.runWebGPUProgram(m,[r],r.dtype,A)}const bCe={kernelName:vg,backendName:"webgpu",kernelFunc:xCe};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class vCe{constructor(e,t,s,r=!1,i=null,o=!1){this.variableNames=["x","W"],this.uniforms="pads : vec2<i32>, inDims : vec2<i32>,",this.workgroupSize=[16,16,1],this.outputShape=e,this.dispatchLayout={x:[3],y:[2],z:[0,1]},this.dispatch=pt(this.dispatchLayout,this.outputShape,this.workgroupSize),r&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),this.addBias=r,this.activation=i,this.hasPreluActivation=o,this.filterHeight=t,this.filterWidth=s,this.shaderKey=`depthwiseNCHW_${this.activation}_${this.filterHeight}_${this.filterWidth}`}getUserCode(){const e=this.filterWidth*this.filterHeight,t=this.workgroupSize[0]*this.workgroupSize[1]*this.workgroupSize[2],s=this.workgroupSize[1]+this.filterHeight-1,r=this.workgroupSize[0]+this.filterWidth-1;return`
      ${Nl(this.activation,this.hasPreluActivation,!1,4)}

      var<workgroup> mm_Asub : array<array<f32, ${r}>, ${s}>;
      var<workgroup> mm_Bsub : array<array<f32, ${this.filterWidth}>, ${this.filterHeight}>;
      fn readX(batch : i32, channel : i32, row : i32, col : i32) -> f32 {
        var value = 0.0;
        if (row >=0 && row < uniforms.inDims[0] && col >=0 && col < uniforms.inDims[1])
        {
          value = getX(batch, channel, row, col);
        }
        return value;
      }

      ${ft()} {
        let coords = getOutputCoords();
        let batch = coords[0];
        let xRCCorner = vec2<i32>(coords.zw) - uniforms.pads;
        let channelMul = uniforms.wShape[3];
        let d1 = coords[1] / channelMul;
        let q = coords[1] % channelMul;

        let inputRowStart = xRCCorner.x;
        let inputColStart = xRCCorner.y;

        let localRow = i32(localId.y);
        let localCol = i32(localId.x);

        // Load one tile of X into local memory.
        for (var inputRow = localRow; inputRow < ${s}; inputRow = inputRow + ${this.workgroupSize[1]}) {
          for (var inputCol = localCol; inputCol < ${r}; inputCol = inputCol + ${this.workgroupSize[0]}) {
            let rowOffset = inputRow - localRow;
            let colOffset = inputCol - localCol;
            mm_Asub[inputRow][inputCol] = readX(batch, d1, inputRowStart + rowOffset, inputColStart + colOffset);
          }
        }

        // Load one tile of W into local memory.
        var wIndex = i32(localIndex);
        ${e<t?`if (wIndex < ${e})`:`for(; wIndex < ${e}; wIndex = wIndex + ${t})`}

        {
          let wRow = wIndex / ${this.filterWidth};
          let wCol = wIndex % ${this.filterWidth};
          mm_Bsub[wRow][wCol] = getW(wRow, wCol, d1, q);
        }

        workgroupBarrier();

        var value = 0.0;
        for (var wR = 0; wR < ${this.filterHeight}; wR = wR + 1) {
          for (var wC = 0; wC < ${this.filterWidth}; wC = wC + 1) {
            let xVal = mm_Asub[localRow + wR][localCol + wC];
            let wVal = mm_Bsub[wR][wC];
            value = fma(xVal, wVal, value);
          }
        }
        ${Wh(this.addBias,this.activation)}
        if (coordsInBounds4D(coords, uniforms.outShape)) {
          setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
        }
      }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class LP{constructor(e,t=!1,s=null,r=!1){this.variableNames=["x","W"],this.uniforms="pads : vec2<i32>, inDims : vec2<i32>, virtualWidth : i32,",this.workgroupSize=[64,1,1],this.workPerThread=4,this.outputComponent=4,this.outputShape=e.outShape,this.virtualWidth=Math.ceil(this.outputShape[2]/this.workPerThread)*this.workPerThread;const i=[this.outputShape[0],this.outputShape[1],this.virtualWidth,this.outputShape[3]];this.dispatchLayout=Ct(i),this.dispatch=pt(this.dispatchLayout,i,this.workgroupSize,[this.outputComponent*this.workPerThread,1,1]),z(e.dataFormat==="channelsLast",()=>"TODO: NCHW is unimplemented"),t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=s,this.hasPreluActivation=r,this.shaderKey=`depthwiseVec4_${s}_${this.convInfo.filterHeight}_${this.convInfo.filterWidth}_${this.convInfo.strideHeight}_${this.convInfo.strideWidth}_${this.workPerThread}`}getUserCode(){const e=(this.workPerThread-1)*this.convInfo.strideWidth+this.convInfo.filterWidth,t=this.convInfo.strideHeight,s=this.convInfo.strideWidth;return`
      ${Nl(this.activation,this.hasPreluActivation,!0,4)}
      fn readX(batch : i32, row : i32, col : i32, channel : i32) -> vec4<f32> {
        var value = vec4<f32>(0.0);
        if (col >=0 && col < uniforms.inDims[1]) {
          value = getX(batch, row, col, channel);
        }
        return value;
      }

      ${ft("index")} {
        let width0 = uniforms.outShape[3] / ${this.outputComponent};
        let d1 = (index % width0) * ${this.outputComponent};
        var index1 = index / width0;
        let width1 = uniforms.virtualWidth / ${this.workPerThread};
        let c = (index1 % width1) * ${this.workPerThread};
        index1 = index1 / width1;
        let r = index1 % uniforms.outShape[1];
        let batch = index1 / uniforms.outShape[1];

        let xRCCorner = vec2<i32>(r, c) * vec2<i32>(${t}, ${s}) - uniforms.pads;

        let xRCorner = xRCCorner.x;
        let xCCorner = xRCCorner.y;
        var xVals : array<vec4<f32>, ${e}>;
        var dotProd : array<vec4<f32>, ${this.workPerThread}>;
        for (var i = 0; i < ${this.workPerThread}; i++) {
          dotProd[i] = vec4<f32>(0.0);
        }

        // Use constant instead of uniform can give better performance.
        for (var wR = 0; wR < ${this.convInfo.filterHeight}; wR = wR + 1) {
          let xR = xRCorner + wR;
          if (xR >=0 && xR < uniforms.inDims[0]) {
            for (var i = 0; i < ${e}; i++) {
              xVals[i] = readX(batch, xR, xCCorner + i, d1);
            }
            for (var wC = 0; wC < ${this.convInfo.filterWidth}; wC = wC + 1) {
              let wValue = getW(wR, wC, d1, 0);
              for (var i = 0; i < ${this.workPerThread}; i++) {
                dotProd[i] = fma(xVals[i * ${s} + wC], wValue, dotProd[i]);
              }
            }
          }
        }

        for (var i = 0; i < ${this.workPerThread}; i = i + 1) {
          let coords = vec4<i32>(batch, r, c + i, d1);
          if (coordsInBounds4D(coords, uniforms.outShape)) {
            var value = dotProd[i];
            ${Wh(this.addBias,this.activation)}
            setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
          }
        }
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class OP{constructor(e,t=!1,s=null,r=!1){this.variableNames=["x","W"],this.uniforms=`pads : vec2<i32>, inDims : vec2<i32>, filterHeight : i32,
      filterWidth : i32, strides : vec2<i32>, dilations : vec2<i32>,`,this.workgroupSize=[256,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=Ct(this.outputShape),this.dispatch=pt(this.dispatchLayout,this.outputShape,this.workgroupSize),this.isChannelsLast=e.dataFormat==="channelsLast",t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=s,this.hasPreluActivation=r,this.shaderKey=`depthwise_${this.activation}_${this.isChannelsLast}`}getUserCode(){const e=this.isChannelsLast?"getX(batch, xR, xC, d1);":"getX(batch, d1, xR, xC);";return`
      ${Nl(this.activation,this.hasPreluActivation,!1,4)}

      ${ft("index")} {
        if (index < uniforms.size) {
          let coords = getOutputCoords();
          let batch = coords[0];
          let xRCCorner = vec2<i32>(coords.${this.isChannelsLast?"yz":"zw"}) * uniforms.strides - uniforms.pads;
          let d2 = coords[${this.isChannelsLast?3:1}];
          let channelMul = uniforms.wShape[3];
          let d1 = d2 / channelMul;
          let q = d2 % channelMul;

          let inputRowStart = xRCCorner.x;
          let inputColStart = xRCCorner.y;
          let inputRowEnd = inputRowStart + uniforms.filterHeight *
              uniforms.dilations[0];
          let inputColEnd = inputColStart + uniforms.filterWidth *
              uniforms.dilations[1];

          // Convolve x(?, ?, d1)|x(d1, ?, ?) with w(:, :, d1, q) to get
          // y(yR, yC, d2)|y(d2, yR, yC). ? = to be determined. : = across all
          // values in that axis. x(?, ?, d1) and y(yR, yC, d2) is for NHWC.
          // x(d1, ?, ?) and y(d2, yR, yC) is for NCHW.
          var value = 0.0;

          // Extract if checking out of for loop for performance.
          if (inputRowStart >= 0 && inputColStart >= 0 &&
            inputRowEnd < uniforms.inDims[0] &&
                inputColEnd < uniforms.inDims[1]) {
              for (var wR = 0; wR < uniforms.filterHeight; wR = wR + 1) {
                let xR = inputRowStart + wR * uniforms.dilations[0];

                for (var wC = 0; wC < uniforms.filterWidth; wC = wC + 1) {
                  let xC = inputColStart + wC * uniforms.dilations[1];

                  let xVal = ${e};
                  let wVal = getW(wR, wC, d1, q);
                  value = value + xVal * wVal;
                }
              }
            } else {
              for (var wR = 0; wR < uniforms.filterHeight; wR = wR + 1) {
                let xR = inputRowStart + wR * uniforms.dilations[0];

                if (xR < 0 || xR >= uniforms.inDims[0]) {
                  continue;
                }

                for (var wC = 0; wC < uniforms.filterWidth; wC = wC + 1) {
                  let xC = inputColStart + wC * uniforms.dilations[1];

                  if (xC < 0 || xC >= uniforms.inDims[1]) {
                    continue;
                  }

                  let xVal = ${e};
                  let wVal = getW(wR, wC, d1, q);
                  value = value + xVal * wVal;
                }
              }
            }
            ${Wh(this.addBias,this.activation)}
          setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
        }
      }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CCe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:i}=e,{strides:o,pad:a,dataFormat:l,dilations:c,dimRoundingMode:u}=s,h=Xi(l);let d=c;d==null&&(d=[1,1]);const f=As(r.shape,i.shape,o,d,a,u,!0,h),p=[{type:"int32",data:[f.padInfo.top,f.padInfo.left]},{type:"int32",data:[f.inHeight,f.inWidth]}],A=f.dataFormat==="channelsLast";let m;return!A&&f.inHeight>16&&f.inWidth>16&&f.strideHeight===1&&f.strideWidth===1&&f.dilationWidth===1&&f.dilationHeight===1&&f.inChannels===f.outChannels?m=new vCe(f.outShape,f.filterHeight,f.filterWidth):A&&f.outHeight>4&&f.outWidth>4&&f.strideWidth<=2&&f.inChannels===f.outChannels&&f.dilationHeight===1&&f.dilationWidth===1&&f.inChannels%4===0?(m=new LP(f),p.push({type:"int32",data:[m.virtualWidth]})):(m=new OP(f),p.push({type:"int32",data:[f.filterHeight]},{type:"int32",data:[f.filterWidth]},{type:"int32",data:[f.strideHeight,f.strideWidth]},{type:"int32",data:[f.dilationHeight,f.dilationWidth]})),t.runWebGPUProgram(m,[r,i],r.dtype,p)}const ICe={kernelName:Tf,backendName:"webgpu",kernelFunc:CCe};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class wCe{constructor(e){this.variableNames=["x","dy"],this.uniforms=`strides : vec2<i32>, pads : vec2<i32>, filterDims : vec2<i32>, outHeight : i32,
      outWidth : i32, inHeight : i32, inWidth : i32, batchSize : i32, channelMul : i32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.filterShape,this.dispatchLayout=Ct(this.outputShape),this.dispatch=pt(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="depthwise_conv2d_backprop_filter"}getUserCode(){return`
      ${ft("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let wR = coords[0];
        let wC = coords[1];
        let d1 = coords[2];
        let dm = coords[3];
        let d2 = d1 * uniforms.channelMul + dm;

        var dotProd = 0.0;
        for (var b = 0; b < uniforms.batchSize; b++) {
          for (var yR = 0; yR < uniforms.outHeight; yR++) {
            let xR = wR + yR * uniforms.strides[0] - uniforms.pads[0];

            if (xR < 0 || xR >= uniforms.inHeight) {
              continue;
            }

            for (var yC = 0; yC < uniforms.outWidth; yC++) {
              let xC = wC + yC * uniforms.strides[1] - uniforms.pads[1];

              if (xC < 0 || xC >= uniforms.inWidth) {
                continue;
              }

              let dyValue = getDy(b, yR, yC, d2);
              let xValue = getX(b, xR, xC, d1);
              dotProd += xValue * dyValue;
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
    `}}class SCe{constructor(e){this.variableNames=["dy","W"],this.uniforms=`strides : vec2<i32>, pads : vec2<i32>, filterDims : vec2<i32>,
       outHeight : i32, outWidth : i32, channelMul : i32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=Ct(this.outputShape),this.dispatch=pt(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="depthwise_conv2d_backprop_input"}getUserCode(){return`
      ${ft("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords[0];
        let d1 = coords[3];
        let dyCorner = coords.yz - uniforms.pads;
        let dyRCorner = dyCorner.x;
        let dyCCorner = dyCorner.y;

        var dotProd = 0.0;
        for (var wR = 0; wR < uniforms.filterDims[0]; wR++) {
          let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[0]);

          if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {
            continue;
          }

          let idyR = i32(dyR);
          let wRPerm = uniforms.filterDims[0] - 1 - wR;

          for (var wC = 0; wC < uniforms.filterDims[1]; wC++) {
            let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[1]);

            if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {
              continue;
            }

            let idyC = i32(dyC);
            let wCPerm = uniforms.filterDims[1] - 1 - wC;

            for (var dm = 0; dm < uniforms.channelMul; dm++) {
              let d2 = d1 * uniforms.channelMul + dm;
              let xValue = getDy(batch, idyR, idyC, d2);
              let wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
    `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ECe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,dy:i}=e,{strides:o,dilations:a,pad:l,dimRoundingMode:c,filterShape:u}=s,h=As(r.shape,u,o,a,l,c,!0),d=new wCe(h),f=[{type:"int32",data:[h.strideHeight,h.strideWidth]},{type:"int32",data:[h.padInfo.top,h.padInfo.left]},{type:"int32",data:[h.filterHeight,h.filterWidth]},{type:"int32",data:[h.outHeight]},{type:"int32",data:[h.outWidth]},{type:"int32",data:[h.inHeight]},{type:"int32",data:[h.inWidth]},{type:"int32",data:[h.batchSize]},{type:"int32",data:[h.outChannels/h.inChannels]}];return t.runWebGPUProgram(d,[r,i],"float32",f)}const _Ce={kernelName:Cg,backendName:"webgpu",kernelFunc:ECe};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TCe(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,filter:i}=e,{strides:o,dilations:a,pad:l,dimRoundingMode:c,inputShape:u}=s,h=As(u,i.shape,o,a,l,c,!0),d=new SCe(h),f=[{type:"int32",data:[h.strideHeight,h.strideWidth]},{type:"int32",data:[h.filterHeight-1-h.padInfo.top,h.filterWidth-1-h.padInfo.left]},{type:"int32",data:[h.filterHeight,h.filterWidth]},{type:"int32",data:[h.outHeight]},{type:"int32",data:[h.outWidth]},{type:"int32",data:[h.outChannels/h.inChannels]}];return t.runWebGPUProgram(d,[r,i],r.dtype,f)}const BCe={kernelName:Ig,backendName:"webgpu",kernelFunc:TCe};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class kCe{constructor(e){this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e,e],this.dispatchLayout=Ct(this.outputShape),this.dispatch=pt(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="diag"}getUserCode(){return`
      ${ft("index")} {
        if (index < uniforms.size) {
          let coords = getOutputCoords();
          let value = select(0.0, getX(coords[0]), coords[0] == coords[1]);
          setOutputAtIndex(index, value);
        }
      }
    `}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NCe(n){const{inputs:e,backend:t}=n,{x:s}=e,r=[...s.shape,...s.shape],i=ye(s.shape),o=$t({inputs:{x:s},backend:t,attrs:{shape:[i]}}),a=new kCe(i),l=t.runWebGPUProgram(a,[o],o.dtype),c=$t({inputs:{x:l},backend:t,attrs:{shape:r}});return t.disposeData(o.dataId),t.disposeData(l.dataId),c}const RCe={kernelName:wg,backendName:"webgpu",kernelFunc:NCe};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class MCe{constructor(e){this.variableNames=["x","w"],this.uniforms="filterDims: vec2<i32>, pads: vec2<i32>, strides: vec2<i32>, dilations: vec2<i32>",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=Ct(this.outputShape),this.dispatch=pt(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="dilation2d"}getUserCode(){return`
       ${ft("index")} {
         if (index < uniforms.size) {
           let neg_infinity = -3.4e38;
           let coords = getOutputCoords();
           let batch = coords.x;
           let d1 = coords.w;
           let outTopLeftCorner = coords.yz * uniforms.strides - uniforms.pads;
           let hBeg = outTopLeftCorner.x;
           let wBeg = outTopLeftCorner.y;

           var curVal = neg_infinity;
           for (var h = 0; h < uniforms.filterDims[0]; h = h + 1) {
             let hIn = hBeg + h * uniforms.dilations[0];

             if (hIn >= 0 && hIn < uniforms.xShape[1]) {
               for (var w = 0; w < uniforms.filterDims[1]; w = w + 1) {
                 let wIn = wBeg + w * uniforms.dilations[1];

                 if (wIn >= 0 && wIn < uniforms.xShape[2]) {
                   let val = getX(batch, hIn, wIn, d1) + getW(h, w, d1);
                   if (val > curVal) {
                     curVal = val;
                   }
                 }
               }
             }
           }

           setOutputAtIndex(index, curVal);
         }
       }
     `}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DCe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:i}=e,{strides:o,pad:a,dilations:l}=s,c=yc(r.shape,i.shape,o,a,"NHWC",l),u=[c.padInfo.top,c.padInfo.left],h=[{type:"int32",data:[c.filterHeight,c.filterWidth]},{type:"int32",data:[...u]},{type:"int32",data:[c.strideHeight,c.strideWidth]},{type:"int32",data:[c.dilationHeight,c.dilationWidth]}],d=new MCe(c);return t.runWebGPUProgram(d,[r,i],r.dtype,h)}const FCe={kernelName:Bf,backendName:"webgpu",kernelFunc:DCe};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class $Ce{constructor(e,t){if(this.variableNames=["x","w","dy"],this.uniforms="filterDims: vec2<i32>, pads: vec2<i32>, strides: vec2<i32>, dilations: vec2<i32>, dySize: i32,",this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=e.inShape,this.dispatchLayout=Ct(e.outShape),this.dispatch=pt(this.dispatchLayout,e.outShape,this.workgroupSize),t!=="float32"&&t!=="int32")throw new Error(`Dilation2DBackpropInput only supports float32 and int32
          types, does not support ${t} type.`);this.type=t,this.shaderKey="dilation2DBackpropInput"}getUserCode(){return`
       ${ft("index")} {
         if (index < uniforms.dySize) {
           let coords = getDyCoordsFromIndex(index);
           let b = coords[0];
           let r = coords[1];
           let c = coords[2];
           let d = coords[3];

           let dyCorner = vec2<i32>(r, c) * uniforms.strides - uniforms.pads;
           var curVal = -3.4e38;  // neg_infinity
           var xRMax = 0;
           var xCMax = 0;

           // In the case of multiple argmax branches, we only back-propagate
           // along the last branch, i.e., the one with largest value of
           // 'wR * uniforms.filterDims[1] + wC', similarly to the max-pooling
           // backward routines.
           for (var wR = 0; wR < uniforms.filterDims[0]; wR++) {
             let xR = dyCorner.x + wR * uniforms.dilations[0];

             if (xR >= 0 && xR < uniforms.xShape[1]) {
               for (var wC = 0; wC < uniforms.filterDims[1]; wC++) {
                 let xC = dyCorner.y + wC * uniforms.dilations[1];

                 if (xC >= 0 && xC < uniforms.xShape[2]) {
                   let val = getX(b, xR, xC, d) + getW(wR, wC, d);
                   if (val > curVal) {
                     curVal = val;
                     xRMax = xR;
                     xCMax = xC;
                   }
                 }
               }
             }
           }

           let flatIndexIn = d + uniforms.xShape[3] *
               (xCMax + uniforms.xShape[2] * (xRMax + uniforms.xShape[1] * b));
           let value = getDy(b, r, c, d);
           ${Sc("&result[flatIndexIn]","value",this.type)}
         }
       }
     `}}class PCe{constructor(e,t,s){if(this.variableNames=["x","w","dy"],this.uniforms="filterDims: vec2<i32>, pads: vec2<i32>, strides: vec2<i32>, dilations: vec2<i32>, dySize: i32,",this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=e.filterShape,this.dispatchLayout=Ct(e.outShape),this.dispatch=pt(this.dispatchLayout,e.outShape,this.workgroupSize),s!=="float32"&&s!=="int32")throw new Error(`Dilation2DBackpropFilter only supports float32 and int32
          types, does not support ${s} type.`);this.type=s,this.shaderKey="dilation2DBackpropFilter"}getUserCode(){return`
       ${ft("index")} {
         if (index < uniforms.dySize) {
           let coords = getDyCoordsFromIndex(index);
           let b = coords[0];
           let r = coords[1];
           let c = coords[2];
           let d = coords[3];

           let dyCorner = vec2<i32>(r, c) * uniforms.strides - uniforms.pads;
           var curVal = -3.4e38;  // neg_infinity
           var wRMax = 0;
           var wCMax = 0;

           // In the case of multiple argmax branches, we only back-propagate
           // along the last branch, i.e., the one with largest value of
           // 'wR * uniforms.filterDims[1] + wC', similarly to the max-pooling
           // backward routines.
           for (var wR = 0; wR < uniforms.filterDims[0]; wR++) {
             let xR = dyCorner.x + wR * uniforms.dilations[0];

             if (xR >= 0 && xR < uniforms.xShape[1]) {
               for (var wC = 0; wC < uniforms.filterDims[1]; wC++) {
                 let xC = dyCorner.y + wC * uniforms.dilations[1];

                 if (xC >= 0 && xC < uniforms.xShape[2]) {
                   let val = getX(b, xR, xC, d) + getW(wR, wC, d);
                   if (val > curVal) {
                     curVal = val;
                     wRMax = wR;
                     wCMax = wC;
                   }
                 }
               }
             }
           }

           let flatIndexIn = d + uniforms.wShape[2] * (wCMax + wRMax * uniforms.wShape[1]);
           let value = getDy(b, r, c, d);
           ${Sc("&result[flatIndexIn]","value",this.type)}
         }
       }
     `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LCe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:i,dy:o}=e,{strides:a,pad:l,dilations:c}=s,u=yc(r.shape,i.shape,a,l,"NHWC",c),h=i.dtype,d=new PCe(u,i.shape,h),f=[{type:"int32",data:[u.filterHeight,u.filterWidth]},{type:"int32",data:[u.padInfo.top,u.padInfo.left]},{type:"int32",data:[u.strideHeight,u.strideWidth]},{type:"int32",data:[u.dilationHeight,u.dilationWidth]},{type:"int32",data:[ye(u.outShape)]}],p=bi({backend:t,attrs:{shape:i.shape,value:0,dtype:h}});return t.runWebGPUProgram(d,[r,i,o],h,f,p)}const OCe={kernelName:Mm,backendName:"webgpu",kernelFunc:LCe};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QCe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:i,dy:o}=e,{strides:a,pad:l,dilations:c}=s,u=yc(r.shape,i.shape,a,l,"NHWC",c),h=r.dtype,d=new $Ce(u,h),f=[{type:"int32",data:[u.filterHeight,u.filterWidth]},{type:"int32",data:[u.padInfo.top,u.padInfo.left]},{type:"int32",data:[u.strideHeight,u.strideWidth]},{type:"int32",data:[u.dilationHeight,u.dilationWidth]},{type:"int32",data:[ye(u.outShape)]}],p=bi({backend:t,attrs:{shape:u.inShape,value:0,dtype:h}});return t.runWebGPUProgram(d,[r,i,o],h,f,p)}const UCe={kernelName:Rm,backendName:"webgpu",kernelFunc:QCe};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class zCe{constructor(e,t,s){this.variableNames=["Image"],this.uniforms="alpha: f32,",this.workgroupSize=[64,1,1],this.pixelsOpType=af.DRAW,this.size=!0,this.outputShape=e,this.dispatchLayout=Ct(this.outputShape),this.dispatch=pt(this.dispatchLayout,this.outputShape,this.workgroupSize),this.type=t,this.textureFormat=s,this.shaderKey=`draw_${t}_${s}`}getUserCode(){let e;const t=this.type==="float32"?"value":"value / 255.0";return e=`
      if (uniforms.numChannels == 1) {
        rgba[0] = ${t};
        rgba[1] = ${t};
        rgba[2] = ${t};
      } else {
        rgba[d] = ${t};
      }`,`
       @group(0) @binding(0) var outImage : texture_storage_2d<${this.textureFormat}, write>;
       ${ft("index")} {
         if (index < uniforms.size) {
           var rgba = vec4<f32>(0.0, 0.0, 0.0, uniforms.alpha);
           for (var d = 0; d < uniforms.numChannels; d = d + 1) {
             let value = f32(inBuf[index * uniforms.numChannels + d]);
             ${e}
           }
           rgba.x = rgba.x * rgba.w;
           rgba.y = rgba.y * rgba.w;
           rgba.z = rgba.z * rgba.w;
           let coords = getCoordsFromIndex(index);
           textureStore(outImage, vec2<i32>(coords.yx), rgba);
         }
       }
      `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use backend file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GCe(n){const{inputs:e,backend:t,attrs:s}=n,{image:r}=e,{canvas:i,options:o}=s,[a,l]=r.shape.slice(0,2),{imageOptions:c}=o||{},u=c?.alpha||1,h=t.device.features.has("bgra8unorm-storage")?"bgra8unorm":"rgba8unorm",d=[a,l],f=new zCe(d,r.dtype,h);i.width=l,i.height=a;const p="webgpu";let A=i.getContext(p),m;A||(m=new OffscreenCanvas(l,a),A=m.getContext(p));const g=r.shape.length===3?r.shape[2]:1;A.configure({device:t.device,format:h,usage:GPUTextureUsage.STORAGE_BINDING,alphaMode:"premultiplied"});const x="int32",v=t.makeTensorInfo(d,x),b=t.tensorMap.get(v.dataId);b.resource=A.getCurrentTexture(),b.external=!0;const w=[{type:"uint32",data:[g]},{type:"float32",data:[u]}];if(t.runWebGPUProgram(f,[r],x,w,v),m){const _=i.getContext("2d");if(!_)throw new Error("Please make sure this canvas has only been used for 2d or webgpu context!");_.drawImage(m,0,0)}return t.disposeData(v.dataId),r}const VCe={kernelName:Sg,backendName:"webgpu",kernelFunc:GCe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QP=vr({opType:tn.MUL,cpuKernelImpl:j2e,supportsComplex:!0}),WCe={kernelName:hh,backendName:"webgpu",kernelFunc:QP};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UP(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:i,keepDims:o}=s;return qh(r,i,o,"sum",t)}const HCe={kernelName:lp,backendName:"webgpu",kernelFunc:UP};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qCe(n){const{inputs:e,backend:t,attrs:s}=n,{equation:r}=s,i=e,{allDims:o,summedDims:a,idDims:l}=w1(r,i.length);E1(o.length,l,i);const{path:c,steps:u}=_1(a,l),h=u.length;let d=null,f=o.length;const p=[];for(let A=0;A<h;++A){for(const m of u[A]){const{permutationIndices:g,expandDims:x}=S1(f,l[m]);let v;T1(g)?v=i[m]:(v=Fa({inputs:{x:i[m]},backend:t,attrs:{perm:g}}),p.push(v));const b=v.shape.slice();for(let w=0;w<x.length;++w)b.splice(x[w],0,1);dn(v.shape,b)||(v=$t({inputs:{x:v},backend:t,attrs:{shape:b}}),p.push(v)),d===null?d=v:(d=QP({inputs:{a:v,b:d},backend:t}),p.push(d))}A<h-1&&(c[A]>=0&&(d=UP({inputs:{x:d},backend:t,attrs:{axis:c[A]-(o.length-f),keepDims:!1}}),p.push(d)),f--)}for(const A of p)A!==d&&t.disposeData(A.dataId);return d}const YCe={kernelName:Eg,backendName:"webgpu",kernelFunc:qCe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jCe=Pn({opType:it.ELU}),XCe={kernelName:ju,backendName:"webgpu",kernelFunc:jCe};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KCe=n=>{const{inputs:e,backend:t}=n,{dy:s,y:r}=e,i=new q0(tn.ELU_DER,s.shape,r.shape);return t.runWebGPUProgram(i,[s,r],s.dtype)},JCe={kernelName:_g,backendName:"webgpu",kernelFunc:KCe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZCe=vr({opType:tn.EQUAL,dtype:"bool",cpuKernelImpl:D2e}),eIe={kernelName:kf,backendName:"webgpu",kernelFunc:ZCe};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tIe=Pn({opType:it.ERF}),nIe={kernelName:Xu,backendName:"webgpu",kernelFunc:tIe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sIe=Pn({opType:it.EXP,cpuKernelImpl:F2e,dtype:"float32"}),rIe={kernelName:Ku,backendName:"webgpu",kernelFunc:sIe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DC(n){const{inputs:e,attrs:t,backend:s}=n,{dim:r}=t,{input:i}=e,o=i.shape.length,a=i.shape.slice();let l=r;return r<0&&(z(-(o+1)<=r,()=>`Axis must be in the interval [${-(o+1)}, ${o}]`),l=o+r+1),a.splice(l,0,1),$t({inputs:{x:i},backend:s,attrs:{shape:a}})}const iIe={kernelName:Nf,backendName:"webgpu",kernelFunc:DC};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oIe=Pn({opType:it.EXPM1,cpuKernelImpl:$2e}),aIe={kernelName:Ju,backendName:"webgpu",kernelFunc:oIe};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class K3{constructor(e,t){this.variableNames=["real","imag"],this.outputShape=[],this.uniforms="exponentMultiplier : f32, denominator: f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=Ct(this.outputShape),this.dispatch=pt(this.dispatchLayout,this.outputShape,this.workgroupSize),this.component=e,this.shaderKey=`fft_${e}`}getUserCode(){return`
    fn unaryOpComplex(real: f32, expR: f32, imag: f32, expI: f32) -> f32 {
      ${this.component==="real"?"return real * expR - imag * expI;":"return real * expI + imag * expR;"}
    }

    fn mulMatDFT(batch: i32, index: i32) -> f32 {
      let indexRatio = f32(index) / f32(uniforms.realShape[1]);
      let exponentMultiplierTimesIndexRatio =
          uniforms.exponentMultiplier * indexRatio;

      var result = 0.0;

      for (var i = 0; i < uniforms.realShape[1]; i = i + 1) {
        // x = (-2|2 * PI / N) * index * i;
        let x = exponentMultiplierTimesIndexRatio * f32(i);
        let expR = cos(x);
        let expI = sin(x);
        let real = getReal(batch, i);
        let imag = getImag(batch, i);

        result = result +
            unaryOpComplex(real, expR, imag, expI) / uniforms.denominator;
      }

      return result;
    }

    ${ft("index")} {
      if (index < uniforms.size) {
        let coords = getOutputCoords();
        setOutputAtIndex(index, mulMatDFT(coords[0], coords[1]));
      }
    }
  `}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zP(n,e,t){const s=t.tensorMap.get(n.dataId),r=ye(n.shape),i=n.shape[n.shape.length-1],o=r/i,a=[],l=$t({inputs:{x:n},backend:t,attrs:{shape:[o,i]}});a.push(l);const c=l.shape,u=new K3("real",c),h=new K3("imag",c),d=[{dataId:s.complexTensorInfos.real.dataId,dtype:s.complexTensorInfos.real.dtype,shape:c},{dataId:s.complexTensorInfos.imag.dataId,dtype:s.complexTensorInfos.imag.dtype,shape:c}],f=e?2*Math.PI:-2*Math.PI,p=e?c[1]:1,A=[{type:"float32",data:[f]},{type:"float32",data:[p]}],m=t.runWebGPUProgram(u,d,"float32",A);a.push(m);const g=t.runWebGPUProgram(h,d,"float32",A);a.push(g);const x=Hh({inputs:{real:m,imag:g},backend:t});a.push(x);const v=$t({inputs:{x},backend:t,attrs:{shape:n.shape}});return a.forEach(b=>t.disposeData(b.dataId)),v}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lIe(n){const{inputs:e,backend:t}=n,{input:s}=e;return zP(s,!1,t)}const cIe={kernelName:Tg,backendName:"webgpu",kernelFunc:lIe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class uIe{constructor(e){this.outputShape=[],this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Ct(this.outputShape),this.dispatch=pt(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="flipLeftRight"}getUserCode(){return`
      ${ft("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let coordX = uniforms.xShape[2] - coords[2] - 1;
          let outputValue = getX(coords[0], coords[1], coordX, coords[3]);
          setOutputAtIndex(index, outputValue);
        }
      }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hIe={kernelName:kg,backendName:"webgpu",kernelFunc:({inputs:n,backend:e})=>{const{image:t}=n,s=e,r=new uIe(t.shape);return s.runWebGPUProgram(r,[t],t.dtype)}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dIe=Pn({opType:it.FLOOR,cpuKernelImpl:P2e}),fIe={kernelName:Zu,backendName:"webgpu",kernelFunc:dIe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pIe=vr({opType:tn.FLOOR_DIV,cpuKernelImpl:L2e,dtype:"int32"}),mIe={kernelName:eh,backendName:"webgpu",kernelFunc:pIe};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class gIe{constructor(e,t,s=!1){this.pixelsOpType=af.FROM_PIXELS,this.outputShape=[0],this.variableNames=[],this.workgroupSize=[256,1,1],this.outputShape=e,this.dispatchLayout=Ct(this.outputShape),this.dispatch=pt(this.dispatchLayout,this.outputShape,this.workgroupSize,[t,1,1]),this.importVideo=s,this.shaderKey=`fromPixels_${this.importVideo}`}getUserCode(){const e=this.importVideo?"textureLoad(src, vec2<i32>(coords.yx));":"textureLoad(src, vec2<i32>(coords.yx), 0)";return`
      @binding(1) @group(0) var src: ${this.importVideo?"texture_external":"texture_2d<f32>"};
      ${ft("index")} {
        let flatIndex = index * uniforms.numChannels;
        if (flatIndex < uniforms.size) {
          let coords = getCoordsFromIndex(flatIndex);
          let values = ${e};
          for (var i = 0; i < uniforms.numChannels; i = i + 1) {
            result[flatIndex + i] = i32(floor(255.0 * values[i]));
          }
        }
      }
  `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use backend file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AIe={kernelName:Dm,backendName:"webgpu",kernelFunc:yIe};let vd,mb=xe().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");function yIe(n){const{inputs:e,backend:t,attrs:s}=n;let{pixels:r}=e;const{numChannels:i}=s;if(r==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");const o=typeof HTMLVideoElement<"u"&&r instanceof HTMLVideoElement,a=typeof HTMLImageElement<"u"&&r instanceof HTMLImageElement,l=typeof HTMLCanvasElement<"u"&&r instanceof HTMLCanvasElement||typeof OffscreenCanvas<"u"&&r instanceof OffscreenCanvas,c=typeof ImageBitmap<"u"&&r instanceof ImageBitmap,[u,h]=o?[r.videoWidth,r.videoHeight]:[r.width,r.height],d=[h,u,i],f=xe().getBool("WEBGPU_IMPORT_EXTERNAL_TEXTURE")&&o,p=o||a;if(c||l||p){let x;if(f)x=t.device.importExternalTexture({source:r});else{if(p){const U=xe().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(vd==null||U!==mb)&&(mb=U,vd=document.createElement("canvas").getContext("2d",{willReadFrequently:mb})),vd.canvas.width=u,vd.canvas.height=h,vd.drawImage(r,0,0,u,h),r=vd.canvas}const k=GPUTextureUsage.COPY_DST|GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.TEXTURE_BINDING,L=t.textureManager.acquireTexture(d[1],d[0],"rgba8unorm",k);t.queue.copyExternalImageToTexture({source:r},{texture:L},[d[1],d[0]]),x=L}const v=ye(d),b=Ot(d),w=new gIe(d,i,f),_=[{type:"uint32",data:[v]},{type:"uint32",data:[i]},{type:"uint32",data:[...b]}],N=t.makeTensorInfo([h,u],"int32"),M=t.tensorMap.get(N.dataId);M.resource=x;const T=t.runWebGPUProgram(w,[N],"int32",_);return t.disposeData(N.dataId),T}const A=r.data;let m=A;if(i!=null&&i!==4){m=new Uint8Array(r.width*r.height*i);const x=A.length;let v=0;for(let b=0;b<x;b++)b%4<i&&(m[v++]=A[b])}const g=t.makeTensorInfo(d,"int32",new Int32Array(m));return t.uploadToGPU(g.dataId),g}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class xIe{constructor(e,t,s,r,i){this.uniforms="varianceEpsilon : f32,",this.workgroupSize=[128,1,1],this.size=!0,this.variableNames=["x","mean","variance"],jt(e,t),jt(e,s),this.outputShape=e,this.dispatchLayout=Ct(this.outputShape),this.dispatch=pt(this.dispatchLayout,this.outputShape,this.workgroupSize),r!=null&&(jt(e,r),this.variableNames.push("offset")),i!=null&&(jt(e,i),this.variableNames.push("scale")),this.offsetShape=r,this.scaleShape=i,this.shaderKey="batchNorm"}getUserCode(){let e="0.0";this.offsetShape!=null&&(e="getOffsetByOutputIndex(index)");let t="1.0";return this.scaleShape!=null&&(t="getScaleByOutputIndex(index)"),`
      ${ft("index")} {
        if (index < uniforms.size)
        {
          let xValue = getXByOutputIndex(index);
          let meanValue = getMeanByOutputIndex(index);
          let varianValue = getVarianceByOutputIndex(index);
          let offsetValue = ${e};
          let scaleValue = ${t};
          let inv = scaleValue * inverseSqrt(varianValue + f32(uniforms.varianceEpsilon));
          setOutputAtIndex(index,dot(vec3<f32>(xValue, -meanValue, offsetValue), vec3<f32>(inv, inv, 1.0)));
        }
      }
  `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bIe={kernelName:Rf,backendName:"webgpu",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{x:s,scale:r,offset:i,mean:o,variance:a}=n,{varianceEpsilon:l}=e,c=t,u=[s,o,a];let h=null;i!=null&&(h=i.shape,u.push(i));let d=null;r!=null&&(d=r.shape,u.push(r));const f=new xIe(s.shape,o.shape,a.shape,h,d),p=[{type:"float32",data:[l]}];return c.runWebGPUProgram(f,u,s.dtype,p)}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vIe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:i,bias:o,preluActivationWeights:a}=e,{strides:l,pad:c,dataFormat:u,dilations:h,dimRoundingMode:d,activation:f,leakyreluAlpha:p}=s,A=Xi(u),m=As(r.shape,i.shape,l,h,c,d,!1,A);return $P({x:r,filter:i,convInfo:m,backend:t,bias:o,preluActivationWeights:a,leakyreluAlpha:p,activation:f})}const CIe={kernelName:Vd,backendName:"webgpu",kernelFunc:vIe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IIe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:i,bias:o,preluActivationWeights:a}=e,{strides:l,pad:c,dilations:u,dimRoundingMode:h,activation:d,leakyreluAlpha:f}=s;let p=u;p==null&&(p=[1,1]),z(nr(l,p),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${p}'`);const A=As(r.shape,i.shape,l,p,c,h,!0),m=[r,i],g=o!=null,x=a!=null;g&&m.push(o),x&&m.push(a);const v=[{type:"int32",data:[A.padInfo.top,A.padInfo.left]},{type:"int32",data:[A.inHeight,A.inWidth]}];let b;return A.outHeight>4&&A.outWidth>4&&A.strideWidth<=2&&A.inChannels===A.outChannels&&A.dilationHeight===1&&A.dilationWidth===1&&A.inChannels%4===0?(b=new LP(A,g,d,x),v.push({type:"int32",data:[b.virtualWidth]})):(b=new OP(A,g,d,x),v.push({type:"int32",data:[A.filterHeight]},{type:"int32",data:[A.filterWidth]},{type:"int32",data:[A.strideHeight,A.strideWidth]},{type:"int32",data:[A.dilationHeight,A.dilationWidth]})),d==="leakyrelu"&&(v.push({type:"float32",data:[f]}),b.uniforms+=" alpha : f32,"),t.runWebGPUProgram(b,m,"float32",v)}const wIe={kernelName:Wd,backendName:"webgpu",kernelFunc:IIe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class SIe{constructor(e,t){this.variableNames=["A","indices"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=Ct(this.outputShape),this.dispatch=pt(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey=`gathernd_${e}`,this.sliceDim=e,this.uniforms=`sliceDim : i32, strides : ${Fs(e)},`}getUserCode(){let e;return this.sliceDim>1?e="uniforms.strides[j]":e="uniforms.strides",`
      ${ft("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          var flattenIndex = 0;
          for (var j = 0; j < uniforms.sliceDim; j = j + 1) {
            let indexTemp = i32(round(getIndices(coords[0], j)));
            let strideNum = ${e};
            flattenIndex = flattenIndex + indexTemp * strideNum;
          }

          setOutputAtIndex(index, getA(flattenIndex, coords[1]));
        }
      }
      `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EIe(n){const{inputs:e,backend:t}=n,{params:s,indices:r}=e,i=r.shape,o=i[i.length-1],a=ye(s.shape),[l,c,u,h]=BA(s,r),d=$t({inputs:{x:r},backend:t,attrs:{shape:[c,o]}}),f=$t({inputs:{x:s},backend:t,attrs:{shape:[ye(s.shape)/u,u]}});if(t.shouldExecuteOnCPU([s,r])||s.dtype==="string"){const x=t.readSync(r.dataId),v=t.bufferSync(s),b=O2e(x,v,s.dtype,c,o,u,h,s.shape,a);return t.makeTensorInfo(l,s.dtype,b.values)}const p=new SIe(o,[c,u]),A=[{type:"int32",data:[o]},{type:"int32",data:h}],m=t.runWebGPUProgram(p,[f,d],f.dtype,A),g=$t({inputs:{x:m},backend:t,attrs:{shape:l}});return t.disposeData(d.dataId),t.disposeData(f.dataId),t.disposeData(m.dataId),g}const _Ie={kernelName:Ng,backendName:"webgpu",kernelFunc:EIe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class TIe{constructor(e,t){this.variableNames=["A","indices"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.slice(),this.aShape=e,this.outputShape=t,this.dispatchLayout=Ct(this.outputShape),this.dispatch=pt(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="gather"}getUserCode(){const e=BIe(this.aShape);return`
      ${ft("index")} {
        if (index < uniforms.size) {
          let resRC = getCoordsFromIndex(index);
          let indexZ = i32(getIndices(resRC.x, resRC.z));
          let inBounds = select(0.0, 1.0, indexZ >= 0 && indexZ < uniforms.aShape[2]);
          setOutputAtIndex(index, inBounds * getA(${e}));
        }
      }
    `}}function BIe(n){const e=["resRC.x","resRC.y","resRC.z","resRC.w"],t=[];for(let s=0;s<n.length;s++)s===2?t.push("indexZ"):t.push(`${e[s]}`);return t.join()}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GP(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,indices:i}=e,{axis:o,batchDims:a}=s,l=an(o,r.shape)[0],c=k1(r,i,l,a),u=ye(i.shape),h=[],d=$t({inputs:{x:r},backend:t,attrs:{shape:[c.batchSize,c.outerSize,c.dimSize,c.sliceSize]}}),f=$t({inputs:{x:i},backend:t,attrs:{shape:[c.batchSize,u/c.batchSize]}});h.push(d),h.push(f);const p=[c.batchSize,c.outerSize,u/c.batchSize,c.sliceSize];if(t.shouldExecuteOnCPU([r,i])){const v=t.tensorMap.get(f.dataId).values,b=rn(f.shape,f.dtype,v),_=t.tensorMap.get(d.dataId).values,N=rn(d.shape,d.dtype,_),M=Q2e(N,b,p);return h.forEach(T=>t.disposeData(T.dataId)),t.makeTensorInfo(c.outputShape,M.dtype,M.values)}const A=new TIe(d.shape,p),m=t.runWebGPUProgram(A,[d,f],d.dtype);h.push(m);const g=$t({inputs:{x:m},backend:t,attrs:{shape:c.outputShape}});return h.forEach(x=>t.disposeData(x.dataId)),g}const kIe={kernelName:Mf,backendName:"webgpu",kernelFunc:GP};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NIe=vr({opType:tn.GREATER,cpuKernelImpl:z2e,dtype:"bool"}),RIe={kernelName:Df,backendName:"webgpu",kernelFunc:NIe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MIe=vr({opType:tn.GREATER_EQUAL,dtype:"bool",cpuKernelImpl:U2e}),DIe={kernelName:th,backendName:"webgpu",kernelFunc:MIe};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FIe(n){const{inputs:e,backend:t}=n,{input:s}=e;return zP(s,!0,t)}const $Ie={kernelName:Rg,backendName:"webgpu",kernelFunc:FIe};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PIe=Pn({opType:it.IS_FINITE,dtype:"bool"}),LIe={kernelName:sh,backendName:"webgpu",kernelFunc:PIe};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OIe=Pn({opType:it.IS_INF,dtype:"bool"}),QIe={kernelName:rh,backendName:"webgpu",kernelFunc:OIe};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UIe=Pn({opType:it.IS_NAN,dtype:"bool"}),zIe={kernelName:ih,backendName:"webgpu",kernelFunc:UIe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GIe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{alpha:i}=s,o=[{type:"float32",data:[i]}],a=new Rp(r.shape,it.LEAKYRELU,"alpha : f32,");return t.runWebGPUProgram(a,[r],"float32",o)}const VIe={kernelName:Ff,backendName:"webgpu",kernelFunc:GIe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WIe=vr({opType:tn.LESS,dtype:"bool",cpuKernelImpl:V2e}),HIe={kernelName:$f,backendName:"webgpu",kernelFunc:WIe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qIe=vr({opType:tn.LESS_EQUAL,dtype:"bool",cpuKernelImpl:G2e}),YIe={kernelName:Pf,backendName:"webgpu",kernelFunc:qIe};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class jIe{constructor(e){this.variableNames=[],this.outputShape=[],this.uniforms="start : f32, step : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e],this.dispatchLayout=Ct(this.outputShape),this.dispatch=pt(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="linSpace"}getUserCode(){return`
      ${ft("index")} {
        if (index < uniforms.size) {
          setOutputAtIndex(index, uniforms.start + f32(index) * uniforms.step);
        }
      }
    `}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XIe(n){const{backend:e,attrs:t}=n,{start:s,stop:r,num:i}=t,o=(r-s)/(i-1),a=new jIe(i),l=[{type:"float32",data:[s]},{type:"float32",data:[o]}];return e.runWebGPUProgram(a,[],"float32",l)}const KIe={kernelName:Dg,backendName:"webgpu",kernelFunc:XIe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JIe=Pn({opType:it.LOG,cpuKernelImpl:W2e}),ZIe={kernelName:oh,backendName:"webgpu",kernelFunc:JIe};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ewe=Pn({opType:it.LOG1P}),twe={kernelName:ah,backendName:"webgpu",kernelFunc:ewe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nwe=vr({opType:tn.LOGICAL_AND,dtype:"bool"}),swe={kernelName:Lf,backendName:"webgpu",kernelFunc:nwe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rwe=Pn({opType:it.LOGICAL_NOT}),iwe={kernelName:Of,backendName:"webgpu",kernelFunc:rwe};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const owe=vr({opType:tn.LOGICAL_OR}),awe={kernelName:Qf,backendName:"webgpu",kernelFunc:owe};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VP=`
  var powValue = 0.0;
  let basis = uniforms.bias + uniforms.alpha * sum;
  if (uniforms.beta == 0.5) {
    powValue = inverseSqrt(basis);
  } else if (uniforms.beta == 1.0) {
    powValue = 1.0 / basis;
  } else {
    powValue = exp(log(basis) * (-uniforms.beta));
  }
`;class lwe{constructor(e){this.outputShape=[],this.variableNames=["x"],this.uniforms="radius : i32, bias : f32, alpha : f32, beta : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Ct(this.outputShape),this.dispatch=pt(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="lrn"}getUserCode(){return`
    ${ft("index")} {
      if (index < uniforms.size) {
        let coords = getOutputCoords();
        let b = coords[0];
        let r = coords[1];
        let c = coords[2];
        let d = coords[3];

        let x = getX(b, r, c, d);
        var sum = 0.0;
        for (var i = -uniforms.radius; i <= uniforms.radius; i = i + 1) {
          let idx = d + i;
          if (idx >= 0 && idx < uniforms.xShape[3]) {
            let z = getX(b, r, c, idx);
            sum = sum + z * z;
          }
        }
        ${VP}

        setOutputAtIndex(index, x * powValue);
      }
    }
  `}}class cwe{constructor(e,t){this.outputShape=[],this.variableNames=["x"],this.uniforms="radius : i32, bias : f32, alpha : f32, beta : f32,",this.workgroupSize=[256,1,1],this.maxAllowRadius=16,z(t<=this.maxAllowRadius,()=>`Radius must be less than or equal to ${this.maxAllowRadius}, current radius is ${t}`),this.outputShape=e,this.elementsPerWorkgroup=this.workgroupSize[0]-2*this.maxAllowRadius,this.dispatchLayout={x:[3],y:[2],z:[0,1]},this.dispatch=pt(this.dispatchLayout,this.outputShape,[this.elementsPerWorkgroup,this.workgroupSize[1],this.workgroupSize[2]]),this.shaderKey="lrn_shared"}getUserCode(){return`
    var <workgroup>lrnSub: array<f32, ${this.workgroupSize[0]}>;
    const elementsPerWorkgroup = ${this.elementsPerWorkgroup};
    const maxAllowRadius = ${this.maxAllowRadius};

    ${ft()} {
      let localDepth = i32(localId.x);
      let workgroupDepth = i32(workgroupId.x) * elementsPerWorkgroup;
      let xDepth = workgroupDepth + localDepth - maxAllowRadius;
      let b = i32(globalId.z) / uniforms.xShape[1];
      let r = i32(globalId.z) - b * uniforms.xShape[1];
      let c = i32(globalId.y);
      let d = workgroupDepth + localDepth;

      var x = 0.0;
      if (xDepth >= 0 && xDepth < uniforms.xShape[3]) {
        x = getX(b, r, c, xDepth);
      }
      lrnSub[localDepth] = x;
      workgroupBarrier();

      if (localDepth < elementsPerWorkgroup && d < uniforms.outShape[3]) {
        var sum = 0.0;
        let index = localDepth + maxAllowRadius;
        for (var i = -uniforms.radius; i <= uniforms.radius; i = i + 1) {
          let z = lrnSub[index + i];
          sum = sum + z * z;
        }
        ${VP}

        setOutputAtCoords(b, r, c, d, lrnSub[index] * powValue);
      }
    } `}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uwe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{depthRadius:i,bias:o,alpha:a,beta:l}=s;let c;i>16?c=new lwe(r.shape):c=new cwe(r.shape,i);const u=[{type:"int32",data:[i]},{type:"float32",data:[o]},{type:"float32",data:[a]},{type:"float32",data:[l]}];return t.runWebGPUProgram(c,[r],r.dtype,u)}const hwe={kernelName:Uf,backendName:"webgpu",kernelFunc:uwe};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class dwe{constructor(e){this.outputShape=[],this.variableNames=["inputImage","outputImage","dy"],this.uniforms="depthRadius : i32, bias : f32, alpha : f32, beta : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Ct(this.outputShape),this.dispatch=pt(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="lrn_grad"}getUserCode(){return`
    ${ft("index")} {
      if (index < uniforms.size) {
        let coords = getOutputCoords();
        let b = coords[0];
        let r = coords[1];
        let c = coords[2];

        let MIN_DEPTH_BEGIN = 0;
        let MAX_DEPTH_END = uniforms.outShape[3];
        var result = 0.0;
        for (var d = MIN_DEPTH_BEGIN; d < MAX_DEPTH_END; d++) {
          let depthBegin = max(MIN_DEPTH_BEGIN, d - uniforms.depthRadius);
          let depthEnd = min(MAX_DEPTH_END, d + uniforms.depthRadius + 1);

          var norm = 0.0;
          for (var k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; k++) {
            if (k < depthBegin) {
              continue;
            } else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            } else {
              break;
            }
          }

          norm = uniforms.alpha * norm + uniforms.bias;

          for (var k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; k++) {
            if (k < depthBegin) {
              continue;
            } else if (k >= depthBegin && k < depthEnd) {
              var dyi = -2.0 * uniforms.alpha * uniforms.beta
                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d) / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * uniforms.beta);
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            } else {
              break;
            }
          }
        }

        setOutputAtIndex(index, result);
      }
    }
  `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fwe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,y:i,dy:o}=e,{depthRadius:a,bias:l,alpha:c,beta:u}=s,h=new dwe(r.shape),d=[{type:"int32",data:[a]},{type:"float32",data:[l]},{type:"float32",data:[c]},{type:"float32",data:[u]}];return t.runWebGPUProgram(h,[r,i,o],r.dtype,d)}const pwe={kernelName:Fg,backendName:"webgpu",kernelFunc:fwe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mwe=vr({opType:tn.MAX,cpuKernelImpl:q2e}),gwe={kernelName:lh,backendName:"webgpu",kernelFunc:mwe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Awe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{filterSize:i,strides:o,pad:a,dimRoundingMode:l}=s,u=Pr(r.shape,i,o,1,a,l);return RP(r,u,"max",t)}const ywe={kernelName:Gf,backendName:"webgpu",kernelFunc:Awe};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xwe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{filterSize:i,strides:o,pad:a,dataFormat:l,dimRoundingMode:c}=s,u=[1,1,1],h=fo(r.shape,i,o,u,a,c,l),d=new BS(h,"max"),f=[{type:"int32",data:[h.strideDepth,h.strideHeight,h.strideWidth]},{type:"int32",data:[h.padInfo.front,h.padInfo.top,h.padInfo.left]},{type:"int32",data:[h.inDepth,h.inHeight,h.inWidth]},{type:"int32",data:[h.effectiveFilterDepth,h.effectiveFilterHeight,h.effectiveFilterWidth]}];return t.runWebGPUProgram(d,[r],r.dtype,f)}const bwe={kernelName:Vf,backendName:"webgpu",kernelFunc:xwe};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class vwe{constructor(e){this.variableNames=["dy","maxPos"],this.uniforms=`strides : vec2<i32>, pads : vec2<i32>, dilations : vec2<i32>, filterDims : vec2<i32>,
       outHeight : i32, outWidth : i32`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=Ct(this.outputShape),this.dispatch=pt(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="maxPool2DBackprop"}getUserCode(){return`
      ${ft("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords[0];
        let d = coords[3];

        let dyRCCorner = vec2<i32>(coords.yz) - uniforms.pads;
        let dyRCorner = dyRCCorner.x;
        let dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        let lastIndex = uniforms.filterDims[0] * uniforms.filterDims[1] - 1;
        for (var wR = 0; wR < uniforms.filterDims[0]; wR += uniforms.dilations[0]) {
          let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[0]);

          if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {
            continue;
          }
          let idyR = i32(dyR);

          for (var wC = 0; wC < uniforms.filterDims[1]; wC += uniforms.dilations[1]) {
            let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[1]);

            if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {
              continue;
            }
            let idyC = i32(dyC);

            let dyValue = getDy(batch, idyR, idyC, d);
            let maxPosValue = lastIndex - i32(getMaxPos(batch, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            let curPosValue = wR * uniforms.filterDims[1] + wC;
            let mask = select(0.0, 1.0, maxPosValue == curPosValue);
            dotProd += dyValue * mask;
          }
        }
        setOutputAtIndex(index, dotProd);
      }
    }
    `}}class Cwe{constructor(e){this.variableNames=["dy","maxPos"],this.uniforms=`strides : vec3<i32>, pads : vec3<i32>, filterDims : vec3<i32>,
      outDepth : i32, outHeight : i32, outWidth : i32`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=Ct(this.outputShape),this.dispatch=pt(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="maxPool3DBackprop"}getUserCode(){return`
      ${ft("index")} {
      if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
        let batch = coords.x;
        let ch = coords.u;

        let dyCorner = vec3<i32>(coords.y, coords.z, coords.w) - uniforms.pads;
        let dyDCorner = dyCorner.x;
        let dyRCorner = dyCorner.y;
        let dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        var dotProd = 0.0;
        let lastIndex = uniforms.filterDims[0] * uniforms.filterDims[1] * uniforms.filterDims[2] - 1;

        for (var wD = 0; wD < uniforms.filterDims[0]; wD++) {
          let dyD = f32(dyDCorner + wD) / f32(uniforms.strides[0]);

          if (dyD < 0.0 || dyD >= f32(uniforms.outDepth) || fract(dyD) > 0.0) {
            continue;
          }
          let idyD = i32(dyD);

          for (var wR = 0; wR < uniforms.filterDims[1]; wR++) {
            let dyR = f32(dyRCorner + wR) / f32(uniforms.strides[1]);

            if (dyR < 0.0 || dyR >= f32(uniforms.outHeight) || fract(dyR) > 0.0) {
              continue;
            }
            let idyR = i32(dyR);

            for (var wC = 0; wC < uniforms.filterDims[2]; wC++) {
              let dyC = f32(dyCCorner + wC) / f32(uniforms.strides[2]);

              if (dyC < 0.0 || dyC >= f32(uniforms.outWidth) || fract(dyC) > 0.0) {
                continue;
              }
              let idyC = i32(dyC);

              let dyValue = getDy(batch, idyD, idyR, idyC, ch);
              let maxPosValue = lastIndex - i32(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              let curPosValue = wD * uniforms.filterDims[1] * uniforms.filterDims[2] + wR * uniforms.filterDims[2] + wC;
              let mask = select(0.0, 1.0, maxPosValue == curPosValue);
              dotProd += dyValue * mask;
            }
          }
        }

        setOutputAtIndex(index, dotProd);
      }
    }
    `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Iwe(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:i}=e,o=i,{filterSize:a,strides:l,pad:c,dimRoundingMode:u}=s,h=[1,1,1],d=fo(o.shape,a,l,h,c,u),f=new BS(d,"max",!0);let p=[{type:"int32",data:[d.strideDepth,d.strideHeight,d.strideWidth]},{type:"int32",data:[d.padInfo.front,d.padInfo.top,d.padInfo.left]},{type:"int32",data:[d.inDepth,d.inHeight,d.inWidth]},{type:"int32",data:[d.effectiveFilterDepth,d.effectiveFilterHeight,d.effectiveFilterWidth]}];const A=t.runWebGPUProgram(f,[o],"int32",p),m=new Cwe(d);p=[{type:"int32",data:[d.strideDepth,d.strideHeight,d.strideWidth]},{type:"int32",data:[d.effectiveFilterDepth-1-d.padInfo.front,d.effectiveFilterHeight-1-d.padInfo.top,d.effectiveFilterWidth-1-d.padInfo.left]},{type:"int32",data:[d.effectiveFilterDepth,d.effectiveFilterHeight,d.effectiveFilterWidth]},{type:"int32",data:[d.outDepth]},{type:"int32",data:[d.outHeight]},{type:"int32",data:[d.outWidth]}];const g=t.runWebGPUProgram(m,[r,A],o.dtype,p);return t.disposeData(A.dataId),g}const wwe={kernelName:Pg,backendName:"webgpu",kernelFunc:Iwe};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Swe(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:i,output:o}=e,a=i;EP([i,o],"maxPoolGrad");const{filterSize:l,strides:c,pad:u,dimRoundingMode:h}=s,d=Pr(a.shape,l,c,1,u,h),f=new Km(d,"max",!0);let p=[{type:"int32",data:[d.strideHeight,d.strideWidth]},{type:"int32",data:[d.padInfo.top,d.padInfo.left]},{type:"int32",data:[d.dilationHeight,d.dilationWidth]},{type:"int32",data:[d.inHeight,d.inWidth]},{type:"int32",data:[d.effectiveFilterHeight,d.effectiveFilterWidth]}];const A=t.runWebGPUProgram(f,[a],"int32",p),m=new vwe(d);p=[{type:"int32",data:[d.strideHeight,d.strideWidth]},{type:"int32",data:[d.effectiveFilterHeight-1-d.padInfo.top,d.effectiveFilterWidth-1-d.padInfo.left]},{type:"int32",data:[d.dilationHeight,d.dilationWidth]},{type:"int32",data:[d.effectiveFilterHeight,d.effectiveFilterWidth]},{type:"int32",data:[d.outHeight]},{type:"int32",data:[d.outWidth]}];const g=t.runWebGPUProgram(m,[r,A],a.dtype,p);return t.disposeData(A.dataId),g}const Ewe={kernelName:$g,backendName:"webgpu",kernelFunc:Swe};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _we(n){const{inputs:e,backend:t,attrs:s}=n,{filterSize:r,strides:i,pad:o,includeBatchInIndex:a}=s,{x:l}=e;z(l.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${l.shape.length}.`);const c=[1,1];z(nr(i,c),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${c}'`);const u=Pr(l.shape,r,i,c,o),h=[{type:"int32",data:[u.strideHeight,u.strideWidth]},{type:"int32",data:[u.padInfo.top,u.padInfo.left]},{type:"int32",data:[u.dilationHeight,u.dilationWidth]},{type:"int32",data:[u.inHeight,u.inWidth]},{type:"int32",data:[u.effectiveFilterHeight,u.effectiveFilterWidth]}];let d=new Km(u,"max",!1);const f=t.runWebGPUProgram(d,[l],l.dtype,h);d=new Km(u,"max",!0,!0,a);const p=t.runWebGPUProgram(d,[l],"int32",h);return[f,p]}const Twe={kernelName:Lg,backendName:"webgpu",kernelFunc:_we};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bwe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:i,keepDims:o}=s;return qh(r,i,o,"min",t)}const kwe={kernelName:Hf,backendName:"webgpu",kernelFunc:Bwe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Nwe=vr({opType:tn.MIN,cpuKernelImpl:Y2e}),Rwe={kernelName:ch,backendName:"webgpu",kernelFunc:Nwe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Mwe{constructor(e,t,s){this.uniforms="",this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t.map((r,i)=>r[0]+e[i]+r[1]),this.dispatchLayout=Ct(this.outputShape),this.dispatch=pt(this.dispatchLayout,this.outputShape,this.workgroupSize),this.xShape=e,t.map((r,i)=>{this.uniforms+=` pad${i} : vec2<i32>,`}),this.offset=s==="reflect"?0:1,this.shaderKey=`mirrorPad_${s}`}getUserCode(){const e=this.xShape.length,t=this.xShape.map((c,u)=>`uniforms.pad${u}[0]`).join(","),s=this.xShape.map((c,u)=>`uniforms.pad${u}[0] + uniforms.xShape${e>1?`[${u}]`:""}`).join(","),r=e===1?"start":"start[i]",i=e===1?"end":"end[i]",o=e===1?"outC":"outC[i]",a=Fs(e),l=e>1?["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,e):"coords";return`
      ${ft("index")} {
        if (index < uniforms.size) {
          let start = ${a}(${t});
          let end = ${a}(${s});
          var outC = getCoordsFromIndex(index);
          for (var i = 0; i < ${e}; i = i + 1) {
            if (${o} < ${r}) {
              ${o} = ${r} * 2 - ${o} - ${this.offset};
            } else if(${o} >= ${i}) {
              ${o} = (${i} - 1) * 2 - ${o} + ${this.offset};
            }
          }
          let coords = outC - start;
          setOutputAtIndex(index, getX(${l}));
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Dwe={kernelName:qf,backendName:"webgpu",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{x:s}=n,{paddings:r,mode:i}=e,o=t,a=r.map(u=>({type:"int32",data:[u[0],u[1]]})),l=new Mwe(s.shape,r,i);return o.runWebGPUProgram(l,[s],s.dtype,a)}};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Fwe=vr({opType:tn.MOD}),$we={kernelName:uh,backendName:"webgpu",kernelFunc:Fwe};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Pwe{constructor(e,t){this.variableNames=["probs"],this.outputShape=[],this.uniforms="seed : f32, numOutcomes: i32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e,t],this.dispatchLayout=Ct(this.outputShape),this.dispatch=pt(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="multinomial"}getUserCode(){return`
    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    fn random (seed : f32, resultUV : vec2<f32>) -> f32 {
      let HASHSCALE1 = 443.8975;
      let p = resultUV * seed;
      var p3  = fract(vec3<f32>(p.xyx) * HASHSCALE1);
      p3 = p3 + dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${ft("index")} {
      if (index < uniforms.size) {
        let coords = getOutputCoords();
        let batch = coords[0];

        let resUV = vec2<f32>(f32(coords[1]) / f32(uniforms.outShape[1]),
            f32(coords[0]) / f32(uniforms.outShape[0]));
        let r = random(uniforms.seed, resUV);
        var cdf = 0.0;
        for (var i = 0; i < uniforms.numOutcomes - 1; i = i + 1) {
          cdf = cdf + getProbs(batch, i);

          if (r < cdf) {
            setOutputAtIndexI32(index, i);
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutputAtIndexI32(index, uniforms.numOutcomes - 1);
      }
    }
  `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Lwe{constructor(e){this.variableNames=["logits"],this.outputShape=e,this.dispatchLayout=Ct(this.outputShape),this.dispatch=[this.outputShape[0],1,1],this.outputShape[1]>=4096?this.workgroupSize=[256,1,1]:this.workgroupSize=[64,1,1],this.shaderKey="softmax"}getUserCode(){return`
    var<workgroup> buf : array<f32, ${this.workgroupSize[0]}>;
    var<workgroup> rowMaxShared : f32;
    var<workgroup> rowSumShared : f32;
    const blockSize = ${this.workgroupSize[0]};
    ${ft("index")} {
      let row = index / blockSize;
      let tid = i32(localId.x);
      let cols = uniforms.outShape[1];

      var threadMax = -3.402823e+38f;
      for (var col = tid; col < cols; col += blockSize) {
        let value = getLogits(row, col);
        threadMax = max(threadMax, value);
      }
      if (tid < cols) {
        buf[tid] = threadMax;
      }
      workgroupBarrier();

      var reduceSize = min(cols, blockSize);
      for (var currSize = reduceSize >> 1;  currSize > 0; currSize = reduceSize >> 1) {
        reduceSize = currSize + (reduceSize & 1);
        if (tid < currSize) {
          buf[tid] = max(buf[tid], buf[tid + reduceSize]);
        }
        workgroupBarrier();
      }

      if (tid == 0) {
        rowMaxShared = buf[0];
      }
      workgroupBarrier();

      var threadSum = 0.0;
      for (var col = tid; col < cols; col += blockSize) {
        let subExp = exp(getLogits(row, col) - rowMaxShared);
        threadSum += subExp;
      }
      buf[tid] = threadSum;
      workgroupBarrier();

      for (var currSize = blockSize >> 1;  currSize > 0; currSize = currSize >> 1) {
        if (tid < currSize) {
          buf[tid] = buf[tid] + buf[tid + currSize];
        }
        workgroupBarrier();
      }

      if (tid == 0) {
        rowSumShared = buf[0];
      }
      workgroupBarrier();

      for (var col = tid; col < cols; col += blockSize) {
        let value = exp(getLogits(row, col) - rowMaxShared) / rowSumShared;
        setOutputAtCoords(row, col, value);
      }
  }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WP(n){const{inputs:e,backend:t,attrs:s}=n,{logits:r}=e,{dim:i}=s,o=$t({inputs:{x:r},backend:t,attrs:{shape:[ye(r.shape)/r.shape[i],r.shape[i]]}}),a=new Lwe(o.shape),l=t.runWebGPUProgram(a,[o],r.dtype),c=$t({inputs:{x:l},backend:t,attrs:{shape:r.shape}});return t.disposeData(o.dataId),t.disposeData(l.dataId),c}const Owe={kernelName:hp,backendName:"webgpu",kernelFunc:WP};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qwe(n){const{inputs:e,backend:t,attrs:s}=n,{logits:r}=e,{numSamples:i,seed:o,normalized:a}=s,l=a?r:WP({inputs:{logits:r},backend:t,attrs:{dim:r.shape.length-1}}),c=l.shape[0],u=l.shape[1],h=new Pwe(c,i),d=[{type:"float32",data:[o]},{type:"int32",data:[u]}],f=t.runWebGPUProgram(h,[l],"int32",d);return a||t.disposeData(l.dataId),f}const Uwe={kernelName:Og,backendName:"webgpu",kernelFunc:Qwe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zwe(n){const{inputs:e,backend:t}=n,{x:s}=e;if(t.shouldExecuteOnCPU([s])){const i=t.tensorMap.get(s.dataId),[o,a]=X2e(i.values,s.shape,s.dtype);return t.makeTensorInfo(a,s.dtype,o)}const r=new Rp(s.shape,it.NEG);return t.runWebGPUProgram(r,[s],s.dtype)}const Gwe={kernelName:Yf,backendName:"webgpu",kernelFunc:zwe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vwe(n){console.warn("tf.nonMaxSuppression() in webgpu locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:t,attrs:s}=n,{boxes:r,scores:i}=e,{maxOutputSize:o,iouThreshold:a,scoreThreshold:l}=s,c=t.readSync(r.dataId),u=t.readSync(i.dataId),{selectedIndices:h}=_A(c,u,o,a,l);return t.makeTensorInfo([h.length],"int32",new Int32Array(h))}const Wwe={kernelName:Qg,backendName:"webgpu",kernelFunc:Vwe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hwe(n){console.warn("tf.nonMaxSuppression() in webgpu locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:t,attrs:s}=n,{boxes:r,scores:i}=e,{maxOutputSize:o,iouThreshold:a,scoreThreshold:l,softNmsSigma:c}=s,u=t.readSync(r.dataId),h=t.readSync(i.dataId),d=o,f=a,p=l,A=c,{selectedIndices:m,selectedScores:g}=TA(u,h,d,f,p,A);return[t.makeTensorInfo([m.length],"int32",new Int32Array(m)),t.makeTensorInfo([g.length],"float32",new Float32Array(g))]}const qwe={kernelName:Ug,backendName:"webgpu",kernelFunc:Hwe};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ywe{constructor(e,t){this.variableNames=["x"],this.uniforms="onValue : f32, offValue : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e,t],this.dispatchLayout=Ct(this.outputShape),this.dispatch=pt(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="onehot"}getUserCode(){return`
      ${ft("index")} {
        if(index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          setOutputAtIndex(index, mix(uniforms.offValue, uniforms.onValue,
                                      f32(i32(round(getX(coords.x))) == coords.y)));
        }
      }
    `}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jwe(n){const{inputs:e,backend:t,attrs:s}=n,{indices:r}=e,{dtype:i,depth:o,onValue:a,offValue:l}=s,c=ye(r.shape),u=new Ywe(c,o),h=$t({inputs:{x:r},backend:t,attrs:{shape:[c]}}),d=[{type:"float32",data:[a]},{type:"float32",data:[l]}],f=t.runWebGPUProgram(u,[h],i,d);t.disposeData(h.dataId);const p=[...r.shape,o],A=$t({inputs:{x:f},backend:t,attrs:{shape:p}});return t.disposeData(f.dataId),A}const Xwe={kernelName:Kf,backendName:"webgpu",kernelFunc:jwe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function j0(n){const{inputs:e,backend:t}=n,{x:s}=e;if(s.dtype==="complex64"){const r=qA({inputs:{input:s},backend:t}),i=j0({inputs:{x:r},backend:t}),o=K1({inputs:{input:s},backend:t}),a=j0({inputs:{x:o},backend:t}),l=Hh({inputs:{real:i,imag:a},backend:t});return t.disposeData(r.dataId),t.disposeData(i.dataId),t.disposeData(o.dataId),t.disposeData(a.dataId),l}else return bi({attrs:{shape:s.shape,dtype:s.dtype,value:s.dtype==="string"?"":0},backend:t})}const Kwe={kernelName:pp,backendName:"webgpu",kernelFunc:j0};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HP(n){const{inputs:e,backend:t}=n,{x:s}=e;if(s.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(s.dtype==="complex64"){const r=qA({inputs:{input:s},backend:t}),i=HP({inputs:{x:r},backend:t}),o=K1({inputs:{input:s},backend:t}),a=j0({inputs:{x:o},backend:t}),l=Hh({inputs:{real:i,imag:a},backend:t});return t.disposeData(r.dataId),t.disposeData(i.dataId),t.disposeData(o.dataId),t.disposeData(a.dataId),l}else return bi({attrs:{shape:s.shape,dtype:s.dtype,value:1},backend:t})}const Jwe={kernelName:Xf,backendName:"webgpu",kernelFunc:HP};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zwe(n){const{inputs:e,backend:t,attrs:s}=n,{axis:r}=s;if(e.length===1)return DC({inputs:{input:e[0]},backend:t,attrs:{dim:r}});const i=e[0].shape,o=e[0].dtype;e.forEach(u=>{br(i,u.shape,"All tensors passed to stack must have matching shapes"),z(o===u.dtype,()=>"All tensors passed to stack must have matching dtypes")});const a=[],l=e.map(u=>{const h=DC({inputs:{input:u},backend:t,attrs:{dim:r}});return a.push(h),h}),c=FP({inputs:l,backend:t,attrs:{axis:r}});return a.forEach(u=>t.disposeData(u.dataId)),c}const eSe={kernelName:Jf,backendName:"webgpu",kernelFunc:Zwe};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qP(n,e=!1){const t=n.length,s=Fs(t),r=n.map((h,d)=>`uniforms.pad${d}[0]`).join(","),i=n.map((h,d)=>`uniforms.pad${d}[0] + uniforms.xShape${t>1?`[${d}]`:""}`).join(","),o=t>1?`${s}(${r})`:`${r}`,a=t>1?`${s}(${i})`:`${i}`,l=t>1?"any(paddedCoords < start)":"paddedCoords < start",c=t>1?"any(paddedCoords >= end)":"paddedCoords >= end",u=t>1?["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,t):"coords";return`
        let start = ${o};
        let end = ${a};
        if (${l} || ${c}) {
          setOutputAtIndex(index, ${e?0:"uniforms.constantValue"});
        } else {
          let coords = paddedCoords - start;
          setOutputAtIndex(index, getX(${u}));
        }
  `}class tSe{constructor(e,t){this.variableNames=["x"],this.uniforms="constantValue : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t.map((s,r)=>s[0]+e[r]+s[1]),this.dispatchLayout=Ct(this.outputShape),this.dispatch=pt(this.dispatchLayout,this.outputShape,this.workgroupSize),t.map((s,r)=>{this.uniforms+=` pad${r} : vec2<i32>,`}),this.xShape=e,this.shaderKey="pad"}getUserCode(){return`
      ${ft("index")} {
        if (index < uniforms.size) {
          let paddedCoords = getCoordsFromIndex(index);
          ${qP(this.xShape)}
        }
      }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nSe=n=>{const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{paddings:i,constantValue:o}=s;if(i.every(c=>dn(c,[0,0])))return qi({inputs:{x:r},backend:t});if(ye(r.shape)===0){const c=i.map((u,h)=>u[0]+r.shape[h]+u[1]);return bi({backend:t,attrs:{shape:c,value:o,dtype:r.dtype}})}const a=[{type:"float32",data:[o]}];i.map(c=>a.push({type:"int32",data:[c[0],c[1]]}));const l=new tSe(r.shape,i);return t.runWebGPUProgram(l,[r],r.dtype,a)},sSe={kernelName:Zf,backendName:"webgpu",kernelFunc:nSe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rSe=vr({opType:tn.POW}),iSe={kernelName:dh,backendName:"webgpu",kernelFunc:rSe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oSe(n){const{inputs:e,backend:t}=n,{x:s,alpha:r}=e,i=new q0(tn.PRELU,s.shape,r.shape);return t.runWebGPUProgram(i,[s,r],"float32")}const aSe={kernelName:ep,backendName:"webgpu",kernelFunc:oSe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lSe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:i,keepDims:o}=s;return qh(r,i,o,"prod",t)}const cSe={kernelName:tp,backendName:"webgpu",kernelFunc:lSe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uSe=n=>{const{backend:e,attrs:t}=n,{start:s,stop:r,step:i,dtype:o}=t,a=Z2e(s,r,i,o);return e.makeTensorInfo([a.length],o,a)},hSe={kernelName:zg,backendName:"webgpu",kernelFunc:uSe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dSe=vr({opType:tn.DIV}),fSe={kernelName:Yu,backendName:"webgpu",kernelFunc:dSe};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pSe=Pn({opType:it.RECIPROCAL}),mSe={kernelName:fh,backendName:"webgpu",kernelFunc:pSe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gSe=Pn({opType:it.RELU}),ASe={kernelName:ph,backendName:"webgpu",kernelFunc:gSe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ySe=Pn({opType:it.RELU6}),xSe={kernelName:mh,backendName:"webgpu",kernelFunc:ySe};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class bSe{constructor(e,t,s){this.variableNames=["x"],this.uniforms="adjustHeightWidth : vec2<f32>, halfPixelCenters : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e[0],t,s,e[3]],this.dispatchLayout=Ct(this.outputShape),this.dispatch=pt(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="resizeBilinear"}getUserCode(){return`
      ${ft("index")} {
        if (index < uniforms.size) {
        let coords = getCoordsFromIndex(index);
          let b = coords[0];
          let d = coords[3];
          let rc = coords.yz;

          let effectiveInSize = vec2<f32>(
            f32(uniforms.xShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.xShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveOutSize = vec2<f32>(
            f32(uniforms.outShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.outShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveInputOverOutputRatioRC =
              effectiveInSize / effectiveOutSize;

          // Fractional source index
          let sourceFracIndexRC =
            (vec2<f32>(rc) + vec2<f32>(uniforms.halfPixelCenters)) *
            effectiveInputOverOutputRatioRC - vec2<f32>(uniforms.halfPixelCenters);

          // Compute the four integer indices.
          let sourceFloorRC = vec2<i32>(sourceFracIndexRC);
          let sourceCeilRC = vec2<i32>(
            min(vec2<f32>(uniforms.xShape.yz) - vec2<f32>(1.0), ceil(sourceFracIndexRC)));

          let topLeft = getX(b, sourceFloorRC.x, sourceFloorRC.y, d);
          let bottomLeft = getX(b, sourceCeilRC.x, sourceFloorRC.y, d);
          let topRight = getX(b, sourceFloorRC.x, sourceCeilRC.y, d);
          let bottomRight = getX(b, sourceCeilRC.x, sourceCeilRC.y, d);

          let fracRC = sourceFracIndexRC - vec2<f32>(sourceFloorRC);

          let top = topLeft + (topRight - topLeft) * fracRC.y;
          let bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
          let newValue = top + (bottom - top) * fracRC.x;

          setOutputAtIndex(index, newValue);
        }
      }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vSe(n){const{inputs:e,backend:t,attrs:s}=n,{images:r}=e,{alignCorners:i,size:o,halfPixelCenters:a}=s,[l,c]=o,u=i&&l>1?1:0,h=i&&c>1?1:0,f=[{type:"float32",data:[u,h]},{type:"float32",data:[a?.5:0]}],p=new bSe(r.shape,l,c);return t.runWebGPUProgram(p,[r],"float32",f)}const CSe={kernelName:rp,backendName:"webgpu",kernelFunc:vSe};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ISe{constructor(e,t){this.variableNames=["dy"],this.uniforms=`effectiveXSize : vec2<i32>, effectiveYSize : vec2<i32>, heightScale : f32, widthScale : f32,
       invHeightScale : f32, invWidthScale : f32, winHeight : i32, winWidth : i32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Ct(this.outputShape),this.dispatch=pt(this.dispatchLayout,this.outputShape,this.workgroupSize),this.alignCorners=t,this.shaderKey=`resizeBilinearBackprop_${t}`}getUserCode(){return`
      ${ft("index")} {
        if (index < uniforms.size) {
          let coords = getOutputCoords();
          let b = coords[0];
          let d = coords[3];
          let r = coords[1];
          let c = coords[2];

          var accumulator = 0.0;

          // Compute bounds for where in dy we will look
          let startRLerp = floor(f32(r) * uniforms.invHeightScale);
          let startDyR = i32(startRLerp - f32(uniforms.winHeight / 2));

          let startCLerp = floor(f32(c) * uniforms.invWidthScale);
          let startDyC = i32(startCLerp - f32(uniforms.winWidth / 2));

          // Loop over dy
          for (var dyROffset = 0; dyROffset < uniforms.winHeight; dyROffset++) {
            let dyR = startDyR + dyROffset;

            // Guard against the window exceeding the bounds of dy
            if (dyR < 0 || dyR >= uniforms.dyShape[1]) {
              continue;
            }

            for (var dyCOffset = 0; dyCOffset < uniforms.winWidth; dyCOffset++) {
              let dyC = startDyC + dyCOffset;

              // Guard against the window exceeding the bounds of dy
              if (dyC < 0 || dyC >= uniforms.dyShape[2]) {
                continue;
              }

              let dxR = f32(dyR) * uniforms.heightScale;
              let topDxRIndex = i32(floor(dxR));
              let bottomDxRIndex = i32(min(ceil(dxR), f32(uniforms.outShape[1] - 1)));
              let dxRLerp = dxR - f32(topDxRIndex);
              let inverseDxRLerp = 1.0 - dxRLerp;

              let dxC = f32(dyC) * uniforms.widthScale;
              let leftDxCIndex = i32(floor(dxC));
              let rightDxCIndex = i32(min(ceil(dxC), f32(uniforms.outShape[2] - 1)));
              let dxCLerp = dxC - f32(leftDxCIndex);
              let inverseDxCLerp = 1.0 - dxCLerp;

              if (r == topDxRIndex && c == leftDxCIndex) {
                // topLeft
                accumulator +=
                  getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
              }

              if (r == topDxRIndex && c == rightDxCIndex) {
                // topRight
                accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
              }

              if (r == bottomDxRIndex && c == leftDxCIndex) {
                // bottomLeft
                accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
              }

              if (r == bottomDxRIndex && c == rightDxCIndex) {
                // bottomRight
                accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
              }
            }
          }
          // End loop over dy

          setOutputAtIndex(index, accumulator);
        }
      }
    `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wSe(n){const{inputs:e,backend:t,attrs:s}=n,{images:r,dy:i}=e,{alignCorners:o}=s,[,a,l]=r.shape,[,c,u]=i.shape,h=[o&&c>1?a-1:a,o&&u>1?l-1:l],d=[o&&c>1?c-1:c,o&&u>1?u-1:u],f=h[0]/d[0],p=h[1]/d[1],A=1/f,m=1/p,g=Math.ceil(A)*2+2,x=Math.ceil(m)*2+2,v=new ISe(r.shape,o),b=[{type:"int32",data:h},{type:"int32",data:d},{type:"float32",data:[f]},{type:"float32",data:[p]},{type:"float32",data:[A]},{type:"float32",data:[m]},{type:"int32",data:[g]},{type:"int32",data:[x]}];return t.runWebGPUProgram(v,[i],i.dtype,b)}const SSe={kernelName:Wg,backendName:"webgpu",kernelFunc:wSe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ESe{constructor(e,t,s,r){this.variableNames=["x"],this.uniforms="adjustHeightWidth : vec2<f32>, roundBase : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=[e[0],t,s,e[3]],this.dispatchLayout=Ct(this.outputShape),this.dispatch=pt(this.dispatchLayout,this.outputShape,this.workgroupSize),this.halfPixelCenters=r,this.shaderKey=`resizeNearest_${r}`}getUserCode(){let e;return this.halfPixelCenters?e="max((vec2<f32>(rc) + vec2<f32>(0.5)) * effectiveInputOverOutputRatioRC, vec2<f32>(0.0))":e="vec2<f32>(rc) * effectiveInputOverOutputRatioRC",`
      ${ft("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let b = coords[0];
          let d = coords[3];
          let rc = coords.yz;

          let effectiveInSize = vec2<f32>(
            f32(uniforms.xShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.xShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveOutSize = vec2<f32>(
            f32(uniforms.outShape.y) - uniforms.adjustHeightWidth[0],
            f32(uniforms.outShape.z) - uniforms.adjustHeightWidth[1]);

          let effectiveInputOverOutputRatioRC =
              effectiveInSize / effectiveOutSize;

          // Fractional source index
          let sourceFracIndexRC = ${e};

          // Compute the coordinators of nearest neighbor point.
          let inputShapeRC = vec2<f32>(f32(uniforms.xShape.y), f32(uniforms.xShape.z));
          let sourceNearestRC = vec2<i32>(
            min(inputShapeRC - 1.0, floor(sourceFracIndexRC + uniforms.roundBase)));
          let newValue = getX(b, sourceNearestRC.x, sourceNearestRC.y, d);

          setOutputAtIndex(index, newValue);
        }
      }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _Se(n){const{inputs:e,backend:t,attrs:s}=n,{images:r}=e,{alignCorners:i,halfPixelCenters:o,size:a}=s,[l,c]=a,u=i&&l>1?1:0,h=i&&c>1?1:0,f=[{type:"float32",data:[u,h]},{type:"float32",data:[i?.5:0]}],p=new ESe(r.shape,l,c,o);return t.runWebGPUProgram(p,[r],r.dtype,f)}const TSe={kernelName:sp,backendName:"webgpu",kernelFunc:_Se};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class BSe{constructor(e,t){this.variableNames=["dy"],this.uniforms=`effectiveXSize : vec2<i32>, effectiveYSize : vec2<i32>, invHeightScale : f32, invWidthScale : f32,
       winHeight : i32, winWidth : i32,`,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Ct(this.outputShape),this.dispatch=pt(this.dispatchLayout,this.outputShape,this.workgroupSize),this.alignCorners=t,this.shaderKey=`resizeNearestNeigborBackprop_${t}`}getUserCode(){return`
      ${ft("index")} {
        if (index < uniforms.size) {
          let coords = getOutputCoords();
          let b = coords[0];
          let d = coords[3];
          let r = coords[1];
          let c = coords[2];

          var accumulator = 0.0;

          // Compute bounds for where in dy we will look
          let startRLerp = floor(f32(r) * uniforms.invHeightScale);
          let startDyR = i32(floor(startRLerp - f32(uniforms.winHeight / 2)));

          let startCLerp = floor(f32(c) * uniforms.invWidthScale);
          let startDyC = i32(floor(startCLerp - f32(uniforms.winWidth / 2)));

          // Loop over dy
          for (var dyROffset = 0; dyROffset < uniforms.winHeight; dyROffset++) {
            let dyR = startDyR + dyROffset;

            // Guard against the window exceeding the bounds of dy
            if (dyR < 0 || dyR >= uniforms.dyShape[1]) {
              continue;
            }

            for (var dyCOffset = 0; dyCOffset < uniforms.winWidth; dyCOffset++) {
              let dyC = startDyC + dyCOffset;

              // Guard against the window exceeding the bounds of dy
              if (dyC < 0 || dyC >= uniforms.dyShape[2]) {
                continue;
              }

              let sourceFracRow = f32(uniforms.effectiveXSize[0]) *
                  (f32(dyR) / f32(uniforms.effectiveYSize[0]));

              let sourceFracCol = f32(uniforms.effectiveXSize[1]) *
                  (f32(dyC) / f32(uniforms.effectiveYSize[1]));

              let sourceNearestRow =
                  i32(min(f32(uniforms.outShape[1] - 1),
                  ${this.alignCorners?"floor(sourceFracRow + 0.5)":"floor(sourceFracRow)"}));

              let sourceNearestCol =
                  i32(min(f32(uniforms.outShape[2] - 1),
                  ${this.alignCorners?"floor(sourceFracCol + 0.5)":"floor(sourceFracCol)"}));

              if (r == sourceNearestRow && c == sourceNearestCol) {
                accumulator += getDy(b, dyR, dyC, d);
              }
            }
          }
          // End loop over dy

          setOutputAtIndex(index, accumulator);
        }
      }
    `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kSe(n){const{inputs:e,backend:t,attrs:s}=n,{images:r,dy:i}=e,{alignCorners:o}=s,[,a,l]=r.shape,[,c,u]=i.shape,h=[o&&c>1?a-1:a,o&&u>1?l-1:l],d=[o&&c>1?c-1:c,o&&u>1?u-1:u],f=h[0]/d[0],p=h[1]/d[1],A=1/f,m=1/p,g=Math.ceil(A)*2+2,x=Math.ceil(m)*2+2,v=new BSe(r.shape,o),b=[{type:"int32",data:h},{type:"int32",data:d},{type:"float32",data:[A]},{type:"float32",data:[m]},{type:"int32",data:[g]},{type:"int32",data:[x]}];return t.runWebGPUProgram(v,[i],i.dtype,b)}const NSe={kernelName:Vg,backendName:"webgpu",kernelFunc:kSe};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class RSe{constructor(e){this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Ct(this.outputShape),this.dispatch=pt(this.dispatchLayout,this.outputShape,this.workgroupSize),this.uniforms=" axis : vec4<i32>,",this.shaderKey="reverse"}getUserCode(){return`
      
      // Using uniform variables as judging conditions, so the function has
      // coherent execution within all threads.
      fn getReverseCoords(coords : vec4<i32>) -> vec4<i32> {
        var reverseCoords = coords;
        if (uniforms.axis[0] == 1) {
          reverseCoords[0] = uniforms.xShape[0] - coords[0] - 1;
        }
        if (uniforms.axis[1] == 1) {
          reverseCoords[1] = uniforms.xShape[1] - coords[1] - 1;
        }
        if (uniforms.axis[2] == 1) {
          reverseCoords[2] = uniforms.xShape[2] - coords[2] - 1;
        }
        if (uniforms.axis[3] == 1) {
          reverseCoords[3] = uniforms.xShape[3] - coords[3] - 1;
        }

        return reverseCoords;
      }
    
      ${ft("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let reverseCoords = getReverseCoords(coords);
          setOutputAtIndex(index, getX(reverseCoords[0],
              reverseCoords[1], reverseCoords[2], reverseCoords[3]));
        }
      }
    `}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MSe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{dims:i}=s,o=r.shape.length;if(o===0)return qi({inputs:{x:r},backend:t});const a=r.shape,l=[1,1,1,1];a.forEach((m,g)=>{const x=g+4-o;l[x]=m});const c=an(i,r.shape),u=[0,0,0,0];c.forEach(m=>{const g=m+4-o;u[g]=1});const h=[{type:"int32",data:u}],d=$t({inputs:{x:r},backend:t,attrs:{shape:l}}),f=new RSe(l),p=t.runWebGPUProgram(f,[d],d.dtype,h);t.disposeData(d.dataId);const A=$t({inputs:{x:p},backend:t,attrs:{shape:a}});return t.disposeData(p.dataId),A}const DSe={kernelName:ip,backendName:"webgpu",kernelFunc:MSe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class FSe{constructor(e,t){this.outputShape=[],this.variableNames=["x"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Ct(this.outputShape),this.dispatch=pt(this.dispatchLayout,this.outputShape,this.workgroupSize),this.uniforms=`centerX : f32, centerY : f32, sinRadians : f32,
          cosRadians : f32,`,this.shaderKey="rotate",this.outputShape=e,typeof t=="number"?(this.uniforms+=" fillValue : f32,",this.fillSnippet="var outputValue = uniforms.fillValue;",this.shaderKey+="_float"):(this.uniforms+=" fillValue : vec3<f32>,",this.fillSnippet="var outputValue = uniforms.fillValue[coords[3]];",this.shaderKey+="_vec3")}getUserCode(){return`
        ${ft("index")} {
          if (index < uniforms.size) {
            let coords = getCoordsFromIndex(index);
            let coordXFloat = (f32(coords[2]) - uniforms.centerX) *
                uniforms.cosRadians - (f32(coords[1]) - uniforms.centerY) *
                uniforms.sinRadians;
            let coordYFloat = (f32(coords[2]) - uniforms.centerX) *
                uniforms.sinRadians + (f32(coords[1]) - uniforms.centerY) *
                uniforms.cosRadians;
            let coordX = i32(round(coordXFloat + uniforms.centerX));
            let coordY = i32(round(coordYFloat + uniforms.centerY));
            ${this.fillSnippet}
            if(coordX >= 0 && coordX < uniforms.xShape[2] && coordY >= 0 &&
                coordY < uniforms.xShape[1]) {
              outputValue = getX(coords[0], coordY, coordX, coords[3]);
            }
            setOutputAtIndex(index, outputValue);
          }
        }
      `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $Se={kernelName:rA,backendName:"webgpu",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{image:s}=n,{radians:r,fillValue:i,center:o}=e,a=t,l=new FSe(s.shape,i),[c,u]=m1(o,s.shape[1],s.shape[2]),h=[{type:"float32",data:[c]},{type:"float32",data:[u]},{type:"float32",data:[Math.sin(r)]},{type:"float32",data:[Math.cos(r)]}];return typeof i=="number"?h.push({type:"float32",data:[Number.parseFloat(i.toFixed(2))]}):h.push({type:"float32",data:i}),a.runWebGPUProgram(l,[s],s.dtype,h)}};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PSe=Pn({opType:it.ROUND}),LSe={kernelName:gh,backendName:"webgpu",kernelFunc:PSe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OSe=Pn({opType:it.RSQRT,cpuKernelImpl:ebe}),QSe={kernelName:Ah,backendName:"webgpu",kernelFunc:OSe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class bm{constructor(e,t,s,r,i,o,a,l=!0){this.variableNames=["updates","indices"],this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=o,this.type=a,this.sumDupeIndices=l,this.dispatchLayout=Ct(e),this.dispatch=pt(this.dispatchLayout,e,this.workgroupSize),this.sliceDimGreaterThanOne=t>1,this.shaderKey=`scatter_${s}_${r}_${this.sliceDimGreaterThanOne}_${a}_${l}_${i.length}`;const c=Fs(i.length);this.uniforms=`sliceDim : i32, strides: ${c}, updatesSize: i32,`,this.updatesRank=r,this.indicesRank=s}getUserCode(){let e="";this.indicesRank===1?e="coords[0]":this.indicesRank===2&&(e="coords[0], j");const t=`getIndices(${e})`,s=this.sliceDimGreaterThanOne?"uniforms.strides[j]":"uniforms.strides";let r="",i="";this.dispatchLayout.x.length===1?(r="flattenedIndex",i=`
      fn getUpdatesCoordsFromFlatIndex(index : i32) -> i32 {
        return index;
      }
      `):this.dispatchLayout.x.length===2&&(r="vec2<i32>(flattenedIndex, coords[1])",i=`
      fn getUpdatesCoordsFromFlatIndex(index : i32) -> vec2<i32> {
        // N.B. |updates| could be a scalar tensor, conceptually representing a
        // 2D tensor with all values equal to that. By design, its size must be
        // the same as |outShape[1]| in one dimension, and |indicesShape[0]|
        // gives the other.
        let sliceSize = uniforms.outShape[1];
        let d0 = index / sliceSize;
        let d1 = index - d0 * sliceSize;
        return vec2<i32>(d0, d1);
      }
      `);const a=`getUpdates(${Array.from({length:this.updatesRank},(c,u)=>`coords[${u}]`).join(", ")})`;return`
    ${i}
      ${ft("index")} {
        if (index < uniforms.updatesSize) {
          let coords = getUpdatesCoordsFromFlatIndex(index);
          var flattenedIndex = 0;
          for (var j = 0; j < uniforms.sliceDim; j = j + 1) {
            let indexInside = i32(round(${t}));
            flattenedIndex = flattenedIndex + indexInside * ${s};
          }
          let updateValue =
              ${su(this.type)}(${a});
          let flatIndex = getOutputIndexFromCoords(${r});

          ${this.sumDupeIndices?Sc("&result[flatIndex]","updateValue",this.type):"atomicStore(&result[flatIndex], bitcast<i32>(updateValue));"}
        }
      }`}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function USe(n){const{inputs:e,backend:t,attrs:s}=n,{indices:r,updates:i}=e,{shape:o}=s,{sliceRank:a,numUpdates:l,sliceSize:c,strides:u,outputSize:h}=aa(i,r,o),d=[h/c,c];if(h===0)return t.makeTensorInfo(o,r.dtype);const f=$t({inputs:{x:r},backend:t,attrs:{shape:[l,a]}}),p=$t({inputs:{x:i},backend:t,attrs:{shape:[l,c]}}),A=p.dtype,m=bi({backend:t,attrs:{shape:d,value:0,dtype:A}}),g=ye(p.shape),x=[{type:"int32",data:[a]},{type:"int32",data:u},{type:"int32",data:[g]}],v=new bm(p.shape,a,f.shape.length,p.shape.length,u,d,A),b=t.runWebGPUProgram(v,[p,f],A,x,m),w=$t({inputs:{x:b},backend:t,attrs:{shape:o}});return t.disposeData(f.dataId),t.disposeData(p.dataId),t.disposeData(b.dataId),w}const zSe={kernelName:Hg,backendName:"webgpu",kernelFunc:USe};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class GSe{constructor(e,t){this.outputShape=[],this.variableNames=["sortedSequence","values"],this.uniforms="numInputs : i32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Ct(this.outputShape),this.dispatch=pt(this.dispatchLayout,this.outputShape,this.workgroupSize),this.side=t,this.shaderKey=`search_sorted_${t}`}getUserCode(){return`
      fn findBound(batch: i32, value: f32) -> i32 {
        var left = i32(0);
        var right = uniforms.numInputs;
        while (left < right) {
          var mid = (left + right) / 2;
          if (getSortedSequence(batch, mid) ${this.side==="left"?"<":"<="} value) {
            left = mid + 1;
          } else {
            right = mid;
          }
        }
        return right;
      }

      ${ft("index")} {
        if (index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let value = getValuesByOutputIndex(index);
          setOutputAtIndexI32(index, findBound(coords[0], value));
        }
      }
    `}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VSe(n){const{inputs:e,backend:t,attrs:s}=n,{sortedSequence:r,values:i}=e,{side:o}=s,a=new GSe([i.shape[0],i.shape[1]],o),l=[{type:"int32",data:[r.shape[1]]}];return t.runWebGPUProgram(a,[r,i],"int32",l)}const WSe={kernelName:Yg,backendName:"webgpu",kernelFunc:VSe};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class HSe{constructor(e,t,s){this.variableNames=["c","a","b"],this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=Ct(this.outputShape),this.dispatch=pt(this.dispatchLayout,this.outputShape,this.workgroupSize),this.cRank=e,this.rank=s,this.shaderKey="select"}getUserCode(){let e,t;if(this.rank>4)throw Error(`Where for rank ${this.rank} is not yet supported`);if(this.rank===1)t="resRC",e="resRC";else{const r=["resRC.x","resRC.y","resRC.z","resRC.w"],i=[],o=[];for(let a=0;a<this.outputShape.length;a++)o.push(`${r[a]}`),a<this.cRank&&i.push(`${r[a]}`);e=i.join(),t=o.join()}return`
      ${ft("index")} {
        if (index < uniforms.size) {
          let resRC = getCoordsFromIndex(index);
          let cVal = getC(${e});
          if (cVal >= 1.0) {
            setOutputAtIndex(index, getA(${t}));
          } else {
            setOutputAtIndex(index, getB(${t}));
          }
        }
      }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qSe(n){const{inputs:e,backend:t}=n,{condition:s,t:r,e:i}=e,o=new HSe(s.shape.length,r.shape,r.shape.length);return t.runWebGPUProgram(o,[s,r,i],tr(r.dtype,i.dtype))}const YSe={kernelName:op,backendName:"webgpu",kernelFunc:qSe};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jSe=Pn({opType:it.SELU}),XSe={kernelName:yh,backendName:"webgpu",kernelFunc:jSe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KSe=Pn({opType:it.SIGMOID}),JSe={kernelName:Ch,backendName:"webgpu",kernelFunc:KSe};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZSe=Pn({opType:it.SIGN}),eEe={kernelName:vh,backendName:"webgpu",kernelFunc:ZSe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tEe=Pn({opType:it.SIN}),nEe={kernelName:xh,backendName:"webgpu",kernelFunc:tEe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sEe=Pn({opType:it.SINH}),rEe={kernelName:bh,backendName:"webgpu",kernelFunc:sEe};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iEe=Pn({opType:it.SOFTPLUS}),oEe={kernelName:Ih,backendName:"webgpu",kernelFunc:iEe};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class aEe{constructor(e,t,s,r,i,o){this.variableNames=["x"],this.outputShape=[],this.uniforms="",this.workgroupSize=[64,1,1],this.size=!0;const a=new Array(r.length);for(let l=0;l<a.length;l++)a[l]=r[i[l]];this.outputShape=a,this.newDim=i,this.dispatchLayout=Ct(this.outputShape),this.dispatch=pt(this.dispatchLayout,this.outputShape,this.workgroupSize),this.xShape=e,this.paddedXShape=t,this.uniforms+=`reshapedPaddedXShape : ${Fs(r.length)}, paddedXShapeStrides : ${Fs(o)}, `,s.map((l,c)=>{this.uniforms+=` pad${c} : vec2<i32>,`}),this.shaderKey=`spaceToBatchND_${i}`}getUserCode(){const e=Fs(this.outputShape.length),t=TP(this.newDim);return`
      ${c0(this.paddedXShape,"PaddedX")}
      ${ft("index")} {
        if(index < uniforms.size) {
          let coords = getCoordsFromIndex(index);
          let switchedIndex = getIndexFromCoords${this.outputShape.length}D(${e}(${t}), uniforms.reshapedPaddedXShape);
          let paddedCoords = getPaddedXCoordsFromIndex(switchedIndex);
          ${qP(this.xShape,!0)}
        }
      }
    `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lEe=n=>{const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{blockShape:i,paddings:o}=s;z(r.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGPU backend not implemented yet");const a=i.reduce((x,v)=>x*v),l=[[0,0]];l.push(...o);for(let x=1+i.length;x<r.shape.length;++x)l.push([0,0]);const c=l.map((x,v)=>x[0]+r.shape[v]+x[1]),u=$h(c,i,a,!1),h=Ph(u.length,i.length,!1),d=Lh(c,i,a,!1),f=Ot(c),p=new aEe(r.shape,c,l,u,h,f.length),A=[{type:"int32",data:u},{type:"int32",data:f}];l.map(x=>A.push({type:"int32",data:[x[0],x[1]]}));const m=t.runWebGPUProgram(p,[r],r.dtype,A),g=$t({inputs:{x:m},backend:t,attrs:{shape:d}});return t.disposeData(m.dataId),g},cEe={kernelName:cp,backendName:"webgpu",kernelFunc:lEe};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class uEe{constructor(e,t,s){this.variableNames=["input","indices","segmentIds"],this.outputShape=[],this.uniforms="segmentSize : i32, sparseSize : i32,",this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=e,this.type=s,this.dispatchLayout=Ct([t]),this.dispatch=pt(this.dispatchLayout,[t],this.workgroupSize),this.shaderKey="sparseSegmentSum"}getUserCode(){return`
    ${ft("index")} {
      if (index < uniforms.sparseSize) {
        let indexInSegmentIds = index / uniforms.segmentSize;
        let indexInSegment = index % uniforms.segmentSize;
        let indexInInput = indices[indexInSegmentIds];
        let segmentId = segmentIds[indexInSegmentIds];

        let value = input[indexInInput * uniforms.segmentSize + indexInSegment];
        let outIndex = segmentId * uniforms.segmentSize + indexInSegment;
        ${Sc("&result[outIndex]","value",this.type)}
      }
    }
  `}}class hEe{constructor(e,t){this.variableNames=["segmentIds"],this.outputShape=[],this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=[e],this.dispatchLayout=Ct(t),this.dispatch=pt(this.dispatchLayout,t,this.workgroupSize),this.shaderKey="sparseSegmentIdCountProgram"}getUserCode(){return`
    ${ft("index")} {
      if (index < uniforms.segmentIdsShape) {
        let segmentId = segmentIds[index];
        ${Sc("&result[segmentId]","1","int32")}
      }
    }
  `}}class dEe{constructor(e,t){this.variableNames=["segmentSum","sameSegmentIdCount"],this.outputShape=[],this.uniforms="segmentSize : i32",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.type=t,this.dispatchLayout=Ct(e),this.dispatch=pt(this.dispatchLayout,e,this.workgroupSize),this.shaderKey="sparseSegmentMean"}getUserCode(){return`
    ${ft("index")} {
      if (index < uniforms.size) {
        let segmentId = index / uniforms.segmentSize;
        let count = sameSegmentIdCount[segmentId];
        if (count != 0) {
          ${this.type==="float32"?"setOutputAtIndex(index, segmentSum[index] / f32(count));":"setOutputAtIndexI32(index, segmentSum[index] / count);"}
        }
      }
    }
  `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YP(n,e,t,s=!1,r){const o=ye(n.shape)/n.shape[0],a=n.dtype,l=ye(e.shape),c=r.readSync(t.dataId),h=l>0?c[l-1]+1:0;let d;const f=n.shape.slice();f[0]=h;const p=l*o,A=bi({backend:r,attrs:{shape:f,value:0,dtype:a}});d=new uEe(f,p,a);let m=[{type:"int32",data:[o]},{type:"int32",data:[p]}];const g=r.runWebGPUProgram(d,[n,e,t],a,m,A);if(s)return g;const x=bi({backend:r,attrs:{shape:[h],value:0,dtype:"int32"}});d=new hEe(h,t.shape);const v=r.runWebGPUProgram(d,[t],"int32",null,x),b=bi({backend:r,attrs:{shape:f,value:0,dtype:a}});d=new dEe(f,a),m=[{type:"int32",data:[o]}];const w=r.runWebGPUProgram(d,[g,v],a,m,b);return r.disposeData(g.dataId),r.disposeData(v.dataId),w}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fEe(n){const{inputs:e,backend:t}=n,{data:s,indices:r,segmentIds:i}=e;return YP(s,r,i,!1,t)}const pEe={kernelName:jg,backendName:"webgpu",kernelFunc:fEe};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mEe(n){const{inputs:e,backend:t}=n,{data:s,indices:r,segmentIds:i}=e;return YP(s,r,i,!0,t)}const gEe={kernelName:Xg,backendName:"webgpu",kernelFunc:mEe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class AEe{constructor(e,t){this.variableNames=["A"],this.workgroupSize=[64,1,1],this.size=!0;const s=new Array(e.length);for(let r=0;r<s.length;r++)s[r]=e[r]*t[r];this.outputShape=s,this.dispatchLayout=Ct(this.outputShape),this.dispatch=pt(this.dispatchLayout,this.outputShape,this.workgroupSize),this.rank=this.outputShape.length,this.shaderKey="tile"}getUserCode(){const e=yEe(this.rank,"uniforms.");return`
      ${ft("index")} {
        if (index < uniforms.size) {
          let resRC = getCoordsFromIndex(index);
          setOutputAtIndex(index, getA(${e}));
        }
      }
    `}}function yEe(n,e=""){if(n>=5)throw Error(`Tile for rank ${n} is not yet supported`);if(n===1)return`(resRC % ${e}aShape)`;const t=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[];for(let r=0;r<n;r++)s.push(`(${t[r]} % ${e}aShape[${r}])`);return s.join()}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kS(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{reps:i}=s;if(t.shouldExecuteOnCPU([r])||r.dtype==="string"||r.shape.length>=5){const l=t.readSync(r.dataId),c=r.dtype==="string"?l.map(d=>Eo(d)):l,u=rn(r.shape,r.dtype,c),h=abe(u,i);return t.makeTensorInfo(h.shape,h.dtype,h.values)}const o=new AEe(r.shape,i);return t.runWebGPUProgram(o,[r],r.dtype)}const xEe={kernelName:Bh,backendName:"webgpu",kernelFunc:kS};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bEe(n){const{inputs:e,backend:t,attrs:s}=n,{sparseIndices:r,sparseValues:i,defaultValue:o}=e,{outputShape:a}=s,{sliceRank:l,numUpdates:c,sliceSize:u,strides:h,outputSize:d}=aa(i,r,a),f=!1;if(i.dtype==="string"){const M=t.bufferSync(r),T=t.bufferSync(i),k=Eo(t.readSync(o.dataId)[0]),B=tbe(M,T,a,d,u,c,l,h,k,f);return t.makeTensorInfo(a,B.dtype,B.values)}const p=[d/u,u],A=$t({inputs:{x:r},backend:t,attrs:{shape:[c,l]}}),m=i.shape.length?$t({inputs:{x:i},backend:t,attrs:{shape:[c,u]}}):qi({inputs:{x:i},backend:t}),g=m.dtype,x=t.makeTensorInfo([],g,Ar(1,g)),v=$t({inputs:{x:o},backend:t,attrs:{shape:Array(p.length).fill(1)}}),b=kS({inputs:{x:v},backend:t,attrs:{reps:p}}),w=ye([c,u]),_=[{type:"int32",data:[l]},{type:"int32",data:h},{type:"int32",data:[w]}];switch(c){case 0:break;case 1:{const M=new bm([c,u],l,A.shape.length,m.shape.length,h,p,g,f);t.runWebGPUProgram(M,[m,A],g,_,b)}break;default:{const M=new bm([c,u],l,A.shape.length,x.shape.length,h,p,g,f);t.runWebGPUProgram(M,[x,A],g,_,b)}{const M=new bm([c,u],l,A.shape.length,m.shape.length,h,p,g);t.runWebGPUProgram(M,[m,A],g,_,b)}}const N=$t({inputs:{x:b},backend:t,attrs:{shape:a}});return t.disposeData(A.dataId),t.disposeData(m.dataId),t.disposeData(v.dataId),t.disposeData(x.dataId),t.disposeData(b.dataId),N}const vEe={kernelName:Kg,backendName:"webgpu",kernelFunc:bEe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CEe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{numOrSizeSplits:i,axis:o}=s,a=an(o,r.shape)[0],l=B1(r,i,a),c=r.shape.length,u=new Array(c).fill(0),h=r.shape.slice();return l.map(d=>{const f=[...h];f[a]=d;const p=Mp({inputs:{x:r},backend:t,attrs:{begin:u,size:f}});return u[a]+=d,p})}const IEe={kernelName:up,backendName:"webgpu",kernelFunc:CEe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wEe=Pn({opType:it.SQRT}),SEe={kernelName:wh,backendName:"webgpu",kernelFunc:wEe};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EEe={kernelName:Jg,backendName:"webgpu",kernelFunc:({inputs:n,backend:e})=>{const{x:t}=n,s=e,r=new Rp(t.shape,it.SQUARE);return s.runWebGPUProgram(r,[t],t.dtype)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _Ee=vr({opType:tn.SQUARED_DIFFERENCE}),TEe={kernelName:Sh,backendName:"webgpu",kernelFunc:_Ee};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BEe({inputs:n,attrs:e,backend:t}){const{x:s}=n,r=new Rp(s.shape,it.STEP,"stepAlpha : f32,"),i=[{type:"float32",data:[e.alpha]}];return t.runWebGPUProgram(r,[s],s.dtype,i)}const kEe={kernelName:kh,backendName:"webgpu",kernelFunc:BEe};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class NEe{constructor(e){this.variableNames=["x"],this.workPerThread=1,this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Ct(this.outputShape),this.dispatch=pt(this.dispatchLayout,this.outputShape,this.workgroupSize,[this.workPerThread,1,1]);const t=Fs(this.outputShape.length);this.uniforms=`begin : ${t},  strides : ${t}, `,this.shaderKey="stridedSlice"}getUserCode(){const e=this.outputShape.length;let t="";if(e===1)t="coords * uniforms.strides + uniforms.begin";else{let r=0;t=this.outputShape.map((i,o)=>(r++,this.outputShape.length===1?`coords * uniforms.strides[${o}] + uniforms.begin[${o}]`:`coords[${r-1}] * uniforms.strides[${o}] + uniforms.begin[${o}]`)).join(",")}return`
       ${ft("index")} {
         if (index < uniforms.size) {
           let coords = getCoordsFromIndex(index);
           setOutputAtIndex(index, getX(${t}));
         }
       }
     `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function REe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{begin:i,end:o,strides:a,beginMask:l,endMask:c,ellipsisMask:u,newAxisMask:h,shrinkAxisMask:d}=s,{finalShapeSparse:f,finalShape:p,isIdentity:A,sliceDim0:m,isSimpleSlice:g,begin:x,end:v,strides:b}=d1(r.shape,i,o,a,l,c,u,h,d);let w;if(A)w=$t({inputs:{x:r},backend:t,attrs:{shape:p}});else if(m||g){z(r.shape.length>=1,()=>`Input must have rank at least 1, got: ${r.shape.length}`);const _=h1(x,v,b),N=Mp({inputs:{x:r},backend:t,attrs:{begin:x,size:_}});w=$t({inputs:{x:N},backend:t,attrs:{shape:p}}),t.disposeData(N.dataId)}else if(t.shouldExecuteOnCPU([r])){const N=t.readSync(r.dataId),M=rn(r.shape,r.dtype,N),T=rbe(f,M,b,x);w=t.makeTensorInfo(p,r.dtype,T.values)}else{const N=new NEe(f),M=[{type:"int32",data:x},{type:"int32",data:b}],T=t.runWebGPUProgram(N,[r],r.dtype,M);w=$t({inputs:{x:T},backend:t,attrs:{shape:p}}),t.disposeData(T.dataId)}return w}const MEe={kernelName:eA,backendName:"webgpu",kernelFunc:REe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DEe(n){const{inputs:e,backend:t,attrs:s}=n,{separator:r,nGramWidths:i,leftPad:o,rightPad:a,padWidth:l,preserveShortSequences:c}=s,{data:u,dataSplits:h}=e,d=t.readSync(u.dataId),f=t.readSync(h.dataId),[p,A]=ibe(d,f,r,i,o,a,l,c);return[t.makeTensorInfo([p.length],"string",p),t.makeTensorInfo(h.shape,"int32",A)]}const FEe={kernelName:tA,backendName:"webgpu",kernelFunc:DEe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $Ee=vr({opType:tn.SUB,cpuKernelImpl:obe,supportsComplex:!0}),PEe={kernelName:Eh,backendName:"webgpu",kernelFunc:$Ee};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LEe=Pn({opType:it.TAN}),OEe={kernelName:_h,backendName:"webgpu",kernelFunc:LEe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QEe=Pn({opType:it.TANH}),UEe={kernelName:Th,backendName:"webgpu",kernelFunc:QEe};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zEe(n){const{inputs:e,backend:t,attrs:s}=n,{tensor:r,indices:i,updates:o}=e,{sliceRank:a,numUpdates:l,sliceSize:c,strides:u,outputSize:h}=aa(o,i,r.shape),d=[h/c,c];if(h===0)return t.makeTensorInfo(r.shape,i.dtype);const f=[],p=$t({inputs:{x:i},backend:t,attrs:{shape:[l,a]}});f.push(p);const A=$t({inputs:{x:o},backend:t,attrs:{shape:[l,c]}});f.push(A);const m=$t({inputs:{x:r},backend:t,attrs:{shape:d}});f.push(m);const g=kS({inputs:{x:m},backend:t,attrs:{reps:Array(d.length).fill(1)}}),x=new bm([l,c],a,p.shape.length,A.shape.length,u,d,r.dtype,!1),v=ye([l,c]),b=[{type:"int32",data:[a]},{type:"int32",data:u},{type:"int32",data:[v]}],w=t.runWebGPUProgram(x,[A,p],m.dtype,b,g);f.push(w);const _=$t({inputs:{x:w},backend:t,attrs:{shape:r.shape}});return f.forEach(N=>t.disposeData(N.dataId)),_}const GEe={kernelName:qg,backendName:"webgpu",kernelFunc:zEe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class VEe{constructor(e){this.variableNames=["x","indices"],this.workgroupSize=[256,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Ct(this.outputShape),this.dispatch=pt(this.dispatchLayout,this.outputShape,this.workgroupSize),this.uniforms=`inputSize : i32, firstPass : i32, negativeInf : f32,
        dir : i32, inc : i32,`,this.shaderKey="swap"}getUserCode(){return`
        ${ft("index")} {
          if (index < uniforms.size) {
            let outC = getCoordsFromIndex(index);
            let batch = outC[0];
            let elemIdx = outC[1];
            // We compare elements pair-wise within a group of size 2 * inc.
            // The comparing rule for each group alternates between ascending
            // and descending. Within each group, we compare each pair at
            // positions i and i+inc. To decide whether an element at position i
            // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
            // inc, it is in the first half of the group, we denote it as x0,
            // otherwise we denote it as x1.
            // For example, as shown in the Bitonic top K paper referenced
            // above, Figure5(a) shows that element[1] is in the second half of
            // the group when group size is 2, but it is in the first half of
            // the group when group size is 4.
            let isFirstInPair = elemIdx % (2 * uniforms.inc) < uniforms.inc;
            var i = 0;
            if (isFirstInPair) {
              i = elemIdx;
            } else {
              i = elemIdx - uniforms.inc;
            }

            var i0 = 0;
            if (uniforms.firstPass == 1) {
              i0 = i;
            } else {
              i0 = i32(getIndices(batch, i));
            }

            var i1 = 0;
            if (uniforms.firstPass == 1) {
              i1 = i + uniforms.inc;
            } else {
              i1 = i32(getIndices(batch, i + uniforms.inc));
            }

            var x0 = f32(0.0);
            var x1 = f32(0.0);
            if (i0 < uniforms.inputSize) {
              x0 = getX(batch, i0);
            } else {
              x0 = uniforms.negativeInf;
            }
            if (i1 < uniforms.inputSize) {
              x1 = getX(batch, i1);
            } else {
              x1 = uniforms.negativeInf;
            }

            let reverse = elemIdx % (2 * uniforms.dir) >= uniforms.dir;
            let isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
            if (reverse == isGreater) {
              // Elements in opposite order of direction
              let iTemp = i0;
              i0 = i1;
              i1 = iTemp;
            }
            if (isFirstInPair) {
              setOutputAtIndex(index, f32(i0));
            } else {
              setOutputAtIndex(index, f32(i1));
            }
          }
        }
      `}}class WEe{constructor(e){this.variableNames=["x","indices"],this.workgroupSize=[256,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Ct(this.outputShape),this.dispatch=pt(this.dispatchLayout,this.outputShape,this.workgroupSize),this.uniforms="inputSize : i32, firstPass : i32, k : i32,",this.shaderKey="merge"}getUserCode(){return`
        ${ft("index")} {
          if (index < uniforms.size) {
            let outC = getCoordsFromIndex(index);
            let batch = outC[0];
            let elemIdx = outC[1];
            // The output size is half of the previous size.
            // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _
            // (k=4), we only need to output the indices at positions |, the
            // indices at positions _ can be thrown away, see Figure5(b) After
            // Phase 2 (Merge phase) in the Bitonic Top K paper referenced
            // above.
            // For example, the paper shows we only need to output the orange
            // bars. The output sequence should look like this | | | | | | | |.
            // Because the sequence is halved, to map the output index back to
            // the previous sequence to find the corresponding value, we need
            // to double the index. When we double the index, we basically
            // interpolate a position, so 2i looks like
            // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k
            // position of each 2k positions by - elemIdx % k. E.g. for output
            // at index 4,5,6,7, we want to get the corresponding element at
            // original index 8,9,10,11, for output at index 8,9,10,11,
            // we want to get the corresponding element at original index
            // 16,17,18,19, so on and so forth.

            var i = 0;
            if (elemIdx < uniforms.k) {
              i = elemIdx;
            } else {
              i = elemIdx * 2 - elemIdx % uniforms.k;
            }
            var i0 = 0;
            if (uniforms.firstPass == 1) {
              i0 = i;
            } else {
              i0 = i32(getIndices(batch, i));
            }
            var i1 = 0;
            if (uniforms.firstPass == 1) {
              i1 = i + uniforms.k;
            } else {
              i1 = i32(getIndices(batch, i + uniforms.k));
            }

            let x0 = getX(batch, i0);
            var x1 = f32(0.0);
            if (i1 < uniforms.inputSize) {
              x1 = getX(batch, i1);
            } else {
              x1 = x0;
            }

            if (x0 >= x1) {
              setOutputAtIndex(index, f32(i0));
            } else {
              setOutputAtIndex(index, f32(i1));
            }
          }
        }
      `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cd(n,e){e!==null&&n.disposeData(e.dataId)}function J3(n){let e=1;for(;e<n;)e*=2;return e}function HEe(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{k:i,sorted:o}=s,a=r.shape,l=a[a.length-1];if(t.shouldExecuteOnCPU([r])){const w=t.readSync(r.dataId),[_,N]=lbe(w,a,r.dtype,i,o);return[t.makeTensorInfo(_.shape,_.dtype,_.values),t.makeTensorInfo(N.shape,N.dtype,N.values)]}if(i===0)return a[a.length-1]=0,[t.makeTensorInfo(a,r.dtype,[]),t.makeTensorInfo(a,"int32",[])];if(l===1)return[r,bi({attrs:{shape:a,dtype:"int32",value:0},backend:t})];const u=ye(a)/l,h=$t({inputs:{x:r},attrs:{shape:[u,l]},backend:t}),d=J3(i),f=J3(l);let p=null;const A=()=>p===null?[h,h]:[h,p],m=(w,_,N)=>{const M=A(),T=new VEe(N),B=[{type:"int32",data:[l]},{type:"int32",data:[p===null?1:0]},{type:"float32",data:[Number.NEGATIVE_INFINITY]},{type:"int32",data:[w]},{type:"int32",data:[_]}],L=p;p=t.runWebGPUProgram(T,M,"int32",B),Cd(t,L)};for(let w=1;w<d;w*=2){const _=w*2;for(let N=w;N>=1;N/=2)m(_,N,[u,f])}for(let w=f;w>d;w/=2){const _=A(),N=new WEe([u,w/2]),T=[{type:"int32",data:[l]},{type:"int32",data:[p===null?1:0]},{type:"int32",data:[d]}],k=p;p=t.runWebGPUProgram(N,_,"int32",T),Cd(t,k);const B=d/2,L=B*2;for(let U=B;U>=1;U/=2)m(L,U,p.shape)}let g=p;p=Mp({inputs:{x:p},backend:t,attrs:{begin:0,size:[u,i]}}),Cd(t,g);let x=GP({inputs:{x:h,indices:p},backend:t,attrs:{axis:1,batchDims:1}});Cd(t,h);const v=a.slice(0,-1);v.push(i),g=p,p=$t({inputs:{x:p},attrs:{shape:v},backend:t}),Cd(t,g);const b=x;return x=$t({inputs:{x},attrs:{shape:v},backend:t}),Cd(t,b),[x,p]}const qEe={kernelName:nA,backendName:"webgpu",kernelFunc:HEe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class YEe{constructor(e){this.variableNames=["Image","Transforms"],this.uniforms="interpolationModeId : i32, fillModeId : i32, fillValue : f32,",this.workgroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=Ct(this.outputShape),this.dispatch=pt(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="transform"}getUserCode(){return`
          fn mapCoord(outCoord : f32, len : f32) -> f32{
            var inCoord = outCoord;
            if(uniforms.fillModeId == 2) {
              if (inCoord < 0.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz2 = 2.0 * len;
                  if (inCoord < sz2) {
                    inCoord = sz2 * f32(i32(f32(-inCoord / sz2))) +
                    inCoord;
                  }
                  if (inCoord < -len) {
                    inCoord = inCoord + sz2;
                  } else {
                    inCoord = -inCoord - 1.0;
                  }
                }
              } else if (inCoord > len - 1.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz2 = 2.0 * len;
                  inCoord = inCoord - sz2 * f32(i32(f32(inCoord / sz2)));
                  if (inCoord >= len) {
                    inCoord = sz2 - inCoord - 1.0;
                  }
                }
              }
              return clamp(inCoord, 0.0, len - 1.0);
            } else if (uniforms.fillModeId == 3) {
              if (inCoord < 0.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz = len - 1.0;
                  inCoord = inCoord + len * (f32(i32(f32(-inCoord / sz))) + 1.0);
                }
              } else if (inCoord > len - 1.0) {
                if (len <= 1.0) {
                  inCoord = 0.0;
                } else {
                  let sz = len - 1.0;
                  inCoord = inCoord - len * f32(i32(f32(inCoord / sz)));
                }
              }
              return clamp(inCoord, 0.0, len - 1.0);
            } else if (uniforms.fillModeId == 4) {
              return clamp(outCoord, 0.0, len - 1.0);
            }
            return outCoord;
          }
          fn readWithFillValue(batch : i32, coordY : i32, coordX : i32,
            channel : i32) -> f32 {
            var outputValue : f32;
            if (0 <= coordY && coordY < uniforms.imageShape[1] && 0 <= coordX && coordX < uniforms.imageShape[2]) {
                outputValue = getImage(batch, coordY, coordX, channel);
            } else {
              outputValue = uniforms.fillValue;
            }
            return outputValue;
          }

          ${ft("index")} {
            if (index < uniforms.size) {
              let coords = getCoordsFromIndex(index);
              var outputValue : f32;
              let batch = coords[0];
              let x = coords[2];
              let y = coords[1];
              let channel = coords[3];
              let xf = f32(x);
              let yf = f32(y);
              let a1 = getTransforms(batch, 0);
              let a2 = getTransforms(batch, 1);
              let a3 = getTransforms(batch, 2);
              let b1 = getTransforms(batch, 3);
              let b2 = getTransforms(batch, 4);
              let b3 = getTransforms(batch, 5);
              let c1 = getTransforms(batch, 6);
              let c2 = getTransforms(batch, 7);
              let projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = uniforms.fillValue;
              } else {
                let inX = (a1 * xf + a2 * yf + a3) / projection;
                let inY = (b1 * xf + b2 * yf + b3) / projection;
                let mapX = mapCoord(inX, f32(uniforms.imageShape[2]));
                let mapY = mapCoord(inY, f32(uniforms.imageShape[1]));

                if (uniforms.interpolationModeId == 1) {
                  let coordY = i32(round(mapY));
                  let coordX = i32(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  let yFloor = floor(mapY);
                  let xFloor = floor(mapX);
                  let yCeil = yFloor + 1.0;
                  let xCeil = xFloor + 1.0;
                  let valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, i32(yFloor), i32(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, i32(yFloor), i32(xCeil), channel);
                  let valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, i32(yCeil), i32(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, i32(yCeil), i32(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutputAtIndex(index, outputValue);
            }
          }
        `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jEe(n){const{inputs:e,backend:t,attrs:s}=n,{image:r,transforms:i}=e,{interpolation:o,fillMode:a,fillValue:l,outputShape:c}=s,[u,h,d,f]=r.shape,[p,A]=c??[h,d],m=[u,p,A,f],g=new YEe(m),x=o==="nearest"?1:2;let v;switch(a){case"constant":v=1;break;case"reflect":v=2;break;case"wrap":v=3;break;case"nearest":v=4;break;default:v=1;break}const b=[{type:"int32",data:[x]},{type:"int32",data:[v]},{type:"float32",data:[l]}];return t.runWebGPUProgram(g,[r,i],"float32",b)}const XEe={kernelName:sA,backendName:"webgpu",kernelFunc:jEe};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KEe(n){const{inputs:e,backend:t,attrs:s}=n,{value:r}=e;let{axis:i}=s;i<0&&(i+=r.shape.length);const o=r,a=o.shape.length,l=r.shape[i],c=new Array(a-1);let u=0;for(let A=0;A<a;A++)A!==i&&(c[u++]=o.shape[A]);const h=[],d=new Array(a).fill(0),f=o.shape.slice();f[i]=1;const p=new Array(l);for(let A=0;A<p.length;A++){d[i]=A;const m=Mp({inputs:{x:o},backend:t,attrs:{begin:d,size:f}}),g=$t({inputs:{x:m},backend:t,attrs:{shape:c}});p[A]=g,h.push(m)}return h.forEach(A=>t.disposeData(A.dataId)),p}const JEe={kernelName:dp,backendName:"webgpu",kernelFunc:KEe};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ZEe{constructor(e,t,s){if(this.outputShape=[],this.variableNames=["x","segmentIds"],this.uniforms="numSegments : i32, xSize: i32,",this.workgroupSize=[64,1,1],this.atomic=!0,this.outputShape=t,this.dispatchLayout=Ct(e),this.dispatch=pt(this.dispatchLayout,e,this.workgroupSize),s!=="float32"&&s!=="int32")throw new Error(`UnsortedSegmentSum only supports float32 and int32
              types, does not support ${s} type.`);this.type=s,this.shaderKey="unsortedSegmentSum"}getUserCode(){return`
    ${ft("index")} {
      if (index < uniforms.xSize) {
        let coords = getXCoordsFromIndex(index);
        let b = coords[0];
        let inCol = coords[1];

        let segmentId = i32(getSegmentIds(inCol));
        if (segmentId >= 0) {
          let flatIndex = b * uniforms.numSegments + segmentId % uniforms.numSegments;
          let value = getX(b, inCol);

          ${Sc("&result[flatIndex]","value",this.type)}
        }
      }
    }
  `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function e_e(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,segmentIds:i}=e,{numSegments:o}=s,a=r.shape.length,l=[];let c=0;const u=ss([c],a);let h=r;u!=null&&(h=Fa({inputs:{x:r},backend:t,attrs:{perm:u}}),l.push(h),c=ys(1,a)[0]);const d=Ow(h.shape,c,o),f=ye([h.shape[c]]),p=$t({inputs:{x:h},backend:t,attrs:{shape:[-1,f]}});l.push(p);const A=r.dtype,m=[p.shape[0],o],g=bi({backend:t,attrs:{shape:m,value:0,dtype:A}}),x=new ZEe(p.shape,m,A),v=[{type:"int32",data:[o]},{type:"int32",data:[ye(p.shape)]}],b=t.runWebGPUProgram(x,[p,i],A,v,g),w=$t({inputs:{x:b},backend:t,attrs:{shape:d}});l.push(b);let _=w;if(u!=null){l.push(w);const N=Oa(u);_=Fa({inputs:{x:_},backend:t,attrs:{perm:N}})}return l.forEach(N=>t.disposeData(N.dataId)),_}const t_e={kernelName:fp,backendName:"webgpu",kernelFunc:e_e};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const n_e=[_2e,hbe,fbe,mbe,Abe,bbe,_be,Bbe,Nbe,Mbe,Fbe,Pbe,Obe,Ube,Gbe,Ybe,Xbe,eve,nve,rve,cve,fve,gve,bve,Cve,Eve,B2e,Bve,Mve,Uve,qve,Kve,eCe,nCe,rCe,oCe,lCe,hCe,fCe,mCe,ACe,bCe,_Ce,BCe,ICe,RCe,FCe,OCe,UCe,VCe,YCe,XCe,JCe,eIe,nIe,rIe,iIe,aIe,cIe,w2e,hIe,AIe,fIe,mIe,bIe,CIe,wIe,_Ie,kIe,RIe,DIe,T2e,$Ie,Nve,LIe,QIe,zIe,VIe,HIe,YIe,KIe,twe,ZIe,swe,iwe,awe,hwe,pwe,Wbe,gwe,ywe,Ewe,bwe,wwe,Twe,Hbe,kwe,Rwe,Dwe,$we,Uwe,WCe,Gwe,Wwe,qwe,Ave,Xwe,Jwe,eSe,sSe,iSe,aSe,cSe,hSe,yve,fSe,mSe,ASe,xSe,S2e,CSe,SSe,TSe,NSe,DSe,$Se,LSe,QSe,zSe,WSe,YSe,XSe,JSe,eEe,nEe,rEe,ave,kEe,MEe,FEe,Owe,oEe,cEe,pEe,gEe,vEe,IEe,SEe,EEe,TEe,PEe,HCe,OEe,UEe,GEe,xEe,qEe,XEe,Ibe,JEe,t_e,Kwe];for(const n of n_e)iA(n);/**
    * @license
    * Copyright 2023 Google LLC. All Rights Reserved.
    * Licensed under the Apache License, Version 2.0 (the "License");
    * you may not use this file except in compliance with the License.
    * You may obtain a copy of the License at
    *
    * http://www.apache.org/licenses/LICENSE-2.0
    *
    * Unless required by applicable law or agreed to in writing, software
    * distributed under the License is distributed on an "AS IS" BASIS,
    * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    * See the License for the specific language governing permissions and
    * limitations under the License.
    * =============================================================================
    */var jP=function(n,e){return(jP=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,s){t.__proto__=s}||function(t,s){for(var r in s)Object.prototype.hasOwnProperty.call(s,r)&&(t[r]=s[r])})(n,e)};function XP(n,e){if(typeof e!="function"&&e!==null)throw new TypeError("Class extends value "+String(e)+" is not a constructor or null");function t(){this.constructor=n}jP(n,e),n.prototype=e===null?Object.create(e):(t.prototype=e.prototype,new t)}var as=function(){return(as=Object.assign||function(n){for(var e,t=1,s=arguments.length;t<s;t++)for(var r in e=arguments[t])Object.prototype.hasOwnProperty.call(e,r)&&(n[r]=e[r]);return n}).apply(this,arguments)};function Nn(n,e,t,s){return new(t||(t=Promise))((function(r,i){function o(c){try{l(s.next(c))}catch(u){i(u)}}function a(c){try{l(s.throw(c))}catch(u){i(u)}}function l(c){var u;c.done?r(c.value):(u=c.value,u instanceof t?u:new t((function(h){h(u)}))).then(o,a)}l((s=s.apply(n,[])).next())}))}function Rn(n,e){var t,s,r,i,o={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]};return i={next:a(0),throw:a(1),return:a(2)},typeof Symbol=="function"&&(i[Symbol.iterator]=function(){return this}),i;function a(l){return function(c){return(function(u){if(t)throw new TypeError("Generator is already executing.");for(;o;)try{if(t=1,s&&(r=2&u[0]?s.return:u[0]?s.throw||((r=s.return)&&r.call(s),0):s.next)&&!(r=r.call(s,u[1])).done)return r;switch(s=0,r&&(u=[2&u[0],r.value]),u[0]){case 0:case 1:r=u;break;case 4:return o.label++,{value:u[1],done:!1};case 5:o.label++,s=u[1],u=[0];continue;case 7:u=o.ops.pop(),o.trys.pop();continue;default:if(r=o.trys,!((r=r.length>0&&r[r.length-1])||u[0]!==6&&u[0]!==2)){o=0;continue}if(u[0]===3&&(!r||u[1]>r[0]&&u[1]<r[3])){o.label=u[1];break}if(u[0]===6&&o.label<r[1]){o.label=r[1],r=u;break}if(r&&o.label<r[2]){o.label=r[2],o.ops.push(u);break}r[2]&&o.ops.pop(),o.trys.pop();continue}u=e.call(n,o)}catch(h){u=[6,h],s=0}finally{t=r=0}if(5&u[0])throw u[1];return{value:u[0]?u[1]:void 0,done:!0}})([l,c])}}}function du(n,e,t){if(t||arguments.length===2)for(var s,r=0,i=e.length;r<i;r++)!s&&r in e||(s||(s=Array.prototype.slice.call(e,0,r)),s[r]=e[r]);return n.concat(s||Array.prototype.slice.call(e))}var $a=["nose","left_eye","right_eye","left_ear","right_ear","left_shoulder","right_shoulder","left_elbow","right_elbow","left_wrist","right_wrist","left_hip","right_hip","left_knee","right_knee","left_ankle","right_ankle"],Zm=["nose","left_eye_inner","left_eye","left_eye_outer","right_eye_inner","right_eye","right_eye_outer","left_ear","right_ear","mouth_left","mouth_right","left_shoulder","right_shoulder","left_elbow","right_elbow","left_wrist","right_wrist","left_pinky","right_pinky","left_index","right_index","left_thumb","right_thumb","left_hip","right_hip","left_knee","right_knee","left_ankle","right_ankle","left_heel","right_heel","left_foot_index","right_foot_index"];function X0(n){return n instanceof SVGAnimatedLength?n.baseVal.value:n}function KP(n){return Nn(this,void 0,void 0,(function(){var e,t;return Rn(this,(function(s){switch(s.label){case 0:return e=document.createElement("canvas"),n instanceof cn?[4,vc(n,e)]:[3,2];case 1:return s.sent(),[3,3];case 2:e.width=X0(n.width),e.height=X0(n.height),t=e.getContext("2d"),n instanceof ImageData?t.putImageData(n,0,0):t.drawImage(n,0,0),s.label=3;case 3:return[2,e]}}))}))}function JP(n){return Nn(this,void 0,void 0,(function(){var e,t,s,r,i,o;return Rn(this,(function(a){switch(a.label){case 0:return n instanceof cn?(e=n.shape.slice(0,2),t=e[0],s=e[1],r=ImageData.bind,[4,vc(n)]):[3,2];case 1:return[2,new(r.apply(ImageData,[void 0,a.sent(),s,t]))];case 2:return i=document.createElement("canvas"),o=i.getContext("2d"),i.width=X0(n.width),i.height=X0(n.height),o.drawImage(n,0,0),[2,o.getImageData(0,0,i.width,i.height)]}}))}))}function s_e(n){return Nn(this,void 0,void 0,(function(){var e,t;return Rn(this,(function(s){switch(s.label){case 0:return n instanceof SVGImageElement||n instanceof OffscreenCanvas?[4,KP(n)]:[3,2];case 1:return t=s.sent(),[3,3];case 2:t=n,s.label=3;case 3:return e=t,[2,Fh(e,4)]}}))}))}function ZP(n){if(n<0||n>=256)throw new Error("Mask value must be in range [0, 255] but got ".concat(n));if(!Number.isInteger(n))throw new Error("Mask value must be an integer but got ".concat(n))}var Xp={runtime:"mediapipe",enableSmoothing:!0,enableSegmentation:!1,smoothSegmentation:!0,modelType:"full"},r_e=(function(){function n(e){this.mask=e}return n.prototype.toCanvasImageSource=function(){return Nn(this,void 0,void 0,(function(){return Rn(this,(function(e){return[2,this.mask]}))}))},n.prototype.toImageData=function(){return Nn(this,void 0,void 0,(function(){return Rn(this,(function(e){return[2,JP(this.mask)]}))}))},n.prototype.toTensor=function(){return Nn(this,void 0,void 0,(function(){return Rn(this,(function(e){return[2,s_e(this.mask)]}))}))},n.prototype.getUnderlyingType=function(){return"canvasimagesource"},n})();function i_e(n){return ZP(n),"person"}var o_e=(function(){function n(e){var t,s=this;switch(this.width=0,this.height=0,this.selfieMode=!1,this.poseSolution=new Sxe.Pose({locateFile:function(r,i){if(e.solutionPath){var o=e.solutionPath.replace(/\/+$/,"");return"".concat(o,"/").concat(r)}return"".concat(i,"/").concat(r)}}),e.modelType){case"lite":t=0;break;case"heavy":t=2;break;case"full":default:t=1}this.poseSolution.setOptions({modelComplexity:t,smoothLandmarks:e.enableSmoothing,enableSegmentation:e.enableSegmentation,smoothSegmentation:e.smoothSegmentation,selfieMode:this.selfieMode}),this.poseSolution.onResults((function(r){if(s.height=r.image.height,s.width=r.image.width,r.poseLandmarks==null)s.poses=[];else{var i=s.translateOutput(r.poseLandmarks,r.poseWorldLandmarks);r.segmentationMask&&(i.segmentation={maskValueToLabel:i_e,mask:new r_e(r.segmentationMask)}),s.poses=[i]}}))}return n.prototype.translateOutput=function(e,t){var s=this,r={keypoints:e.map((function(i,o){return{x:i.x*s.width,y:i.y*s.height,z:i.z,score:i.visibility,name:Zm[o]}}))};return t!=null&&(r.keypoints3D=t.map((function(i,o){return{x:i.x,y:i.y,z:i.z,score:i.visibility,name:Zm[o]}}))),r},n.prototype.estimatePoses=function(e,t,s){return Nn(this,void 0,void 0,(function(){var r,i;return Rn(this,(function(o){switch(o.label){case 0:return t&&t.flipHorizontal&&t.flipHorizontal!==this.selfieMode&&(this.selfieMode=t.flipHorizontal,this.poseSolution.setOptions({selfieMode:this.selfieMode})),e instanceof cn?(i=ImageData.bind,[4,vc(e)]):[3,2];case 1:return r=new(i.apply(ImageData,[void 0,o.sent(),e.shape[1],e.shape[0]])),[3,3];case 2:r=e,o.label=3;case 3:return e=r,[4,this.poseSolution.send({image:e},s)];case 4:return o.sent(),[2,this.poses]}}))}))},n.prototype.dispose=function(){this.poseSolution.close()},n.prototype.reset=function(){this.poseSolution.reset()},n.prototype.initialize=function(){return this.poseSolution.initialize()},n})();function a_e(n){return Nn(this,void 0,void 0,(function(){var e,t;return Rn(this,(function(s){switch(s.label){case 0:return e=(function(r){if(r==null)return as({},Xp);var i=as({},r);return i.runtime="mediapipe",i.enableSegmentation==null&&(i.enableSegmentation=Xp.enableSegmentation),i.enableSmoothing==null&&(i.enableSmoothing=Xp.enableSmoothing),i.smoothSegmentation==null&&(i.smoothSegmentation=Xp.smoothSegmentation),i.modelType==null&&(i.modelType=Xp.modelType),i})(n),[4,(t=new o_e(e)).initialize()];case 1:return s.sent(),[2,t]}}))}))}function lf(n){return n instanceof cn?{height:n.shape[0],width:n.shape[1]}:{height:n.height,width:n.width}}function eL(n){return n-2*Math.PI*Math.floor((n+Math.PI)/(2*Math.PI))}function NS(n){return n instanceof cn?n:Fh(n)}function tL(n,e,t){return FC(t,"inputResolution"),[1/t.width*n[0][0]*e.width,1/t.height*n[0][1]*e.width,n[0][3]*e.width,1/t.width*n[1][0]*e.height,1/t.height*n[1][1]*e.height,n[1][3]*e.height,0,0]}function FC(n,e){z(n.width!==0,(function(){return"".concat(e," width cannot be 0.")})),z(n.height!==0,(function(){return"".concat(e," height cannot be 0.")}))}function gb(n,e,t){var s=t.rotationVectorStartKeypointIndex,r=t.rotationVectorEndKeypointIndex,i=n.locationData,o=i.relativeKeypoints[s].x*e.width,a=i.relativeKeypoints[s].y*e.height,l=i.relativeKeypoints[r].x*e.width,c=i.relativeKeypoints[r].y*e.height,u=2*Math.sqrt((l-o)*(l-o)+(c-a)*(c-a)),h=(function(d,f,p){var A,m=d.locationData,g=p.rotationVectorStartKeypointIndex,x=p.rotationVectorEndKeypointIndex;A=p.rotationVectorTargetAngle?p.rotationVectorTargetAngle:Math.PI*p.rotationVectorTargetAngleDegree/180;var v=m.relativeKeypoints[g].x*f.width,b=m.relativeKeypoints[g].y*f.height,w=m.relativeKeypoints[x].x*f.width,_=m.relativeKeypoints[x].y*f.height;return eL(A-Math.atan2(-(_-b),w-v))})(n,e,t);return{xCenter:o/e.width,yCenter:a/e.height,width:u/e.width,height:u/e.height,rotation:h}}function nL(n){if(n.length!==16)throw new Error("Array length must be 16 but got ".concat(n.length));return[[n[0],n[1],n[2],n[3]],[n[4],n[5],n[6],n[7]],[n[8],n[9],n[10],n[11]],[n[12],n[13],n[14],n[15]]]}function Ab(n,e,t,s,r,i,o){return n[e][r]*(n[t][i]*n[s][o]-n[t][o]*n[s][i])}function Wr(n,e,t){var s=(e+1)%4,r=(e+2)%4,i=(e+3)%4,o=(t+1)%4,a=(t+2)%4,l=(t+3)%4;return Ab(n,s,r,i,o,a,l)+Ab(n,r,i,s,o,a,l)+Ab(n,i,s,r,o,a,l)}function Z3(n,e,t){t===void 0&&(t={ignoreRotation:!1});for(var s=[],r=0,i=n;r<i.length;r++){var o=i[r],a=o.x-.5,l=o.y-.5,c=t.ignoreRotation?0:e.rotation,u=Math.cos(c)*a-Math.sin(c)*l,h=Math.sin(c)*a+Math.cos(c)*l;u=u*e.width+e.xCenter,h=h*e.height+e.yCenter;var d=o.z*e.width,f=as({},o);f.x=u,f.y=h,f.z=d,s.push(f)}return s}function sL(n,e){var t=(function(s,r,i,o){var a=r-s,l=o-i,c=l/a;return{scale:c,offset:i-s*c}})(0,255,e[0],e[1]);return ue((function(){return $e(ne(n,t.scale),t.offset)}))}function $C(n,e,t){var s,r,i,o,a,l,c,u,h,d,f,p,A,m,g=e.outputTensorSize,x=e.keepAspectRatio,v=e.borderMode,b=e.outputTensorFloatRange,w=lf(n),_=(function(T,k){return k?{xCenter:k.xCenter*T.width,yCenter:k.yCenter*T.height,width:k.width*T.width,height:k.height*T.height,rotation:k.rotation}:{xCenter:.5*T.width,yCenter:.5*T.height,width:T.width,height:T.height,rotation:0}})(w,t),N=(function(T,k,B){if(B===void 0&&(B=!1),!B)return{top:0,left:0,right:0,bottom:0};var L=k.height,U=k.width;FC(k,"targetSize"),FC(T,"roi");var V,W,H=L/U,ee=T.height/T.width,K=0,te=0;return H>ee?(V=T.width,W=T.width*H,te=(1-ee/H)/2):(V=T.height/H,W=T.height,K=(1-H/ee)/2),T.width=V,T.height=W,{top:te,left:K,right:K,bottom:te}})(_,g,x),M=(s=_,r=w.width,i=w.height,o=!1,a=s.width,l=s.height,c=o?-1:1,u=Math.cos(s.rotation),h=Math.sin(s.rotation),d=s.xCenter,f=s.yCenter,p=1/r,A=1/i,(m=new Array(16))[0]=a*u*c*p,m[1]=-l*h*p,m[2]=0,m[3]=(-.5*a*u*c+.5*l*h+d)*p,m[4]=a*h*c*A,m[5]=l*u*A,m[6]=0,m[7]=(-.5*l*u-.5*a*h*c+f)*A,m[8]=0,m[9]=0,m[10]=a*p,m[11]=0,m[12]=0,m[13]=0,m[14]=0,m[15]=1,nL(m));return{imageTensor:ue((function(){var T=NS(n),k=ni(tL(M,w,g),[1,8]),B=v==="zero"?"constant":"nearest",L=Is.transform(Kn(Ze(T,"float32")),k,"bilinear",B,0,[g.height,g.width]);return b!=null?sL(L,b):L})),padding:N,transformationMatrix:M}}function eT(n,e,t,s){return s===1?.5*(n+e):n+(e-n)*t/(s-1)}function l_e(n){return ue((function(){var e=(function(r){return ue((function(){return[Rt(r,[0,0,0],[1,-1,1]),Rt(r,[0,0,1],[1,-1,-1])]}))})(n),t=e[0],s=e[1];return{boxes:Ht(s),logits:Ht(t)}}))}function rL(n){return n!=null&&n.currentTime!=null}function tT(n){for(var e={locationData:{relativeKeypoints:[]}},t=Number.MAX_SAFE_INTEGER,s=Number.MIN_SAFE_INTEGER,r=Number.MAX_SAFE_INTEGER,i=Number.MIN_SAFE_INTEGER,o=0;o<n.length;++o){var a=n[o];t=Math.min(t,a.x),s=Math.max(s,a.x),r=Math.min(r,a.y),i=Math.max(i,a.y),e.locationData.relativeKeypoints.push({x:a.x,y:a.y})}return e.locationData.relativeBoundingBox={xMin:t,yMin:r,xMax:s,yMax:i,width:s-t,height:i-r},e}function c_e(n,e,t,s){return Nn(this,void 0,void 0,(function(){var r,i,o,a,l;return Rn(this,(function(c){switch(c.label){case 0:return n.sort((function(u,h){return Math.max.apply(Math,h.score)-Math.max.apply(Math,u.score)})),r=ni(n.map((function(u){return[u.locationData.relativeBoundingBox.yMin,u.locationData.relativeBoundingBox.xMin,u.locationData.relativeBoundingBox.yMax,u.locationData.relativeBoundingBox.xMax]}))),i=fs(n.map((function(u){return u.score[0]}))),[4,Is.nonMaxSuppressionAsync(r,i,e,t)];case 1:return[4,(o=c.sent()).array()];case 2:return a=c.sent(),l=n.filter((function(u,h){return a.indexOf(h)>-1})),zt([r,i,o]),[2,l]}}))}))}function iL(n,e){return n.map((function(t){var s=as(as({},t),{x:t.x*e.width,y:t.y*e.height});return t.z!=null&&(s.z=t.z*e.width),s}))}function u_e(n,e,t){return Nn(this,void 0,void 0,(function(){var s,r,i,o,a,l,c,u,h,d,f,p,A,m,g,x,v,b,w,_,N,M,T,k;return Rn(this,(function(B){switch(B.label){case 0:if(s=Ht(e,[0]),r=s.shape,i=r[0],o=r[1],a=r[2],n.length!==a)throw new Error("Expected heatmap to have same number of channels as the number of landmarks. But got landmarks length: "+"".concat(n.length,", heatmap length: ").concat(a));return l=[],[4,s.buffer()];case 1:for(c=B.sent(),u=0;u<n.length;u++)if(h=n[u],d=as({},h),l.push(d),f=Math.trunc(d.x*o),p=Math.trunc(d.y*i),!(f<0||f>=o||p<0||f>=i)){for(A=Math.trunc((t.kernelSize-1)/2),m=Math.max(0,f-A),g=Math.min(o,f+A+1),x=Math.max(0,p-A),v=Math.min(i,p+A+1),b=0,w=0,_=0,N=0,M=x;M<v;++M)for(T=m;T<g;++T)k=c.get(M,T,u),b+=k,N=Math.max(N,k),w+=T*k,_+=M*k;N>=t.minConfidenceToRefine&&b>0&&(d.x=w/o/b,d.y=_/i/b)}return s.dispose(),[2,l]}}))}))}function nT(n,e){var t=e.left,s=e.top,r=e.left+e.right,i=e.top+e.bottom;return n.map((function(o){return as(as({},o),{x:(o.x-t)/(1-r),y:(o.y-s)/(1-i),z:o.z/(1-r)})}))}function h_e(n,e,t){return Cu()==="webgl"?(function(s,r,i){var o=i.combineWithPreviousRatio.toFixed(2),a={variableNames:["prevMask","newMask"],outputShape:s.shape,userCode:`
  void main() {
      ivec2 coords = getOutputCoords();
      int height = coords[0];
      int width = coords[1];

      float prevMaskValue = getPrevMask(height, width);
      float newMaskValue = getNewMask(height, width);

      /*
      * Assume p := newMaskValue
      * H(p) := 1 + (p * log(p) + (1-p) * log(1-p)) / log(2)
      * uncertainty alpha(p) =
      *   Clamp(1 - (1 - H(p)) * (1 - H(p)), 0, 1) [squaring the
      * uncertainty]
      *
      * The following polynomial approximates uncertainty alpha as a
      * function of (p + 0.5):
      */
      const float c1 = 5.68842;
      const float c2 = -0.748699;
      const float c3 = -57.8051;
      const float c4 = 291.309;
      const float c5 = -624.717;
      float t = newMaskValue - 0.5;
      float x = t * t;

      float uncertainty =
        1.0 - min(1.0, x * (c1 + x * (c2 + x * (c3 + x * (c4 + x * c5)))));

      float outputValue = newMaskValue + (prevMaskValue - newMaskValue) *
                             (uncertainty * `.concat(o,`);

      setOutput(outputValue);
    }
`)},l=Al();return ue((function(){var c=l.compileAndRun(a,[s,r]);return lr().makeTensorFromDataId(c.dataId,c.shape,c.dtype)}))})(n,e,t):ue((function(){var s=gt(e,.5),r=Jn(s),i=gt(1,vl(1,ne(r,$e(5.68842,ne(r,$e(-.748699,ne(r,$e(-57.8051,ne(r,$e(291.309,ne(r,-624.717)))))))))));return $e(e,ne(gt(n,e),ne(i,t.combineWithPreviousRatio)))}))}function d_e(n,e,t){return Nn(this,void 0,void 0,(function(){var s,r,i,o,a;return Rn(this,(function(l){switch(l.label){case 0:return s=n[0],r=n[1],i=(function(c,u,h){return ue((function(){var d,f,p,A;h.reverseOutputOrder?(f=Ht(Rt(c,[0,h.boxCoordOffset+0],[-1,1])),d=Ht(Rt(c,[0,h.boxCoordOffset+1],[-1,1])),A=Ht(Rt(c,[0,h.boxCoordOffset+2],[-1,1])),p=Ht(Rt(c,[0,h.boxCoordOffset+3],[-1,1]))):(d=Ht(Rt(c,[0,h.boxCoordOffset+0],[-1,1])),f=Ht(Rt(c,[0,h.boxCoordOffset+1],[-1,1])),p=Ht(Rt(c,[0,h.boxCoordOffset+2],[-1,1])),A=Ht(Rt(c,[0,h.boxCoordOffset+3],[-1,1]))),f=$e(ne(rt(f,h.xScale),u.w),u.x),d=$e(ne(rt(d,h.yScale),u.h),u.y),h.applyExponentialOnBoxSize?(p=ne(xr(rt(p,h.hScale)),u.h),A=ne(xr(rt(A,h.wScale)),u.w)):(p=ne(rt(p,h.hScale),u.h),A=ne(rt(A,h.wScale),u.h));var m=gt(d,rt(p,2)),g=gt(f,rt(A,2)),x=$e(d,rt(p,2)),v=$e(f,rt(A,2)),b=ps([ae(m,[h.numBoxes,1]),ae(g,[h.numBoxes,1]),ae(x,[h.numBoxes,1]),ae(v,[h.numBoxes,1])],1);if(h.numKeypoints)for(var w=0;w<h.numKeypoints;++w){var _=h.keypointCoordOffset+w*h.numValuesPerKeypoint,N=void 0,M=void 0;h.reverseOutputOrder?(N=Ht(Rt(c,[0,_],[-1,1])),M=Ht(Rt(c,[0,_+1],[-1,1]))):(M=Ht(Rt(c,[0,_],[-1,1])),N=Ht(Rt(c,[0,_+1],[-1,1])));var T=$e(ne(rt(N,h.xScale),u.w),u.x),k=$e(ne(rt(M,h.yScale),u.h),u.y);b=ps([b,ae(T,[h.numBoxes,1]),ae(k,[h.numBoxes,1])],1)}return b}))})(r,e,t),o=ue((function(){var c=s;return t.sigmoidScore?(t.scoreClippingThresh!=null&&(c=$r(s,-t.scoreClippingThresh,t.scoreClippingThresh)),c=Tr(c)):c})),[4,f_e(i,o,t)];case 1:return a=l.sent(),zt([i,o]),[2,a]}}))}))}function f_e(n,e,t){return Nn(this,void 0,void 0,(function(){var s,r,i,o,a,l,c,u,h,d,f,p;return Rn(this,(function(A){switch(A.label){case 0:return s=[],[4,n.data()];case 1:return r=A.sent(),[4,e.data()];case 2:for(i=A.sent(),o=0;o<t.numBoxes;++o)if(!(t.minScoreThresh!=null&&i[o]<t.minScoreThresh||(a=o*t.numCoords,l=p_e(r[a+0],r[a+1],r[a+2],r[a+3],i[o],t.flipVertically,o),(c=l.locationData.relativeBoundingBox).width<0||c.height<0))){if(t.numKeypoints>0)for((u=l.locationData).relativeKeypoints=[],h=t.numKeypoints*t.numValuesPerKeypoint,d=0;d<h;d+=t.numValuesPerKeypoint)f=a+t.keypointCoordOffset+d,p={x:r[f+0],y:t.flipVertically?1-r[f+1]:r[f+1]},u.relativeKeypoints.push(p);s.push(l)}return[2,s]}}))}))}function p_e(n,e,t,s,r,i,o){return{score:[r],ind:o,locationData:{relativeBoundingBox:{xMin:e,yMin:i?1-t:n,xMax:s,yMax:i?1-n:t,width:s-e,height:t-n}}}}function m_e(n,e){return n==="none"?e:(function(t){return 1/(1+Math.exp(-t))})(e)}function sT(n,e,t,s){return Nn(this,void 0,void 0,(function(){var r,i,o,a,l,c,u,h;return Rn(this,(function(d){switch(d.label){case 0:return t=t||e.flipHorizontally||!1,s=s||e.flipVertically||!1,r=n.size,i=r/e.numLandmarks,[4,n.data()];case 1:for(o=d.sent(),a=[],l=0;l<e.numLandmarks;++l)c=l*i,(h={x:0,y:0}).x=t?e.inputImageWidth-o[c]:o[c],i>1&&(h.y=s?e.inputImageHeight-o[c+1]:o[c+1]),i>2&&(h.z=o[c+2]),i>3&&(h.score=m_e(e.visibilityActivation,o[c+3])),a.push(h);for(u=0;u<a.length;++u)(h=a[u]).x=h.x/e.inputImageWidth,h.y=h.y/e.inputImageHeight,h.z=h.z/e.inputImageWidth/(e.normalizeZ||1);return[2,a]}}))}))}function rT(n,e,t){var s=n.width,r=n.height,i=n.rotation;if(t.rotation==null&&t.rotationDegree==null||(i=(function(c,u){return u.rotation!=null?c+=u.rotation:u.rotationDegree!=null&&(c+=Math.PI*u.rotationDegree/180),eL(c)})(i,t)),i===0)n.xCenter=n.xCenter+s*t.shiftX,n.yCenter=n.yCenter+r*t.shiftY;else{var o=(e.width*s*t.shiftX*Math.cos(i)-e.height*r*t.shiftY*Math.sin(i))/e.width,a=(e.width*s*t.shiftX*Math.sin(i)+e.height*r*t.shiftY*Math.cos(i))/e.height;n.xCenter=n.xCenter+o,n.yCenter=n.yCenter+a}{var l=Math.max(s*e.width,r*e.height);s=l/e.width,r=l/e.height}return n.width=s*t.scaleX,n.height=r*t.scaleY,n}function g_e(n,e){return n.map((function(t){var s=as(as({},t),{x:t.x/e.width,y:t.y/e.height});return t.z!=null&&(t.z=t.z/e.width),s}))}var ql=(function(){function n(e){this.alpha=e,this.initialized=!1}return n.prototype.apply=function(e,t){var s;return this.initialized?s=t==null?this.storedValue+this.alpha*(e-this.storedValue):this.storedValue+this.alpha*t*Math.asinh((e-this.storedValue)/t):(s=e,this.initialized=!0),this.rawValue=e,this.storedValue=s,s},n.prototype.applyWithAlpha=function(e,t,s){return this.alpha=t,this.apply(e,s)},n.prototype.hasLastRawValue=function(){return this.initialized},n.prototype.lastRawValue=function(){return this.rawValue},n.prototype.reset=function(){this.initialized=!1},n})(),yb=(function(){function n(e){this.frequency=e.frequency,this.minCutOff=e.minCutOff,this.beta=e.beta,this.thresholdCutOff=e.thresholdCutOff,this.thresholdBeta=e.thresholdBeta,this.derivateCutOff=e.derivateCutOff,this.x=new ql(this.getAlpha(this.minCutOff)),this.dx=new ql(this.getAlpha(this.derivateCutOff)),this.lastTimestamp=0}return n.prototype.apply=function(e,t,s){if(e==null)return e;var r=Math.trunc(t);if(this.lastTimestamp>=r)return e;this.lastTimestamp!==0&&r!==0&&(this.frequency=1/(1e-6*(r-this.lastTimestamp))),this.lastTimestamp=r;var i=this.x.hasLastRawValue()?(e-this.x.lastRawValue())*s*this.frequency:0,o=this.dx.applyWithAlpha(i,this.getAlpha(this.derivateCutOff)),a=this.minCutOff+this.beta*Math.abs(o),l=this.thresholdCutOff!=null?this.thresholdCutOff+this.thresholdBeta*Math.abs(o):null;return this.x.applyWithAlpha(e,this.getAlpha(a),l)},n.prototype.getAlpha=function(e){return 1/(1+this.frequency/(2*Math.PI*e))},n})(),PC=(function(){function n(e){this.config=e}return n.prototype.apply=function(e,t,s){var r=this;if(e==null)return this.reset(),null;this.initializeFiltersIfEmpty(e);var i=1;if(!this.config.disableValueScaling){if(s<this.config.minAllowedObjectScale)return du([],e,!0);i=1/s}return e.map((function(o,a){var l=as(as({},o),{x:r.xFilters[a].apply(o.x,t,i),y:r.yFilters[a].apply(o.y,t,i)});return o.z!=null&&(l.z=r.zFilters[a].apply(o.z,t,i)),l}))},n.prototype.reset=function(){this.xFilters=null,this.yFilters=null,this.zFilters=null},n.prototype.initializeFiltersIfEmpty=function(e){var t=this;this.xFilters!=null&&this.xFilters.length===e.length||(this.xFilters=e.map((function(s){return new yb(t.config)})),this.yFilters=e.map((function(s){return new yb(t.config)})),this.zFilters=e.map((function(s){return new yb(t.config)})))},n})(),xb=(function(){function n(e){this.config=e,this.window=[],this.lowPassFilter=new ql(1),this.lastValue=0,this.lastValueScale=1,this.lastTimestamp=-1}return n.prototype.apply=function(e,t,s){if(e==null)return e;var r,i=Math.trunc(t);if(this.lastTimestamp>=i)return e;if(this.lastTimestamp===-1)r=1;else{for(var o=e*s-this.lastValue*this.lastValueScale,a=i-this.lastTimestamp,l=o,c=a,u=(1+this.window.length)*(1e6/30),h=0,d=this.window;h<d.length;h++){var f=d[h];if(c+f.duration>u)break;l+=f.distance,c+=f.duration}var p=l/(1e-6*c);r=1-1/(1+this.config.velocityScale*Math.abs(p)),this.window.unshift({distance:o,duration:a}),this.window.length>this.config.windowSize&&this.window.pop()}return this.lastValue=e,this.lastValueScale=s,this.lastTimestamp=i,this.lowPassFilter.applyWithAlpha(e,r)},n})(),A_e=(function(){function n(e){this.config=e}return n.prototype.apply=function(e,t,s){var r=this;if(e==null)return this.reset(),null;var i=1;if(!this.config.disableValueScaling){if(s<this.config.minAllowedObjectScale)return du([],e,!0);i=1/s}return this.initializeFiltersIfEmpty(e),e.map((function(o,a){var l=as(as({},o),{x:r.xFilters[a].apply(o.x,t,i),y:r.yFilters[a].apply(o.y,t,i)});return o.z!=null&&(l.z=r.zFilters[a].apply(o.z,t,i)),l}))},n.prototype.reset=function(){this.xFilters=null,this.yFilters=null,this.zFilters=null},n.prototype.initializeFiltersIfEmpty=function(e){var t=this;this.xFilters!=null&&this.xFilters.length===e.length||(this.xFilters=e.map((function(s){return new xb(t.config)})),this.yFilters=e.map((function(s){return new xb(t.config)})),this.zFilters=e.map((function(s){return new xb(t.config)})))},n})(),bb=(function(){function n(e){if(e.velocityFilter!=null)this.keypointsFilter=new A_e(e.velocityFilter);else{if(e.oneEuroFilter==null)throw new Error("Either configure velocityFilter or oneEuroFilter, but got "+"".concat(e,"."));this.keypointsFilter=new PC(e.oneEuroFilter)}}return n.prototype.apply=function(e,t,s,r,i){if(r===void 0&&(r=!1),e==null)return this.keypointsFilter.reset(),null;var o=i!=null?(function(c,u){return(c.width*u.width+c.height*u.height)/2})(i,s):1,a=r?iL(e,s):e,l=this.keypointsFilter.apply(a,t,o);return r?g_e(l,s):l},n})(),iT=(function(){function n(e){this.alpha=e.alpha}return n.prototype.apply=function(e){var t=this;if(e==null)return this.visibilityFilters=null,null;this.visibilityFilters!=null&&this.visibilityFilters.length===e.length||(this.visibilityFilters=e.map((function(a){return new ql(t.alpha)})));for(var s=[],r=0;r<e.length;++r){var i=e[r],o=as({},i);o.score=this.visibilityFilters[r].apply(i.score),s.push(o)}return s},n})(),y_e={interpolatedScaleAspectRatio:1,featureMapHeight:[],featureMapWidth:[],numLayers:5,minScale:.1484375,maxScale:.75,inputSizeHeight:224,inputSizeWidth:224,anchorOffsetX:.5,anchorOffsetY:.5,strides:[8,16,32,32,32],aspectRatios:[1],fixedAnchorSize:!0},Id={runtime:"tfjs",modelType:"full",enableSmoothing:!0,enableSegmentation:!1,smoothSegmentation:!0,detectorModelUrl:"https://tfhub.dev/mediapipe/tfjs-model/blazepose_3d/detector/1",landmarkModelUrl:"https://tfhub.dev/mediapipe/tfjs-model/blazepose_3d/landmark/full/2"},x_e={maxPoses:1,flipHorizontal:!1},b_e={applyExponentialOnBoxSize:!1,flipVertically:!1,numBoxes:2254,numCoords:12,boxCoordOffset:0,keypointCoordOffset:4,numKeypoints:4,numValuesPerKeypoint:2,sigmoidScore:!0,scoreClippingThresh:100,reverseOutputOrder:!0,xScale:224,yScale:224,hScale:224,wScale:224,minScoreThresh:.5},v_e=.3,oT={shiftX:0,shiftY:0,scaleX:1.25,scaleY:1.25},C_e={outputTensorSize:{width:224,height:224},keepAspectRatio:!0,outputTensorFloatRange:[-1,1],borderMode:"zero"},I_e={outputTensorSize:{width:256,height:256},keepAspectRatio:!0,outputTensorFloatRange:[0,1],borderMode:"zero"},w_e={numLandmarks:39,inputImageWidth:256,inputImageHeight:256,visibilityActivation:"sigmoid",flipHorizontally:!1,flipVertically:!1},S_e={numLandmarks:39,inputImageWidth:1,inputImageHeight:1,visibilityActivation:"sigmoid",flipHorizontally:!1,flipVertically:!1},E_e={kernelSize:7,minConfidenceToRefine:.5},aT={alpha:.1},__e={oneEuroFilter:{frequency:30,minCutOff:.05,beta:80,derivateCutOff:1,minAllowedObjectScale:1e-6}},T_e={oneEuroFilter:{frequency:30,minCutOff:.01,beta:10,derivateCutOff:1,minAllowedObjectScale:1e-6}},B_e={oneEuroFilter:{frequency:30,minCutOff:.1,beta:40,derivateCutOff:1,minAllowedObjectScale:1e-6,disableValueScaling:!0}},k_e={activation:"none"},N_e={combineWithPreviousRatio:.7},R_e=(function(){function n(e){this.mask=e}return n.prototype.toCanvasImageSource=function(){return Nn(this,void 0,void 0,(function(){return Rn(this,(function(e){return[2,KP(this.mask)]}))}))},n.prototype.toImageData=function(){return Nn(this,void 0,void 0,(function(){return Rn(this,(function(e){return[2,JP(this.mask)]}))}))},n.prototype.toTensor=function(){return Nn(this,void 0,void 0,(function(){return Rn(this,(function(e){return[2,this.mask]}))}))},n.prototype.getUnderlyingType=function(){return"tensor"},n})();function M_e(n){return ZP(n),"person"}var D_e=(function(){function n(e,t,s,r,i,o){this.detectorModel=e,this.landmarkModel=t,this.enableSmoothing=s,this.enableSegmentation=r,this.smoothSegmentation=i,this.modelType=o,this.regionOfInterest=null,this.prevFilteredSegmentationMask=null,this.anchors=(function(h){h.reduceBoxesInLowestLayer==null&&(h.reduceBoxesInLowestLayer=!1),h.interpolatedScaleAspectRatio==null&&(h.interpolatedScaleAspectRatio=1),h.fixedAnchorSize==null&&(h.fixedAnchorSize=!1);for(var d=[],f=0;f<h.numLayers;){for(var p=[],A=[],m=[],g=[],x=f;x<h.strides.length&&h.strides[x]===h.strides[f];){var v=eT(h.minScale,h.maxScale,x,h.strides.length);if(x===0&&h.reduceBoxesInLowestLayer)m.push(1),m.push(2),m.push(.5),g.push(.1),g.push(v),g.push(v);else{for(var b=0;b<h.aspectRatios.length;++b)m.push(h.aspectRatios[b]),g.push(v);if(h.interpolatedScaleAspectRatio>0){var w=x===h.strides.length-1?1:eT(h.minScale,h.maxScale,x+1,h.strides.length);g.push(Math.sqrt(v*w)),m.push(h.interpolatedScaleAspectRatio)}}x++}for(var _=0;_<m.length;++_){var N=Math.sqrt(m[_]);p.push(g[_]/N),A.push(g[_]*N)}var M=0,T=0;if(h.featureMapHeight.length>0)M=h.featureMapHeight[f],T=h.featureMapWidth[f];else{var k=h.strides[f];M=Math.ceil(h.inputSizeHeight/k),T=Math.ceil(h.inputSizeWidth/k)}for(var B=0;B<M;++B)for(var L=0;L<T;++L)for(var U=0;U<p.length;++U){var V={xCenter:(L+h.anchorOffsetX)/T,yCenter:(B+h.anchorOffsetY)/M,width:0,height:0};h.fixedAnchorSize?(V.width=1,V.height=1):(V.width=A[U],V.height=p[U]),d.push(V)}f=x}return d})(y_e);var a=fs(this.anchors.map((function(h){return h.width}))),l=fs(this.anchors.map((function(h){return h.height}))),c=fs(this.anchors.map((function(h){return h.xCenter}))),u=fs(this.anchors.map((function(h){return h.yCenter})));this.anchorTensor={x:c,y:u,w:a,h:l},this.prevFilteredSegmentationMask=this.enableSegmentation?ni([],[0,0]):null}return n.prototype.estimatePoses=function(e,t,s){return Nn(this,void 0,void 0,(function(){var r,i,o,a,l,c,u,h,d,f,p,A,m,g,x,v,b,w,_,N,M,T,k;return Rn(this,(function(B){switch(B.label){case 0:return r=(function(L){var U;if((U=L==null?x_e:as({},L)).maxPoses==null&&(U.maxPoses=1),U.maxPoses<=0)throw new Error("Invalid maxPoses ".concat(U.maxPoses,". Should be > 0."));if(U.maxPoses>1)throw new Error("Multi-pose detection is not implemented yet. Please set maxPoses to 1.");return U})(t),e==null?(this.reset(),[2,[]]):(this.maxPoses=r.maxPoses,this.timestamp=s!=null?1e3*s:rL(e)?1e6*e.currentTime:null,i=lf(e),o=ue((function(){return Ze(NS(e),"float32")})),(a=this.regionOfInterest)!=null?[3,2]:[4,this.detectPose(o)]);case 1:if((l=B.sent()).length===0)return this.reset(),o.dispose(),[2,[]];c=l[0],a=this.poseDetectionToRoi(c,i),B.label=2;case 2:return[4,this.poseLandmarksByRoi(a,o)];case 3:return u=B.sent(),o.dispose(),u==null?(this.reset(),[2,[]]):(h=u.landmarks,d=u.auxiliaryLandmarks,f=u.poseScore,p=u.worldLandmarks,A=u.segmentationMask,m=this.poseLandmarkFiltering(h,d,p,i),g=m.actualLandmarksFiltered,x=m.auxiliaryLandmarksFiltered,v=m.actualWorldLandmarksFiltered,b=this.poseLandmarksToRoi(x,i),this.regionOfInterest=b,w=this.smoothSegmentation&&A!=null?this.poseSegmentationFiltering(A):A,(_=g!=null?iL(g,i):null)!=null&&_.forEach((function(L,U){L.name=Zm[U]})),(N=v)!=null&&N.forEach((function(L,U){L.name=Zm[U]})),M={score:f,keypoints:_,keypoints3D:N},w!==null&&(T=ue((function(){var L=Kn(w,2),U=co(L,[[0,0],[0,0],[0,1]]);return yA(U,[[0,0],[0,0],[0,2]],"symmetric")})),this.smoothSegmentation||zt(w),k={maskValueToLabel:M_e,mask:new R_e(T)},M.segmentation=k),[2,[M]])}}))}))},n.prototype.poseSegmentationFiltering=function(e){var t=this.prevFilteredSegmentationMask;return t.size===0?this.prevFilteredSegmentationMask=e:(this.prevFilteredSegmentationMask=h_e(t,e,N_e),zt(e)),zt(t),this.prevFilteredSegmentationMask},n.prototype.dispose=function(){this.detectorModel.dispose(),this.landmarkModel.dispose(),zt([this.anchorTensor.x,this.anchorTensor.y,this.anchorTensor.w,this.anchorTensor.h,this.prevFilteredSegmentationMask])},n.prototype.reset=function(){this.regionOfInterest=null,this.enableSegmentation&&(zt(this.prevFilteredSegmentationMask),this.prevFilteredSegmentationMask=ni([],[0,0])),this.visibilitySmoothingFilterActual=null,this.visibilitySmoothingFilterAuxiliary=null,this.landmarksSmoothingFilterActual=null,this.landmarksSmoothingFilterAuxiliary=null},n.prototype.detectPose=function(e){return Nn(this,void 0,void 0,(function(){var t,s,r,i,o,a,l,c,u,h;return Rn(this,(function(d){switch(d.label){case 0:return t=$C(e,C_e),s=t.imageTensor,r=t.padding,i=this.detectorModel.predict(s),o=l_e(i),a=o.boxes,[4,d_e([l=o.logits,a],this.anchorTensor,b_e)];case 1:return(c=d.sent()).length===0?(zt([s,i,l,a]),[2,c]):[4,c_e(c,this.maxPoses,v_e)];case 2:return u=d.sent(),h=(function(f,p){f===void 0&&(f=[]);for(var A=p.left,m=p.top,g=p.left+p.right,x=p.top+p.bottom,v=0;v<f.length;v++){var b=f[v],w=b.locationData.relativeBoundingBox,_=(w.xMin-A)/(1-g),N=(w.yMin-m)/(1-x),M=w.width/(1-g),T=w.height/(1-x);w.xMin=_,w.yMin=N,w.width=M,w.height=T,w.xMax=_+M,w.yMax=N+T;var k=b.locationData.relativeKeypoints;k&&k.forEach((function(B){var L=(B.x-A)/(1-g),U=(B.y-m)/(1-x);B.x=L,B.y=U}))}return f})(u,r),zt([s,i,l,a]),[2,h]}}))}))},n.prototype.poseDetectionToRoi=function(e,t){return rT(gb(e,t,{rotationVectorEndKeypointIndex:1,rotationVectorStartKeypointIndex:0,rotationVectorTargetAngleDegree:90}),t,oT)},n.prototype.poseLandmarksByRoi=function(e,t){return Nn(this,void 0,void 0,(function(){var s,r,i,o,a,l,c,u,h,d,f,p,A,m;return Rn(this,(function(g){switch(g.label){case 0:if(s=lf(t),r=$C(t,I_e,e),i=r.imageTensor,o=r.padding,a=r.transformationMatrix,this.modelType!=="lite"&&this.modelType!=="full"&&this.modelType!=="heavy")throw new Error("Model type must be one of lite, full or heavy,"+"but got ".concat(this.modelType));return l=["ld_3d","output_poseflag","activation_heatmap","world_3d"],this.enableSegmentation&&l.push("activation_segmentation"),c=this.landmarkModel.execute(i,l),[4,this.tensorsToPoseLandmarksAndSegmentation(c)];case 1:return(u=g.sent())==null?(zt(c),zt(i),[2,null]):(h=u.landmarks,d=u.auxiliaryLandmarks,f=u.poseScore,p=u.worldLandmarks,A=u.segmentationMask,[4,this.poseLandmarksAndSegmentationInverseProjection(s,e,o,a,h,d,p,A)]);case 2:return m=g.sent(),zt(c),zt(i),[2,as({poseScore:f},m)]}}))}))},n.prototype.poseLandmarksAndSegmentationInverseProjection=function(e,t,s,r,i,o,a,l){return Nn(this,void 0,void 0,(function(){var c,u,h,d,f,p;return Rn(this,(function(A){return c=nT(i,s),u=nT(o,s),h=Z3(c,t),d=Z3(u,t),f=(function(m,g){for(var x=[],v=0,b=m;v<b.length;v++){var w=b[v],_=w.x,N=w.y,M=g.rotation,T=Math.cos(M)*_-Math.sin(M)*N,k=Math.sin(M)*_+Math.cos(M)*N,B=as({},w);B.x=T,B.y=k,x.push(B)}return x})(a,t),p=null,this.enableSegmentation&&(p=ue((function(){var m=l.shape,g=m[0],x=m[1],v=(function(_){var N=nL(new Array(16).fill(0));N[0][0]=Wr(_,0,0),N[1][0]=-Wr(_,0,1),N[2][0]=Wr(_,0,2),N[3][0]=-Wr(_,0,3),N[0][2]=Wr(_,2,0),N[1][2]=-Wr(_,2,1),N[2][2]=Wr(_,2,2),N[3][2]=-Wr(_,2,3),N[0][1]=-Wr(_,1,0),N[1][1]=Wr(_,1,1),N[2][1]=-Wr(_,1,2),N[3][1]=Wr(_,1,3),N[0][3]=-Wr(_,3,0),N[1][3]=Wr(_,3,1),N[2][3]=-Wr(_,3,2),N[3][3]=Wr(_,3,3);for(var M=_[0][0]*N[0][0]+_[1][0]*N[0][1]+_[2][0]*N[0][2]+_[3][0]*N[0][3],T=0;T<N.length;T++)for(var k=0;k<N.length;k++)N[T][k]/=M;return N})(r),b=ni(tL(v,{width:x,height:g},e),[1,8]),w=[1,g,x,1];return Ht(Is.transform(ae(l,w),b,"bilinear","constant",0,[e.height,e.width]),[0,3])})),zt(l)),[2,{landmarks:h,auxiliaryLandmarks:d,worldLandmarks:f,segmentationMask:p}]}))}))},n.prototype.tensorsToPoseLandmarksAndSegmentation=function(e){return Nn(this,void 0,void 0,(function(){var t,s,r,i,o,a,l,c,u,h,d,f,p;return Rn(this,(function(A){switch(A.label){case 0:return t=e[0],s=e[1],r=e[2],i=e[3],o=this.enableSegmentation?e[4]:null,[4,s.data()];case 1:return(a=A.sent()[0])<.5?[2,null]:[4,sT(t,w_e)];case 2:return[4,u_e(A.sent(),r,E_e)];case 3:return l=A.sent(),c=l.slice(0,33),u=l.slice(33,35),[4,sT(i,S_e)];case 4:return h=A.sent(),d=h.slice(0,33),f=(function(m,g,x){for(var v=[],b=0;b<m.length;b++){var w=as({},g[b]);w.score=m[b].score,v.push(w)}return v})(c,d),p=this.enableSegmentation?(function(m,g,x){return ue((function(){var v=Ht(m,[0]),b=v.shape[2];if(b===1){var w=v;switch(g.activation){case"none":break;case"sigmoid":w=Tr(w);break;case"softmax":throw new Error("Softmax activation requires two channels.");default:throw new Error("Activation not supported (".concat(g.activation,")"))}var _=w;return Ht(_,[2])}throw new Error("Unsupported number of tensor channels ".concat(b))}))})(o,k_e):null,[2,{landmarks:c,auxiliaryLandmarks:u,poseScore:a,worldLandmarks:f,segmentationMask:p}]}}))}))},n.prototype.poseLandmarksToRoi=function(e,t){return rT(gb(tT(e),t,{rotationVectorStartKeypointIndex:0,rotationVectorEndKeypointIndex:1,rotationVectorTargetAngleDegree:90}),t,oT)},n.prototype.poseLandmarkFiltering=function(e,t,s,r){var i,o,a;if(this.timestamp!=null&&this.enableSmoothing){var l=gb(tT(t),r,{rotationVectorEndKeypointIndex:0,rotationVectorStartKeypointIndex:1,rotationVectorTargetAngleDegree:90});this.visibilitySmoothingFilterActual==null&&(this.visibilitySmoothingFilterActual=new iT(aT)),i=this.visibilitySmoothingFilterActual.apply(e),this.visibilitySmoothingFilterAuxiliary==null&&(this.visibilitySmoothingFilterAuxiliary=new iT(aT)),o=this.visibilitySmoothingFilterAuxiliary.apply(t),a=this.visibilitySmoothingFilterActual.apply(s),this.landmarksSmoothingFilterActual==null&&(this.landmarksSmoothingFilterActual=new bb(__e)),i=this.landmarksSmoothingFilterActual.apply(i,this.timestamp,r,!0,l),this.landmarksSmoothingFilterAuxiliary==null&&(this.landmarksSmoothingFilterAuxiliary=new bb(T_e)),o=this.landmarksSmoothingFilterAuxiliary.apply(o,this.timestamp,r,!0,l),this.worldLandmarksSmoothingFilterActual==null&&(this.worldLandmarksSmoothingFilterActual=new bb(B_e)),a=this.worldLandmarksSmoothingFilterActual.apply(s,this.timestamp)}else i=e,o=t,a=s;return{actualLandmarksFiltered:i,auxiliaryLandmarksFiltered:o,actualWorldLandmarksFiltered:a}},n})();function F_e(n){return Nn(this,void 0,void 0,(function(){var e,t,s,r,i,o;return Rn(this,(function(a){switch(a.label){case 0:return e=(function(l){var c=as({},l??Id);if(c.enableSmoothing==null&&(c.enableSmoothing=Id.enableSmoothing),c.enableSegmentation==null&&(c.enableSegmentation=Id.enableSegmentation),c.smoothSegmentation==null&&(c.smoothSegmentation=Id.smoothSegmentation),c.modelType==null&&(c.modelType=Id.modelType),c.detectorModelUrl==null&&(c.detectorModelUrl=Id.detectorModelUrl),c.landmarkModelUrl==null)switch(c.modelType){case"lite":c.landmarkModelUrl="https://tfhub.dev/mediapipe/tfjs-model/blazepose_3d/landmark/lite/2";break;case"heavy":c.landmarkModelUrl="https://tfhub.dev/mediapipe/tfjs-model/blazepose_3d/landmark/heavy/2";break;case"full":default:c.landmarkModelUrl="https://tfhub.dev/mediapipe/tfjs-model/blazepose_3d/landmark/full/2"}return c})(n),t=typeof e.detectorModelUrl=="string"&&e.detectorModelUrl.indexOf("https://tfhub.dev")>-1,s=typeof e.landmarkModelUrl=="string"&&e.landmarkModelUrl.indexOf("https://tfhub.dev")>-1,[4,Promise.all([Ma(e.detectorModelUrl,{fromTFHub:t}),Ma(e.landmarkModelUrl,{fromTFHub:s})])];case 1:return r=a.sent(),i=r[0],o=r[1],[2,new D_e(i,o,e.enableSmoothing,e.enableSegmentation,e.smoothSegmentation,e.modelType)]}}))}))}var yu,Ea,oL=(function(){function n(e){(function(t){if(t.maxTracks<1)throw new Error("Must specify 'maxTracks' to be at least 1, but "+"encountered ".concat(t.maxTracks));if(t.maxAge<=0)throw new Error("Must specify 'maxAge' to be positive, but "+"encountered ".concat(t.maxAge));if(t.keypointTrackerParams!==void 0){if(t.keypointTrackerParams.keypointConfidenceThreshold<0||t.keypointTrackerParams.keypointConfidenceThreshold>1)throw new Error("Must specify 'keypointConfidenceThreshold' to be in the range [0, 1], but encountered "+"".concat(t.keypointTrackerParams.keypointConfidenceThreshold));if(t.keypointTrackerParams.minNumberOfKeypoints<1)throw new Error("Must specify 'minNumberOfKeypoints' to be at least 1, but "+"encountered ".concat(t.keypointTrackerParams.minNumberOfKeypoints));for(var s=0,r=t.keypointTrackerParams.keypointFalloff;s<r.length;s++){var i=r[s];if(i<=0)throw new Error("Must specify each keypoint falloff parameterto be positive "+"but encountered ".concat(i))}}})(e),this.tracks=[],this.maxTracks=e.maxTracks,this.maxAge=1e3*e.maxAge,this.minSimilarity=e.minSimilarity,this.nextID=1}return n.prototype.apply=function(e,t){this.filterOldTracks(t);var s=this.computeSimilarity(e);return this.assignTracks(e,s,t),this.updateTracks(t),e},n.prototype.getTracks=function(){return this.tracks.slice()},n.prototype.getTrackIDs=function(){return new Set(this.tracks.map((function(e){return e.id})))},n.prototype.filterOldTracks=function(e){var t=this;this.tracks=this.tracks.filter((function(s){return e-s.lastTimestamp<=t.maxAge}))},n.prototype.assignTracks=function(e,t,s){for(var r=Array.from(Array(t[0].length).keys()),i=[],o=0,a=Array.from(Array(e.length).keys());o<a.length;o++){var l=a[o];if(r.length!==0){for(var c=-1,u=-1,h=0,d=r;h<d.length;h++){var f=d[h],p=t[l][f];p>=this.minSimilarity&&p>u&&(c=f,u=p)}if(c>=0){var A=this.tracks[c];A=Object.assign(A,this.createTrack(e[l],s,A.id)),e[l].id=A.id;var m=r.indexOf(c);r.splice(m,1)}else i.push(l)}else i.push(l)}for(var g=0,x=i;g<x.length;g++){l=x[g];var v=this.createTrack(e[l],s);this.tracks.push(v),e[l].id=v.id}},n.prototype.updateTracks=function(e){this.tracks.sort((function(t,s){return s.lastTimestamp-t.lastTimestamp})),this.tracks=this.tracks.slice(0,this.maxTracks)},n.prototype.createTrack=function(e,t,s){var r={id:s||this.nextTrackID(),lastTimestamp:t,keypoints:du([],e.keypoints,!0).map((function(i){return as({},i)}))};return e.box!==void 0&&(r.box=as({},e.box)),r},n.prototype.nextTrackID=function(){var e=this.nextID;return this.nextID+=1,e},n.prototype.remove=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];this.tracks=this.tracks.filter((function(s){return!e.includes(s.id)}))},n.prototype.reset=function(){this.tracks=[]},n})(),$_e=(function(n){function e(t){return n.call(this,t)||this}return XP(e,n),e.prototype.computeSimilarity=function(t){var s=this;return t.length===0||this.tracks.length===0?[[]]:t.map((function(r){return s.tracks.map((function(i){return s.iou(r,i)}))}))},e.prototype.iou=function(t,s){var r=Math.max(t.box.xMin,s.box.xMin),i=Math.max(t.box.yMin,s.box.yMin),o=Math.min(t.box.xMax,s.box.xMax),a=Math.min(t.box.yMax,s.box.yMax);if(r>=o||i>=a)return 0;var l=(o-r)*(a-i);return l/(t.box.width*t.box.height+s.box.width*s.box.height-l)},e})(oL),P_e=(function(n){function e(t){var s=n.call(this,t)||this;return s.keypointThreshold=t.keypointTrackerParams.keypointConfidenceThreshold,s.keypointFalloff=t.keypointTrackerParams.keypointFalloff,s.minNumKeyoints=t.keypointTrackerParams.minNumberOfKeypoints,s}return XP(e,n),e.prototype.computeSimilarity=function(t){if(t.length===0||this.tracks.length===0)return[[]];for(var s=[],r=0,i=t;r<i.length;r++){for(var o=i[r],a=[],l=0,c=this.tracks;l<c.length;l++){var u=c[l];a.push(this.oks(o,u))}s.push(a)}return s},e.prototype.oks=function(t,s){for(var r=this.area(s.keypoints)+1e-6,i=0,o=0,a=0;a<t.keypoints.length;++a){var l=t.keypoints[a],c=s.keypoints[a];if(!(l.score<this.keypointThreshold||c.score<this.keypointThreshold)){o+=1;var u=Math.pow(l.x-c.x,2)+Math.pow(l.y-c.y,2),h=2*this.keypointFalloff[a];i+=Math.exp(-1*u/(2*r*Math.pow(h,2)))}}return o<this.minNumKeyoints?0:i/o},e.prototype.area=function(t){var s=this,r=t.filter((function(l){return l.score>s.keypointThreshold})),i=Math.min.apply(Math,du([1],r.map((function(l){return l.x})),!1)),o=Math.max.apply(Math,du([0],r.map((function(l){return l.x})),!1)),a=Math.min.apply(Math,du([1],r.map((function(l){return l.y})),!1));return(o-i)*(Math.max.apply(Math,du([0],r.map((function(l){return l.y})),!1))-a)},e})(oL);function L_e(n){switch(n){case Ea.BlazePose:return Zm.reduce((function(e,t,s){return e[t]=s,e}),{});case Ea.PoseNet:case Ea.MoveNet:return $a.reduce((function(e,t,s){return e[t]=s,e}),{});default:throw new Error("Model ".concat(n," is not supported."))}}(function(n){n.Keypoint="keypoint",n.BoundingBox="boundingBox"})(yu||(yu={})),(function(n){n.MoveNet="MoveNet",n.BlazePose="BlazePose",n.PoseNet="PoseNet"})(Ea||(Ea={}));var lT=["SinglePose.Lightning","SinglePose.Thunder","MultiPose.Lightning"],aL={modelType:"SinglePose.Lightning",enableSmoothing:!0},cT={},uT={frequency:30,minCutOff:2.5,beta:300,derivateCutOff:2.5,thresholdCutOff:.5,thresholdBeta:5,disableValueScaling:!0},vb={maxTracks:18,maxAge:1e3,minSimilarity:.2,keypointTrackerParams:{keypointConfidenceThreshold:.3,keypointFalloff:[.026,.025,.025,.035,.035,.079,.079,.072,.072,.062,.062,.107,.107,.087,.087,.089,.089],minNumberOfKeypoints:4}},hT={maxTracks:18,maxAge:1e3,minSimilarity:.15,trackerParams:{}};function O_e(n,e,t,s){for(var r={},i=0,o=$a;i<o.length;i++){var a=o[i];r[a]=[e[t[a]].y*s.height,e[t[a]].x*s.width]}if((function(x,v){return(x[v.left_hip].score>.2||x[v.right_hip].score>.2)&&(x[v.left_shoulder].score>.2||x[v.right_shoulder].score>.2)})(e,t)){var l=(r.left_hip[0]+r.right_hip[0])/2,c=(r.left_hip[1]+r.right_hip[1])/2,u=(function(x,v,b,w,_){for(var N=["left_shoulder","right_shoulder","left_hip","right_hip"],M=0,T=0,k=0;k<N.length;k++)(W=Math.abs(w-b[N[k]][0]))>M&&(M=W),(H=Math.abs(_-b[N[k]][1]))>T&&(T=H);for(var B=0,L=0,U=0,V=Object.keys(b);U<V.length;U++){var W,H,ee=V[U];x[v[ee]].score<.2||((W=Math.abs(w-b[ee][0]))>B&&(B=W),(H=Math.abs(_-b[ee][1]))>L&&(L=H))}return[M,T,B,L]})(e,t,r,l,c),h=u[0],d=u[1],f=u[2],p=u[3],A=Math.max(1.9*d,1.9*h,1.2*f,1.2*p),m=[l-(A=Math.min(A,Math.max(c,s.width-c,l,s.height-l))),c-A];if(A>Math.max(s.width,s.height)/2)return LC(n==null,s);var g=2*A;return{yMin:m[0]/s.height,xMin:m[1]/s.width,yMax:(m[0]+g)/s.height,xMax:(m[1]+g)/s.width,height:(m[0]+g)/s.height-m[0]/s.height,width:(m[1]+g)/s.width-m[1]/s.width}}return LC(n==null,s)}function LC(n,e){var t,s,r,i;return n?e.width>e.height?(t=1,s=e.height/e.width,r=0,i=(e.width/2-e.height/2)/e.width):(t=e.width/e.height,s=1,r=(e.height/2-e.width/2)/e.height,i=0):e.width>e.height?(t=e.width/e.height,s=1,r=(e.height/2-e.width/2)/e.height,i=0):(t=1,s=e.height/e.width,r=0,i=(e.width/2-e.height/2)/e.width),{yMin:r,xMin:i,yMax:r+t,xMax:i+s,height:t,width:s}}function Q_e(n){var e,t=n==null?aL:as({},n);if(t.modelType==null)t.modelType="SinglePose.Lightning";else if(lT.indexOf(t.modelType)<0)throw new Error("Invalid architecture ".concat(t.modelType,". ")+"Should be one of ".concat(lT));if(t.enableSmoothing==null&&(t.enableSmoothing=!0),t.minPoseScore!=null&&(t.minPoseScore<0||t.minPoseScore>1))throw new Error("minPoseScore should be between 0.0 and 1.0");if(t.multiPoseMaxDimension!=null&&(t.multiPoseMaxDimension%32!=0||t.multiPoseMaxDimension<32))throw new Error("multiPoseMaxDimension must be a multiple of 32 and higher than 0");if(t.modelType==="MultiPose.Lightning"&&t.enableTracking==null&&(t.enableTracking=!0),t.modelType==="MultiPose.Lightning"&&t.enableTracking===!0)if(t.trackerType==null&&(t.trackerType=yu.BoundingBox),t.trackerType===yu.Keypoint)t.trackerConfig!=null?t.trackerConfig=(function(s){var r=dT(vb,s);return r.keypointTrackerParams=as({},vb.keypointTrackerParams),s.keypointTrackerParams!=null&&(s.keypointTrackerParams.keypointConfidenceThreshold!=null&&(r.keypointTrackerParams.keypointConfidenceThreshold=s.keypointTrackerParams.keypointConfidenceThreshold),s.keypointTrackerParams.keypointFalloff!=null&&(r.keypointTrackerParams.keypointFalloff=s.keypointTrackerParams.keypointFalloff),s.keypointTrackerParams.minNumberOfKeypoints!=null&&(r.keypointTrackerParams.minNumberOfKeypoints=s.keypointTrackerParams.minNumberOfKeypoints)),r})(t.trackerConfig):t.trackerConfig=vb;else{if(t.trackerType!==yu.BoundingBox)throw new Error("Tracker type not supported by MoveNet");t.trackerConfig!=null?t.trackerConfig=(e=t.trackerConfig,dT(hT,e)):t.trackerConfig=hT}return t}function dT(n,e){var t={maxTracks:n.maxTracks,maxAge:n.maxAge,minSimilarity:n.minSimilarity};return e.maxTracks!=null&&(t.maxTracks=e.maxTracks),e.maxAge!=null&&(t.maxAge=e.maxAge),e.minSimilarity!=null&&(t.minSimilarity=e.minSimilarity),t}var U_e=(function(){function n(e,t){this.moveNetModel=e,this.modelInputResolution={height:0,width:0},this.keypointIndexByName=L_e(Ea.MoveNet),t.modelType==="SinglePose.Lightning"?(this.modelInputResolution.width=192,this.modelInputResolution.height=192):t.modelType==="SinglePose.Thunder"&&(this.modelInputResolution.width=256,this.modelInputResolution.height=256),this.multiPoseModel=t.modelType==="MultiPose.Lightning",this.multiPoseModel||(this.keypointFilter=new PC(uT),this.cropRegionFilterYMin=new ql(.9),this.cropRegionFilterXMin=new ql(.9),this.cropRegionFilterYMax=new ql(.9),this.cropRegionFilterXMax=new ql(.9)),this.enableSmoothing=t.enableSmoothing,t.minPoseScore?this.minPoseScore=t.minPoseScore:this.minPoseScore=.25,t.multiPoseMaxDimension?this.multiPoseMaxDimension=t.multiPoseMaxDimension:this.multiPoseMaxDimension=256,this.enableTracking=t.enableTracking,this.multiPoseModel&&this.enableTracking&&(t.trackerType===yu.Keypoint?this.tracker=new P_e(t.trackerConfig):t.trackerType===yu.BoundingBox&&(this.tracker=new $_e(t.trackerConfig)),this.enableSmoothing&&(this.keypointFilterMap=new Map))}return n.prototype.runSinglePersonPoseModel=function(e){return Nn(this,void 0,void 0,(function(){var t,s,r,i,o;return Rn(this,(function(a){switch(a.label){case 0:if((t=this.moveNetModel.execute(e)).shape.length!==4||t.shape[0]!==1||t.shape[1]!==1||t.shape[2]!==17||t.shape[3]!==3)throw t.dispose(),new Error("Unexpected output shape from model: [".concat(t.shape,"]"));return Cu()==="webgpu"?[3,1]:(s=t.dataSync(),[3,3]);case 1:return[4,t.data()];case 2:s=a.sent(),a.label=3;case 3:for(t.dispose(),r={keypoints:[],score:0},i=0,o=0;o<17;++o)r.keypoints[o]={y:s[3*o],x:s[3*o+1],score:s[3*o+2]},r.keypoints[o].score>.2&&(++i,r.score+=r.keypoints[o].score);return i>0&&(r.score/=i),[2,r]}}))}))},n.prototype.runMultiPersonPoseModel=function(e){return Nn(this,void 0,void 0,(function(){var t,s,r,i,o,a,l,c;return Rn(this,(function(u){switch(u.label){case 0:if((t=this.moveNetModel.execute(e)).shape.length!==3||t.shape[0]!==1||t.shape[2]!==56)throw t.dispose(),new Error("Unexpected output shape from model: [".concat(t.shape,"]"));return Cu()==="webgpu"?[3,1]:(s=t.dataSync(),[3,3]);case 1:return[4,t.data()];case 2:s=u.sent(),u.label=3;case 3:for(t.dispose(),r=[],i=s.length/56,o=0;o<i;++o)for(r[o]={keypoints:[]},a=56*o+51,r[o].box={yMin:s[a],xMin:s[a+1],yMax:s[a+2],xMax:s[a+3],width:s[a+3]-s[a+1],height:s[a+2]-s[a]},l=56*o+55,r[o].score=s[l],r[o].keypoints=[],c=0;c<17;++c)r[o].keypoints[c]={y:s[56*o+3*c],x:s[56*o+3*c+1],score:s[56*o+3*c+2]};return[2,r]}}))}))},n.prototype.estimatePoses=function(e,t,s){return t===void 0&&(t=cT),Nn(this,void 0,void 0,(function(){var r,i,o,a,l,c;return Rn(this,(function(u){switch(u.label){case 0:return t=(function(h){return h==null?cT:as({},h)})(t),e==null?(this.reset(),[2,[]]):(s==null?rL(e)&&(s=1e6*e.currentTime):s*=1e3,r=NS(e),i=lf(r),o=Kn(r,0),e instanceof cn||r.dispose(),a=[],this.multiPoseModel?[3,2]:[4,this.estimateSinglePose(o,i,s)]);case 1:return a=u.sent(),[3,4];case 2:return[4,this.estimateMultiplePoses(o,i,s)];case 3:a=u.sent(),u.label=4;case 4:for(l=0;l<a.length;++l)for(c=0;c<a[l].keypoints.length;++c)a[l].keypoints[c].name=$a[c],a[l].keypoints[c].y*=i.height,a[l].keypoints[c].x*=i.width;return[2,a]}}))}))},n.prototype.estimateSinglePose=function(e,t,s){return Nn(this,void 0,void 0,(function(){var r,i,o,a,l=this;return Rn(this,(function(c){switch(c.label){case 0:return this.cropRegion||(this.cropRegion=LC(this.cropRegion==null,t)),r=ue((function(){var u=ni([[l.cropRegion.yMin,l.cropRegion.xMin,l.cropRegion.yMax,l.cropRegion.xMax]]),h=Rs([1],"int32"),d=[l.modelInputResolution.height,l.modelInputResolution.width];return Ze(Is.cropAndResize(e,u,h,d,"bilinear",0),"int32")})),e.dispose(),[4,this.runSinglePersonPoseModel(r)];case 1:if(i=c.sent(),r.dispose(),i.score<this.minPoseScore)return this.reset(),[2,[]];for(o=0;o<i.keypoints.length;++o)i.keypoints[o].y=this.cropRegion.yMin+i.keypoints[o].y*this.cropRegion.height,i.keypoints[o].x=this.cropRegion.xMin+i.keypoints[o].x*this.cropRegion.width;return s!=null&&this.enableSmoothing&&(i.keypoints=this.keypointFilter.apply(i.keypoints,s,1)),a=O_e(this.cropRegion,i.keypoints,this.keypointIndexByName,t),this.cropRegion=this.filterCropRegion(a),[2,[i]]}}))}))},n.prototype.estimateMultiplePoses=function(e,t,s){return Nn(this,void 0,void 0,(function(){var r,i,o,a,l,c,u,h,d,f,p,A=this;return Rn(this,(function(m){switch(m.label){case 0:return t.width>t.height?(i=this.multiPoseMaxDimension,o=Math.round(this.multiPoseMaxDimension*t.height/t.width),r=Is.resizeBilinear(e,[o,i]),l=i,c=32*Math.ceil(o/32),a=co(r,[[0,0],[0,c-o],[0,0],[0,0]])):(i=Math.round(this.multiPoseMaxDimension*t.width/t.height),o=this.multiPoseMaxDimension,r=Is.resizeBilinear(e,[o,i]),l=32*Math.ceil(i/32),c=o,a=co(r,[[0,0],[0,0],[0,l-i],[0,0]])),r.dispose(),e.dispose(),u=Ze(a,"int32"),a.dispose(),[4,this.runMultiPersonPoseModel(u)];case 1:for(h=m.sent(),u.dispose(),h=h.filter((function(g){return g.score>=A.minPoseScore})),f=0;f<h.length;++f)for(d=0;d<h[f].keypoints.length;++d)h[f].keypoints[d].y*=c/o,h[f].keypoints[d].x*=l/i;if(this.enableTracking&&(this.tracker.apply(h,s),this.enableSmoothing)){for(f=0;f<h.length;++f)this.keypointFilterMap.has(h[f].id)||this.keypointFilterMap.set(h[f].id,new PC(uT)),h[f].keypoints=this.keypointFilterMap.get(h[f].id).apply(h[f].keypoints,s,1);p=this.tracker.getTrackIDs(),this.keypointFilterMap.forEach((function(g,x){p.has(x)||A.keypointFilterMap.delete(x)}))}return[2,h]}}))}))},n.prototype.filterCropRegion=function(e){if(e){var t=this.cropRegionFilterYMin.apply(e.yMin),s=this.cropRegionFilterXMin.apply(e.xMin),r=this.cropRegionFilterYMax.apply(e.yMax),i=this.cropRegionFilterXMax.apply(e.xMax);return{yMin:t,xMin:s,yMax:r,xMax:i,height:r-t,width:i-s}}return this.cropRegionFilterYMin.reset(),this.cropRegionFilterXMin.reset(),this.cropRegionFilterYMax.reset(),this.cropRegionFilterXMax.reset(),null},n.prototype.dispose=function(){this.moveNetModel.dispose()},n.prototype.reset=function(){this.cropRegion=null,this.resetFilters()},n.prototype.resetFilters=function(){this.keypointFilter.reset(),this.cropRegionFilterYMin.reset(),this.cropRegionFilterXMin.reset(),this.cropRegionFilterYMax.reset(),this.cropRegionFilterXMax.reset()},n})();function z_e(n){return n===void 0&&(n=aL),Nn(this,void 0,void 0,(function(){var e,t,s,r;return Rn(this,(function(i){switch(i.label){case 0:return e=Q_e(n),s=!0,e.modelUrl?(s=typeof e.modelUrl=="string"&&e.modelUrl.indexOf("https://tfhub.dev")>-1,[4,Ma(e.modelUrl,{fromTFHub:s})]):[3,2];case 1:return t=i.sent(),[3,4];case 2:return r=void 0,e.modelType==="SinglePose.Lightning"?r="https://tfhub.dev/google/tfjs-model/movenet/singlepose/lightning/4":e.modelType==="SinglePose.Thunder"?r="https://tfhub.dev/google/tfjs-model/movenet/singlepose/thunder/4":e.modelType==="MultiPose.Lightning"&&(r="https://tfhub.dev/google/tfjs-model/movenet/multipose/lightning/1"),[4,Ma(r,{fromTFHub:s})];case 3:t=i.sent(),i.label=4;case 4:return Cu()==="webgl"&&xe().set("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",0),[2,new U_e(t,e)]}}))}))}var fT={architecture:"MobileNetV1",outputStride:16,multiplier:.75,inputResolution:{height:257,width:257}},pT=["MobileNetV1","ResNet50"],mT={MobileNetV1:[8,16],ResNet50:[16]},G_e=[8,16,32],gT={MobileNetV1:[.5,.75,1],ResNet50:[1]},AT=[1,2,4],yT={maxPoses:1,flipHorizontal:!1},V_e={maxPoses:5,flipHorizontal:!1,scoreThreshold:.5,nmsRadius:20},W_e=[-123.15,-115.9,-103.06];function Cb(n){return Math.floor(n/2)}var H_e=(function(){function n(e,t){this.priorityQueue=new Array(e),this.numberOfElements=-1,this.getElementValue=t}return n.prototype.enqueue=function(e){this.priorityQueue[++this.numberOfElements]=e,this.swim(this.numberOfElements)},n.prototype.dequeue=function(){var e=this.priorityQueue[0];return this.exchange(0,this.numberOfElements--),this.sink(0),this.priorityQueue[this.numberOfElements+1]=null,e},n.prototype.empty=function(){return this.numberOfElements===-1},n.prototype.size=function(){return this.numberOfElements+1},n.prototype.all=function(){return this.priorityQueue.slice(0,this.numberOfElements+1)},n.prototype.max=function(){return this.priorityQueue[0]},n.prototype.swim=function(e){for(;e>0&&this.less(Cb(e),e);)this.exchange(e,Cb(e)),e=Cb(e)},n.prototype.sink=function(e){for(;2*e<=this.numberOfElements;){var t=2*e;if(t<this.numberOfElements&&this.less(t,t+1)&&t++,!this.less(e,t))break;this.exchange(e,t),e=t}},n.prototype.getValueAt=function(e){return this.getElementValue(this.priorityQueue[e])},n.prototype.less=function(e,t){return this.getValueAt(e)<this.getValueAt(t)},n.prototype.exchange=function(e,t){var s=this.priorityQueue[e];this.priorityQueue[e]=this.priorityQueue[t],this.priorityQueue[t]=s},n})();function q_e(n,e,t,s,r,i){for(var o=i.shape,a=o[0],l=o[1],c=!0,u=Math.max(t-r,0),h=Math.min(t+r+1,a),d=u;d<h;++d){for(var f=Math.max(s-r,0),p=Math.min(s+r+1,l),A=f;A<p;++A)if(i.get(d,A,n)>e){c=!1;break}if(!c)break}return c}function Y_e(n){return Nn(this,void 0,void 0,(function(){return Rn(this,(function(e){return[2,Promise.all(n.map((function(t){return t.buffer()})))]}))}))}function lL(n,e,t,s){return{y:s.get(n,e,t),x:s.get(n,e,t+17)}}function cL(n,e,t){var s=lL(n.heatmapY,n.heatmapX,n.id,t),r=s.y,i=s.x;return{x:n.heatmapX*e+i,y:n.heatmapY*e+r}}function uL(n,e,t,s){var r=t.x,i=t.y;return n.some((function(o){var a,l,c,u,h,d,f=o.keypoints;return a=i,l=r,c=f[s].y,u=f[s].x,(h=c-a)*h+(d=u-l)*d<=e}))}var xT=$a.reduce((function(n,e,t){return n[e]=t,n}),{}),hL=[["nose","left_eye"],["left_eye","left_ear"],["nose","right_eye"],["right_eye","right_ear"],["nose","left_shoulder"],["left_shoulder","left_elbow"],["left_elbow","left_wrist"],["left_shoulder","left_hip"],["left_hip","left_knee"],["left_knee","left_ankle"],["nose","right_shoulder"],["right_shoulder","right_elbow"],["right_elbow","right_wrist"],["right_shoulder","right_hip"],["right_hip","right_knee"],["right_knee","right_ankle"]].map((function(n){var e=n[0],t=n[1];return[xT[e],xT[t]]})),Ib=hL.map((function(n){return n[1]})),bT=hL.map((function(n){return n[0]}));function vT(n,e,t){return n<e?e:n>t?t:n}function wb(n,e,t,s){return{y:vT(Math.round(n.y/e),0,t-1),x:vT(Math.round(n.x/e),0,s-1)}}function CT(n,e){return{x:n.x+e.x,y:n.y+e.y}}function IT(n,e,t,s,r,i,o,a){a===void 0&&(a=2);for(var l=s.shape,c=l[0],u=l[1],h={y:e.y,x:e.x},d=CT(h,(function(x,v,b){var w=b.shape[2]/2;return{y:b.get(v.y,v.x,x),x:b.get(v.y,v.x,w+x)}})(n,wb(h,i,c,u),o)),f=0;f<a;f++){var p=wb(d,i,c,u),A=lL(p.y,p.x,t,r);d=CT({x:p.x*i,y:p.y*i},{x:A.x,y:A.y})}var m=wb(d,i,c,u),g=s.get(m.y,m.x,t);return{y:d.y,x:d.x,name:$a[t],score:g}}function j_e(n,e,t,s,r,i){var o=e.shape[2],a=Ib.length,l=new Array(o),c=n.part,u=n.score,h=cL(c,s,t);l[c.id]={score:u,name:$a[c.id],y:h.y,x:h.x};for(var d=a-1;d>=0;--d){var f=Ib[d],p=bT[d];l[f]&&!l[p]&&(l[p]=IT(d,l[f],p,e,t,s,i))}for(d=0;d<a;++d)f=bT[d],p=Ib[d],l[f]&&!l[p]&&(l[p]=IT(d,l[f],p,e,t,s,r));return l}function X_e(n,e,t){return t.reduce((function(s,r,i){var o=r.y,a=r.x,l=r.score;return uL(n,e,{y:o,x:a},i)||(s+=l),s}),0)/t.length}function K_e(n,e,t,s,r,i,o,a){return o===void 0&&(o=.5),a===void 0&&(a=20),Nn(this,void 0,void 0,(function(){var l,c,u,h,d,f,p,A,m,g,x,v;return Rn(this,(function(b){switch(b.label){case 0:return[4,Y_e([n,e,t,s])];case 1:for(l=b.sent(),c=l[0],u=l[1],h=l[2],d=l[3],f=[],p=(function(w,_,N){for(var M=N.shape,T=M[0],k=M[1],B=M[2],L=new H_e(T*k*B,(function(ee){return ee.score})),U=0;U<T;++U)for(var V=0;V<k;++V)for(var W=0;W<B;++W){var H=N.get(U,V,W);H<w||q_e(W,H,U,V,_,N)&&L.enqueue({score:H,part:{heatmapY:U,heatmapX:V,id:W}})}return L})(o,1,c),A=a*a;f.length<i&&!p.empty();)m=p.dequeue(),g=cL(m.part,r,u),uL(f,A,g,m.part.id)||(x=j_e(m,c,u,r,h,d),v=X_e(f,A,x),f.push({keypoints:x,score:v}));return[2,f]}}))}))}function dL(){for(var n,e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];switch(e.length){case 0:n="fn main() ";break;case 1:n="fn main(".concat(e[0]," : i32)");break;default:throw Error("Unreachable")}return n}var J_e=(function(){function n(e){this.variableNames=["A","B"],this.size=!0,this.workgroupSize=[32,1,1],this.outputShape=[e[0],1],this.dispatchLayout=Ct(this.outputShape),this.dispatch=pt(this.dispatchLayout,this.outputShape,this.workgroupSize),this.shaderKey="getpointsConfidenceOp"}return n.prototype.getUserCode=function(){return`
        `.concat(dL("index"),` {
          if (index < uniforms.size) {
            let y = B[index * 2];
            let x = B[index * 2 + 1];
            let outIndex = y * uniforms.aShape.x * uniforms.aShape.z + x * uniforms.aShape.z + index;
            result[index] = A[outIndex];
          }
        }
        `)},n})();function Z_e(n,e){if(Al()instanceof Np)return(function(t,s){var r=Al(),i=new J_e(s.shape),o=r.runWebGPUProgram(i,[t,s],"float32");return lr().makeTensorFromTensorInfo(o)})(n,e);throw new Error("getPointsConfidenceWebGPU is not supported in this backend!")}var e3e=(function(){function n(e){if(this.variableNames=["A","B"],this.size=!0,this.supportedLastDimension=2,e.length!==2||e[1]!==this.supportedLastDimension)throw new Error("GetOffsetVectorsProgram only supports shape of [x, ".concat(this.supportedLastDimension,"], but current shape is ").concat(e));this.workgroupSize=[32,1,1],this.outputShape=e;var t=[e[0],1];this.dispatchLayout=Ct(t),this.dispatch=pt(this.dispatchLayout,t,this.workgroupSize),this.shaderKey="GetOffsetVectors"}return n.prototype.getUserCode=function(){return`
    fn getOffsetPoint(y: i32, x: i32, index: i32) -> vec2<i32> {
      let outIndexY = y * uniforms.bShape.x * uniforms.bShape.y + x * uniforms.bShape.y + index;
      let outIndexX = outIndexY + uniforms.bShape.z;
      let outY = i32(B[outIndexY]);
      let outX = i32(B[outIndexX]);
      return vec2<i32>(outY, outX);
    }

    `.concat(dL("index"),` {
      if (index < uniforms.size) {
        let indexY = index * `).concat(this.supportedLastDimension,`;
        let indexX = indexY + 1;
        let heatmapY = A[indexY];
        let heatmapX = A[indexX];
        let out = getOffsetPoint(i32(heatmapY), i32(heatmapX), index);
        result[indexY] = f32(out[0]);
        result[indexX] = f32(out[1]);
      }
    }
    `)},n})();function t3e(n,e){if(Al()instanceof Np)return(function(t,s){var r=Al(),i=new e3e(t.shape),o=r.runWebGPUProgram(i,[t,s],"float32");return lr().makeTensorFromTensorInfo(o)})(n,e);throw new Error("getOffsetVectorsGPU is not supported in this backend!")}function fL(n){var e=n.shape,t=e[0],s=e[1],r=e[2];return ue((function(){var i,o,a=ae(n,[t*s,r]),l=yl(a,0),c=Kn(rt(l,Bt(s,"int32")),1),u=Kn((i=l,o=s,ue((function(){var h=rt(i,Bt(o,"int32"));return gt(i,ne(h,Bt(o,"int32")))}))),1);return ps([c,u],1)}))}function n3e(n,e,t){return ue((function(){var s=(function(r,i){for(var o=[],a=0;a<$a.length;a++){var l=r.get(a,0).valueOf(),c=r.get(a,1).valueOf(),u=s3e(l,c,a,i),h=u.x,d=u.y;o.push(d),o.push(h)}return ni(o,[$a.length,2])})(n,t);return $e(Ze(ne(n.toTensor(),Bt(e,"int32")),"float32"),s)}))}function s3e(n,e,t,s){return{y:s.get(n,e,t),x:s.get(n,e,t+$a.length)}}function r3e(n,e,t){return Nn(this,void 0,void 0,(function(){var s,r,i,o,a,l,c,u,h,d;return Rn(this,(function(f){switch(f.label){case 0:return s=0,r=fL(n),[4,Promise.all([n.buffer(),e.buffer(),r.buffer()])];case 1:return i=f.sent(),o=i[0],a=i[1],l=i[2],[4,(c=n3e(l,t,a)).buffer()];case 2:return u=f.sent(),h=Array.from((function(p,A){for(var m=A.shape[0],g=new Float32Array(m),x=0;x<m;x++){var v=A.get(x,0),b=A.get(x,1);g[x]=p.get(v,b,x)}return g})(o,l)),d=h.map((function(p,A){return s+=p,{y:u.get(A,0),x:u.get(A,1),score:p,name:$a[A]}})),r.dispose(),c.dispose(),[2,{keypoints:d,score:s/d.length}]}}))}))}function i3e(n,e,t){return Nn(this,void 0,void 0,(function(){var s,r,i;return Rn(this,(function(o){return s=fL(n),r=(function(a,l,c){return ue((function(){var u=t3e(a,c);return $e(Ze(ne(a,Bt(l,"int32")),"float32"),u)}))})(s,t,e),i=Z_e(n,s),[2,[r,i]]}))}))}function wT(n,e){return(n-1)%e==0}var ST="https://storage.googleapis.com/tfjs-models/savedmodel/posenet/mobilenet/",ET="https://storage.googleapis.com/tfjs-models/savedmodel/posenet/resnet50/";function _T(n,e){return(function(t,s){return(t-1)%s==0})(n,e)?n:Math.floor(n/e)*e+1}var TT=(function(){function n(e,t){this.posenetModel=e;var s=this.posenetModel.inputs[0].shape;z(s[1]===-1&&s[2]===-1,(function(){return"Input shape [".concat(s[1],", ").concat(s[2],"] ")+"must both be equal to or -1"}));var r,i,o=(r=t.inputResolution,i=t.outputStride,{height:_T(r.height,i),width:_T(r.width,i)});(function(a){z(G_e.indexOf(a)>=0,(function(){return"outputStride of ".concat(a," is invalid. ")+"It must be either 8 or 16."}))})(t.outputStride),(function(a,l){z(wT(a.height,l),(function(){return"height of ".concat(a.height," is invalid for output stride ")+"".concat(l,".")})),z(wT(a.width,l),(function(){return"width of ".concat(a.width," is invalid for output stride ")+"".concat(l,".")}))})(o,t.outputStride),this.inputResolution=o,this.outputStride=t.outputStride,this.architecture=t.architecture}return n.prototype.estimatePoses=function(e,t){return t===void 0&&(t=yT),Nn(this,void 0,void 0,(function(){return Rn(this,(function(s){return[2,this.estimatePosesGPU(e,t,!1)]}))}))},n.prototype.estimatePosesGPU=function(e,t,s){return t===void 0&&(t=yT),s===void 0&&(s=!1),Nn(this,void 0,void 0,(function(){var r,i,o,a,l,c,u,h,d,f,p,A,m,g,x,v,b,w;return Rn(this,(function(_){switch(_.label){case 0:return r=(function(N){var M=N;if(M.maxPoses==null&&(M.maxPoses=1),M.maxPoses<=0)throw new Error("Invalid maxPoses ".concat(M.maxPoses,". Should be > 0."));if(M.maxPoses>1){if((M=as(as({},V_e),M)).scoreThreshold<0||M.scoreThreshold>1)throw new Error("Invalid scoreThreshold ".concat(M.scoreThreshold,". ")+"Should be in range [0.0, 1.0]");if(M.nmsRadius<=0)throw new Error("Invalid nmsRadius ".concat(M.nmsRadius,"."))}return M})(t),e==null?[2,s?[[],[]]:[]]:(this.maxPoses=r.maxPoses,i=$C(e,{outputTensorSize:this.inputResolution,keepAspectRatio:!0,borderMode:"replicate"}),o=i.imageTensor,a=i.padding,l=this.architecture==="ResNet50"?$e(o,W_e):sL(o,[-1,1]),c=this.posenetModel.predict(l),this.architecture==="ResNet50"?(u=Ht(c[2],[0]),h=Ht(c[3],[0]),d=Ht(c[0],[0]),f=Ht(c[1],[0])):(u=Ht(c[0],[0]),h=Ht(c[1],[0]),d=Ht(c[2],[0]),f=Ht(c[3],[0])),p=Tr(h),this.maxPoses!==1?[3,5]:s?[4,i3e(p,u,this.outputStride)]:[3,2]);case 1:return m=_.sent(),x=m[0],g=m[1],A=[x,g],[3,4];case 2:return[4,r3e(p,u,this.outputStride)];case 3:x=_.sent(),A=[x],_.label=4;case 4:return[3,7];case 5:if(s)throw new Error("GPU renderer only supports single pose!");return[4,K_e(p,u,d,f,this.outputStride,this.maxPoses,r.scoreThreshold,r.nmsRadius)];case 6:A=_.sent(),_.label=7;case 7:if(s){if(r.flipHorizontal===!0)throw new Error("flipHorizontal is not supported!");v=this.getCanvasInfo(lf(e),this.inputResolution,a)}else w=lf(e),b=(function(N,M,T,k){var B=M.height,L=M.width,U=B/(T.height*(1-k.top-k.bottom)),V=L/(T.width*(1-k.left-k.right)),W=-k.top*T.height,H=-k.left*T.width;if(V===1&&U===1&&W===0&&H===0)return N;for(var ee=0,K=N;ee<K.length;ee++)for(var te=0,le=K[ee].keypoints;te<le.length;te++){var fe=le[te];fe.x=(fe.x+H)*V,fe.y=(fe.y+W)*U}return N})(A,w,this.inputResolution,a),r.flipHorizontal&&(b=(function(N,M){for(var T=0,k=N;T<k.length;T++)for(var B=0,L=k[T].keypoints;B<L.length;B++){var U=L[B];U.x=M.width-1-U.x}return N})(b,w));return o.dispose(),l.dispose(),zt(c),u.dispose(),h.dispose(),d.dispose(),f.dispose(),p.dispose(),[2,s?[A,v]:b]}}))}))},n.prototype.getCanvasInfo=function(e,t,s){var r=e.height,i=e.width,o=r/(t.height*(1-s.top-s.bottom)),a=i/(t.width*(1-s.left-s.right)),l=-s.top*t.height;return[-s.left*t.width,l,a,o,e.width,e.height]},n.prototype.dispose=function(){this.posenetModel.dispose()},n.prototype.reset=function(){},n})();function o3e(n){return n===void 0&&(n=fT),Nn(this,void 0,void 0,(function(){var e,t,s,r,i;return Rn(this,(function(o){switch(o.label){case 0:return(e=(function(u){var h=u||fT;if(h.architecture==null&&(h.architecture="MobileNetV1"),pT.indexOf(h.architecture)<0)throw new Error("Invalid architecture ".concat(h.architecture,". ")+"Should be one of ".concat(pT));if(h.inputResolution==null&&(h.inputResolution={height:257,width:257}),h.outputStride==null&&(h.outputStride=16),mT[h.architecture].indexOf(h.outputStride)<0)throw new Error("Invalid outputStride ".concat(h.outputStride,". ")+"Should be one of ".concat(mT[h.architecture]," ")+"for architecture ".concat(h.architecture,"."));if(h.multiplier==null&&(h.multiplier=1),gT[h.architecture].indexOf(h.multiplier)<0)throw new Error("Invalid multiplier ".concat(h.multiplier,". ")+"Should be one of ".concat(gT[h.architecture]," ")+"for architecture ".concat(h.architecture,"."));if(h.quantBytes==null&&(h.quantBytes=4),AT.indexOf(h.quantBytes)<0)throw new Error("Invalid quantBytes ".concat(h.quantBytes,". ")+"Should be one of ".concat(AT," ")+"for architecture ".concat(h.architecture,"."));if(h.architecture==="MobileNetV1"&&h.outputStride===32&&h.multiplier!==1)throw new Error("When using an output stride of 32, you must select 1 as the multiplier.");return h})(n)).architecture!=="ResNet50"?[3,2]:(a=e.outputStride,l=e.quantBytes,c="model-stride".concat(a,".json"),t=l===4?ET+"float/"+c:ET+"quant".concat(l,"/")+c,[4,Ma(e.modelUrl||t)]);case 1:return s=o.sent(),[2,new TT(s,e)];case 2:return r=(function(u,h,d){var f={1:"100",.75:"075",.5:"050"},p="model-stride".concat(u,".json");return d===4?ST+"float/".concat(f[h],"/")+p:ST+"quant".concat(d,"/").concat(f[h],"/")+p})(e.outputStride,e.multiplier,e.quantBytes),[4,Ma(e.modelUrl||r)];case 3:return i=o.sent(),[2,new TT(i,e)]}var a,l,c}))}))}function a3e(n,e){return Nn(this,void 0,void 0,(function(){var t,s;return Rn(this,(function(r){switch(n){case Ea.PoseNet:return[2,o3e(e)];case Ea.BlazePose:if(s=void 0,(t=e)!=null){if(t.runtime==="tfjs")return[2,F_e(e)];if(t.runtime==="mediapipe")return[2,a_e(e)];s=t.runtime}throw new Error("Expect modelConfig.runtime to be either 'tfjs' "+"or 'mediapipe', but got ".concat(s));case Ea.MoveNet:return[2,z_e(e)];default:throw new Error("".concat(n," is not a supported model name."))}}))}))}var l3e={modelType:{SINGLEPOSE_LIGHTNING:"SinglePose.Lightning"}};class RS{static async create(e){await Hk("webgl"),await qk();const t=await a3e(Ea.MoveNet,{modelType:l3e.modelType.SINGLEPOSE_LIGHTNING}),s=new RS(t,e);return e.log("success","MoveNet loaded"),s}constructor(e,t){this.detector=e,this.debug=t,this.lastGood=null}async estimate(e,t){try{const s=await this.detector.estimatePoses(e);if(!s?.length){this.lastGood=null,this.debug.updatePoseStatus("No person");return}const r=s[0].keypoints,i=r.find(a=>a.name==="left_shoulder"),o=r.find(a=>a.name==="right_shoulder");i?.score>.4&&o?.score>.4?(this.lastGood={left:{x:i.x,y:i.y,score:i.score},right:{x:o.x,y:o.y,score:o.score}},this.debug.updatePoseStatus(`Detected (L:${i.score.toFixed(2)}, R:${o.score.toFixed(2)})`)):(this.lastGood=null,this.debug.updatePoseStatus("Low confidence"))}catch(s){this.lastGood=null,this.debug.log("error",`Pose error: ${s.message}`)}}getLastShoulders(){return this.lastGood}}var Sb={},BT;function c3e(){return BT||(BT=1,(function(){var n;function e(E){var F=0;return function(){return F<E.length?{done:!1,value:E[F++]}:{done:!0}}}var t=typeof Object.defineProperties=="function"?Object.defineProperty:function(E,F,Q){return E==Array.prototype||E==Object.prototype||(E[F]=Q.value),E};function s(E){E=[typeof globalThis=="object"&&globalThis,E,typeof window=="object"&&window,typeof self=="object"&&self,typeof qd=="object"&&qd];for(var F=0;F<E.length;++F){var Q=E[F];if(Q&&Q.Math==Math)return Q}throw Error("Cannot find global object")}var r=s(this);function i(E,F){if(F)e:{var Q=r;E=E.split(".");for(var j=0;j<E.length-1;j++){var oe=E[j];if(!(oe in Q))break e;Q=Q[oe]}E=E[E.length-1],j=Q[E],F=F(j),F!=j&&F!=null&&t(Q,E,{configurable:!0,writable:!0,value:F})}}i("Symbol",function(E){function F(be){if(this instanceof F)throw new TypeError("Symbol is not a constructor");return new Q(j+(be||"")+"_"+oe++,be)}function Q(be,ce){this.g=be,t(this,"description",{configurable:!0,writable:!0,value:ce})}if(E)return E;Q.prototype.toString=function(){return this.g};var j="jscomp_symbol_"+(1e9*Math.random()>>>0)+"_",oe=0;return F}),i("Symbol.iterator",function(E){if(E)return E;E=Symbol("Symbol.iterator");for(var F="Array Int8Array Uint8Array Uint8ClampedArray Int16Array Uint16Array Int32Array Uint32Array Float32Array Float64Array".split(" "),Q=0;Q<F.length;Q++){var j=r[F[Q]];typeof j=="function"&&typeof j.prototype[E]!="function"&&t(j.prototype,E,{configurable:!0,writable:!0,value:function(){return o(e(this))}})}return E});function o(E){return E={next:E},E[Symbol.iterator]=function(){return this},E}function a(E){var F=typeof Symbol<"u"&&Symbol.iterator&&E[Symbol.iterator];return F?F.call(E):{next:e(E)}}function l(E){if(!(E instanceof Array)){E=a(E);for(var F,Q=[];!(F=E.next()).done;)Q.push(F.value);E=Q}return E}var c=typeof Object.create=="function"?Object.create:function(E){function F(){}return F.prototype=E,new F},u;if(typeof Object.setPrototypeOf=="function")u=Object.setPrototypeOf;else{var h;e:{var d={a:!0},f={};try{f.__proto__=d,h=f.a;break e}catch{}h=!1}u=h?function(E,F){if(E.__proto__=F,E.__proto__!==F)throw new TypeError(E+" is not extensible");return E}:null}var p=u;function A(E,F){if(E.prototype=c(F.prototype),E.prototype.constructor=E,p)p(E,F);else for(var Q in F)if(Q!="prototype")if(Object.defineProperties){var j=Object.getOwnPropertyDescriptor(F,Q);j&&Object.defineProperty(E,Q,j)}else E[Q]=F[Q];E.na=F.prototype}function m(){this.l=!1,this.i=null,this.h=void 0,this.g=1,this.u=this.o=0,this.j=null}function g(E){if(E.l)throw new TypeError("Generator is already running");E.l=!0}m.prototype.s=function(E){this.h=E};function x(E,F){E.j={da:F,ea:!0},E.g=E.o||E.u}m.prototype.return=function(E){this.j={return:E},this.g=this.u};function v(E,F,Q){return E.g=Q,{value:F}}function b(E){this.g=new m,this.h=E}function w(E,F){g(E.g);var Q=E.g.i;return Q?_(E,"return"in Q?Q.return:function(j){return{value:j,done:!0}},F,E.g.return):(E.g.return(F),N(E))}function _(E,F,Q,j){try{var oe=F.call(E.g.i,Q);if(!(oe instanceof Object))throw new TypeError("Iterator result "+oe+" is not an object");if(!oe.done)return E.g.l=!1,oe;var be=oe.value}catch(ce){return E.g.i=null,x(E.g,ce),N(E)}return E.g.i=null,j.call(E.g,be),N(E)}function N(E){for(;E.g.g;)try{var F=E.h(E.g);if(F)return E.g.l=!1,{value:F.value,done:!1}}catch(Q){E.g.h=void 0,x(E.g,Q)}if(E.g.l=!1,E.g.j){if(F=E.g.j,E.g.j=null,F.ea)throw F.da;return{value:F.return,done:!0}}return{value:void 0,done:!0}}function M(E){this.next=function(F){return g(E.g),E.g.i?F=_(E,E.g.i.next,F,E.g.s):(E.g.s(F),F=N(E)),F},this.throw=function(F){return g(E.g),E.g.i?F=_(E,E.g.i.throw,F,E.g.s):(x(E.g,F),F=N(E)),F},this.return=function(F){return w(E,F)},this[Symbol.iterator]=function(){return this}}function T(E){function F(j){return E.next(j)}function Q(j){return E.throw(j)}return new Promise(function(j,oe){function be(ce){ce.done?j(ce.value):Promise.resolve(ce.value).then(F,Q).then(be,oe)}be(E.next())})}function k(E){return T(new M(new b(E)))}i("Promise",function(E){function F(ce){this.h=0,this.i=void 0,this.g=[],this.s=!1;var _e=this.j();try{ce(_e.resolve,_e.reject)}catch(Fe){_e.reject(Fe)}}function Q(){this.g=null}function j(ce){return ce instanceof F?ce:new F(function(_e){_e(ce)})}if(E)return E;Q.prototype.h=function(ce){if(this.g==null){this.g=[];var _e=this;this.i(function(){_e.l()})}this.g.push(ce)};var oe=r.setTimeout;Q.prototype.i=function(ce){oe(ce,0)},Q.prototype.l=function(){for(;this.g&&this.g.length;){var ce=this.g;this.g=[];for(var _e=0;_e<ce.length;++_e){var Fe=ce[_e];ce[_e]=null;try{Fe()}catch(nt){this.j(nt)}}}this.g=null},Q.prototype.j=function(ce){this.i(function(){throw ce})},F.prototype.j=function(){function ce(nt){return function(Nt){Fe||(Fe=!0,nt.call(_e,Nt))}}var _e=this,Fe=!1;return{resolve:ce(this.D),reject:ce(this.l)}},F.prototype.D=function(ce){if(ce===this)this.l(new TypeError("A Promise cannot resolve to itself"));else if(ce instanceof F)this.H(ce);else{e:switch(typeof ce){case"object":var _e=ce!=null;break e;case"function":_e=!0;break e;default:_e=!1}_e?this.A(ce):this.o(ce)}},F.prototype.A=function(ce){var _e=void 0;try{_e=ce.then}catch(Fe){this.l(Fe);return}typeof _e=="function"?this.I(_e,ce):this.o(ce)},F.prototype.l=function(ce){this.u(2,ce)},F.prototype.o=function(ce){this.u(1,ce)},F.prototype.u=function(ce,_e){if(this.h!=0)throw Error("Cannot settle("+ce+", "+_e+"): Promise already settled in state"+this.h);this.h=ce,this.i=_e,this.h===2&&this.G(),this.B()},F.prototype.G=function(){var ce=this;oe(function(){if(ce.C()){var _e=r.console;typeof _e<"u"&&_e.error(ce.i)}},1)},F.prototype.C=function(){if(this.s)return!1;var ce=r.CustomEvent,_e=r.Event,Fe=r.dispatchEvent;return typeof Fe>"u"?!0:(typeof ce=="function"?ce=new ce("unhandledrejection",{cancelable:!0}):typeof _e=="function"?ce=new _e("unhandledrejection",{cancelable:!0}):(ce=r.document.createEvent("CustomEvent"),ce.initCustomEvent("unhandledrejection",!1,!0,ce)),ce.promise=this,ce.reason=this.i,Fe(ce))},F.prototype.B=function(){if(this.g!=null){for(var ce=0;ce<this.g.length;++ce)be.h(this.g[ce]);this.g=null}};var be=new Q;return F.prototype.H=function(ce){var _e=this.j();ce.M(_e.resolve,_e.reject)},F.prototype.I=function(ce,_e){var Fe=this.j();try{ce.call(_e,Fe.resolve,Fe.reject)}catch(nt){Fe.reject(nt)}},F.prototype.then=function(ce,_e){function Fe(Jt,Lt){return typeof Jt=="function"?function(hn){try{nt(Jt(hn))}catch(Cn){Nt(Cn)}}:Lt}var nt,Nt,Zt=new F(function(Jt,Lt){nt=Jt,Nt=Lt});return this.M(Fe(ce,nt),Fe(_e,Nt)),Zt},F.prototype.catch=function(ce){return this.then(void 0,ce)},F.prototype.M=function(ce,_e){function Fe(){switch(nt.h){case 1:ce(nt.i);break;case 2:_e(nt.i);break;default:throw Error("Unexpected state: "+nt.h)}}var nt=this;this.g==null?be.h(Fe):this.g.push(Fe),this.s=!0},F.resolve=j,F.reject=function(ce){return new F(function(_e,Fe){Fe(ce)})},F.race=function(ce){return new F(function(_e,Fe){for(var nt=a(ce),Nt=nt.next();!Nt.done;Nt=nt.next())j(Nt.value).M(_e,Fe)})},F.all=function(ce){var _e=a(ce),Fe=_e.next();return Fe.done?j([]):new F(function(nt,Nt){function Zt(hn){return function(Cn){Jt[hn]=Cn,Lt--,Lt==0&&nt(Jt)}}var Jt=[],Lt=0;do Jt.push(void 0),Lt++,j(Fe.value).M(Zt(Jt.length-1),Nt),Fe=_e.next();while(!Fe.done)})},F});function B(E,F){E instanceof String&&(E+="");var Q=0,j=!1,oe={next:function(){if(!j&&Q<E.length){var be=Q++;return{value:F(be,E[be]),done:!1}}return j=!0,{done:!0,value:void 0}}};return oe[Symbol.iterator]=function(){return oe},oe}var L=typeof Object.assign=="function"?Object.assign:function(E,F){for(var Q=1;Q<arguments.length;Q++){var j=arguments[Q];if(j)for(var oe in j)Object.prototype.hasOwnProperty.call(j,oe)&&(E[oe]=j[oe])}return E};i("Object.assign",function(E){return E||L}),i("Object.is",function(E){return E||function(F,Q){return F===Q?F!==0||1/F===1/Q:F!==F&&Q!==Q}}),i("Array.prototype.includes",function(E){return E||function(F,Q){var j=this;j instanceof String&&(j=String(j));var oe=j.length;for(Q=Q||0,0>Q&&(Q=Math.max(Q+oe,0));Q<oe;Q++){var be=j[Q];if(be===F||Object.is(be,F))return!0}return!1}}),i("String.prototype.includes",function(E){return E||function(F,Q){if(this==null)throw new TypeError("The 'this' value for String.prototype.includes must not be null or undefined");if(F instanceof RegExp)throw new TypeError("First argument to String.prototype.includes must not be a regular expression");return this.indexOf(F,Q||0)!==-1}}),i("Array.prototype.keys",function(E){return E||function(){return B(this,function(F){return F})}});var U=this||self;function V(E,F){E=E.split(".");var Q=U;E[0]in Q||typeof Q.execScript>"u"||Q.execScript("var "+E[0]);for(var j;E.length&&(j=E.shift());)E.length||F===void 0?Q[j]&&Q[j]!==Object.prototype[j]?Q=Q[j]:Q=Q[j]={}:Q[j]=F}function W(){throw Error("Invalid UTF8")}function H(E,F){return F=String.fromCharCode.apply(null,F),E==null?F:E+F}var ee,K=typeof TextDecoder<"u",te,le=typeof TextEncoder<"u",fe={},Ie=null;function Se(E){var F;F===void 0&&(F=0),he(),F=fe[F];for(var Q=Array(Math.floor(E.length/3)),j=F[64]||"",oe=0,be=0;oe<E.length-2;oe+=3){var ce=E[oe],_e=E[oe+1],Fe=E[oe+2],nt=F[ce>>2];ce=F[(ce&3)<<4|_e>>4],_e=F[(_e&15)<<2|Fe>>6],Fe=F[Fe&63],Q[be++]=nt+ce+_e+Fe}switch(nt=0,Fe=j,E.length-oe){case 2:nt=E[oe+1],Fe=F[(nt&15)<<2]||j;case 1:E=E[oe],Q[be]=F[E>>2]+F[(E&3)<<4|nt>>4]+Fe+j}return Q.join("")}function De(E){var F=E.length,Q=3*F/4;Q%3?Q=Math.floor(Q):"=.".indexOf(E[F-1])!=-1&&(Q="=.".indexOf(E[F-2])!=-1?Q-2:Q-1);var j=new Uint8Array(Q),oe=0;return Be(E,function(be){j[oe++]=be}),oe!==Q?j.subarray(0,oe):j}function Be(E,F){function Q(Fe){for(;j<E.length;){var nt=E.charAt(j++),Nt=Ie[nt];if(Nt!=null)return Nt;if(!/^[\s\xa0]*$/.test(nt))throw Error("Unknown base64 encoding at char: "+nt)}return Fe}he();for(var j=0;;){var oe=Q(-1),be=Q(0),ce=Q(64),_e=Q(64);if(_e===64&&oe===-1)break;F(oe<<2|be>>4),ce!=64&&(F(be<<4&240|ce>>2),_e!=64&&F(ce<<6&192|_e))}}function he(){if(!Ie){Ie={};for(var E="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789".split(""),F=["+/=","+/","-_=","-_.","-_"],Q=0;5>Q;Q++){var j=E.concat(F[Q].split(""));fe[Q]=j;for(var oe=0;oe<j.length;oe++){var be=j[oe];Ie[be]===void 0&&(Ie[be]=oe)}}}}var ge=typeof Uint8Array=="function";function Ne(E){return ge&&E!=null&&E instanceof Uint8Array}var Oe;function Qe(E){if(this.L=E,E!==null&&E.length===0)throw Error("ByteString should be constructed with non-empty values")}var Ye=typeof Uint8Array.prototype.slice=="function",_t=0,J=0;function ht(E,F){if(E.constructor===Uint8Array)return E;if(E.constructor===ArrayBuffer)return new Uint8Array(E);if(E.constructor===Array)return new Uint8Array(E);if(E.constructor===String)return De(E);if(E.constructor===Qe)return!F&&(F=E.L)&&F.constructor===Uint8Array?F:(F=E.L,F=F==null||Ne(F)?F:typeof F=="string"?De(F):null,(E=E.L=F)?new Uint8Array(E):Oe||(Oe=new Uint8Array(0)));if(E instanceof Uint8Array)return new Uint8Array(E.buffer,E.byteOffset,E.byteLength);throw Error("Type not convertible to a Uint8Array, expected a Uint8Array, an ArrayBuffer, a base64 encoded string, or Array of numbers")}function dt(E,F){return Error("Invalid wire type: "+E+" (at position "+F+")")}function tt(){return Error("Failed to read varint, encoding is invalid.")}function Ke(E,F){F=F===void 0?{}:F,F=F.v===void 0?!1:F.v,this.h=null,this.g=this.i=this.j=0,this.v=F,E&&kt(this,E)}function kt(E,F){E.h=ht(F,E.v),E.j=0,E.i=E.h.length,E.g=E.j}Ke.prototype.reset=function(){this.g=this.j};function Xe(E){if(E.g>E.i)throw Error("Tried to read past the end of the data "+E.g+" > "+E.i)}function ot(E){var F=E.h,Q=F[E.g],j=Q&127;if(128>Q)return E.g+=1,Xe(E),j;if(Q=F[E.g+1],j|=(Q&127)<<7,128>Q)return E.g+=2,Xe(E),j;if(Q=F[E.g+2],j|=(Q&127)<<14,128>Q)return E.g+=3,Xe(E),j;if(Q=F[E.g+3],j|=(Q&127)<<21,128>Q)return E.g+=4,Xe(E),j;if(Q=F[E.g+4],E.g+=5,j|=(Q&15)<<28,128>Q)return Xe(E),j;if(128<=F[E.g++]&&128<=F[E.g++]&&128<=F[E.g++]&&128<=F[E.g++]&&128<=F[E.g++])throw tt();return Xe(E),j}var wn=[];function sn(){this.g=[]}sn.prototype.length=function(){return this.g.length},sn.prototype.end=function(){var E=this.g;return this.g=[],E};function Z(E,F){for(;127<F;)E.g.push(F&127|128),F>>>=7;E.g.push(F)}function G(E){var F={},Q=F.W===void 0?!1:F.W;this.l={v:F.v===void 0?!1:F.v},this.W=Q,F=this.l,wn.length?(Q=wn.pop(),F&&(Q.v=F.v),E&&kt(Q,E),E=Q):E=new Ke(E,F),this.g=E,this.j=this.g.g,this.h=this.i=-1}G.prototype.reset=function(){this.g.reset(),this.j=this.g.g,this.h=this.i=-1};function we(E){var F=E.g;if(F.g==F.i)return!1;E.j=E.g.g;var Q=ot(E.g)>>>0;if(F=Q>>>3,Q&=7,!(0<=Q&&5>=Q))throw dt(Q,E.j);if(1>F)throw Error("Invalid field number: "+F+" (at position "+E.j+")");return E.i=F,E.h=Q,!0}function ke(E){switch(E.h){case 0:if(E.h!=0)ke(E);else e:{E=E.g;for(var F=E.g,Q=F+10;F<Q;)if((E.h[F++]&128)===0){E.g=F,Xe(E);break e}throw tt()}break;case 1:E=E.g,E.g+=8,Xe(E);break;case 2:E.h!=2?ke(E):(F=ot(E.g)>>>0,E=E.g,E.g+=F,Xe(E));break;case 5:E=E.g,E.g+=4,Xe(E);break;case 3:F=E.i;do{if(!we(E))throw Error("Unmatched start-group tag: stream EOF");if(E.h==4){if(E.i!=F)throw Error("Unmatched end-group tag");break}ke(E)}while(!0);break;default:throw dt(E.h,E.j)}}var Ue=[];function Re(){this.i=[],this.h=0,this.g=new sn}function bt(E,F){F.length!==0&&(E.i.push(F),E.h+=F.length)}function et(E,F){if(F=F.ba){bt(E,E.g.end());for(var Q=0;Q<F.length;Q++)bt(E,F[Q])}}var St=typeof Symbol=="function"&&typeof Symbol()=="symbol"?Symbol(void 0):void 0;function Tt(E,F){Object.isFrozen(E)||(St?E[St]|=F:E.N!==void 0?E.N|=F:Object.defineProperties(E,{N:{value:F,configurable:!0,writable:!0,enumerable:!1}}))}function We(E){var F;return St?F=E[St]:F=E.N,F??0}function ct(E){return Tt(E,1),E}function Ut(E){return Array.isArray(E)?!!(We(E)&2):!1}function Dt(E){if(!Array.isArray(E))throw Error("cannot mark non-array as immutable");Tt(E,2)}function mt(E){return E!==null&&typeof E=="object"&&!Array.isArray(E)&&E.constructor===Object}var Yt=Object.freeze(ct([]));function de(E){if(Ut(E.m))throw Error("Cannot mutate an immutable Message")}var je=typeof Symbol<"u"&&typeof Symbol.hasInstance<"u";function at(E){return{value:E,configurable:!1,writable:!1,enumerable:!1}}function At(E,F,Q){return F===-1?null:F>=E.i?E.g?E.g[F]:void 0:Q!==void 0&&Q&&E.g&&(Q=E.g[F],Q!=null)?Q:E.m[F+E.h]}function Ge(E,F,Q,j){j=j===void 0?!1:j,de(E),F<E.i&&!j?E.m[F+E.h]=Q:(E.g||(E.g=E.m[E.i+E.h]={}))[F]=Q}function Ve(E,F,Q,j){Q=Q===void 0?!0:Q,j=j===void 0?!1:j;var oe=At(E,F,j);return oe==null&&(oe=Yt),Ut(E.m)?Q&&(Dt(oe),Object.freeze(oe)):(oe===Yt||Ut(oe))&&(oe=ct(oe.slice()),Ge(E,F,oe,j)),oe}function ut(E,F,Q){return E=At(E,F),E=E==null?E:+E,E??(Q===void 0?0:Q)}function qt(E,F,Q,j){E.j||(E.j={});var oe=Ut(E.m),be=E.j[Q];if(!be){j=Ve(E,Q,!0,j===void 0?!1:j),be=[],oe=oe||Ut(j);for(var ce=0;ce<j.length;ce++)be[ce]=new F(j[ce]),oe&&Dt(be[ce].m);oe&&(Dt(be),Object.freeze(be)),E.j[Q]=be}return be}function Mn(E,F,Q,j,oe){var be=be===void 0?!1:be;return de(E),be=qt(E,Q,F,be),Q=j||new Q,E=Ve(E,F),oe!=null?(be.splice(oe,0,Q),E.splice(oe,0,Q.m)):(be.push(Q),E.push(Q.m)),Q}function mn(E,F){return E=At(E,F),E??0}function Ds(E,F){return E=At(E,F),E??""}function Qr(E){switch(typeof E){case"number":return isFinite(E)?E:String(E);case"object":if(E&&!Array.isArray(E)){if(Ne(E))return Se(E);if(E instanceof Qe){var F=E.L;return F=F==null||typeof F=="string"?F:ge&&F instanceof Uint8Array?Se(F):null,(E.L=F)||""}}}return E}function rr(E){var F=Ys;return F=F===void 0?ca:F,xs(E,F)}function wi(E,F){if(E!=null){if(Array.isArray(E))E=xs(E,F);else if(mt(E)){var Q={},j;for(j in E)Q[j]=wi(E[j],F);E=Q}else E=F(E);return E}}function xs(E,F){for(var Q=E.slice(),j=0;j<Q.length;j++)Q[j]=wi(Q[j],F);return Array.isArray(E)&&We(E)&1&&ct(Q),Q}function Ys(E){return E&&typeof E=="object"&&E.toJSON?E.toJSON():(E=Qr(E),Array.isArray(E)?rr(E):E)}function ca(E){return Ne(E)?new Uint8Array(E):E}function Xt(E,F,Q){E||(E=ls),ls=null;var j=this.constructor.h;E||(E=j?[j]:[]),this.h=(j?0:-1)-(this.constructor.g||0),this.j=void 0,this.m=E;e:{if(j=this.m.length,E=j-1,j&&(j=this.m[E],mt(j))){this.i=E-this.h,this.g=j;break e}F!==void 0&&-1<F?(this.i=Math.max(F,E+1-this.h),this.g=void 0):this.i=Number.MAX_VALUE}if(Q)for(F=0;F<Q.length;F++)if(E=Q[F],E<this.i)E+=this.h,(j=this.m[E])?Array.isArray(j)&&ct(j):this.m[E]=Yt;else{j=this.g||(this.g=this.m[this.i+this.h]={});var oe=j[E];oe?Array.isArray(oe)&&ct(oe):j[E]=Yt}}Xt.prototype.toJSON=function(){return rr(this.m)},Xt.prototype.toString=function(){return this.m.toString()};var ls;function Mr(){Xt.apply(this,arguments)}if(A(Mr,Xt),je){var za={};Object.defineProperties(Mr,(za[Symbol.hasInstance]=at(function(){throw Error("Cannot perform instanceof checks for MutableMessage")}),za))}function ai(E,F,Q){if(Q){var j={},oe;for(oe in Q){var be=Q[oe],ce=be.ha;ce||(j.F=be.la||be.fa.P,be.aa?(j.U=me(be.aa),ce=(function(_e){return function(Fe,nt,Nt){return _e.F(Fe,nt,Nt,_e.U)}})(j)):be.ca?(j.T=Ee(be.X.g,be.ca),ce=(function(_e){return function(Fe,nt,Nt){return _e.F(Fe,nt,Nt,_e.T)}})(j)):ce=j.F,be.ha=ce),ce(F,E,be.X),j={F:j.F,U:j.U,T:j.T}}}et(F,E)}var Si=Symbol();function Ei(E,F,Q){return E[Si]||(E[Si]=function(j,oe){return F(j,oe,Q)})}function Ur(E){var F=E[Si];if(!F){var Q=Wn(E);F=function(j,oe){return Tn(j,oe,Q)},E[Si]=F}return F}function Ga(E){var F=E.aa;if(F)return Ur(F);if(F=E.ka)return Ei(E.X.g,F,E.ca)}function ko(E){var F=Ga(E),Q=E.X,j=E.fa.O;return F?function(oe,be){return j(oe,be,Q,F)}:function(oe,be){return j(oe,be,Q)}}function go(E,F,Q,j,oe,be){E=E();var ce=0;for(E.length&&typeof E[0]!="number"&&(Q(F,E[0]),ce++);ce<E.length;){Q=E[ce++];for(var _e=ce+1;_e<E.length&&typeof E[_e]!="number";)_e++;var Fe=E[ce++];switch(_e-=ce,_e){case 0:j(F,Q,Fe);break;case 1:j(F,Q,Fe,E[ce++]);break;case 2:oe(F,Q,Fe,E[ce++],E[ce++]);break;case 3:_e=E[ce++];var nt=E[ce++],Nt=E[ce++];Array.isArray(Nt)?oe(F,Q,Fe,_e,nt,Nt):be(F,Q,Fe,_e,nt,Nt);break;case 4:be(F,Q,Fe,E[ce++],E[ce++],E[ce++],E[ce++]);break;default:throw Error("unexpected number of binary field arguments: "+_e)}}return F}var X=Symbol();function me(E){var F=E[X];if(!F){var Q=st(E);F=function(j,oe){return Wt(j,oe,Q)},E[X]=F}return F}function Ee(E,F){var Q=E[X];return Q||(Q=function(j,oe){return ai(j,oe,F)},E[X]=Q),Q}var Te=Symbol();function ve(E,F){E.push(F)}function Je(E,F,Q){E.push(F,Q.P)}function xt(E,F,Q,j,oe){var be=me(oe),ce=Q.P;E.push(F,function(_e,Fe,nt){return ce(_e,Fe,nt,j,be)})}function Et(E,F,Q,j,oe,be){var ce=Ee(j,be),_e=Q.P;E.push(F,function(Fe,nt,Nt){return _e(Fe,nt,Nt,j,ce)})}function st(E){var F=E[Te];return F||go(E,E[Te]=[],ve,Je,xt,Et)}var Vt=Symbol();function Gt(E,F){E[0]=F}function vt(E,F,Q,j){var oe=Q.O;E[F]=j?function(be,ce,_e){return oe(be,ce,_e,j)}:oe}function on(E,F,Q,j,oe,be){var ce=Q.O,_e=Ur(oe);E[F]=function(Fe,nt,Nt){return ce(Fe,nt,Nt,j,_e,be)}}function Ln(E,F,Q,j,oe,be,ce){var _e=Q.O,Fe=Ei(j,oe,be);E[F]=function(nt,Nt,Zt){return _e(nt,Nt,Zt,j,Fe,ce)}}function Wn(E){var F=E[Vt];return F||go(E,E[Vt]={},Gt,vt,on,Ln)}function Tn(E,F,Q){for(;we(F)&&F.h!=4;){var j=F.i,oe=Q[j];if(!oe){var be=Q[0];be&&(be=be[j])&&(oe=Q[j]=ko(be))}if((!oe||!oe(F,E,j))&&(oe=F,j=E,be=oe.j,ke(oe),!oe.W)){var ce=oe.g.h;oe=oe.g.g,oe=be===oe?Oe||(Oe=new Uint8Array(0)):Ye?ce.slice(be,oe):new Uint8Array(ce.subarray(be,oe)),(be=j.ba)?be.push(oe):j.ba=[oe]}}return E}function Dn(E,F,Q){if(Ue.length){var j=Ue.pop();E&&(kt(j.g,E),j.i=-1,j.h=-1),E=j}else E=new G(E);try{return Tn(new F,E,Wn(Q))}finally{F=E.g,F.h=null,F.j=0,F.i=0,F.g=0,F.v=!1,E.i=-1,E.h=-1,100>Ue.length&&Ue.push(E)}}function Wt(E,F,Q){for(var j=Q.length,oe=j%2==1,be=oe?1:0;be<j;be+=2)(0,Q[be+1])(F,E,Q[be]);ai(E,F,oe?Q[0]:void 0)}function Qn(E,F){var Q=new Re;Wt(E,Q,st(F)),bt(Q,Q.g.end()),E=new Uint8Array(Q.h),F=Q.i;for(var j=F.length,oe=0,be=0;be<j;be++){var ce=F[be];E.set(ce,oe),oe+=ce.length}return Q.i=[E],E}function fn(E,F){return{O:E,P:F}}var Hn=fn(function(E,F,Q){if(E.h!==5)return!1;E=E.g;var j=E.h[E.g],oe=E.h[E.g+1],be=E.h[E.g+2],ce=E.h[E.g+3];return E.g+=4,Xe(E),oe=(j<<0|oe<<8|be<<16|ce<<24)>>>0,E=2*(oe>>31)+1,j=oe>>>23&255,oe&=8388607,Ge(F,Q,j==255?oe?NaN:1/0*E:j==0?E*Math.pow(2,-149)*oe:E*Math.pow(2,j-150)*(oe+Math.pow(2,23))),!0},function(E,F,Q){if(F=At(F,Q),F!=null){Z(E.g,8*Q+5),E=E.g;var j=F;j=(Q=0>j?1:0)?-j:j,j===0?0<1/j?_t=J=0:(J=0,_t=2147483648):isNaN(j)?(J=0,_t=2147483647):34028234663852886e22<j?(J=0,_t=(Q<<31|2139095040)>>>0):11754943508222875e-54>j?(j=Math.round(j/Math.pow(2,-149)),J=0,_t=(Q<<31|j)>>>0):(F=Math.floor(Math.log(j)/Math.LN2),j*=Math.pow(2,-F),j=Math.round(8388608*j),16777216<=j&&++F,J=0,_t=(Q<<31|F+127<<23|j&8388607)>>>0),Q=_t,E.g.push(Q>>>0&255),E.g.push(Q>>>8&255),E.g.push(Q>>>16&255),E.g.push(Q>>>24&255)}}),_i=fn(function(E,F,Q){if(E.h!==0)return!1;for(var j=E.g,oe=128,be=0,ce=E=0;4>ce&&128<=oe;ce++)oe=j.h[j.g++],Xe(j),be|=(oe&127)<<7*ce;if(128<=oe&&(oe=j.h[j.g++],Xe(j),be|=(oe&127)<<28,E|=(oe&127)>>4),128<=oe)for(ce=0;5>ce&&128<=oe;ce++)oe=j.h[j.g++],Xe(j),E|=(oe&127)<<7*ce+3;if(128>oe)j=be>>>0,oe=E>>>0,(E=oe&2147483648)&&(j=~j+1>>>0,oe=~oe>>>0,j==0&&(oe=oe+1>>>0)),j=4294967296*oe+(j>>>0);else throw tt();return Ge(F,Q,E?-j:j),!0},function(E,F,Q){if(F=At(F,Q),F!=null&&F!=null){Z(E.g,8*Q),E=E.g;var j=F;for(Q=0>j,j=Math.abs(j),F=j>>>0,j=Math.floor((j-F)/4294967296),j>>>=0,Q&&(j=~j>>>0,F=(~F>>>0)+1,4294967295<F&&(F=0,j++,4294967295<j&&(j=0))),_t=F,J=j,Q=_t,F=J;0<F||127<Q;)E.g.push(Q&127|128),Q=(Q>>>7|F<<25)>>>0,F>>>=7;E.g.push(Q)}}),un=fn(function(E,F,Q){return E.h!==0?!1:(Ge(F,Q,ot(E.g)),!0)},function(E,F,Q){if(F=At(F,Q),F!=null&&F!=null)if(Z(E.g,8*Q),E=E.g,Q=F,0<=Q)Z(E,Q);else{for(F=0;9>F;F++)E.g.push(Q&127|128),Q>>=7;E.g.push(1)}}),Ti=fn(function(E,F,Q){if(E.h!==2)return!1;var j=ot(E.g)>>>0;E=E.g;var oe=E.g;E.g+=j,Xe(E),E=E.h;var be;if(K)(be=ee)||(be=ee=new TextDecoder("utf-8",{fatal:!0})),be=be.decode(E.subarray(oe,oe+j));else{j=oe+j;for(var ce=[],_e=null,Fe,nt,Nt;oe<j;)Fe=E[oe++],128>Fe?ce.push(Fe):224>Fe?oe>=j?W():(nt=E[oe++],194>Fe||(nt&192)!==128?(oe--,W()):ce.push((Fe&31)<<6|nt&63)):240>Fe?oe>=j-1?W():(nt=E[oe++],(nt&192)!==128||Fe===224&&160>nt||Fe===237&&160<=nt||((be=E[oe++])&192)!==128?(oe--,W()):ce.push((Fe&15)<<12|(nt&63)<<6|be&63)):244>=Fe?oe>=j-2?W():(nt=E[oe++],(nt&192)!==128||(Fe<<28)+(nt-144)>>30!==0||((be=E[oe++])&192)!==128||((Nt=E[oe++])&192)!==128?(oe--,W()):(Fe=(Fe&7)<<18|(nt&63)<<12|(be&63)<<6|Nt&63,Fe-=65536,ce.push((Fe>>10&1023)+55296,(Fe&1023)+56320))):W(),8192<=ce.length&&(_e=H(_e,ce),ce.length=0);be=H(_e,ce)}return Ge(F,Q,be),!0},function(E,F,Q){if(F=At(F,Q),F!=null){var j=!1;if(j=j===void 0?!1:j,le){if(j&&/(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])/.test(F))throw Error("Found an unpaired surrogate");F=(te||(te=new TextEncoder)).encode(F)}else{for(var oe=0,be=new Uint8Array(3*F.length),ce=0;ce<F.length;ce++){var _e=F.charCodeAt(ce);if(128>_e)be[oe++]=_e;else{if(2048>_e)be[oe++]=_e>>6|192;else{if(55296<=_e&&57343>=_e){if(56319>=_e&&ce<F.length){var Fe=F.charCodeAt(++ce);if(56320<=Fe&&57343>=Fe){_e=1024*(_e-55296)+Fe-56320+65536,be[oe++]=_e>>18|240,be[oe++]=_e>>12&63|128,be[oe++]=_e>>6&63|128,be[oe++]=_e&63|128;continue}else ce--}if(j)throw Error("Found an unpaired surrogate");_e=65533}be[oe++]=_e>>12|224,be[oe++]=_e>>6&63|128}be[oe++]=_e&63|128}}F=be.subarray(0,oe)}Z(E.g,8*Q+2),Z(E.g,F.length),bt(E,E.g.end()),bt(E,F)}}),Un=fn(function(E,F,Q,j,oe){if(E.h!==2)return!1;F=Mn(F,Q,j),Q=E.g.i,j=ot(E.g)>>>0;var be=E.g.g+j,ce=be-Q;if(0>=ce&&(E.g.i=be,oe(F,E),ce=be-E.g.g),ce)throw Error("Message parsing ended unexpectedly. Expected to read "+(j+" bytes, instead read "+(j-ce)+" bytes, either the data ended unexpectedly or the message misreported its own length"));return E.g.g=be,E.g.i=Q,!0},function(E,F,Q,j,oe){if(F=qt(F,j,Q),F!=null)for(j=0;j<F.length;j++){var be=E;Z(be.g,8*Q+2);var ce=be.g.end();bt(be,ce),ce.push(be.h),be=ce,oe(F[j],E),ce=E;var _e=be.pop();for(_e=ce.h+ce.g.length()-_e;127<_e;)be.push(_e&127|128),_e>>>=7,ce.h++;be.push(_e),ce.h++}});function Fn(){Mr.apply(this,arguments)}if(A(Fn,Mr),je){var Os={};Object.defineProperties(Fn,(Os[Symbol.hasInstance]=at(Object[Symbol.hasInstance]),Os))}function cs(E){Fn.call(this,E)}A(cs,Fn);function Qs(){return[1,un,2,Hn,3,Ti,4,Ti]}function No(E){Fn.call(this,E,-1,Ec)}A(No,Fn),No.prototype.addClassification=function(E,F){return Mn(this,1,cs,E,F),this};function li(){return[1,Un,cs,Qs]}var Ec=[1];function Bi(E){Fn.call(this,E)}A(Bi,Fn);function Rl(){return[1,Hn,2,Hn,3,Hn,4,Hn,5,Hn]}function Ml(E){Fn.call(this,E,-1,Dp)}A(Ml,Fn);function Ki(){return[1,Un,Bi,Rl]}var Dp=[1];function _c(E){Fn.call(this,E)}A(_c,Fn);function Yh(){return[1,Hn,2,Hn,3,Hn,4,Hn,5,Hn,6,_i]}var jh=[[61,146],[146,91],[91,181],[181,84],[84,17],[17,314],[314,405],[405,321],[321,375],[375,291],[61,185],[185,40],[40,39],[39,37],[37,0],[0,267],[267,269],[269,270],[270,409],[409,291],[78,95],[95,88],[88,178],[178,87],[87,14],[14,317],[317,402],[402,318],[318,324],[324,308],[78,191],[191,80],[80,81],[81,82],[82,13],[13,312],[312,311],[311,310],[310,415],[415,308]],ua=[[263,249],[249,390],[390,373],[373,374],[374,380],[380,381],[381,382],[382,362],[263,466],[466,388],[388,387],[387,386],[386,385],[385,384],[384,398],[398,362]],ki=[[276,283],[283,282],[282,295],[295,285],[300,293],[293,334],[334,296],[296,336]],Xh=[[33,7],[7,163],[163,144],[144,145],[145,153],[153,154],[154,155],[155,133],[33,246],[246,161],[161,160],[160,159],[159,158],[158,157],[157,173],[173,133]],Kh=[[46,53],[53,52],[52,65],[65,55],[70,63],[63,105],[105,66],[66,107]],Jh=[[10,338],[338,297],[297,332],[332,284],[284,251],[251,389],[389,356],[356,454],[454,323],[323,361],[361,288],[288,397],[397,365],[365,379],[379,378],[378,400],[400,377],[377,152],[152,148],[148,176],[176,149],[149,150],[150,136],[136,172],[172,58],[58,132],[132,93],[93,234],[234,127],[127,162],[162,21],[21,54],[54,103],[103,67],[67,109],[109,10]],Fp=[].concat(l(jh),l(ua),l(ki),l(Xh),l(Kh),l(Jh));function ha(E,F,Q){if(Q=E.createShader(Q===0?E.VERTEX_SHADER:E.FRAGMENT_SHADER),E.shaderSource(Q,F),E.compileShader(Q),!E.getShaderParameter(Q,E.COMPILE_STATUS))throw Error(`Could not compile WebGL shader.

`+E.getShaderInfoLog(Q));return Q}function Tc(E){return qt(E,cs,1).map(function(F){return{index:mn(F,1),ga:ut(F,2),label:At(F,3)!=null?Ds(F,3):void 0,displayName:At(F,4)!=null?Ds(F,4):void 0}})}function Bc(E){return{x:ut(E,1),y:ut(E,2),z:ut(E,3),visibility:At(E,4)!=null?ut(E,4):void 0}}function ci(E,F){this.h=E,this.g=F,this.l=0}function bs(E,F,Q){return $p(E,F),typeof E.g.canvas.transferToImageBitmap=="function"?Promise.resolve(E.g.canvas.transferToImageBitmap()):Q?Promise.resolve(E.g.canvas):typeof createImageBitmap=="function"?createImageBitmap(E.g.canvas):(E.i===void 0&&(E.i=document.createElement("canvas")),new Promise(function(j){E.i.height=E.g.canvas.height,E.i.width=E.g.canvas.width,E.i.getContext("2d",{}).drawImage(E.g.canvas,0,0,E.g.canvas.width,E.g.canvas.height),j(E.i)}))}function $p(E,F){var Q=E.g;if(E.o===void 0){var j=ha(Q,`
  attribute vec2 aVertex;
  attribute vec2 aTex;
  varying vec2 vTex;
  void main(void) {
    gl_Position = vec4(aVertex, 0.0, 1.0);
    vTex = aTex;
  }`,0),oe=ha(Q,`
  precision mediump float;
  varying vec2 vTex;
  uniform sampler2D sampler0;
  void main(){
    gl_FragColor = texture2D(sampler0, vTex);
  }`,1),be=Q.createProgram();if(Q.attachShader(be,j),Q.attachShader(be,oe),Q.linkProgram(be),!Q.getProgramParameter(be,Q.LINK_STATUS))throw Error(`Could not compile WebGL program.

`+Q.getProgramInfoLog(be));j=E.o=be,Q.useProgram(j),oe=Q.getUniformLocation(j,"sampler0"),E.j={K:Q.getAttribLocation(j,"aVertex"),J:Q.getAttribLocation(j,"aTex"),ma:oe},E.u=Q.createBuffer(),Q.bindBuffer(Q.ARRAY_BUFFER,E.u),Q.enableVertexAttribArray(E.j.K),Q.vertexAttribPointer(E.j.K,2,Q.FLOAT,!1,0,0),Q.bufferData(Q.ARRAY_BUFFER,new Float32Array([-1,-1,-1,1,1,1,1,-1]),Q.STATIC_DRAW),Q.bindBuffer(Q.ARRAY_BUFFER,null),E.s=Q.createBuffer(),Q.bindBuffer(Q.ARRAY_BUFFER,E.s),Q.enableVertexAttribArray(E.j.J),Q.vertexAttribPointer(E.j.J,2,Q.FLOAT,!1,0,0),Q.bufferData(Q.ARRAY_BUFFER,new Float32Array([0,1,0,0,1,0,1,1]),Q.STATIC_DRAW),Q.bindBuffer(Q.ARRAY_BUFFER,null),Q.uniform1i(oe,0)}j=E.j,Q.useProgram(E.o),Q.canvas.width=F.width,Q.canvas.height=F.height,Q.viewport(0,0,F.width,F.height),Q.activeTexture(Q.TEXTURE0),E.h.bindTexture2d(F.glName),Q.enableVertexAttribArray(j.K),Q.bindBuffer(Q.ARRAY_BUFFER,E.u),Q.vertexAttribPointer(j.K,2,Q.FLOAT,!1,0,0),Q.enableVertexAttribArray(j.J),Q.bindBuffer(Q.ARRAY_BUFFER,E.s),Q.vertexAttribPointer(j.J,2,Q.FLOAT,!1,0,0),Q.bindFramebuffer(Q.DRAW_FRAMEBUFFER?Q.DRAW_FRAMEBUFFER:Q.FRAMEBUFFER,null),Q.clearColor(0,0,0,0),Q.clear(Q.COLOR_BUFFER_BIT),Q.colorMask(!0,!0,!0,!0),Q.drawArrays(Q.TRIANGLE_FAN,0,4),Q.disableVertexAttribArray(j.K),Q.disableVertexAttribArray(j.J),Q.bindBuffer(Q.ARRAY_BUFFER,null),E.h.bindTexture2d(0)}function Pp(E){this.g=E}var kc=new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11]);function Nc(E,F){return F+E}function da(E,F){window[E]=F}function Va(E){var F=document.createElement("script");return F.setAttribute("src",E),F.setAttribute("crossorigin","anonymous"),new Promise(function(Q){F.addEventListener("load",function(){Q()},!1),F.addEventListener("error",function(){Q()},!1),document.body.appendChild(F)})}function ui(){return k(function(E){switch(E.g){case 1:return E.o=2,v(E,WebAssembly.instantiate(kc),4);case 4:E.g=3,E.o=0;break;case 2:return E.o=0,E.j=null,E.return(!1);case 3:return E.return(!0)}})}function Wa(E){if(this.g=E,this.listeners={},this.j={},this.H={},this.o={},this.u={},this.I=this.s=this.Z=!0,this.D=Promise.resolve(),this.Y="",this.C={},this.locateFile=E&&E.locateFile||Nc,typeof window=="object")var F=window.location.pathname.toString().substring(0,window.location.pathname.toString().lastIndexOf("/"))+"/";else if(typeof location<"u")F=location.pathname.toString().substring(0,location.pathname.toString().lastIndexOf("/"))+"/";else throw Error("solutions can only be loaded on a web page or in a web worker");if(this.$=F,E.options){F=a(Object.keys(E.options));for(var Q=F.next();!Q.done;Q=F.next()){Q=Q.value;var j=E.options[Q].default;j!==void 0&&(this.j[Q]=typeof j=="function"?j():j)}}}n=Wa.prototype,n.close=function(){return this.i&&this.i.delete(),Promise.resolve()};function Ha(E){var F,Q,j,oe,be,ce,_e,Fe,nt,Nt,Zt;return k(function(Jt){switch(Jt.g){case 1:return E.Z?(F=E.g.files===void 0?[]:typeof E.g.files=="function"?E.g.files(E.j):E.g.files,v(Jt,ui(),2)):Jt.return();case 2:if(Q=Jt.h,typeof window=="object")return da("createMediapipeSolutionsWasm",{locateFile:E.locateFile}),da("createMediapipeSolutionsPackedAssets",{locateFile:E.locateFile}),ce=F.filter(function(Lt){return Lt.data!==void 0}),_e=F.filter(function(Lt){return Lt.data===void 0}),Fe=Promise.all(ce.map(function(Lt){var hn=zr(E,Lt.url);if(Lt.path!==void 0){var Cn=Lt.path;hn=hn.then(function(qn){return E.overrideFile(Cn,qn),Promise.resolve(qn)})}return hn})),nt=Promise.all(_e.map(function(Lt){return Lt.simd===void 0||Lt.simd&&Q||!Lt.simd&&!Q?Va(E.locateFile(Lt.url,E.$)):Promise.resolve()})).then(function(){var Lt,hn,Cn;return k(function(qn){if(qn.g==1)return Lt=window.createMediapipeSolutionsWasm,hn=window.createMediapipeSolutionsPackedAssets,Cn=E,v(qn,Lt(hn),2);Cn.h=qn.h,qn.g=0})}),Nt=(function(){return k(function(Lt){return E.g.graph&&E.g.graph.url?Lt=v(Lt,zr(E,E.g.graph.url),0):(Lt.g=0,Lt=void 0),Lt})})(),v(Jt,Promise.all([nt,Fe,Nt]),7);if(typeof importScripts!="function")throw Error("solutions can only be loaded on a web page or in a web worker");return j=F.filter(function(Lt){return Lt.simd===void 0||Lt.simd&&Q||!Lt.simd&&!Q}).map(function(Lt){return E.locateFile(Lt.url,E.$)}),importScripts.apply(null,l(j)),oe=E,v(Jt,createMediapipeSolutionsWasm(Module),6);case 6:oe.h=Jt.h,E.l=new OffscreenCanvas(1,1),E.h.canvas=E.l,be=E.h.GL.createContext(E.l,{antialias:!1,alpha:!1,ja:typeof WebGL2RenderingContext<"u"?2:1}),E.h.GL.makeContextCurrent(be),Jt.g=4;break;case 7:if(E.l=document.createElement("canvas"),Zt=E.l.getContext("webgl2",{}),!Zt&&(Zt=E.l.getContext("webgl",{}),!Zt))return alert("Failed to create WebGL canvas context when passing video frame."),Jt.return();E.G=Zt,E.h.canvas=E.l,E.h.createContext(E.l,!0,!0,{});case 4:E.i=new E.h.SolutionWasm,E.Z=!1,Jt.g=0}})}function Lp(E){var F,Q,j,oe,be,ce,_e,Fe;return k(function(nt){if(nt.g==1){if(E.g.graph&&E.g.graph.url&&E.Y===E.g.graph.url)return nt.return();if(E.s=!0,!E.g.graph||!E.g.graph.url){nt.g=2;return}return E.Y=E.g.graph.url,v(nt,zr(E,E.g.graph.url),3)}for(nt.g!=2&&(F=nt.h,E.i.loadGraph(F)),Q=a(Object.keys(E.C)),j=Q.next();!j.done;j=Q.next())oe=j.value,E.i.overrideFile(oe,E.C[oe]);if(E.C={},E.g.listeners)for(be=a(E.g.listeners),ce=be.next();!ce.done;ce=be.next())_e=ce.value,Qp(E,_e);Fe=E.j,E.j={},E.setOptions(Fe),nt.g=0})}n.reset=function(){var E=this;return k(function(F){E.i&&(E.i.reset(),E.o={},E.u={}),F.g=0})},n.setOptions=function(E,F){var Q=this;if(F=F||this.g.options){for(var j=[],oe=[],be={},ce=a(Object.keys(E)),_e=ce.next();!_e.done;be={R:be.R,S:be.S},_e=ce.next()){var Fe=_e.value;Fe in this.j&&this.j[Fe]===E[Fe]||(this.j[Fe]=E[Fe],_e=F[Fe],_e!==void 0&&(_e.onChange&&(be.R=_e.onChange,be.S=E[Fe],j.push((function(nt){return function(){var Nt;return k(function(Zt){if(Zt.g==1)return v(Zt,nt.R(nt.S),2);Nt=Zt.h,Nt===!0&&(Q.s=!0),Zt.g=0})}})(be))),_e.graphOptionXref&&(Fe={valueNumber:_e.type===1?E[Fe]:0,valueBoolean:_e.type===0?E[Fe]:!1,valueString:_e.type===2?E[Fe]:""},_e=Object.assign(Object.assign(Object.assign({},{calculatorName:"",calculatorIndex:0}),_e.graphOptionXref),Fe),oe.push(_e))))}(j.length!==0||oe.length!==0)&&(this.s=!0,this.B=(this.B===void 0?[]:this.B).concat(oe),this.A=(this.A===void 0?[]:this.A).concat(j))}};function Op(E){var F,Q,j,oe,be,ce,_e;return k(function(Fe){switch(Fe.g){case 1:if(!E.s)return Fe.return();if(!E.A){Fe.g=2;break}F=a(E.A),Q=F.next();case 3:if(Q.done){Fe.g=5;break}return j=Q.value,v(Fe,j(),4);case 4:Q=F.next(),Fe.g=3;break;case 5:E.A=void 0;case 2:if(E.B){for(oe=new E.h.GraphOptionChangeRequestList,be=a(E.B),ce=be.next();!ce.done;ce=be.next())_e=ce.value,oe.push_back(_e);E.i.changeOptions(oe),oe.delete(),E.B=void 0}E.s=!1,Fe.g=0}})}n.initialize=function(){var E=this;return k(function(F){return F.g==1?v(F,Ha(E),2):F.g!=3?v(F,Lp(E),3):v(F,Op(E),0)})};function zr(E,F){var Q,j;return k(function(oe){return F in E.H?oe.return(E.H[F]):(Q=E.locateFile(F,""),j=fetch(Q).then(function(be){return be.arrayBuffer()}),E.H[F]=j,oe.return(j))})}n.overrideFile=function(E,F){this.i?this.i.overrideFile(E,F):this.C[E]=F},n.clearOverriddenFiles=function(){this.C={},this.i&&this.i.clearOverriddenFiles()},n.send=function(E,F){var Q=this,j,oe,be,ce,_e,Fe,nt,Nt,Zt;return k(function(Jt){switch(Jt.g){case 1:return Q.g.inputs?(j=1e3*(F??performance.now()),v(Jt,Q.D,2)):Jt.return();case 2:return v(Jt,Q.initialize(),3);case 3:for(oe=new Q.h.PacketDataList,be=a(Object.keys(E)),ce=be.next();!ce.done;ce=be.next())if(_e=ce.value,Fe=Q.g.inputs[_e]){e:{var Lt=E[_e];switch(Fe.type){case"video":var hn=Q.o[Fe.stream];if(hn||(hn=new ci(Q.h,Q.G),Q.o[Fe.stream]=hn),hn.l===0&&(hn.l=hn.h.createTexture()),typeof HTMLVideoElement<"u"&&Lt instanceof HTMLVideoElement)var Cn=Lt.videoWidth,qn=Lt.videoHeight;else typeof HTMLImageElement<"u"&&Lt instanceof HTMLImageElement?(Cn=Lt.naturalWidth,qn=Lt.naturalHeight):(Cn=Lt.width,qn=Lt.height);qn={glName:hn.l,width:Cn,height:qn},Cn=hn.g,Cn.canvas.width=qn.width,Cn.canvas.height=qn.height,Cn.activeTexture(Cn.TEXTURE0),hn.h.bindTexture2d(hn.l),Cn.texImage2D(Cn.TEXTURE_2D,0,Cn.RGBA,Cn.RGBA,Cn.UNSIGNED_BYTE,Lt),hn.h.bindTexture2d(0),hn=qn;break e;case"detections":for(hn=Q.o[Fe.stream],hn||(hn=new Pp(Q.h),Q.o[Fe.stream]=hn),hn.data||(hn.data=new hn.g.DetectionListData),hn.data.reset(Lt.length),qn=0;qn<Lt.length;++qn){Cn=Lt[qn];var Yn=hn.data,Us=Yn.setBoundingBox,ir=qn,zs=Cn.boundingBox,Bn=new _c;if(Ge(Bn,1,zs.xCenter),Ge(Bn,2,zs.yCenter),Ge(Bn,3,zs.height),Ge(Bn,4,zs.width),Ge(Bn,5,zs.rotation),Ge(Bn,6,zs.rectId),zs=Qn(Bn,Yh),Us.call(Yn,ir,zs),Cn.landmarks)for(Yn=0;Yn<Cn.landmarks.length;++Yn){Bn=Cn.landmarks[Yn];var Ns=!!Bn.visibility;Us=hn.data,ir=Us.addNormalizedLandmark,zs=qn,Bn=Object.assign(Object.assign({},Bn),{visibility:Ns?Bn.visibility:0}),Ns=new Bi,Ge(Ns,1,Bn.x),Ge(Ns,2,Bn.y),Ge(Ns,3,Bn.z),Bn.visibility&&Ge(Ns,4,Bn.visibility),Bn=Qn(Ns,Rl),ir.call(Us,zs,Bn)}if(Cn.V)for(Yn=0;Yn<Cn.V.length;++Yn)Us=hn.data,ir=Us.addClassification,zs=qn,Bn=Cn.V[Yn],Ns=new cs,Ge(Ns,2,Bn.ga),Bn.index&&Ge(Ns,1,Bn.index),Bn.label&&Ge(Ns,3,Bn.label),Bn.displayName&&Ge(Ns,4,Bn.displayName),Bn=Qn(Ns,Qs),ir.call(Us,zs,Bn)}hn=hn.data;break e;default:hn={}}}switch(nt=hn,Nt=Fe.stream,Fe.type){case"video":oe.pushTexture2d(Object.assign(Object.assign({},nt),{stream:Nt,timestamp:j}));break;case"detections":Zt=nt,Zt.stream=Nt,Zt.timestamp=j,oe.pushDetectionList(Zt);break;default:throw Error("Unknown input config type: '"+Fe.type+"'")}}return Q.i.send(oe),v(Jt,Q.D,4);case 4:oe.delete(),Jt.g=0}})};function Rc(E,F,Q){var j,oe,be,ce,_e,Fe,nt,Nt,Zt,Jt,Lt,hn,Cn,qn;return k(function(Yn){switch(Yn.g){case 1:if(!Q)return Yn.return(F);for(j={},oe=0,be=a(Object.keys(Q)),ce=be.next();!ce.done;ce=be.next())_e=ce.value,Fe=Q[_e],typeof Fe!="string"&&Fe.type==="texture"&&F[Fe.stream]!==void 0&&++oe;1<oe&&(E.I=!1),nt=a(Object.keys(Q)),ce=nt.next();case 2:if(ce.done){Yn.g=4;break}if(Nt=ce.value,Zt=Q[Nt],typeof Zt=="string")return Cn=j,qn=Nt,v(Yn,Mc(E,Nt,F[Zt]),14);if(Jt=F[Zt.stream],Zt.type==="detection_list"){if(Jt){for(var Us=Jt.getRectList(),ir=Jt.getLandmarksList(),zs=Jt.getClassificationsList(),Bn=[],Ns=0;Ns<Us.size();++Ns){var Ji=Dn(Us.get(Ns),_c,Yh);Ji={boundingBox:{xCenter:ut(Ji,1),yCenter:ut(Ji,2),height:ut(Ji,3),width:ut(Ji,4),rotation:ut(Ji,5,0),rectId:mn(Ji,6)},landmarks:qt(Dn(ir.get(Ns),Ml,Ki),Bi,1).map(Bc),V:Tc(Dn(zs.get(Ns),No,li))},Bn.push(Ji)}Us=Bn}else Us=[];j[Nt]=Us,Yn.g=7;break}if(Zt.type==="proto_list"){if(Jt){for(Us=Array(Jt.size()),ir=0;ir<Jt.size();ir++)Us[ir]=Jt.get(ir);Jt.delete()}else Us=[];j[Nt]=Us,Yn.g=7;break}if(Jt===void 0){Yn.g=3;break}if(Zt.type==="float_list"){j[Nt]=Jt,Yn.g=7;break}if(Zt.type==="proto"){j[Nt]=Jt,Yn.g=7;break}if(Zt.type!=="texture")throw Error("Unknown output config type: '"+Zt.type+"'");return Lt=E.u[Nt],Lt||(Lt=new ci(E.h,E.G),E.u[Nt]=Lt),v(Yn,bs(Lt,Jt,E.I),13);case 13:hn=Yn.h,j[Nt]=hn;case 7:Zt.transform&&j[Nt]&&(j[Nt]=Zt.transform(j[Nt])),Yn.g=3;break;case 14:Cn[qn]=Yn.h;case 3:ce=nt.next(),Yn.g=2;break;case 4:return Yn.return(j)}})}function Mc(E,F,Q){var j;return k(function(oe){return typeof Q=="number"||Q instanceof Uint8Array||Q instanceof E.h.Uint8BlobList?oe.return(Q):Q instanceof E.h.Texture2dDataOut?(j=E.u[F],j||(j=new ci(E.h,E.G),E.u[F]=j),oe.return(bs(j,Q,E.I))):oe.return(void 0)})}function Qp(E,F){for(var Q=F.name||"$",j=[].concat(l(F.wants)),oe=new E.h.StringList,be=a(F.wants),ce=be.next();!ce.done;ce=be.next())oe.push_back(ce.value);be=E.h.PacketListener.implement({onResults:function(_e){for(var Fe={},nt=0;nt<F.wants.length;++nt)Fe[j[nt]]=_e.get(nt);var Nt=E.listeners[Q];Nt&&(E.D=Rc(E,Fe,F.outs).then(function(Zt){Zt=Nt(Zt);for(var Jt=0;Jt<F.wants.length;++Jt){var Lt=Fe[j[Jt]];typeof Lt=="object"&&Lt.hasOwnProperty&&Lt.hasOwnProperty("delete")&&Lt.delete()}Zt&&(E.D=Zt)}))}}),E.i.attachMultiListener(oe,be),oe.delete()}n.onResults=function(E,F){this.listeners[F||"$"]=E},V("Solution",Wa),V("OptionType",{BOOL:0,NUMBER:1,ia:2,0:"BOOL",1:"NUMBER",2:"STRING"});function Zh(E){var F=this;E=E||{};var Q={url:"face_detection_short.binarypb"},j={type:1,graphOptionXref:{calculatorType:"TensorsToDetectionsCalculator",calculatorName:"facedetectionshortrangegpu__facedetectionshortrangecommon__TensorsToDetectionsCalculator",fieldName:"min_score_thresh"}};this.g=new Wa({locateFile:E.locateFile,files:[{data:!0,url:"face_detection_short.binarypb"},{data:!0,url:"face_detection_short_range.tflite"},{simd:!0,url:"face_detection_solution_simd_wasm_bin.js"},{simd:!1,url:"face_detection_solution_wasm_bin.js"}],graph:Q,listeners:[{wants:["detections","image_transformed"],outs:{image:"image_transformed",detections:{type:"detection_list",stream:"detections"}}}],inputs:{image:{type:"video",stream:"input_frames_gpu"}},options:{useCpuInference:{type:0,graphOptionXref:{calculatorType:"InferenceCalculator",fieldName:"use_cpu_inference"},default:typeof window!="object"||window.navigator===void 0?!1:"iPad Simulator;iPhone Simulator;iPod Simulator;iPad;iPhone;iPod".split(";").includes(navigator.platform)||navigator.userAgent.includes("Mac")&&"ontouchend"in document},selfieMode:{type:0,graphOptionXref:{calculatorType:"GlScalerCalculator",calculatorIndex:1,fieldName:"flip_horizontal"}},model:{type:0,onChange:function(oe){var be,ce,_e,Fe,nt,Nt;return k(function(Zt){switch(Zt.g){case 1:be=oe==="short"?["face_detection_short_range.tflite"]:["face_detection_full_range_sparse.tflite"],ce=a(be),_e=ce.next();case 2:if(_e.done){Zt.g=4;break}return Fe=_e.value,nt="third_party/mediapipe/modules/face_detection/"+Fe,v(Zt,zr(F.g,Fe),5);case 5:Nt=Zt.h,F.g.overrideFile(nt,Nt),_e=ce.next(),Zt.g=2;break;case 4:return Q.url=oe==="short"?"face_detection_short.binarypb":"face_detection_full.binarypb",j.graphOptionXref.calculatorName=oe==="short"?"facedetectionshortrangegpu__facedetectionshortrangecommon__TensorsToDetectionsCalculator":"facedetectionfullrangegpu__facedetectionfullrangecommon__TensorsToDetectionsCalculator",Zt.return(!0)}})}},minDetectionConfidence:j}})}n=Zh.prototype,n.close=function(){return this.g.close(),Promise.resolve()},n.onResults=function(E){this.g.onResults(E)},n.initialize=function(){var E=this;return k(function(F){return v(F,E.g.initialize(),0)})},n.reset=function(){this.g.reset()},n.send=function(E){var F=this;return k(function(Q){return v(Q,F.g.send(E),0)})},n.setOptions=function(E){this.g.setOptions(E)},V("FaceDetection",Zh),V("FACEDETECTION_LIPS",jh),V("FACEDETECTION_LEFT_EYE",ua),V("FACEDETECTION_LEFT_EYEBROW",ki),V("FACEDETECTION_RIGHT_EYE",Xh),V("FACEDETECTION_RIGHT_EYEBROW",Kh),V("FACEDETECTION_FACE_OVAL",Jh),V("FACEDETECTION_CONTOURS",Fp),V("FACEDETECTION_TESSELATION",[[127,34],[34,139],[139,127],[11,0],[0,37],[37,11],[232,231],[231,120],[120,232],[72,37],[37,39],[39,72],[128,121],[121,47],[47,128],[232,121],[121,128],[128,232],[104,69],[69,67],[67,104],[175,171],[171,148],[148,175],[118,50],[50,101],[101,118],[73,39],[39,40],[40,73],[9,151],[151,108],[108,9],[48,115],[115,131],[131,48],[194,204],[204,211],[211,194],[74,40],[40,185],[185,74],[80,42],[42,183],[183,80],[40,92],[92,186],[186,40],[230,229],[229,118],[118,230],[202,212],[212,214],[214,202],[83,18],[18,17],[17,83],[76,61],[61,146],[146,76],[160,29],[29,30],[30,160],[56,157],[157,173],[173,56],[106,204],[204,194],[194,106],[135,214],[214,192],[192,135],[203,165],[165,98],[98,203],[21,71],[71,68],[68,21],[51,45],[45,4],[4,51],[144,24],[24,23],[23,144],[77,146],[146,91],[91,77],[205,50],[50,187],[187,205],[201,200],[200,18],[18,201],[91,106],[106,182],[182,91],[90,91],[91,181],[181,90],[85,84],[84,17],[17,85],[206,203],[203,36],[36,206],[148,171],[171,140],[140,148],[92,40],[40,39],[39,92],[193,189],[189,244],[244,193],[159,158],[158,28],[28,159],[247,246],[246,161],[161,247],[236,3],[3,196],[196,236],[54,68],[68,104],[104,54],[193,168],[168,8],[8,193],[117,228],[228,31],[31,117],[189,193],[193,55],[55,189],[98,97],[97,99],[99,98],[126,47],[47,100],[100,126],[166,79],[79,218],[218,166],[155,154],[154,26],[26,155],[209,49],[49,131],[131,209],[135,136],[136,150],[150,135],[47,126],[126,217],[217,47],[223,52],[52,53],[53,223],[45,51],[51,134],[134,45],[211,170],[170,140],[140,211],[67,69],[69,108],[108,67],[43,106],[106,91],[91,43],[230,119],[119,120],[120,230],[226,130],[130,247],[247,226],[63,53],[53,52],[52,63],[238,20],[20,242],[242,238],[46,70],[70,156],[156,46],[78,62],[62,96],[96,78],[46,53],[53,63],[63,46],[143,34],[34,227],[227,143],[123,117],[117,111],[111,123],[44,125],[125,19],[19,44],[236,134],[134,51],[51,236],[216,206],[206,205],[205,216],[154,153],[153,22],[22,154],[39,37],[37,167],[167,39],[200,201],[201,208],[208,200],[36,142],[142,100],[100,36],[57,212],[212,202],[202,57],[20,60],[60,99],[99,20],[28,158],[158,157],[157,28],[35,226],[226,113],[113,35],[160,159],[159,27],[27,160],[204,202],[202,210],[210,204],[113,225],[225,46],[46,113],[43,202],[202,204],[204,43],[62,76],[76,77],[77,62],[137,123],[123,116],[116,137],[41,38],[38,72],[72,41],[203,129],[129,142],[142,203],[64,98],[98,240],[240,64],[49,102],[102,64],[64,49],[41,73],[73,74],[74,41],[212,216],[216,207],[207,212],[42,74],[74,184],[184,42],[169,170],[170,211],[211,169],[170,149],[149,176],[176,170],[105,66],[66,69],[69,105],[122,6],[6,168],[168,122],[123,147],[147,187],[187,123],[96,77],[77,90],[90,96],[65,55],[55,107],[107,65],[89,90],[90,180],[180,89],[101,100],[100,120],[120,101],[63,105],[105,104],[104,63],[93,137],[137,227],[227,93],[15,86],[86,85],[85,15],[129,102],[102,49],[49,129],[14,87],[87,86],[86,14],[55,8],[8,9],[9,55],[100,47],[47,121],[121,100],[145,23],[23,22],[22,145],[88,89],[89,179],[179,88],[6,122],[122,196],[196,6],[88,95],[95,96],[96,88],[138,172],[172,136],[136,138],[215,58],[58,172],[172,215],[115,48],[48,219],[219,115],[42,80],[80,81],[81,42],[195,3],[3,51],[51,195],[43,146],[146,61],[61,43],[171,175],[175,199],[199,171],[81,82],[82,38],[38,81],[53,46],[46,225],[225,53],[144,163],[163,110],[110,144],[52,65],[65,66],[66,52],[229,228],[228,117],[117,229],[34,127],[127,234],[234,34],[107,108],[108,69],[69,107],[109,108],[108,151],[151,109],[48,64],[64,235],[235,48],[62,78],[78,191],[191,62],[129,209],[209,126],[126,129],[111,35],[35,143],[143,111],[117,123],[123,50],[50,117],[222,65],[65,52],[52,222],[19,125],[125,141],[141,19],[221,55],[55,65],[65,221],[3,195],[195,197],[197,3],[25,7],[7,33],[33,25],[220,237],[237,44],[44,220],[70,71],[71,139],[139,70],[122,193],[193,245],[245,122],[247,130],[130,33],[33,247],[71,21],[21,162],[162,71],[170,169],[169,150],[150,170],[188,174],[174,196],[196,188],[216,186],[186,92],[92,216],[2,97],[97,167],[167,2],[141,125],[125,241],[241,141],[164,167],[167,37],[37,164],[72,38],[38,12],[12,72],[38,82],[82,13],[13,38],[63,68],[68,71],[71,63],[226,35],[35,111],[111,226],[101,50],[50,205],[205,101],[206,92],[92,165],[165,206],[209,198],[198,217],[217,209],[165,167],[167,97],[97,165],[220,115],[115,218],[218,220],[133,112],[112,243],[243,133],[239,238],[238,241],[241,239],[214,135],[135,169],[169,214],[190,173],[173,133],[133,190],[171,208],[208,32],[32,171],[125,44],[44,237],[237,125],[86,87],[87,178],[178,86],[85,86],[86,179],[179,85],[84,85],[85,180],[180,84],[83,84],[84,181],[181,83],[201,83],[83,182],[182,201],[137,93],[93,132],[132,137],[76,62],[62,183],[183,76],[61,76],[76,184],[184,61],[57,61],[61,185],[185,57],[212,57],[57,186],[186,212],[214,207],[207,187],[187,214],[34,143],[143,156],[156,34],[79,239],[239,237],[237,79],[123,137],[137,177],[177,123],[44,1],[1,4],[4,44],[201,194],[194,32],[32,201],[64,102],[102,129],[129,64],[213,215],[215,138],[138,213],[59,166],[166,219],[219,59],[242,99],[99,97],[97,242],[2,94],[94,141],[141,2],[75,59],[59,235],[235,75],[24,110],[110,228],[228,24],[25,130],[130,226],[226,25],[23,24],[24,229],[229,23],[22,23],[23,230],[230,22],[26,22],[22,231],[231,26],[112,26],[26,232],[232,112],[189,190],[190,243],[243,189],[221,56],[56,190],[190,221],[28,56],[56,221],[221,28],[27,28],[28,222],[222,27],[29,27],[27,223],[223,29],[30,29],[29,224],[224,30],[247,30],[30,225],[225,247],[238,79],[79,20],[20,238],[166,59],[59,75],[75,166],[60,75],[75,240],[240,60],[147,177],[177,215],[215,147],[20,79],[79,166],[166,20],[187,147],[147,213],[213,187],[112,233],[233,244],[244,112],[233,128],[128,245],[245,233],[128,114],[114,188],[188,128],[114,217],[217,174],[174,114],[131,115],[115,220],[220,131],[217,198],[198,236],[236,217],[198,131],[131,134],[134,198],[177,132],[132,58],[58,177],[143,35],[35,124],[124,143],[110,163],[163,7],[7,110],[228,110],[110,25],[25,228],[356,389],[389,368],[368,356],[11,302],[302,267],[267,11],[452,350],[350,349],[349,452],[302,303],[303,269],[269,302],[357,343],[343,277],[277,357],[452,453],[453,357],[357,452],[333,332],[332,297],[297,333],[175,152],[152,377],[377,175],[347,348],[348,330],[330,347],[303,304],[304,270],[270,303],[9,336],[336,337],[337,9],[278,279],[279,360],[360,278],[418,262],[262,431],[431,418],[304,408],[408,409],[409,304],[310,415],[415,407],[407,310],[270,409],[409,410],[410,270],[450,348],[348,347],[347,450],[422,430],[430,434],[434,422],[313,314],[314,17],[17,313],[306,307],[307,375],[375,306],[387,388],[388,260],[260,387],[286,414],[414,398],[398,286],[335,406],[406,418],[418,335],[364,367],[367,416],[416,364],[423,358],[358,327],[327,423],[251,284],[284,298],[298,251],[281,5],[5,4],[4,281],[373,374],[374,253],[253,373],[307,320],[320,321],[321,307],[425,427],[427,411],[411,425],[421,313],[313,18],[18,421],[321,405],[405,406],[406,321],[320,404],[404,405],[405,320],[315,16],[16,17],[17,315],[426,425],[425,266],[266,426],[377,400],[400,369],[369,377],[322,391],[391,269],[269,322],[417,465],[465,464],[464,417],[386,257],[257,258],[258,386],[466,260],[260,388],[388,466],[456,399],[399,419],[419,456],[284,332],[332,333],[333,284],[417,285],[285,8],[8,417],[346,340],[340,261],[261,346],[413,441],[441,285],[285,413],[327,460],[460,328],[328,327],[355,371],[371,329],[329,355],[392,439],[439,438],[438,392],[382,341],[341,256],[256,382],[429,420],[420,360],[360,429],[364,394],[394,379],[379,364],[277,343],[343,437],[437,277],[443,444],[444,283],[283,443],[275,440],[440,363],[363,275],[431,262],[262,369],[369,431],[297,338],[338,337],[337,297],[273,375],[375,321],[321,273],[450,451],[451,349],[349,450],[446,342],[342,467],[467,446],[293,334],[334,282],[282,293],[458,461],[461,462],[462,458],[276,353],[353,383],[383,276],[308,324],[324,325],[325,308],[276,300],[300,293],[293,276],[372,345],[345,447],[447,372],[352,345],[345,340],[340,352],[274,1],[1,19],[19,274],[456,248],[248,281],[281,456],[436,427],[427,425],[425,436],[381,256],[256,252],[252,381],[269,391],[391,393],[393,269],[200,199],[199,428],[428,200],[266,330],[330,329],[329,266],[287,273],[273,422],[422,287],[250,462],[462,328],[328,250],[258,286],[286,384],[384,258],[265,353],[353,342],[342,265],[387,259],[259,257],[257,387],[424,431],[431,430],[430,424],[342,353],[353,276],[276,342],[273,335],[335,424],[424,273],[292,325],[325,307],[307,292],[366,447],[447,345],[345,366],[271,303],[303,302],[302,271],[423,266],[266,371],[371,423],[294,455],[455,460],[460,294],[279,278],[278,294],[294,279],[271,272],[272,304],[304,271],[432,434],[434,427],[427,432],[272,407],[407,408],[408,272],[394,430],[430,431],[431,394],[395,369],[369,400],[400,395],[334,333],[333,299],[299,334],[351,417],[417,168],[168,351],[352,280],[280,411],[411,352],[325,319],[319,320],[320,325],[295,296],[296,336],[336,295],[319,403],[403,404],[404,319],[330,348],[348,349],[349,330],[293,298],[298,333],[333,293],[323,454],[454,447],[447,323],[15,16],[16,315],[315,15],[358,429],[429,279],[279,358],[14,15],[15,316],[316,14],[285,336],[336,9],[9,285],[329,349],[349,350],[350,329],[374,380],[380,252],[252,374],[318,402],[402,403],[403,318],[6,197],[197,419],[419,6],[318,319],[319,325],[325,318],[367,364],[364,365],[365,367],[435,367],[367,397],[397,435],[344,438],[438,439],[439,344],[272,271],[271,311],[311,272],[195,5],[5,281],[281,195],[273,287],[287,291],[291,273],[396,428],[428,199],[199,396],[311,271],[271,268],[268,311],[283,444],[444,445],[445,283],[373,254],[254,339],[339,373],[282,334],[334,296],[296,282],[449,347],[347,346],[346,449],[264,447],[447,454],[454,264],[336,296],[296,299],[299,336],[338,10],[10,151],[151,338],[278,439],[439,455],[455,278],[292,407],[407,415],[415,292],[358,371],[371,355],[355,358],[340,345],[345,372],[372,340],[346,347],[347,280],[280,346],[442,443],[443,282],[282,442],[19,94],[94,370],[370,19],[441,442],[442,295],[295,441],[248,419],[419,197],[197,248],[263,255],[255,359],[359,263],[440,275],[275,274],[274,440],[300,383],[383,368],[368,300],[351,412],[412,465],[465,351],[263,467],[467,466],[466,263],[301,368],[368,389],[389,301],[395,378],[378,379],[379,395],[412,351],[351,419],[419,412],[436,426],[426,322],[322,436],[2,164],[164,393],[393,2],[370,462],[462,461],[461,370],[164,0],[0,267],[267,164],[302,11],[11,12],[12,302],[268,12],[12,13],[13,268],[293,300],[300,301],[301,293],[446,261],[261,340],[340,446],[330,266],[266,425],[425,330],[426,423],[423,391],[391,426],[429,355],[355,437],[437,429],[391,327],[327,326],[326,391],[440,457],[457,438],[438,440],[341,382],[382,362],[362,341],[459,457],[457,461],[461,459],[434,430],[430,394],[394,434],[414,463],[463,362],[362,414],[396,369],[369,262],[262,396],[354,461],[461,457],[457,354],[316,403],[403,402],[402,316],[315,404],[404,403],[403,315],[314,405],[405,404],[404,314],[313,406],[406,405],[405,313],[421,418],[418,406],[406,421],[366,401],[401,361],[361,366],[306,408],[408,407],[407,306],[291,409],[409,408],[408,291],[287,410],[410,409],[409,287],[432,436],[436,410],[410,432],[434,416],[416,411],[411,434],[264,368],[368,383],[383,264],[309,438],[438,457],[457,309],[352,376],[376,401],[401,352],[274,275],[275,4],[4,274],[421,428],[428,262],[262,421],[294,327],[327,358],[358,294],[433,416],[416,367],[367,433],[289,455],[455,439],[439,289],[462,370],[370,326],[326,462],[2,326],[326,370],[370,2],[305,460],[460,455],[455,305],[254,449],[449,448],[448,254],[255,261],[261,446],[446,255],[253,450],[450,449],[449,253],[252,451],[451,450],[450,252],[256,452],[452,451],[451,256],[341,453],[453,452],[452,341],[413,464],[464,463],[463,413],[441,413],[413,414],[414,441],[258,442],[442,441],[441,258],[257,443],[443,442],[442,257],[259,444],[444,443],[443,259],[260,445],[445,444],[444,260],[467,342],[342,445],[445,467],[459,458],[458,250],[250,459],[289,392],[392,290],[290,289],[290,328],[328,460],[460,290],[376,433],[433,435],[435,376],[250,290],[290,392],[392,250],[411,416],[416,433],[433,411],[341,463],[463,464],[464,341],[453,464],[464,465],[465,453],[357,465],[465,412],[412,357],[343,412],[412,399],[399,343],[360,363],[363,440],[440,360],[437,399],[399,456],[456,437],[420,456],[456,363],[363,420],[401,435],[435,288],[288,401],[372,383],[383,353],[353,372],[339,255],[255,249],[249,339],[448,261],[261,255],[255,448],[133,243],[243,190],[190,133],[133,155],[155,112],[112,133],[33,246],[246,247],[247,33],[33,130],[130,25],[25,33],[398,384],[384,286],[286,398],[362,398],[398,414],[414,362],[362,463],[463,341],[341,362],[263,359],[359,467],[467,263],[263,249],[249,255],[255,263],[466,467],[467,260],[260,466],[75,60],[60,166],[166,75],[238,239],[239,79],[79,238],[162,127],[127,139],[139,162],[72,11],[11,37],[37,72],[121,232],[232,120],[120,121],[73,72],[72,39],[39,73],[114,128],[128,47],[47,114],[233,232],[232,128],[128,233],[103,104],[104,67],[67,103],[152,175],[175,148],[148,152],[119,118],[118,101],[101,119],[74,73],[73,40],[40,74],[107,9],[9,108],[108,107],[49,48],[48,131],[131,49],[32,194],[194,211],[211,32],[184,74],[74,185],[185,184],[191,80],[80,183],[183,191],[185,40],[40,186],[186,185],[119,230],[230,118],[118,119],[210,202],[202,214],[214,210],[84,83],[83,17],[17,84],[77,76],[76,146],[146,77],[161,160],[160,30],[30,161],[190,56],[56,173],[173,190],[182,106],[106,194],[194,182],[138,135],[135,192],[192,138],[129,203],[203,98],[98,129],[54,21],[21,68],[68,54],[5,51],[51,4],[4,5],[145,144],[144,23],[23,145],[90,77],[77,91],[91,90],[207,205],[205,187],[187,207],[83,201],[201,18],[18,83],[181,91],[91,182],[182,181],[180,90],[90,181],[181,180],[16,85],[85,17],[17,16],[205,206],[206,36],[36,205],[176,148],[148,140],[140,176],[165,92],[92,39],[39,165],[245,193],[193,244],[244,245],[27,159],[159,28],[28,27],[30,247],[247,161],[161,30],[174,236],[236,196],[196,174],[103,54],[54,104],[104,103],[55,193],[193,8],[8,55],[111,117],[117,31],[31,111],[221,189],[189,55],[55,221],[240,98],[98,99],[99,240],[142,126],[126,100],[100,142],[219,166],[166,218],[218,219],[112,155],[155,26],[26,112],[198,209],[209,131],[131,198],[169,135],[135,150],[150,169],[114,47],[47,217],[217,114],[224,223],[223,53],[53,224],[220,45],[45,134],[134,220],[32,211],[211,140],[140,32],[109,67],[67,108],[108,109],[146,43],[43,91],[91,146],[231,230],[230,120],[120,231],[113,226],[226,247],[247,113],[105,63],[63,52],[52,105],[241,238],[238,242],[242,241],[124,46],[46,156],[156,124],[95,78],[78,96],[96,95],[70,46],[46,63],[63,70],[116,143],[143,227],[227,116],[116,123],[123,111],[111,116],[1,44],[44,19],[19,1],[3,236],[236,51],[51,3],[207,216],[216,205],[205,207],[26,154],[154,22],[22,26],[165,39],[39,167],[167,165],[199,200],[200,208],[208,199],[101,36],[36,100],[100,101],[43,57],[57,202],[202,43],[242,20],[20,99],[99,242],[56,28],[28,157],[157,56],[124,35],[35,113],[113,124],[29,160],[160,27],[27,29],[211,204],[204,210],[210,211],[124,113],[113,46],[46,124],[106,43],[43,204],[204,106],[96,62],[62,77],[77,96],[227,137],[137,116],[116,227],[73,41],[41,72],[72,73],[36,203],[203,142],[142,36],[235,64],[64,240],[240,235],[48,49],[49,64],[64,48],[42,41],[41,74],[74,42],[214,212],[212,207],[207,214],[183,42],[42,184],[184,183],[210,169],[169,211],[211,210],[140,170],[170,176],[176,140],[104,105],[105,69],[69,104],[193,122],[122,168],[168,193],[50,123],[123,187],[187,50],[89,96],[96,90],[90,89],[66,65],[65,107],[107,66],[179,89],[89,180],[180,179],[119,101],[101,120],[120,119],[68,63],[63,104],[104,68],[234,93],[93,227],[227,234],[16,15],[15,85],[85,16],[209,129],[129,49],[49,209],[15,14],[14,86],[86,15],[107,55],[55,9],[9,107],[120,100],[100,121],[121,120],[153,145],[145,22],[22,153],[178,88],[88,179],[179,178],[197,6],[6,196],[196,197],[89,88],[88,96],[96,89],[135,138],[138,136],[136,135],[138,215],[215,172],[172,138],[218,115],[115,219],[219,218],[41,42],[42,81],[81,41],[5,195],[195,51],[51,5],[57,43],[43,61],[61,57],[208,171],[171,199],[199,208],[41,81],[81,38],[38,41],[224,53],[53,225],[225,224],[24,144],[144,110],[110,24],[105,52],[52,66],[66,105],[118,229],[229,117],[117,118],[227,34],[34,234],[234,227],[66,107],[107,69],[69,66],[10,109],[109,151],[151,10],[219,48],[48,235],[235,219],[183,62],[62,191],[191,183],[142,129],[129,126],[126,142],[116,111],[111,143],[143,116],[118,117],[117,50],[50,118],[223,222],[222,52],[52,223],[94,19],[19,141],[141,94],[222,221],[221,65],[65,222],[196,3],[3,197],[197,196],[45,220],[220,44],[44,45],[156,70],[70,139],[139,156],[188,122],[122,245],[245,188],[139,71],[71,162],[162,139],[149,170],[170,150],[150,149],[122,188],[188,196],[196,122],[206,216],[216,92],[92,206],[164,2],[2,167],[167,164],[242,141],[141,241],[241,242],[0,164],[164,37],[37,0],[11,72],[72,12],[12,11],[12,38],[38,13],[13,12],[70,63],[63,71],[71,70],[31,226],[226,111],[111,31],[36,101],[101,205],[205,36],[203,206],[206,165],[165,203],[126,209],[209,217],[217,126],[98,165],[165,97],[97,98],[237,220],[220,218],[218,237],[237,239],[239,241],[241,237],[210,214],[214,169],[169,210],[140,171],[171,32],[32,140],[241,125],[125,237],[237,241],[179,86],[86,178],[178,179],[180,85],[85,179],[179,180],[181,84],[84,180],[180,181],[182,83],[83,181],[181,182],[194,201],[201,182],[182,194],[177,137],[137,132],[132,177],[184,76],[76,183],[183,184],[185,61],[61,184],[184,185],[186,57],[57,185],[185,186],[216,212],[212,186],[186,216],[192,214],[214,187],[187,192],[139,34],[34,156],[156,139],[218,79],[79,237],[237,218],[147,123],[123,177],[177,147],[45,44],[44,4],[4,45],[208,201],[201,32],[32,208],[98,64],[64,129],[129,98],[192,213],[213,138],[138,192],[235,59],[59,219],[219,235],[141,242],[242,97],[97,141],[97,2],[2,141],[141,97],[240,75],[75,235],[235,240],[229,24],[24,228],[228,229],[31,25],[25,226],[226,31],[230,23],[23,229],[229,230],[231,22],[22,230],[230,231],[232,26],[26,231],[231,232],[233,112],[112,232],[232,233],[244,189],[189,243],[243,244],[189,221],[221,190],[190,189],[222,28],[28,221],[221,222],[223,27],[27,222],[222,223],[224,29],[29,223],[223,224],[225,30],[30,224],[224,225],[113,247],[247,225],[225,113],[99,60],[60,240],[240,99],[213,147],[147,215],[215,213],[60,20],[20,166],[166,60],[192,187],[187,213],[213,192],[243,112],[112,244],[244,243],[244,233],[233,245],[245,244],[245,128],[128,188],[188,245],[188,114],[114,174],[174,188],[134,131],[131,220],[220,134],[174,217],[217,236],[236,174],[236,198],[198,134],[134,236],[215,177],[177,58],[58,215],[156,143],[143,124],[124,156],[25,110],[110,7],[7,25],[31,228],[228,25],[25,31],[264,356],[356,368],[368,264],[0,11],[11,267],[267,0],[451,452],[452,349],[349,451],[267,302],[302,269],[269,267],[350,357],[357,277],[277,350],[350,452],[452,357],[357,350],[299,333],[333,297],[297,299],[396,175],[175,377],[377,396],[280,347],[347,330],[330,280],[269,303],[303,270],[270,269],[151,9],[9,337],[337,151],[344,278],[278,360],[360,344],[424,418],[418,431],[431,424],[270,304],[304,409],[409,270],[272,310],[310,407],[407,272],[322,270],[270,410],[410,322],[449,450],[450,347],[347,449],[432,422],[422,434],[434,432],[18,313],[313,17],[17,18],[291,306],[306,375],[375,291],[259,387],[387,260],[260,259],[424,335],[335,418],[418,424],[434,364],[364,416],[416,434],[391,423],[423,327],[327,391],[301,251],[251,298],[298,301],[275,281],[281,4],[4,275],[254,373],[373,253],[253,254],[375,307],[307,321],[321,375],[280,425],[425,411],[411,280],[200,421],[421,18],[18,200],[335,321],[321,406],[406,335],[321,320],[320,405],[405,321],[314,315],[315,17],[17,314],[423,426],[426,266],[266,423],[396,377],[377,369],[369,396],[270,322],[322,269],[269,270],[413,417],[417,464],[464,413],[385,386],[386,258],[258,385],[248,456],[456,419],[419,248],[298,284],[284,333],[333,298],[168,417],[417,8],[8,168],[448,346],[346,261],[261,448],[417,413],[413,285],[285,417],[326,327],[327,328],[328,326],[277,355],[355,329],[329,277],[309,392],[392,438],[438,309],[381,382],[382,256],[256,381],[279,429],[429,360],[360,279],[365,364],[364,379],[379,365],[355,277],[277,437],[437,355],[282,443],[443,283],[283,282],[281,275],[275,363],[363,281],[395,431],[431,369],[369,395],[299,297],[297,337],[337,299],[335,273],[273,321],[321,335],[348,450],[450,349],[349,348],[359,446],[446,467],[467,359],[283,293],[293,282],[282,283],[250,458],[458,462],[462,250],[300,276],[276,383],[383,300],[292,308],[308,325],[325,292],[283,276],[276,293],[293,283],[264,372],[372,447],[447,264],[346,352],[352,340],[340,346],[354,274],[274,19],[19,354],[363,456],[456,281],[281,363],[426,436],[436,425],[425,426],[380,381],[381,252],[252,380],[267,269],[269,393],[393,267],[421,200],[200,428],[428,421],[371,266],[266,329],[329,371],[432,287],[287,422],[422,432],[290,250],[250,328],[328,290],[385,258],[258,384],[384,385],[446,265],[265,342],[342,446],[386,387],[387,257],[257,386],[422,424],[424,430],[430,422],[445,342],[342,276],[276,445],[422,273],[273,424],[424,422],[306,292],[292,307],[307,306],[352,366],[366,345],[345,352],[268,271],[271,302],[302,268],[358,423],[423,371],[371,358],[327,294],[294,460],[460,327],[331,279],[279,294],[294,331],[303,271],[271,304],[304,303],[436,432],[432,427],[427,436],[304,272],[272,408],[408,304],[395,394],[394,431],[431,395],[378,395],[395,400],[400,378],[296,334],[334,299],[299,296],[6,351],[351,168],[168,6],[376,352],[352,411],[411,376],[307,325],[325,320],[320,307],[285,295],[295,336],[336,285],[320,319],[319,404],[404,320],[329,330],[330,349],[349,329],[334,293],[293,333],[333,334],[366,323],[323,447],[447,366],[316,15],[15,315],[315,316],[331,358],[358,279],[279,331],[317,14],[14,316],[316,317],[8,285],[285,9],[9,8],[277,329],[329,350],[350,277],[253,374],[374,252],[252,253],[319,318],[318,403],[403,319],[351,6],[6,419],[419,351],[324,318],[318,325],[325,324],[397,367],[367,365],[365,397],[288,435],[435,397],[397,288],[278,344],[344,439],[439,278],[310,272],[272,311],[311,310],[248,195],[195,281],[281,248],[375,273],[273,291],[291,375],[175,396],[396,199],[199,175],[312,311],[311,268],[268,312],[276,283],[283,445],[445,276],[390,373],[373,339],[339,390],[295,282],[282,296],[296,295],[448,449],[449,346],[346,448],[356,264],[264,454],[454,356],[337,336],[336,299],[299,337],[337,338],[338,151],[151,337],[294,278],[278,455],[455,294],[308,292],[292,415],[415,308],[429,358],[358,355],[355,429],[265,340],[340,372],[372,265],[352,346],[346,280],[280,352],[295,442],[442,282],[282,295],[354,19],[19,370],[370,354],[285,441],[441,295],[295,285],[195,248],[248,197],[197,195],[457,440],[440,274],[274,457],[301,300],[300,368],[368,301],[417,351],[351,465],[465,417],[251,301],[301,389],[389,251],[394,395],[395,379],[379,394],[399,412],[412,419],[419,399],[410,436],[436,322],[322,410],[326,2],[2,393],[393,326],[354,370],[370,461],[461,354],[393,164],[164,267],[267,393],[268,302],[302,12],[12,268],[312,268],[268,13],[13,312],[298,293],[293,301],[301,298],[265,446],[446,340],[340,265],[280,330],[330,425],[425,280],[322,426],[426,391],[391,322],[420,429],[429,437],[437,420],[393,391],[391,326],[326,393],[344,440],[440,438],[438,344],[458,459],[459,461],[461,458],[364,434],[434,394],[394,364],[428,396],[396,262],[262,428],[274,354],[354,457],[457,274],[317,316],[316,402],[402,317],[316,315],[315,403],[403,316],[315,314],[314,404],[404,315],[314,313],[313,405],[405,314],[313,421],[421,406],[406,313],[323,366],[366,361],[361,323],[292,306],[306,407],[407,292],[306,291],[291,408],[408,306],[291,287],[287,409],[409,291],[287,432],[432,410],[410,287],[427,434],[434,411],[411,427],[372,264],[264,383],[383,372],[459,309],[309,457],[457,459],[366,352],[352,401],[401,366],[1,274],[274,4],[4,1],[418,421],[421,262],[262,418],[331,294],[294,358],[358,331],[435,433],[433,367],[367,435],[392,289],[289,439],[439,392],[328,462],[462,326],[326,328],[94,2],[2,370],[370,94],[289,305],[305,455],[455,289],[339,254],[254,448],[448,339],[359,255],[255,446],[446,359],[254,253],[253,449],[449,254],[253,252],[252,450],[450,253],[252,256],[256,451],[451,252],[256,341],[341,452],[452,256],[414,413],[413,463],[463,414],[286,441],[441,414],[414,286],[286,258],[258,441],[441,286],[258,257],[257,442],[442,258],[257,259],[259,443],[443,257],[259,260],[260,444],[444,259],[260,467],[467,445],[445,260],[309,459],[459,250],[250,309],[305,289],[289,290],[290,305],[305,290],[290,460],[460,305],[401,376],[376,435],[435,401],[309,250],[250,392],[392,309],[376,411],[411,433],[433,376],[453,341],[341,464],[464,453],[357,453],[453,465],[465,357],[343,357],[357,412],[412,343],[437,343],[343,399],[399,437],[344,360],[360,440],[440,344],[420,437],[437,456],[456,420],[360,420],[420,363],[363,360],[361,401],[401,288],[288,361],[265,372],[372,353],[353,265],[390,339],[339,249],[249,390],[339,448],[448,255],[255,339]]),V("VERSION","0.4.1646425229")}).call(Sb)),Sb}var u3e=c3e();/**
    * @license
    * Copyright 2024 Google LLC. All Rights Reserved.
    * Licensed under the Apache License, Version 2.0 (the "License");
    * you may not use this file except in compliance with the License.
    * You may obtain a copy of the License at
    *
    * http://www.apache.org/licenses/LICENSE-2.0
    *
    * Unless required by applicable law or agreed to in writing, software
    * distributed under the License is distributed on an "AS IS" BASIS,
    * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    * See the License for the specific language governing permissions and
    * limitations under the License.
    * =============================================================================
    */var dc=function(){return dc=Object.assign||function(n){for(var e,t=1,s=arguments.length;t<s;t++)for(var r in e=arguments[t])Object.prototype.hasOwnProperty.call(e,r)&&(n[r]=e[r]);return n},dc.apply(this,arguments)};function Il(n,e,t,s){return new(t||(t=Promise))((function(r,i){function o(c){try{l(s.next(c))}catch(u){i(u)}}function a(c){try{l(s.throw(c))}catch(u){i(u)}}function l(c){var u;c.done?r(c.value):(u=c.value,u instanceof t?u:new t((function(h){h(u)}))).then(o,a)}l((s=s.apply(n,[])).next())}))}function wl(n,e){var t,s,r,i,o={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]};return i={next:a(0),throw:a(1),return:a(2)},typeof Symbol=="function"&&(i[Symbol.iterator]=function(){return this}),i;function a(l){return function(c){return(function(u){if(t)throw new TypeError("Generator is already executing.");for(;o;)try{if(t=1,s&&(r=2&u[0]?s.return:u[0]?s.throw||((r=s.return)&&r.call(s),0):s.next)&&!(r=r.call(s,u[1])).done)return r;switch(s=0,r&&(u=[2&u[0],r.value]),u[0]){case 0:case 1:r=u;break;case 4:return o.label++,{value:u[1],done:!1};case 5:o.label++,s=u[1],u=[0];continue;case 7:u=o.ops.pop(),o.trys.pop();continue;default:if(r=o.trys,!((r=r.length>0&&r[r.length-1])||u[0]!==6&&u[0]!==2)){o=0;continue}if(u[0]===3&&(!r||u[1]>r[0]&&u[1]<r[3])){o.label=u[1];break}if(u[0]===6&&o.label<r[1]){o.label=r[1],r=u;break}if(r&&o.label<r[2]){o.label=r[2],o.ops.push(u);break}r[2]&&o.ops.pop(),o.trys.pop();continue}u=e.call(n,o)}catch(h){u=[6,h],s=0}finally{t=r=0}if(5&u[0])throw u[1];return{value:u[0]?u[1]:void 0,done:!0}})([l,c])}}}var pL=["rightEye","leftEye","noseTip","mouthCenter","rightEarTragion","leftEarTragion"],Eb={modelType:"short",runtime:"mediapipe",maxFaces:1},h3e=(function(){function n(e){var t=this;this.width=0,this.height=0,this.selfieMode=!1,this.faceDetectorSolution=new u3e.FaceDetection({locateFile:function(s,r){if(e.solutionPath){var i=e.solutionPath.replace(/\/+$/,"");return"".concat(i,"/").concat(s)}return"".concat(r,"/").concat(s)}}),this.faceDetectorSolution.setOptions({selfieMode:this.selfieMode,model:e.modelType}),this.faceDetectorSolution.onResults((function(s){if(t.height=s.image.height,t.width=s.image.width,t.faces=[],s.detections!==null)for(var r=0,i=s.detections;r<i.length;r++){var o=i[r];t.faces.push(t.normalizedToAbsolute(o.landmarks,(a=o.boundingBox,l=void 0,c=void 0,u=void 0,l=a.xCenter-a.width/2,c=l+a.width,u=a.yCenter-a.height/2,{xMin:l,xMax:c,yMin:u,yMax:u+a.height,width:a.width,height:a.height})))}var a,l,c,u}))}return n.prototype.normalizedToAbsolute=function(e,t){var s=this;return{keypoints:e.map((function(r,i){return{x:r.x*s.width,y:r.y*s.height,name:pL[i]}})),box:{xMin:t.xMin*this.width,yMin:t.yMin*this.height,xMax:t.xMax*this.width,yMax:t.yMax*this.height,width:t.width*this.width,height:t.height*this.height}}},n.prototype.estimateFaces=function(e,t){return Il(this,void 0,void 0,(function(){var s,r;return wl(this,(function(i){switch(i.label){case 0:return t&&t.flipHorizontal&&t.flipHorizontal!==this.selfieMode&&(this.selfieMode=t.flipHorizontal,this.faceDetectorSolution.setOptions({selfieMode:this.selfieMode})),e instanceof cn?(r=ImageData.bind,[4,vc(e)]):[3,2];case 1:return s=new(r.apply(ImageData,[void 0,i.sent(),e.shape[1],e.shape[0]])),[3,3];case 2:s=e,i.label=3;case 3:return e=s,[4,this.faceDetectorSolution.send({image:e})];case 4:return i.sent(),[2,this.faces]}}))}))},n.prototype.dispose=function(){this.faceDetectorSolution.close()},n.prototype.reset=function(){this.faceDetectorSolution.reset(),this.width=0,this.height=0,this.faces=null,this.selfieMode=!1},n.prototype.initialize=function(){return this.faceDetectorSolution.initialize()},n})();function d3e(n){return Il(this,void 0,void 0,(function(){var e,t;return wl(this,(function(s){switch(s.label){case 0:return e=(function(r){if(r==null)return dc({},Eb);var i=dc({},r);return i.runtime="mediapipe",i.modelType==null&&(i.modelType=Eb.modelType),i.maxFaces==null&&(i.maxFaces=Eb.maxFaces),i})(n),[4,(t=new h3e(e)).initialize()];case 1:return s.sent(),[2,t]}}))}))}function f3e(n,e,t,s){var r=n.width,i=n.height,o=1,a=Math.cos(n.rotation),l=Math.sin(n.rotation),c=n.xCenter,u=n.yCenter,h=1/e,d=1/t,f=new Array(16);return f[0]=r*a*o*h,f[1]=-i*l*h,f[2]=0,f[3]=(-.5*r*a*o+.5*i*l+c)*h,f[4]=r*l*o*d,f[5]=i*a*d,f[6]=0,f[7]=(-.5*i*a-.5*r*l*o+u)*d,f[8]=0,f[9]=0,f[10]=r*h,f[11]=0,f[12]=0,f[13]=0,f[14]=0,f[15]=1,(function(p){if(p.length!==16)throw new Error("Array length must be 16 but got ".concat(p.length));return[[p[0],p[1],p[2],p[3]],[p[4],p[5],p[6],p[7]],[p[8],p[9],p[10],p[11]],[p[12],p[13],p[14],p[15]]]})(f)}function mL(n){return n instanceof cn?{height:n.shape[0],width:n.shape[1]}:{height:n.height,width:n.width}}function gL(n){return n instanceof cn?n:Fh(n)}function _b(n,e){z(n.width!==0,(function(){return"".concat(e," width cannot be 0.")})),z(n.height!==0,(function(){return"".concat(e," height cannot be 0.")}))}function p3e(n,e){var t=(function(s,r,i,o){var a=r-s,l=o-i,c=l/a;return{scale:c,offset:i-s*c}})(0,255,e[0],e[1]);return ue((function(){return $e(ne(n,t.scale),t.offset)}))}function m3e(n,e,t){var s=e.outputTensorSize,r=e.keepAspectRatio,i=e.borderMode,o=e.outputTensorFloatRange,a=mL(n),l=(function(d,f){return{xCenter:.5*d.width,yCenter:.5*d.height,width:d.width,height:d.height,rotation:0}})(a),c=(function(d,f,p){if(p===void 0&&(p=!1),!p)return{top:0,left:0,right:0,bottom:0};var A=f.height,m=f.width;_b(f,"targetSize"),_b(d,"roi");var g,x,v=A/m,b=d.height/d.width,w=0,_=0;return v>b?(g=d.width,x=d.width*v,_=(1-b/v)/2):(g=d.height/v,x=d.height,w=(1-v/b)/2),d.width=g,d.height=x,{top:_,left:w,right:w,bottom:_}})(l,s,r),u=f3e(l,a.width,a.height),h=ue((function(){var d=gL(n),f=ni((function(m,g,x){return _b(x,"inputResolution"),[1/x.width*m[0][0]*g.width,1/x.height*m[0][1]*g.width,m[0][3]*g.width,1/x.width*m[1][0]*g.height,1/x.height*m[1][1]*g.height,m[1][3]*g.height,0,0]})(u,a,s),[1,8]),p=i==="zero"?"constant":"nearest",A=Is.transform(Kn(Ze(d,"float32")),f,"bilinear",p,0,[s.height,s.width]);return o!=null?p3e(A,o):A}));return{imageTensor:h,padding:c,transformationMatrix:u}}function kT(n){n.reduceBoxesInLowestLayer==null&&(n.reduceBoxesInLowestLayer=!1),n.interpolatedScaleAspectRatio==null&&(n.interpolatedScaleAspectRatio=1),n.fixedAnchorSize==null&&(n.fixedAnchorSize=!1);for(var e=[],t=0;t<n.numLayers;){for(var s=[],r=[],i=[],o=[],a=t;a<n.strides.length&&n.strides[a]===n.strides[t];){var l=NT(n.minScale,n.maxScale,a,n.strides.length);if(a===0&&n.reduceBoxesInLowestLayer)i.push(1),i.push(2),i.push(.5),o.push(.1),o.push(l),o.push(l);else{for(var c=0;c<n.aspectRatios.length;++c)i.push(n.aspectRatios[c]),o.push(l);if(n.interpolatedScaleAspectRatio>0){var u=a===n.strides.length-1?1:NT(n.minScale,n.maxScale,a+1,n.strides.length);o.push(Math.sqrt(l*u)),i.push(n.interpolatedScaleAspectRatio)}}a++}for(var h=0;h<i.length;++h){var d=Math.sqrt(i[h]);s.push(o[h]/d),r.push(o[h]*d)}var f=0,p=0;if(n.featureMapHeight.length>0)f=n.featureMapHeight[t],p=n.featureMapWidth[t];else{var A=n.strides[t];f=Math.ceil(n.inputSizeHeight/A),p=Math.ceil(n.inputSizeWidth/A)}for(var m=0;m<f;++m)for(var g=0;g<p;++g)for(var x=0;x<s.length;++x){var v={xCenter:(g+n.anchorOffsetX)/p,yCenter:(m+n.anchorOffsetY)/f,width:0,height:0};n.fixedAnchorSize?(v.width=1,v.height=1):(v.width=r[x],v.height=s[x]),e.push(v)}t=a}return e}function NT(n,e,t,s){return s===1?.5*(n+e):n+(e-n)*t/(s-1)}function RT(n,e){var t=e[0],s=e[1];return[t*n[0]+s*n[1]+n[3],t*n[4]+s*n[5]+n[7]]}function g3e(n){return ue((function(){var e=(function(r){return ue((function(){return[Rt(r,[0,0,0],[1,-1,1]),Rt(r,[0,0,1],[1,-1,-1])]}))})(n),t=e[0],s=e[1];return{boxes:Ht(s),logits:Ht(t)}}))}function A3e(n,e,t,s){return Il(this,void 0,void 0,(function(){var r,i,o,a,l;return wl(this,(function(c){switch(c.label){case 0:return n.sort((function(u,h){return Math.max.apply(Math,h.score)-Math.max.apply(Math,u.score)})),r=ni(n.map((function(u){return[u.locationData.relativeBoundingBox.yMin,u.locationData.relativeBoundingBox.xMin,u.locationData.relativeBoundingBox.yMax,u.locationData.relativeBoundingBox.xMax]}))),i=fs(n.map((function(u){return u.score[0]}))),[4,Is.nonMaxSuppressionAsync(r,i,e,t)];case 1:return[4,(o=c.sent()).array()];case 2:return a=c.sent(),l=n.filter((function(u,h){return a.indexOf(h)>-1})),zt([r,i,o]),[2,l]}}))}))}function y3e(n,e,t){return Il(this,void 0,void 0,(function(){var s,r,i,o,a;return wl(this,(function(l){switch(l.label){case 0:return s=n[0],r=n[1],i=(function(c,u,h){return ue((function(){var d,f,p,A;h.reverseOutputOrder?(f=Ht(Rt(c,[0,h.boxCoordOffset+0],[-1,1])),d=Ht(Rt(c,[0,h.boxCoordOffset+1],[-1,1])),A=Ht(Rt(c,[0,h.boxCoordOffset+2],[-1,1])),p=Ht(Rt(c,[0,h.boxCoordOffset+3],[-1,1]))):(d=Ht(Rt(c,[0,h.boxCoordOffset+0],[-1,1])),f=Ht(Rt(c,[0,h.boxCoordOffset+1],[-1,1])),p=Ht(Rt(c,[0,h.boxCoordOffset+2],[-1,1])),A=Ht(Rt(c,[0,h.boxCoordOffset+3],[-1,1]))),f=$e(ne(rt(f,h.xScale),u.w),u.x),d=$e(ne(rt(d,h.yScale),u.h),u.y),h.applyExponentialOnBoxSize?(p=ne(xr(rt(p,h.hScale)),u.h),A=ne(xr(rt(A,h.wScale)),u.w)):(p=ne(rt(p,h.hScale),u.h),A=ne(rt(A,h.wScale),u.h));var m=gt(d,rt(p,2)),g=gt(f,rt(A,2)),x=$e(d,rt(p,2)),v=$e(f,rt(A,2)),b=ps([ae(m,[h.numBoxes,1]),ae(g,[h.numBoxes,1]),ae(x,[h.numBoxes,1]),ae(v,[h.numBoxes,1])],1);if(h.numKeypoints)for(var w=0;w<h.numKeypoints;++w){var _=h.keypointCoordOffset+w*h.numValuesPerKeypoint,N=void 0,M=void 0;h.reverseOutputOrder?(N=Ht(Rt(c,[0,_],[-1,1])),M=Ht(Rt(c,[0,_+1],[-1,1]))):(M=Ht(Rt(c,[0,_],[-1,1])),N=Ht(Rt(c,[0,_+1],[-1,1])));var T=$e(ne(rt(N,h.xScale),u.w),u.x),k=$e(ne(rt(M,h.yScale),u.h),u.y);b=ps([b,ae(T,[h.numBoxes,1]),ae(k,[h.numBoxes,1])],1)}return b}))})(r,e,t),o=ue((function(){var c=s;return t.sigmoidScore?(t.scoreClippingThresh!=null&&(c=$r(s,-t.scoreClippingThresh,t.scoreClippingThresh)),c=Tr(c)):c})),[4,x3e(i,o,t)];case 1:return a=l.sent(),zt([i,o]),[2,a]}}))}))}function x3e(n,e,t){return Il(this,void 0,void 0,(function(){var s,r,i,o,a,l,c,u,h,d,f,p;return wl(this,(function(A){switch(A.label){case 0:return s=[],[4,n.data()];case 1:return r=A.sent(),[4,e.data()];case 2:for(i=A.sent(),o=0;o<t.numBoxes;++o)if(!(t.minScoreThresh!=null&&i[o]<t.minScoreThresh||(a=o*t.numCoords,l=b3e(r[a+0],r[a+1],r[a+2],r[a+3],i[o],t.flipVertically,o),(c=l.locationData.relativeBoundingBox).width<0||c.height<0))){if(t.numKeypoints>0)for((u=l.locationData).relativeKeypoints=[],h=t.numKeypoints*t.numValuesPerKeypoint,d=0;d<h;d+=t.numValuesPerKeypoint)f=a+t.keypointCoordOffset+d,p={x:r[f+0],y:t.flipVertically?1-r[f+1]:r[f+1]},u.relativeKeypoints.push(p);s.push(l)}return[2,s]}}))}))}function b3e(n,e,t,s,r,i,o){return{score:[r],ind:o,locationData:{relativeBoundingBox:{xMin:e,yMin:i?1-t:n,xMax:s,yMax:i?1-n:t,width:s-e,height:t-n}}}}var v3e={reduceBoxesInLowestLayer:!1,interpolatedScaleAspectRatio:1,featureMapHeight:[],featureMapWidth:[],numLayers:4,minScale:.1484375,maxScale:.75,inputSizeHeight:128,inputSizeWidth:128,anchorOffsetX:.5,anchorOffsetY:.5,strides:[8,16,16,16],aspectRatios:[1],fixedAnchorSize:!0},C3e={reduceBoxesInLowestLayer:!1,interpolatedScaleAspectRatio:0,featureMapHeight:[],featureMapWidth:[],numLayers:1,minScale:.1484375,maxScale:.75,inputSizeHeight:192,inputSizeWidth:192,anchorOffsetX:.5,anchorOffsetY:.5,strides:[4],aspectRatios:[1],fixedAnchorSize:!0},Tb={runtime:"tfjs",modelType:"short",maxFaces:1,detectorModelUrl:"https://tfhub.dev/mediapipe/tfjs-model/face_detection/short/1"},I3e={applyExponentialOnBoxSize:!1,flipVertically:!1,ignoreClasses:[],numClasses:1,numBoxes:896,numCoords:16,boxCoordOffset:0,keypointCoordOffset:4,numKeypoints:6,numValuesPerKeypoint:2,sigmoidScore:!0,scoreClippingThresh:100,reverseOutputOrder:!0,xScale:128,yScale:128,hScale:128,wScale:128,minScoreThresh:.5},w3e={applyExponentialOnBoxSize:!1,flipVertically:!1,ignoreClasses:[],numClasses:1,numBoxes:2304,numCoords:16,boxCoordOffset:0,keypointCoordOffset:4,numKeypoints:6,numValuesPerKeypoint:2,sigmoidScore:!0,scoreClippingThresh:100,reverseOutputOrder:!0,xScale:192,yScale:192,hScale:192,wScale:192,minScoreThresh:.6},S3e=.3,E3e={outputTensorSize:{width:128,height:128},keepAspectRatio:!0,outputTensorFloatRange:[-1,1],borderMode:"zero"},_3e={outputTensorSize:{width:192,height:192},keepAspectRatio:!0,outputTensorFloatRange:[-1,1],borderMode:"zero"},K0,T3e=(function(){function n(e,t,s){this.detectorModel=t,this.maxFaces=s,e==="full"?(this.imageToTensorConfig=_3e,this.tensorsToDetectionConfig=w3e,this.anchors=kT(C3e)):(this.imageToTensorConfig=E3e,this.tensorsToDetectionConfig=I3e,this.anchors=kT(v3e));var r=fs(this.anchors.map((function(l){return l.width}))),i=fs(this.anchors.map((function(l){return l.height}))),o=fs(this.anchors.map((function(l){return l.xCenter}))),a=fs(this.anchors.map((function(l){return l.yCenter})));this.anchorTensor={x:o,y:a,w:r,h:i}}return n.prototype.dispose=function(){this.detectorModel.dispose(),zt([this.anchorTensor.x,this.anchorTensor.y,this.anchorTensor.w,this.anchorTensor.h])},n.prototype.reset=function(){},n.prototype.detectFaces=function(e,t){return t===void 0&&(t=!1),Il(this,void 0,void 0,(function(){var s,r,i,o,a,l,c,u,h,d,f;return wl(this,(function(p){switch(p.label){case 0:return e==null?(this.reset(),[2,[]]):(s=ue((function(){var A=Ze(gL(e),"float32");return t&&(A=Ht(Is.flipLeftRight(Kn(A,0)),[0])),A})),r=m3e(s,this.imageToTensorConfig),i=r.imageTensor,o=r.transformationMatrix,a=this.detectorModel.execute(i,"Identity:0"),l=g3e(a),c=l.boxes,[4,y3e([u=l.logits,c],this.anchorTensor,this.tensorsToDetectionConfig)]);case 1:return(h=p.sent()).length===0?(zt([s,i,a,u,c]),[2,h]):[4,A3e(h,this.maxFaces,S3e)];case 2:return d=p.sent(),f=(function(A,m){A===void 0&&(A=[]);var g,x=(g=m,[].concat.apply([],g));return A.forEach((function(v){var b=v.locationData;b.relativeKeypoints.forEach((function(k){var B=RT(x,[k.x,k.y]),L=B[0],U=B[1];k.x=L,k.y=U}));var w=b.relativeBoundingBox,_=Number.MAX_VALUE,N=Number.MAX_VALUE,M=Number.MIN_VALUE,T=Number.MIN_VALUE;[[w.xMin,w.yMin],[w.xMin+w.width,w.yMin],[w.xMin+w.width,w.yMin+w.height],[w.xMin,w.yMin+w.height]].forEach((function(k){var B=RT(x,k),L=B[0],U=B[1];_=Math.min(_,L),M=Math.max(M,L),N=Math.min(N,U),T=Math.max(T,U)})),b.relativeBoundingBox={xMin:_,xMax:M,yMin:N,yMax:T,width:M-_,height:T-N}})),A})(d,o),zt([s,i,a,u,c]),[2,f]}}))}))},n.prototype.estimateFaces=function(e,t){return Il(this,void 0,void 0,(function(){var s,r;return wl(this,(function(i){return s=mL(e),r=!!t&&t.flipHorizontal,[2,this.detectFaces(e,r).then((function(o){return o.map((function(a){for(var l=a.locationData.relativeKeypoints.map((function(p,A){return dc(dc({},p),{x:p.x*s.width,y:p.y*s.height,name:pL[A]})})),c=a.locationData.relativeBoundingBox,u=0,h=["width","xMax","xMin"];u<h.length;u++)c[h[u]]*=s.width;for(var d=0,f=["height","yMax","yMin"];d<f.length;d++)c[f[d]]*=s.height;return{keypoints:l,box:c}}))}))]}))}))},n})();function B3e(n){return Il(this,void 0,void 0,(function(){var e,t,s;return wl(this,(function(r){switch(r.label){case 0:return e=(function(i){if(i==null)return dc({},Tb);var o=dc({},i);return o.modelType==null&&(o.modelType=Tb.modelType),o.maxFaces==null&&(o.maxFaces=Tb.maxFaces),o.detectorModelUrl==null&&(o.modelType==="full"?o.detectorModelUrl="https://tfhub.dev/mediapipe/tfjs-model/face_detection/full/1":o.detectorModelUrl="https://tfhub.dev/mediapipe/tfjs-model/face_detection/short/1"),o})(n),t=typeof e.detectorModelUrl=="string"&&e.detectorModelUrl.indexOf("https://tfhub.dev")>-1,[4,Ma(e.detectorModelUrl,{fromTFHub:t})];case 1:return s=r.sent(),[2,new T3e(e.modelType,s,e.maxFaces)]}}))}))}function k3e(n,e){return Il(this,void 0,void 0,(function(){var t,s;return wl(this,(function(r){if(n===K0.MediaPipeFaceDetector){if(s=void 0,(t=e)!=null){if(t.runtime==="tfjs")return[2,B3e(t)];if(t.runtime==="mediapipe")return[2,d3e(t)];s=t.runtime}throw new Error("Expect modelConfig.runtime to be either 'tfjs' "+"or 'mediapipe', but got ".concat(s))}throw new Error("".concat(n," is not a supported model name."))}))}))}(function(n){n.MediaPipeFaceDetector="MediaPipeFaceDetector"})(K0||(K0={}));class MS{static async create(e){const t=await k3e(K0.MediaPipeFaceDetector,{runtime:"tfjs",modelType:"short"});return e.log("success","Face detector ready"),new MS(t,e)}constructor(e,t){this.detector=e,this.debug=t,this.lastFaces=[]}async estimate(e,t){try{this.lastFaces=await this.detector.estimateFaces(e,{flipHorizontal:t==="user"})}catch(s){this.lastFaces=[],this.debug.log("error",`Face error: ${s.message}`)}}isFacePresent(e=.6){return this.lastFaces.some(t=>(t?.score??0)>=e)}}var Bb={},MT;function N3e(){return MT||(MT=1,(function(){var n;function e(I){var y=0;return function(){return y<I.length?{done:!1,value:I[y++]}:{done:!0}}}var t=typeof Object.defineProperties=="function"?Object.defineProperty:function(I,y,C){return I==Array.prototype||I==Object.prototype||(I[y]=C.value),I};function s(I){I=[typeof globalThis=="object"&&globalThis,I,typeof window=="object"&&window,typeof self=="object"&&self,typeof qd=="object"&&qd];for(var y=0;y<I.length;++y){var C=I[y];if(C&&C.Math==Math)return C}throw Error("Cannot find global object")}var r=s(this);function i(I,y){if(y)e:{var C=r;I=I.split(".");for(var S=0;S<I.length-1;S++){var R=I[S];if(!(R in C))break e;C=C[R]}I=I[I.length-1],S=C[I],y=y(S),y!=S&&y!=null&&t(C,I,{configurable:!0,writable:!0,value:y})}}i("Symbol",function(I){function y($){if(this instanceof y)throw new TypeError("Symbol is not a constructor");return new C(S+($||"")+"_"+R++,$)}function C($,P){this.h=$,t(this,"description",{configurable:!0,writable:!0,value:P})}if(I)return I;C.prototype.toString=function(){return this.h};var S="jscomp_symbol_"+(1e9*Math.random()>>>0)+"_",R=0;return y}),i("Symbol.iterator",function(I){if(I)return I;I=Symbol("Symbol.iterator");for(var y="Array Int8Array Uint8Array Uint8ClampedArray Int16Array Uint16Array Int32Array Uint32Array Float32Array Float64Array".split(" "),C=0;C<y.length;C++){var S=r[y[C]];typeof S=="function"&&typeof S.prototype[I]!="function"&&t(S.prototype,I,{configurable:!0,writable:!0,value:function(){return o(e(this))}})}return I});function o(I){return I={next:I},I[Symbol.iterator]=function(){return this},I}function a(I){var y=typeof Symbol<"u"&&Symbol.iterator&&I[Symbol.iterator];return y?y.call(I):{next:e(I)}}function l(I){if(!(I instanceof Array)){I=a(I);for(var y,C=[];!(y=I.next()).done;)C.push(y.value);I=C}return I}var c=typeof Object.assign=="function"?Object.assign:function(I,y){for(var C=1;C<arguments.length;C++){var S=arguments[C];if(S)for(var R in S)Object.prototype.hasOwnProperty.call(S,R)&&(I[R]=S[R])}return I};i("Object.assign",function(I){return I||c});var u=typeof Object.create=="function"?Object.create:function(I){function y(){}return y.prototype=I,new y},h;if(typeof Object.setPrototypeOf=="function")h=Object.setPrototypeOf;else{var d;e:{var f={a:!0},p={};try{p.__proto__=f,d=p.a;break e}catch{}d=!1}h=d?function(I,y){if(I.__proto__=y,I.__proto__!==y)throw new TypeError(I+" is not extensible");return I}:null}var A=h;function m(I,y){if(I.prototype=u(y.prototype),I.prototype.constructor=I,A)A(I,y);else for(var C in y)if(C!="prototype")if(Object.defineProperties){var S=Object.getOwnPropertyDescriptor(y,C);S&&Object.defineProperty(I,C,S)}else I[C]=y[C];I.za=y.prototype}function g(){this.m=!1,this.j=null,this.i=void 0,this.h=1,this.v=this.s=0,this.l=null}function x(I){if(I.m)throw new TypeError("Generator is already running");I.m=!0}g.prototype.u=function(I){this.i=I};function v(I,y){I.l={ma:y,na:!0},I.h=I.s||I.v}g.prototype.return=function(I){this.l={return:I},this.h=this.v};function b(I,y,C){return I.h=C,{value:y}}function w(I){this.h=new g,this.i=I}function _(I,y){x(I.h);var C=I.h.j;return C?N(I,"return"in C?C.return:function(S){return{value:S,done:!0}},y,I.h.return):(I.h.return(y),M(I))}function N(I,y,C,S){try{var R=y.call(I.h.j,C);if(!(R instanceof Object))throw new TypeError("Iterator result "+R+" is not an object");if(!R.done)return I.h.m=!1,R;var $=R.value}catch(P){return I.h.j=null,v(I.h,P),M(I)}return I.h.j=null,S.call(I.h,$),M(I)}function M(I){for(;I.h.h;)try{var y=I.i(I.h);if(y)return I.h.m=!1,{value:y.value,done:!1}}catch(C){I.h.i=void 0,v(I.h,C)}if(I.h.m=!1,I.h.l){if(y=I.h.l,I.h.l=null,y.na)throw y.ma;return{value:y.return,done:!0}}return{value:void 0,done:!0}}function T(I){this.next=function(y){return x(I.h),I.h.j?y=N(I,I.h.j.next,y,I.h.u):(I.h.u(y),y=M(I)),y},this.throw=function(y){return x(I.h),I.h.j?y=N(I,I.h.j.throw,y,I.h.u):(v(I.h,y),y=M(I)),y},this.return=function(y){return _(I,y)},this[Symbol.iterator]=function(){return this}}function k(I){function y(S){return I.next(S)}function C(S){return I.throw(S)}return new Promise(function(S,R){function $(P){P.done?S(P.value):Promise.resolve(P.value).then(y,C).then($,R)}$(I.next())})}function B(I){return k(new T(new w(I)))}i("Promise",function(I){function y(P){this.i=0,this.j=void 0,this.h=[],this.u=!1;var O=this.l();try{P(O.resolve,O.reject)}catch(Y){O.reject(Y)}}function C(){this.h=null}function S(P){return P instanceof y?P:new y(function(O){O(P)})}if(I)return I;C.prototype.i=function(P){if(this.h==null){this.h=[];var O=this;this.j(function(){O.m()})}this.h.push(P)};var R=r.setTimeout;C.prototype.j=function(P){R(P,0)},C.prototype.m=function(){for(;this.h&&this.h.length;){var P=this.h;this.h=[];for(var O=0;O<P.length;++O){var Y=P[O];P[O]=null;try{Y()}catch(se){this.l(se)}}}this.h=null},C.prototype.l=function(P){this.j(function(){throw P})},y.prototype.l=function(){function P(se){return function(Ce){Y||(Y=!0,se.call(O,Ce))}}var O=this,Y=!1;return{resolve:P(this.I),reject:P(this.m)}},y.prototype.I=function(P){if(P===this)this.m(new TypeError("A Promise cannot resolve to itself"));else if(P instanceof y)this.L(P);else{e:switch(typeof P){case"object":var O=P!=null;break e;case"function":O=!0;break e;default:O=!1}O?this.F(P):this.s(P)}},y.prototype.F=function(P){var O=void 0;try{O=P.then}catch(Y){this.m(Y);return}typeof O=="function"?this.M(O,P):this.s(P)},y.prototype.m=function(P){this.v(2,P)},y.prototype.s=function(P){this.v(1,P)},y.prototype.v=function(P,O){if(this.i!=0)throw Error("Cannot settle("+P+", "+O+"): Promise already settled in state"+this.i);this.i=P,this.j=O,this.i===2&&this.K(),this.H()},y.prototype.K=function(){var P=this;R(function(){if(P.D()){var O=r.console;typeof O<"u"&&O.error(P.j)}},1)},y.prototype.D=function(){if(this.u)return!1;var P=r.CustomEvent,O=r.Event,Y=r.dispatchEvent;return typeof Y>"u"?!0:(typeof P=="function"?P=new P("unhandledrejection",{cancelable:!0}):typeof O=="function"?P=new O("unhandledrejection",{cancelable:!0}):(P=r.document.createEvent("CustomEvent"),P.initCustomEvent("unhandledrejection",!1,!0,P)),P.promise=this,P.reason=this.j,Y(P))},y.prototype.H=function(){if(this.h!=null){for(var P=0;P<this.h.length;++P)$.i(this.h[P]);this.h=null}};var $=new C;return y.prototype.L=function(P){var O=this.l();P.T(O.resolve,O.reject)},y.prototype.M=function(P,O){var Y=this.l();try{P.call(O,Y.resolve,Y.reject)}catch(se){Y.reject(se)}},y.prototype.then=function(P,O){function Y(qe,Pe){return typeof qe=="function"?function(ze){try{se(qe(ze))}catch(lt){Ce(lt)}}:Pe}var se,Ce,Le=new y(function(qe,Pe){se=qe,Ce=Pe});return this.T(Y(P,se),Y(O,Ce)),Le},y.prototype.catch=function(P){return this.then(void 0,P)},y.prototype.T=function(P,O){function Y(){switch(se.i){case 1:P(se.j);break;case 2:O(se.j);break;default:throw Error("Unexpected state: "+se.i)}}var se=this;this.h==null?$.i(Y):this.h.push(Y),this.u=!0},y.resolve=S,y.reject=function(P){return new y(function(O,Y){Y(P)})},y.race=function(P){return new y(function(O,Y){for(var se=a(P),Ce=se.next();!Ce.done;Ce=se.next())S(Ce.value).T(O,Y)})},y.all=function(P){var O=a(P),Y=O.next();return Y.done?S([]):new y(function(se,Ce){function Le(ze){return function(lt){qe[ze]=lt,Pe--,Pe==0&&se(qe)}}var qe=[],Pe=0;do qe.push(void 0),Pe++,S(Y.value).T(Le(qe.length-1),Ce),Y=O.next();while(!Y.done)})},y});function L(I,y){I instanceof String&&(I+="");var C=0,S=!1,R={next:function(){if(!S&&C<I.length){var $=C++;return{value:y($,I[$]),done:!1}}return S=!0,{done:!0,value:void 0}}};return R[Symbol.iterator]=function(){return R},R}i("Array.prototype.keys",function(I){return I||function(){return L(this,function(y){return y})}}),i("Array.prototype.fill",function(I){return I||function(y,C,S){var R=this.length||0;for(0>C&&(C=Math.max(0,R+C)),(S==null||S>R)&&(S=R),S=Number(S),0>S&&(S=Math.max(0,R+S)),C=Number(C||0);C<S;C++)this[C]=y;return this}});function U(I){return I||Array.prototype.fill}i("Int8Array.prototype.fill",U),i("Uint8Array.prototype.fill",U),i("Uint8ClampedArray.prototype.fill",U),i("Int16Array.prototype.fill",U),i("Uint16Array.prototype.fill",U),i("Int32Array.prototype.fill",U),i("Uint32Array.prototype.fill",U),i("Float32Array.prototype.fill",U),i("Float64Array.prototype.fill",U),i("Object.is",function(I){return I||function(y,C){return y===C?y!==0||1/y===1/C:y!==y&&C!==C}}),i("Array.prototype.includes",function(I){return I||function(y,C){var S=this;S instanceof String&&(S=String(S));var R=S.length;for(C=C||0,0>C&&(C=Math.max(C+R,0));C<R;C++){var $=S[C];if($===y||Object.is($,y))return!0}return!1}}),i("String.prototype.includes",function(I){return I||function(y,C){if(this==null)throw new TypeError("The 'this' value for String.prototype.includes must not be null or undefined");if(y instanceof RegExp)throw new TypeError("First argument to String.prototype.includes must not be a regular expression");return this.indexOf(y,C||0)!==-1}});var V=this||self;function W(I,y){I=I.split(".");var C=V;I[0]in C||typeof C.execScript>"u"||C.execScript("var "+I[0]);for(var S;I.length&&(S=I.shift());)I.length||y===void 0?C[S]&&C[S]!==Object.prototype[S]?C=C[S]:C=C[S]={}:C[S]=y}function H(I){var y;e:{if((y=V.navigator)&&(y=y.userAgent))break e;y=""}return y.indexOf(I)!=-1}var ee=Array.prototype.map?function(I,y){return Array.prototype.map.call(I,y,void 0)}:function(I,y){for(var C=I.length,S=Array(C),R=typeof I=="string"?I.split(""):I,$=0;$<C;$++)$ in R&&(S[$]=y.call(void 0,R[$],$,I));return S},K={},te=null;function le(I){var y=I.length,C=3*y/4;C%3?C=Math.floor(C):"=.".indexOf(I[y-1])!=-1&&(C="=.".indexOf(I[y-2])!=-1?C-2:C-1);var S=new Uint8Array(C),R=0;return fe(I,function($){S[R++]=$}),R!==C?S.subarray(0,R):S}function fe(I,y){function C(Y){for(;S<I.length;){var se=I.charAt(S++),Ce=te[se];if(Ce!=null)return Ce;if(!/^[\s\xa0]*$/.test(se))throw Error("Unknown base64 encoding at char: "+se)}return Y}Ie();for(var S=0;;){var R=C(-1),$=C(0),P=C(64),O=C(64);if(O===64&&R===-1)break;y(R<<2|$>>4),P!=64&&(y($<<4&240|P>>2),O!=64&&y(P<<6&192|O))}}function Ie(){if(!te){te={};for(var I="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789".split(""),y=["+/=","+/","-_=","-_.","-_"],C=0;5>C;C++){var S=I.concat(y[C].split(""));K[C]=S;for(var R=0;R<S.length;R++){var $=S[R];te[$]===void 0&&(te[$]=R)}}}}var Se=typeof Uint8Array<"u",De=!(H("Trident")||H("MSIE"))&&typeof V.btoa=="function";function Be(I){if(!De){var y;y===void 0&&(y=0),Ie(),y=K[y];for(var C=Array(Math.floor(I.length/3)),S=y[64]||"",R=0,$=0;R<I.length-2;R+=3){var P=I[R],O=I[R+1],Y=I[R+2],se=y[P>>2];P=y[(P&3)<<4|O>>4],O=y[(O&15)<<2|Y>>6],Y=y[Y&63],C[$++]=se+P+O+Y}switch(se=0,Y=S,I.length-R){case 2:se=I[R+1],Y=y[(se&15)<<2]||S;case 1:I=I[R],C[$]=y[I>>2]+y[(I&3)<<4|se>>4]+Y+S}return C.join("")}for(y="";10240<I.length;)y+=String.fromCharCode.apply(null,I.subarray(0,10240)),I=I.subarray(10240);return y+=String.fromCharCode.apply(null,I),btoa(y)}var he=RegExp("[-_.]","g");function ge(I){switch(I){case"-":return"+";case"_":return"/";case".":return"=";default:return""}}function Ne(I){if(!De)return le(I);he.test(I)&&(I=I.replace(he,ge)),I=atob(I);for(var y=new Uint8Array(I.length),C=0;C<I.length;C++)y[C]=I.charCodeAt(C);return y}var Oe;function Qe(){return Oe||(Oe=new Uint8Array(0))}var Ye={},_t=typeof Uint8Array.prototype.slice=="function",J=0,ht=0;function dt(I){var y=0>I;I=Math.abs(I);var C=I>>>0;I=Math.floor((I-C)/4294967296),y&&(C=a(Ke(C,I)),y=C.next().value,I=C.next().value,C=y),J=C>>>0,ht=I>>>0}var tt=typeof BigInt=="function";function Ke(I,y){return y=~y,I?I=~I+1:y+=1,[I,y]}function kt(I,y){this.i=I>>>0,this.h=y>>>0}function Xe(I){if(!I)return ot||(ot=new kt(0,0));if(!/^-?\d+$/.test(I))return null;if(16>I.length)dt(Number(I));else if(tt)I=BigInt(I),J=Number(I&BigInt(4294967295))>>>0,ht=Number(I>>BigInt(32)&BigInt(4294967295));else{var y=+(I[0]==="-");ht=J=0;for(var C=I.length,S=y,R=(C-y)%6+y;R<=C;S=R,R+=6)S=Number(I.slice(S,R)),ht*=1e6,J=1e6*J+S,4294967296<=J&&(ht+=J/4294967296|0,J%=4294967296);y&&(y=a(Ke(J,ht)),I=y.next().value,y=y.next().value,J=I,ht=y)}return new kt(J,ht)}var ot;function wn(I,y){return Error("Invalid wire type: "+I+" (at position "+y+")")}function sn(){return Error("Failed to read varint, encoding is invalid.")}function Z(I,y){return Error("Tried to read past the end of the data "+y+" > "+I)}function G(){throw Error("Invalid UTF8")}function we(I,y){return y=String.fromCharCode.apply(null,y),I==null?y:I+y}var ke=void 0,Ue,Re=typeof TextDecoder<"u",bt,et=typeof TextEncoder<"u",St;function Tt(I){if(I!==Ye)throw Error("illegal external caller")}function We(I,y){if(Tt(y),this.V=I,I!=null&&I.length===0)throw Error("ByteString should be constructed with non-empty values")}function ct(){return St||(St=new We(null,Ye))}function Ut(I){Tt(Ye);var y=I.V;return y=y==null||Se&&y!=null&&y instanceof Uint8Array?y:typeof y=="string"?Ne(y):null,y==null?y:I.V=y}function Dt(I){if(typeof I=="string")return{buffer:Ne(I),C:!1};if(Array.isArray(I))return{buffer:new Uint8Array(I),C:!1};if(I.constructor===Uint8Array)return{buffer:I,C:!1};if(I.constructor===ArrayBuffer)return{buffer:new Uint8Array(I),C:!1};if(I.constructor===We)return{buffer:Ut(I)||Qe(),C:!0};if(I instanceof Uint8Array)return{buffer:new Uint8Array(I.buffer,I.byteOffset,I.byteLength),C:!1};throw Error("Type not convertible to a Uint8Array, expected a Uint8Array, an ArrayBuffer, a base64 encoded string, a ByteString or an Array of numbers")}function mt(I,y){this.i=null,this.m=!1,this.h=this.j=this.l=0,Yt(this,I,y)}function Yt(I,y,C){C=C===void 0?{}:C,I.S=C.S===void 0?!1:C.S,y&&(y=Dt(y),I.i=y.buffer,I.m=y.C,I.l=0,I.j=I.i.length,I.h=I.l)}mt.prototype.reset=function(){this.h=this.l};function de(I,y){if(I.h=y,y>I.j)throw Z(I.j,y)}function je(I){var y=I.i,C=I.h,S=y[C++],R=S&127;if(S&128&&(S=y[C++],R|=(S&127)<<7,S&128&&(S=y[C++],R|=(S&127)<<14,S&128&&(S=y[C++],R|=(S&127)<<21,S&128&&(S=y[C++],R|=S<<28,S&128&&y[C++]&128&&y[C++]&128&&y[C++]&128&&y[C++]&128&&y[C++]&128)))))throw sn();return de(I,C),R}function at(I,y){if(0>y)throw Error("Tried to read a negative byte length: "+y);var C=I.h,S=C+y;if(S>I.j)throw Z(y,I.j-C);return I.h=S,C}var At=[];function Ge(){this.h=[]}Ge.prototype.length=function(){return this.h.length},Ge.prototype.end=function(){var I=this.h;return this.h=[],I};function Ve(I,y,C){for(;0<C||127<y;)I.h.push(y&127|128),y=(y>>>7|C<<25)>>>0,C>>>=7;I.h.push(y)}function ut(I,y){for(;127<y;)I.h.push(y&127|128),y>>>=7;I.h.push(y)}function qt(I,y){if(At.length){var C=At.pop();Yt(C,I,y),I=C}else I=new mt(I,y);this.h=I,this.j=this.h.h,this.i=this.l=-1,this.setOptions(y)}qt.prototype.setOptions=function(I){I=I===void 0?{}:I,this.ca=I.ca===void 0?!1:I.ca},qt.prototype.reset=function(){this.h.reset(),this.j=this.h.h,this.i=this.l=-1};function Mn(I){var y=I.h;if(y.h==y.j)return!1;I.j=I.h.h;var C=je(I.h)>>>0;if(y=C>>>3,C&=7,!(0<=C&&5>=C))throw wn(C,I.j);if(1>y)throw Error("Invalid field number: "+y+" (at position "+I.j+")");return I.l=y,I.i=C,!0}function mn(I){switch(I.i){case 0:if(I.i!=0)mn(I);else e:{I=I.h;for(var y=I.h,C=y+10,S=I.i;y<C;)if((S[y++]&128)===0){de(I,y);break e}throw sn()}break;case 1:I=I.h,de(I,I.h+8);break;case 2:I.i!=2?mn(I):(y=je(I.h)>>>0,I=I.h,de(I,I.h+y));break;case 5:I=I.h,de(I,I.h+4);break;case 3:y=I.l;do{if(!Mn(I))throw Error("Unmatched start-group tag: stream EOF");if(I.i==4){if(I.l!=y)throw Error("Unmatched end-group tag");break}mn(I)}while(!0);break;default:throw wn(I.i,I.j)}}var Ds=[];function Qr(){this.j=[],this.i=0,this.h=new Ge}function rr(I,y){y.length!==0&&(I.j.push(y),I.i+=y.length)}function wi(I,y){if(y=y.R){rr(I,I.h.end());for(var C=0;C<y.length;C++)rr(I,Ut(y[C])||Qe())}}var xs=typeof Symbol=="function"&&typeof Symbol()=="symbol"?Symbol():void 0;function Ys(I,y){return xs?I[xs]|=y:I.A!==void 0?I.A|=y:(Object.defineProperties(I,{A:{value:y,configurable:!0,writable:!0,enumerable:!1}}),y)}function ca(I,y){xs?I[xs]&&(I[xs]&=~y):I.A!==void 0&&(I.A&=~y)}function Xt(I){var y;return xs?y=I[xs]:y=I.A,y??0}function ls(I,y){xs?I[xs]=y:I.A!==void 0?I.A=y:Object.defineProperties(I,{A:{value:y,configurable:!0,writable:!0,enumerable:!1}})}function Mr(I){return Ys(I,1),I}function za(I,y){ls(y,(I|0)&-51)}function ai(I,y){ls(y,(I|18)&-41)}var Si={};function Ei(I){return I!==null&&typeof I=="object"&&!Array.isArray(I)&&I.constructor===Object}var Ur,Ga=[];ls(Ga,23),Ur=Object.freeze(Ga);function ko(I){if(Xt(I.o)&2)throw Error("Cannot mutate an immutable Message")}function go(I){var y=I.length;(y=y?I[y-1]:void 0)&&Ei(y)?y.g=1:(y={},I.push((y.g=1,y)))}function X(I){var y=I.i+I.G;return I.B||(I.B=I.o[y]={})}function me(I,y){return y===-1?null:y>=I.i?I.B?I.B[y]:void 0:I.o[y+I.G]}function Ee(I,y,C,S){ko(I),Te(I,y,C,S)}function Te(I,y,C,S){I.j&&(I.j=void 0),y>=I.i||S?X(I)[y]=C:(I.o[y+I.G]=C,(I=I.B)&&y in I&&delete I[y])}function ve(I,y,C,S){var R=me(I,y);Array.isArray(R)||(R=Ur);var $=Xt(R);if($&1||Mr(R),S)$&2||Ys(R,2),C&1||Object.freeze(R);else{S=!(C&2);var P=$&2;C&1||!P?S&&$&16&&!P&&ca(R,16):(R=Mr(Array.prototype.slice.call(R)),Te(I,y,R))}return R}function Je(I,y){var C=me(I,y),S=C==null?C:typeof C=="number"||C==="NaN"||C==="Infinity"||C==="-Infinity"?Number(C):void 0;return S!=null&&S!==C&&Te(I,y,S),S}function xt(I,y,C,S,R){I.h||(I.h={});var $=I.h[C],P=ve(I,C,3,R);if(!$){var O=P;$=[];var Y=!!(Xt(I.o)&16);P=!!(Xt(O)&2);var se=O;!R&&P&&(O=Array.prototype.slice.call(O));for(var Ce=P,Le=0;Le<O.length;Le++){var qe=O[Le],Pe=y,ze=!1;if(ze=ze===void 0?!1:ze,qe=Array.isArray(qe)?new Pe(qe):ze?new Pe:void 0,qe!==void 0){Pe=qe.o;var lt=ze=Xt(Pe);P&&(lt|=2),Y&&(lt|=16),lt!=ze&&ls(Pe,lt),Pe=lt,Ce=Ce||!!(2&Pe),$.push(qe)}}return I.h[C]=$,Y=Xt(O),y=Y|33,y=Ce?y&-9:y|8,Y!=y&&(Ce=O,Object.isFrozen(Ce)&&(Ce=Array.prototype.slice.call(Ce)),ls(Ce,y),O=Ce),se!==O&&Te(I,C,O),(R||S&&P)&&Ys($,2),S&&Object.freeze($),$}return R||(R=Object.isFrozen($),S&&!R?Object.freeze($):!S&&R&&($=Array.prototype.slice.call($),I.h[C]=$)),$}function Et(I,y,C){var S=!!(Xt(I.o)&2);if(y=xt(I,y,C,S,S),I=ve(I,C,3,S),!(S||Xt(I)&8)){for(S=0;S<y.length;S++){if(C=y[S],Xt(C.o)&2){var R=_i(C,!1);R.j=C}else R=C;C!==R&&(y[S]=R,I[S]=R.o)}Ys(I,8)}return y}function st(I,y,C){if(C!=null&&typeof C!="number")throw Error("Value of float/double field must be a number|null|undefined, found "+typeof C+": "+C);Ee(I,y,C)}function Vt(I,y,C,S,R){ko(I);var $=xt(I,C,y,!1,!1);return C=S??new C,I=ve(I,y,2,!1),R!=null?($.splice(R,0,C),I.splice(R,0,C.o)):($.push(C),I.push(C.o)),C.C()&&ca(I,8),C}function Gt(I,y){return I??y}function vt(I,y,C){return C=C===void 0?0:C,Gt(Je(I,y),C)}var on;function Ln(I){switch(typeof I){case"number":return isFinite(I)?I:String(I);case"object":if(I)if(Array.isArray(I)){if((Xt(I)&128)!==0)return I=Array.prototype.slice.call(I),go(I),I}else{if(Se&&I!=null&&I instanceof Uint8Array)return Be(I);if(I instanceof We){var y=I.V;return y==null?"":typeof y=="string"?y:I.V=Be(y)}}}return I}function Wn(I,y,C,S){if(I!=null){if(Array.isArray(I))I=Tn(I,y,C,S!==void 0);else if(Ei(I)){var R={},$;for($ in I)R[$]=Wn(I[$],y,C,S);I=R}else I=y(I,S);return I}}function Tn(I,y,C,S){var R=Xt(I);S=S?!!(R&16):void 0,I=Array.prototype.slice.call(I);for(var $=0;$<I.length;$++)I[$]=Wn(I[$],y,C,S);return C(R,I),I}function Dn(I){return I.ja===Si?I.toJSON():Ln(I)}function Wt(I,y){I&128&&go(y)}function Qn(I,y,C){if(C=C===void 0?ai:C,I!=null){if(Se&&I instanceof Uint8Array)return I.length?new We(new Uint8Array(I),Ye):ct();if(Array.isArray(I)){var S=Xt(I);return S&2?I:y&&!(S&32)&&(S&16||S===0)?(ls(I,S|2),I):(I=Tn(I,Qn,S&4?ai:C,!0),y=Xt(I),y&4&&y&2&&Object.freeze(I),I)}return I.ja===Si?Hn(I):I}}function fn(I,y,C,S,R,$,P){if(I=I.h&&I.h[C]){if(S=Xt(I),S&2?S=I:($=ee(I,Hn),ai(S,$),Object.freeze($),S=$),ko(y),P=S==null?Ur:Mr([]),S!=null){for($=!!S.length,I=0;I<S.length;I++){var O=S[I];$=$&&!(Xt(O.o)&2),P[I]=O.o}$=($?8:0)|1,I=Xt(P),(I&$)!==$&&(Object.isFrozen(P)&&(P=Array.prototype.slice.call(P)),ls(P,I|$)),y.h||(y.h={}),y.h[C]=S}else y.h&&(y.h[C]=void 0);Te(y,C,P,R)}else Ee(y,C,Qn(S,$,P),R)}function Hn(I){return Xt(I.o)&2||(I=_i(I,!0),Ys(I.o,2)),I}function _i(I,y){var C=I.o,S=[];Ys(S,16);var R=I.constructor.h;if(R&&S.push(R),R=I.B,R){S.length=C.length,S.fill(void 0,S.length,C.length);var $={};S[S.length-1]=$}(Xt(C)&128)!==0&&go(S),y=y||I.C()?ai:za,$=I.constructor,on=S,S=new $(S),on=void 0,I.R&&(S.R=I.R.slice()),$=!!(Xt(C)&16);for(var P=R?C.length-1:C.length,O=0;O<P;O++)fn(I,S,O-I.G,C[O],!1,$,y);if(R)for(var Y in R)fn(I,S,+Y,R[Y],!0,$,y);return S}function un(I,y,C){I==null&&(I=on),on=void 0;var S=this.constructor.i||0,R=0<S,$=this.constructor.h,P=!1;if(I==null){I=$?[$]:[];var O=48,Y=!0;R&&(S=0,O|=128),ls(I,O)}else{if(!Array.isArray(I)||$&&$!==I[0])throw Error();var se=O=Ys(I,0);if((Y=(16&se)!==0)&&((P=(32&se)!==0)||(se|=32)),R){if(128&se)S=0;else if(0<I.length){var Ce=I[I.length-1];if(Ei(Ce)&&"g"in Ce){S=0,se|=128,delete Ce.g;var Le=!0,qe;for(qe in Ce){Le=!1;break}Le&&I.pop()}}}else if(128&se)throw Error();O!==se&&ls(I,se)}this.G=($?0:-1)-S,this.h=void 0,this.o=I;e:{if($=this.o.length,S=$-1,$&&($=this.o[S],Ei($))){this.B=$,this.i=S-this.G;break e}y!==void 0&&-1<y?(this.i=Math.max(y,S+1-this.G),this.B=void 0):this.i=Number.MAX_VALUE}if(!R&&this.B&&"g"in this.B)throw Error('Unexpected "g" flag in sparse object of message that is not a group type.');if(C){y=Y&&!P&&!0,R=this.i;var Pe;for(Y=0;Y<C.length;Y++)P=C[Y],P<R?(P+=this.G,(S=I[P])?Ti(S,y):I[P]=Ur):(Pe||(Pe=X(this)),(S=Pe[P])?Ti(S,y):Pe[P]=Ur)}}un.prototype.toJSON=function(){return Tn(this.o,Dn,Wt)},un.prototype.C=function(){return!!(Xt(this.o)&2)};function Ti(I,y){if(Array.isArray(I)){var C=Xt(I),S=1;!y||C&2||(S|=16),(C&S)!==S&&ls(I,C|S)}}un.prototype.ja=Si,un.prototype.toString=function(){return this.o.toString()};function Un(I,y,C){if(C){var S={},R;for(R in C){var $=C[R],P=$.ra;P||(S.J=$.xa||$.oa.W,$.ia?(S.aa=Rl($.ia),P=(function(O){return function(Y,se,Ce){return O.J(Y,se,Ce,O.aa)}})(S)):$.ka?(S.Z=Ml($.da.P,$.ka),P=(function(O){return function(Y,se,Ce){return O.J(Y,se,Ce,O.Z)}})(S)):P=S.J,$.ra=P),P(y,I,$.da),S={J:S.J,aa:S.aa,Z:S.Z}}}wi(y,I)}var Fn=Symbol();function Os(I,y,C){return I[Fn]||(I[Fn]=function(S,R){return y(S,R,C)})}function cs(I){var y=I[Fn];if(!y){var C=ha(I);y=function(S,R){return Tc(S,R,C)},I[Fn]=y}return y}function Qs(I){var y=I.ia;if(y)return cs(y);if(y=I.wa)return Os(I.da.P,y,I.ka)}function No(I){var y=Qs(I),C=I.da,S=I.oa.U;return y?function(R,$){return S(R,$,C,y)}:function(R,$){return S(R,$,C)}}function li(I,y){var C=I[y];return typeof C=="function"&&C.length===0&&(C=C(),I[y]=C),Array.isArray(C)&&(ki in C||Ki in C||0<C.length&&typeof C[0]=="function")?C:void 0}function Ec(I,y,C,S,R,$){y.P=I[0];var P=1;if(I.length>P&&typeof I[P]!="number"){var O=I[P++];C(y,O)}for(;P<I.length;){C=I[P++];for(var Y=P+1;Y<I.length&&typeof I[Y]!="number";)Y++;switch(O=I[P++],Y-=P,Y){case 0:S(y,C,O);break;case 1:(Y=li(I,P))?(P++,R(y,C,O,Y)):S(y,C,O,I[P++]);break;case 2:Y=P++,Y=li(I,Y),R(y,C,O,Y,I[P++]);break;case 3:$(y,C,O,I[P++],I[P++],I[P++]);break;case 4:$(y,C,O,I[P++],I[P++],I[P++],I[P++]);break;default:throw Error("unexpected number of binary field arguments: "+Y)}}return y}var Bi=Symbol();function Rl(I){var y=I[Bi];if(!y){var C=ua(I);y=function(S,R){return Bc(S,R,C)},I[Bi]=y}return y}function Ml(I,y){var C=I[Bi];return C||(C=function(S,R){return Un(S,R,y)},I[Bi]=C),C}var Ki=Symbol();function Dp(I,y){I.push(y)}function _c(I,y,C){I.push(y,C.W)}function Yh(I,y,C,S){var R=Rl(S),$=ua(S).P,P=C.W;I.push(y,function(O,Y,se){return P(O,Y,se,$,R)})}function jh(I,y,C,S,R,$){var P=Ml(S,$),O=C.W;I.push(y,function(Y,se,Ce){return O(Y,se,Ce,S,P)})}function ua(I){var y=I[Ki];return y||(y=Ec(I,I[Ki]=[],Dp,_c,Yh,jh),ki in I&&Ki in I&&(I.length=0),y)}var ki=Symbol();function Xh(I,y){I[0]=y}function Kh(I,y,C,S){var R=C.U;I[y]=S?function($,P,O){return R($,P,O,S)}:R}function Jh(I,y,C,S,R){var $=C.U,P=cs(S),O=ha(S).P;I[y]=function(Y,se,Ce){return $(Y,se,Ce,O,P,R)}}function Fp(I,y,C,S,R,$,P){var O=C.U,Y=Os(S,R,$);I[y]=function(se,Ce,Le){return O(se,Ce,Le,S,Y,P)}}function ha(I){var y=I[ki];return y||(y=Ec(I,I[ki]={},Xh,Kh,Jh,Fp),ki in I&&Ki in I&&(I.length=0),y)}function Tc(I,y,C){for(;Mn(y)&&y.i!=4;){var S=y.l,R=C[S];if(!R){var $=C[0];$&&($=$[S])&&(R=C[S]=No($))}if(!R||!R(y,I,S)){R=y,S=I,$=R.j,mn(R);var P=R;if(!P.ca){if(R=P.h.h-$,P.h.h=$,P=P.h,R==0)R=ct();else{if($=at(P,R),P.S&&P.m)R=P.i.subarray($,$+R);else{P=P.i;var O=$;R=$+R,R=O===R?Qe():_t?P.slice(O,R):new Uint8Array(P.subarray(O,R))}R=R.length==0?ct():new We(R,Ye)}($=S.R)?$.push(R):S.R=[R]}}}return I}function Bc(I,y,C){for(var S=C.length,R=S%2==1,$=R?1:0;$<S;$+=2)(0,C[$+1])(y,I,C[$]);Un(I,y,R?C[0]:void 0)}function ci(I,y){return{U:I,W:y}}var bs=ci(function(I,y,C){if(I.i!==5)return!1;I=I.h;var S=I.i,R=I.h,$=S[R],P=S[R+1],O=S[R+2];return S=S[R+3],de(I,I.h+4),P=($<<0|P<<8|O<<16|S<<24)>>>0,I=2*(P>>31)+1,$=P>>>23&255,P&=8388607,Ee(y,C,$==255?P?NaN:1/0*I:$==0?I*Math.pow(2,-149)*P:I*Math.pow(2,$-150)*(P+Math.pow(2,23))),!0},function(I,y,C){if(y=Je(y,C),y!=null){ut(I.h,8*C+5),I=I.h;var S=+y;S===0?0<1/S?J=ht=0:(ht=0,J=2147483648):isNaN(S)?(ht=0,J=2147483647):(S=(C=0>S?-2147483648:0)?-S:S,34028234663852886e22<S?(ht=0,J=(C|2139095040)>>>0):11754943508222875e-54>S?(S=Math.round(S/Math.pow(2,-149)),ht=0,J=(C|S)>>>0):(y=Math.floor(Math.log(S)/Math.LN2),S*=Math.pow(2,-y),S=Math.round(8388608*S),16777216<=S&&++y,ht=0,J=(C|y+127<<23|S&8388607)>>>0)),C=J,I.h.push(C>>>0&255),I.h.push(C>>>8&255),I.h.push(C>>>16&255),I.h.push(C>>>24&255)}}),$p=ci(function(I,y,C){if(I.i!==0)return!1;var S=I.h,R=0,$=I=0,P=S.i,O=S.h;do{var Y=P[O++];R|=(Y&127)<<$,$+=7}while(32>$&&Y&128);for(32<$&&(I|=(Y&127)>>4),$=3;32>$&&Y&128;$+=7)Y=P[O++],I|=(Y&127)<<$;if(de(S,O),128>Y)S=R>>>0,Y=I>>>0,(I=Y&2147483648)&&(S=~S+1>>>0,Y=~Y>>>0,S==0&&(Y=Y+1>>>0)),S=4294967296*Y+(S>>>0);else throw sn();return Ee(y,C,I?-S:S),!0},function(I,y,C){y=me(y,C),y!=null&&(typeof y=="string"&&Xe(y),y!=null&&(ut(I.h,8*C),typeof y=="number"?(I=I.h,dt(y),Ve(I,J,ht)):(C=Xe(y),Ve(I.h,C.i,C.h))))}),Pp=ci(function(I,y,C){return I.i!==0?!1:(Ee(y,C,je(I.h)),!0)},function(I,y,C){if(y=me(y,C),y!=null&&y!=null)if(ut(I.h,8*C),I=I.h,C=y,0<=C)ut(I,C);else{for(y=0;9>y;y++)I.h.push(C&127|128),C>>=7;I.h.push(1)}}),kc=ci(function(I,y,C){if(I.i!==2)return!1;var S=je(I.h)>>>0;I=I.h;var R=at(I,S);if(I=I.i,Re){var $=I,P;(P=Ue)||(P=Ue=new TextDecoder("utf-8",{fatal:!0})),I=R+S,$=R===0&&I===$.length?$:$.subarray(R,I);try{var O=P.decode($)}catch(Le){if(ke===void 0){try{P.decode(new Uint8Array([128]))}catch{}try{P.decode(new Uint8Array([97])),ke=!0}catch{ke=!1}}throw!ke&&(Ue=void 0),Le}}else{O=R,S=O+S,R=[];for(var Y=null,se,Ce;O<S;)se=I[O++],128>se?R.push(se):224>se?O>=S?G():(Ce=I[O++],194>se||(Ce&192)!==128?(O--,G()):R.push((se&31)<<6|Ce&63)):240>se?O>=S-1?G():(Ce=I[O++],(Ce&192)!==128||se===224&&160>Ce||se===237&&160<=Ce||(($=I[O++])&192)!==128?(O--,G()):R.push((se&15)<<12|(Ce&63)<<6|$&63)):244>=se?O>=S-2?G():(Ce=I[O++],(Ce&192)!==128||(se<<28)+(Ce-144)>>30!==0||(($=I[O++])&192)!==128||((P=I[O++])&192)!==128?(O--,G()):(se=(se&7)<<18|(Ce&63)<<12|($&63)<<6|P&63,se-=65536,R.push((se>>10&1023)+55296,(se&1023)+56320))):G(),8192<=R.length&&(Y=we(Y,R),R.length=0);O=we(Y,R)}return Ee(y,C,O),!0},function(I,y,C){if(y=me(y,C),y!=null){var S=!1;if(S=S===void 0?!1:S,et){if(S&&/(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])/.test(y))throw Error("Found an unpaired surrogate");y=(bt||(bt=new TextEncoder)).encode(y)}else{for(var R=0,$=new Uint8Array(3*y.length),P=0;P<y.length;P++){var O=y.charCodeAt(P);if(128>O)$[R++]=O;else{if(2048>O)$[R++]=O>>6|192;else{if(55296<=O&&57343>=O){if(56319>=O&&P<y.length){var Y=y.charCodeAt(++P);if(56320<=Y&&57343>=Y){O=1024*(O-55296)+Y-56320+65536,$[R++]=O>>18|240,$[R++]=O>>12&63|128,$[R++]=O>>6&63|128,$[R++]=O&63|128;continue}else P--}if(S)throw Error("Found an unpaired surrogate");O=65533}$[R++]=O>>12|224,$[R++]=O>>6&63|128}$[R++]=O&63|128}}y=R===$.length?$:$.subarray(0,R)}ut(I.h,8*C+2),ut(I.h,y.length),rr(I,I.h.end()),rr(I,y)}}),Nc=ci(function(I,y,C,S,R){if(I.i!==2)return!1;y=Vt(y,C,S),C=I.h.j,S=je(I.h)>>>0;var $=I.h.h+S,P=$-C;if(0>=P&&(I.h.j=$,R(y,I,void 0,void 0,void 0),P=$-I.h.h),P)throw Error("Message parsing ended unexpectedly. Expected to read "+(S+" bytes, instead read "+(S-P)+" bytes, either the data ended unexpectedly or the message misreported its own length"));return I.h.h=$,I.h.j=C,!0},function(I,y,C,S,R){if(y=Et(y,S,C),y!=null)for(S=0;S<y.length;S++){var $=I;ut($.h,8*C+2);var P=$.h.end();rr($,P),P.push($.i),$=P,R(y[S],I),P=I;var O=$.pop();for(O=P.i+P.h.length()-O;127<O;)$.push(O&127|128),O>>>=7,P.i++;$.push(O),P.i++}});function da(I){return function(y,C){e:{if(Ds.length){var S=Ds.pop();S.setOptions(C),Yt(S.h,y,C),y=S}else y=new qt(y,C);try{var R=ha(I),$=Tc(new R.P,y,R);break e}finally{R=y.h,R.i=null,R.m=!1,R.l=0,R.j=0,R.h=0,R.S=!1,y.l=-1,y.i=-1,100>Ds.length&&Ds.push(y)}$=void 0}return $}}function Va(I){return function(){var y=new Qr;Bc(this,y,ua(I)),rr(y,y.h.end());for(var C=new Uint8Array(y.i),S=y.j,R=S.length,$=0,P=0;P<R;P++){var O=S[P];C.set(O,$),$+=O.length}return y.j=[C],C}}function ui(I){un.call(this,I)}m(ui,un);var Wa=[ui,1,Pp,2,bs,3,kc,4,kc];ui.prototype.l=Va(Wa);function Ha(I){un.call(this,I,-1,Lp)}m(Ha,un),Ha.prototype.addClassification=function(I,y){return Vt(this,1,ui,I,y),this};var Lp=[1],Op=da([Ha,1,Nc,Wa]);function zr(I){un.call(this,I)}m(zr,un);var Rc=[zr,1,bs,2,bs,3,bs,4,bs,5,bs];zr.prototype.l=Va(Rc);function Mc(I){un.call(this,I,-1,Qp)}m(Mc,un);var Qp=[1],Zh=da([Mc,1,Nc,Rc]);function E(I){un.call(this,I)}m(E,un);var F=[E,1,bs,2,bs,3,bs,4,bs,5,bs,6,$p],Q=da(F);E.prototype.l=Va(F);function j(I,y,C){if(C=I.createShader(C===0?I.VERTEX_SHADER:I.FRAGMENT_SHADER),I.shaderSource(C,y),I.compileShader(C),!I.getShaderParameter(C,I.COMPILE_STATUS))throw Error(`Could not compile WebGL shader.

`+I.getShaderInfoLog(C));return C}function oe(I){return Et(I,ui,1).map(function(y){var C=me(y,1);return{index:C??0,qa:vt(y,2),label:me(y,3)!=null?Gt(me(y,3),""):void 0,displayName:me(y,4)!=null?Gt(me(y,4),""):void 0}})}function be(I){return{x:vt(I,1),y:vt(I,2),z:vt(I,3),visibility:Je(I,4)!=null?vt(I,4):void 0}}function ce(I,y){this.i=I,this.h=y,this.m=0}function _e(I,y,C){return Fe(I,y),typeof I.h.canvas.transferToImageBitmap=="function"?Promise.resolve(I.h.canvas.transferToImageBitmap()):C?Promise.resolve(I.h.canvas):typeof createImageBitmap=="function"?createImageBitmap(I.h.canvas):(I.j===void 0&&(I.j=document.createElement("canvas")),new Promise(function(S){I.j.height=I.h.canvas.height,I.j.width=I.h.canvas.width,I.j.getContext("2d",{}).drawImage(I.h.canvas,0,0,I.h.canvas.width,I.h.canvas.height),S(I.j)}))}function Fe(I,y){var C=I.h;if(I.s===void 0){var S=j(C,`
  attribute vec2 aVertex;
  attribute vec2 aTex;
  varying vec2 vTex;
  void main(void) {
    gl_Position = vec4(aVertex, 0.0, 1.0);
    vTex = aTex;
  }`,0),R=j(C,`
  precision mediump float;
  varying vec2 vTex;
  uniform sampler2D sampler0;
  void main(){
    gl_FragColor = texture2D(sampler0, vTex);
  }`,1),$=C.createProgram();if(C.attachShader($,S),C.attachShader($,R),C.linkProgram($),!C.getProgramParameter($,C.LINK_STATUS))throw Error(`Could not compile WebGL program.

`+C.getProgramInfoLog($));S=I.s=$,C.useProgram(S),R=C.getUniformLocation(S,"sampler0"),I.l={O:C.getAttribLocation(S,"aVertex"),N:C.getAttribLocation(S,"aTex"),ya:R},I.v=C.createBuffer(),C.bindBuffer(C.ARRAY_BUFFER,I.v),C.enableVertexAttribArray(I.l.O),C.vertexAttribPointer(I.l.O,2,C.FLOAT,!1,0,0),C.bufferData(C.ARRAY_BUFFER,new Float32Array([-1,-1,-1,1,1,1,1,-1]),C.STATIC_DRAW),C.bindBuffer(C.ARRAY_BUFFER,null),I.u=C.createBuffer(),C.bindBuffer(C.ARRAY_BUFFER,I.u),C.enableVertexAttribArray(I.l.N),C.vertexAttribPointer(I.l.N,2,C.FLOAT,!1,0,0),C.bufferData(C.ARRAY_BUFFER,new Float32Array([0,1,0,0,1,0,1,1]),C.STATIC_DRAW),C.bindBuffer(C.ARRAY_BUFFER,null),C.uniform1i(R,0)}S=I.l,C.useProgram(I.s),C.canvas.width=y.width,C.canvas.height=y.height,C.viewport(0,0,y.width,y.height),C.activeTexture(C.TEXTURE0),I.i.bindTexture2d(y.glName),C.enableVertexAttribArray(S.O),C.bindBuffer(C.ARRAY_BUFFER,I.v),C.vertexAttribPointer(S.O,2,C.FLOAT,!1,0,0),C.enableVertexAttribArray(S.N),C.bindBuffer(C.ARRAY_BUFFER,I.u),C.vertexAttribPointer(S.N,2,C.FLOAT,!1,0,0),C.bindFramebuffer(C.DRAW_FRAMEBUFFER?C.DRAW_FRAMEBUFFER:C.FRAMEBUFFER,null),C.clearColor(0,0,0,0),C.clear(C.COLOR_BUFFER_BIT),C.colorMask(!0,!0,!0,!0),C.drawArrays(C.TRIANGLE_FAN,0,4),C.disableVertexAttribArray(S.O),C.disableVertexAttribArray(S.N),C.bindBuffer(C.ARRAY_BUFFER,null),I.i.bindTexture2d(0)}function nt(I){this.h=I}var Nt=new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11]);function Zt(I,y){return y+I}function Jt(I,y){window[I]=y}function Lt(I){var y=document.createElement("script");return y.setAttribute("src",I),y.setAttribute("crossorigin","anonymous"),new Promise(function(C){y.addEventListener("load",function(){C()},!1),y.addEventListener("error",function(){C()},!1),document.body.appendChild(y)})}function hn(){return B(function(I){switch(I.h){case 1:return I.s=2,b(I,WebAssembly.instantiate(Nt),4);case 4:I.h=3,I.s=0;break;case 2:return I.s=0,I.l=null,I.return(!1);case 3:return I.return(!0)}})}function Cn(I){if(this.h=I,this.listeners={},this.l={},this.L={},this.s={},this.v={},this.M=this.u=this.ga=!0,this.I=Promise.resolve(),this.fa="",this.D={},this.locateFile=I&&I.locateFile||Zt,typeof window=="object")var y=window.location.pathname.toString().substring(0,window.location.pathname.toString().lastIndexOf("/"))+"/";else if(typeof location<"u")y=location.pathname.toString().substring(0,location.pathname.toString().lastIndexOf("/"))+"/";else throw Error("solutions can only be loaded on a web page or in a web worker");if(this.ha=y,I.options){y=a(Object.keys(I.options));for(var C=y.next();!C.done;C=y.next()){C=C.value;var S=I.options[C].default;S!==void 0&&(this.l[C]=typeof S=="function"?S():S)}}}n=Cn.prototype,n.close=function(){return this.j&&this.j.delete(),Promise.resolve()};function qn(I){var y,C,S,R,$,P,O,Y,se,Ce,Le;return B(function(qe){switch(qe.h){case 1:return I.ga?(y=I.h.files===void 0?[]:typeof I.h.files=="function"?I.h.files(I.l):I.h.files,b(qe,hn(),2)):qe.return();case 2:if(C=qe.i,typeof window=="object")return Jt("createMediapipeSolutionsWasm",{locateFile:I.locateFile}),Jt("createMediapipeSolutionsPackedAssets",{locateFile:I.locateFile}),P=y.filter(function(Pe){return Pe.data!==void 0}),O=y.filter(function(Pe){return Pe.data===void 0}),Y=Promise.all(P.map(function(Pe){var ze=ir(I,Pe.url);if(Pe.path!==void 0){var lt=Pe.path;ze=ze.then(function(Ft){return I.overrideFile(lt,Ft),Promise.resolve(Ft)})}return ze})),se=Promise.all(O.map(function(Pe){return Pe.simd===void 0||Pe.simd&&C||!Pe.simd&&!C?Lt(I.locateFile(Pe.url,I.ha)):Promise.resolve()})).then(function(){var Pe,ze,lt;return B(function(Ft){if(Ft.h==1)return Pe=window.createMediapipeSolutionsWasm,ze=window.createMediapipeSolutionsPackedAssets,lt=I,b(Ft,Pe(ze),2);lt.i=Ft.i,Ft.h=0})}),Ce=(function(){return B(function(Pe){return I.h.graph&&I.h.graph.url?Pe=b(Pe,ir(I,I.h.graph.url),0):(Pe.h=0,Pe=void 0),Pe})})(),b(qe,Promise.all([se,Y,Ce]),7);if(typeof importScripts!="function")throw Error("solutions can only be loaded on a web page or in a web worker");return S=y.filter(function(Pe){return Pe.simd===void 0||Pe.simd&&C||!Pe.simd&&!C}).map(function(Pe){return I.locateFile(Pe.url,I.ha)}),importScripts.apply(null,l(S)),R=I,b(qe,createMediapipeSolutionsWasm(Module),6);case 6:R.i=qe.i,I.m=new OffscreenCanvas(1,1),I.i.canvas=I.m,$=I.i.GL.createContext(I.m,{antialias:!1,alpha:!1,va:typeof WebGL2RenderingContext<"u"?2:1}),I.i.GL.makeContextCurrent($),qe.h=4;break;case 7:if(I.m=document.createElement("canvas"),Le=I.m.getContext("webgl2",{}),!Le&&(Le=I.m.getContext("webgl",{}),!Le))return alert("Failed to create WebGL canvas context when passing video frame."),qe.return();I.K=Le,I.i.canvas=I.m,I.i.createContext(I.m,!0,!0,{});case 4:I.j=new I.i.SolutionWasm,I.ga=!1,qe.h=0}})}function Yn(I){var y,C,S,R,$,P,O,Y;return B(function(se){if(se.h==1){if(I.h.graph&&I.h.graph.url&&I.fa===I.h.graph.url)return se.return();if(I.u=!0,!I.h.graph||!I.h.graph.url){se.h=2;return}return I.fa=I.h.graph.url,b(se,ir(I,I.h.graph.url),3)}for(se.h!=2&&(y=se.i,I.j.loadGraph(y)),C=a(Object.keys(I.D)),S=C.next();!S.done;S=C.next())R=S.value,I.j.overrideFile(R,I.D[R]);if(I.D={},I.h.listeners)for($=a(I.h.listeners),P=$.next();!P.done;P=$.next())O=P.value,Ns(I,O);Y=I.l,I.l={},I.setOptions(Y),se.h=0})}n.reset=function(){var I=this;return B(function(y){I.j&&(I.j.reset(),I.s={},I.v={}),y.h=0})},n.setOptions=function(I,y){var C=this;if(y=y||this.h.options){for(var S=[],R=[],$={},P=a(Object.keys(I)),O=P.next();!O.done;$={X:$.X,Y:$.Y},O=P.next())if(O=O.value,!(O in this.l&&this.l[O]===I[O])){this.l[O]=I[O];var Y=y[O];Y!==void 0&&(Y.onChange&&($.X=Y.onChange,$.Y=I[O],S.push((function(se){return function(){var Ce;return B(function(Le){if(Le.h==1)return b(Le,se.X(se.Y),2);Ce=Le.i,Ce===!0&&(C.u=!0),Le.h=0})}})($))),Y.graphOptionXref&&(O=Object.assign({},{calculatorName:"",calculatorIndex:0},Y.graphOptionXref,{valueNumber:Y.type===1?I[O]:0,valueBoolean:Y.type===0?I[O]:!1,valueString:Y.type===2?I[O]:""}),R.push(O)))}(S.length!==0||R.length!==0)&&(this.u=!0,this.H=(this.H===void 0?[]:this.H).concat(R),this.F=(this.F===void 0?[]:this.F).concat(S))}};function Us(I){var y,C,S,R,$,P,O;return B(function(Y){switch(Y.h){case 1:if(!I.u)return Y.return();if(!I.F){Y.h=2;break}y=a(I.F),C=y.next();case 3:if(C.done){Y.h=5;break}return S=C.value,b(Y,S(),4);case 4:C=y.next(),Y.h=3;break;case 5:I.F=void 0;case 2:if(I.H){for(R=new I.i.GraphOptionChangeRequestList,$=a(I.H),P=$.next();!P.done;P=$.next())O=P.value,R.push_back(O);I.j.changeOptions(R),R.delete(),I.H=void 0}I.u=!1,Y.h=0}})}n.initialize=function(){var I=this;return B(function(y){return y.h==1?b(y,qn(I),2):y.h!=3?b(y,Yn(I),3):b(y,Us(I),0)})};function ir(I,y){var C,S;return B(function(R){return y in I.L?R.return(I.L[y]):(C=I.locateFile(y,""),S=fetch(C).then(function($){return $.arrayBuffer()}),I.L[y]=S,R.return(S))})}n.overrideFile=function(I,y){this.j?this.j.overrideFile(I,y):this.D[I]=y},n.clearOverriddenFiles=function(){this.D={},this.j&&this.j.clearOverriddenFiles()},n.send=function(I,y){var C=this,S,R,$,P,O,Y,se,Ce,Le;return B(function(qe){switch(qe.h){case 1:return C.h.inputs?(S=1e3*(y??performance.now()),b(qe,C.I,2)):qe.return();case 2:return b(qe,C.initialize(),3);case 3:for(R=new C.i.PacketDataList,$=a(Object.keys(I)),P=$.next();!P.done;P=$.next())if(O=P.value,Y=C.h.inputs[O]){e:{var Pe=I[O];switch(Y.type){case"video":var ze=C.s[Y.stream];if(ze||(ze=new ce(C.i,C.K),C.s[Y.stream]=ze),ze.m===0&&(ze.m=ze.i.createTexture()),typeof HTMLVideoElement<"u"&&Pe instanceof HTMLVideoElement)var lt=Pe.videoWidth,Ft=Pe.videoHeight;else typeof HTMLImageElement<"u"&&Pe instanceof HTMLImageElement?(lt=Pe.naturalWidth,Ft=Pe.naturalHeight):(lt=Pe.width,Ft=Pe.height);Ft={glName:ze.m,width:lt,height:Ft},lt=ze.h,lt.canvas.width=Ft.width,lt.canvas.height=Ft.height,lt.activeTexture(lt.TEXTURE0),ze.i.bindTexture2d(ze.m),lt.texImage2D(lt.TEXTURE_2D,0,lt.RGBA,lt.RGBA,lt.UNSIGNED_BYTE,Pe),ze.i.bindTexture2d(0),ze=Ft;break e;case"detections":for(ze=C.s[Y.stream],ze||(ze=new nt(C.i),C.s[Y.stream]=ze),ze.data||(ze.data=new ze.h.DetectionListData),ze.data.reset(Pe.length),Ft=0;Ft<Pe.length;++Ft){lt=Pe[Ft];var Kt=ze.data,pn=Kt.setBoundingBox,jn=Ft,us=lt.la,ln=new E;if(st(ln,1,us.sa),st(ln,2,us.ta),st(ln,3,us.height),st(ln,4,us.width),st(ln,5,us.rotation),Ee(ln,6,us.pa),us=ln.l(),pn.call(Kt,jn,us),lt.ea)for(Kt=0;Kt<lt.ea.length;++Kt){ln=lt.ea[Kt],pn=ze.data,jn=pn.addNormalizedLandmark,us=Ft,ln=Object.assign({},ln,{visibility:ln.visibility?ln.visibility:0});var en=new zr;st(en,1,ln.x),st(en,2,ln.y),st(en,3,ln.z),ln.visibility&&st(en,4,ln.visibility),ln=en.l(),jn.call(pn,us,ln)}if(lt.ba)for(Kt=0;Kt<lt.ba.length;++Kt)pn=ze.data,jn=pn.addClassification,us=Ft,ln=lt.ba[Kt],en=new ui,st(en,2,ln.qa),ln.index&&Ee(en,1,ln.index),ln.label&&Ee(en,3,ln.label),ln.displayName&&Ee(en,4,ln.displayName),ln=en.l(),jn.call(pn,us,ln)}ze=ze.data;break e;default:ze={}}}switch(se=ze,Ce=Y.stream,Y.type){case"video":R.pushTexture2d(Object.assign({},se,{stream:Ce,timestamp:S}));break;case"detections":Le=se,Le.stream=Ce,Le.timestamp=S,R.pushDetectionList(Le);break;default:throw Error("Unknown input config type: '"+Y.type+"'")}}return C.j.send(R),b(qe,C.I,4);case 4:R.delete(),qe.h=0}})};function zs(I,y,C){var S,R,$,P,O,Y,se,Ce,Le,qe,Pe,ze,lt,Ft;return B(function(Kt){switch(Kt.h){case 1:if(!C)return Kt.return(y);for(S={},R=0,$=a(Object.keys(C)),P=$.next();!P.done;P=$.next())O=P.value,Y=C[O],typeof Y!="string"&&Y.type==="texture"&&y[Y.stream]!==void 0&&++R;1<R&&(I.M=!1),se=a(Object.keys(C)),P=se.next();case 2:if(P.done){Kt.h=4;break}if(Ce=P.value,Le=C[Ce],typeof Le=="string")return lt=S,Ft=Ce,b(Kt,Bn(I,Ce,y[Le]),14);if(qe=y[Le.stream],Le.type==="detection_list"){if(qe){for(var pn=qe.getRectList(),jn=qe.getLandmarksList(),us=qe.getClassificationsList(),ln=[],en=0;en<pn.size();++en){var vs=Q(pn.get(en)),fa=vt(vs,1),e2=vt(vs,2),t2=vt(vs,3),n2=vt(vs,4),s2=vt(vs,5,0),ed=void 0;ed=ed===void 0?0:ed,vs={la:{sa:fa,ta:e2,height:t2,width:n2,rotation:s2,pa:Gt(me(vs,6),ed)},ea:Et(Zh(jn.get(en)),zr,1).map(be),ba:oe(Op(us.get(en)))},ln.push(vs)}pn=ln}else pn=[];S[Ce]=pn,Kt.h=7;break}if(Le.type==="proto_list"){if(qe){for(pn=Array(qe.size()),jn=0;jn<qe.size();jn++)pn[jn]=qe.get(jn);qe.delete()}else pn=[];S[Ce]=pn,Kt.h=7;break}if(qe===void 0){Kt.h=3;break}if(Le.type==="float_list"){S[Ce]=qe,Kt.h=7;break}if(Le.type==="proto"){S[Ce]=qe,Kt.h=7;break}if(Le.type!=="texture")throw Error("Unknown output config type: '"+Le.type+"'");return Pe=I.v[Ce],Pe||(Pe=new ce(I.i,I.K),I.v[Ce]=Pe),b(Kt,_e(Pe,qe,I.M),13);case 13:ze=Kt.i,S[Ce]=ze;case 7:Le.transform&&S[Ce]&&(S[Ce]=Le.transform(S[Ce])),Kt.h=3;break;case 14:lt[Ft]=Kt.i;case 3:P=se.next(),Kt.h=2;break;case 4:return Kt.return(S)}})}function Bn(I,y,C){var S;return B(function(R){return typeof C=="number"||C instanceof Uint8Array||C instanceof I.i.Uint8BlobList?R.return(C):C instanceof I.i.Texture2dDataOut?(S=I.v[y],S||(S=new ce(I.i,I.K),I.v[y]=S),R.return(_e(S,C,I.M))):R.return(void 0)})}function Ns(I,y){for(var C=y.name||"$",S=[].concat(l(y.wants)),R=new I.i.StringList,$=a(y.wants),P=$.next();!P.done;P=$.next())R.push_back(P.value);$=I.i.PacketListener.implement({onResults:function(O){for(var Y={},se=0;se<y.wants.length;++se)Y[S[se]]=O.get(se);var Ce=I.listeners[C];Ce&&(I.I=zs(I,Y,y.outs).then(function(Le){Le=Ce(Le);for(var qe=0;qe<y.wants.length;++qe){var Pe=Y[S[qe]];typeof Pe=="object"&&Pe.hasOwnProperty&&Pe.hasOwnProperty("delete")&&Pe.delete()}Le&&(I.I=Le)}))}}),I.j.attachMultiListener(R,$),R.delete()}n.onResults=function(I,y){this.listeners[y||"$"]=I},W("Solution",Cn),W("OptionType",{BOOL:0,NUMBER:1,ua:2,0:"BOOL",1:"NUMBER",2:"STRING"});function Ji(I){switch(I===void 0&&(I=0),I){case 1:return"selfie_segmentation_landscape.tflite";default:return"selfie_segmentation.tflite"}}function Up(I){var y=this;I=I||{},this.h=new Cn({locateFile:I.locateFile,files:function(C){return[{simd:!0,url:"selfie_segmentation_solution_simd_wasm_bin.js"},{simd:!1,url:"selfie_segmentation_solution_wasm_bin.js"},{data:!0,url:Ji(C.modelSelection)}]},graph:{url:"selfie_segmentation.binarypb"},listeners:[{wants:["segmentation_mask","image_transformed"],outs:{image:{type:"texture",stream:"image_transformed"},segmentationMask:{type:"texture",stream:"segmentation_mask"}}}],inputs:{image:{type:"video",stream:"input_frames_gpu"}},options:{useCpuInference:{type:0,graphOptionXref:{calculatorType:"InferenceCalculator",fieldName:"use_cpu_inference"},default:typeof window!="object"||window.navigator===void 0?!1:"iPad Simulator;iPhone Simulator;iPod Simulator;iPad;iPhone;iPod".split(";").includes(navigator.platform)||navigator.userAgent.includes("Mac")&&"ontouchend"in document},selfieMode:{type:0,graphOptionXref:{calculatorType:"GlScalerCalculator",calculatorIndex:1,fieldName:"flip_horizontal"}},modelSelection:{type:1,graphOptionXref:{calculatorType:"ConstantSidePacketCalculator",calculatorName:"ConstantSidePacketCalculatorModelSelection",fieldName:"int_value"},onChange:function(C){var S,R,$;return B(function(P){return P.h==1?(S=Ji(C),R="third_party/mediapipe/modules/selfie_segmentation/"+S,b(P,ir(y.h,S),2)):($=P.i,y.h.overrideFile(R,$),P.return(!0))})}}}})}n=Up.prototype,n.close=function(){return this.h.close(),Promise.resolve()},n.onResults=function(I){this.h.onResults(I)},n.initialize=function(){var I=this;return B(function(y){return b(y,I.h.initialize(),0)})},n.reset=function(){this.h.reset()},n.send=function(I){var y=this;return B(function(C){return b(C,y.h.send(I),0)})},n.setOptions=function(I){this.h.setOptions(I)},W("SelfieSegmentation",Up),W("VERSION","0.1.1675465747")}).call(Bb)),Bb}var R3e=N3e();/**
    * @license
    * Copyright 2023 Google LLC. All Rights Reserved.
    * Licensed under the Apache License, Version 2.0 (the "License");
    * you may not use this file except in compliance with the License.
    * You may obtain a copy of the License at
    *
    * http://www.apache.org/licenses/LICENSE-2.0
    *
    * Unless required by applicable law or agreed to in writing, software
    * distributed under the License is distributed on an "AS IS" BASIS,
    * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    * See the License for the specific language governing permissions and
    * limitations under the License.
    * =============================================================================
    */var OC=function(n,e){return OC=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,s){t.__proto__=s}||function(t,s){for(var r in s)s.hasOwnProperty(r)&&(t[r]=s[r])},OC(n,e)};function AL(n,e){function t(){this.constructor=n}OC(n,e),n.prototype=e===null?Object.create(e):(t.prototype=e.prototype,new t)}var Yr=function(){return Yr=Object.assign||function(n){for(var e,t=1,s=arguments.length;t<s;t++)for(var r in e=arguments[t])Object.prototype.hasOwnProperty.call(e,r)&&(n[r]=e[r]);return n},Yr.apply(this,arguments)};function Zn(n,e,t,s){return new(t||(t=Promise))((function(r,i){function o(c){try{l(s.next(c))}catch(u){i(u)}}function a(c){try{l(s.throw(c))}catch(u){i(u)}}function l(c){var u;c.done?r(c.value):(u=c.value,u instanceof t?u:new t((function(h){h(u)}))).then(o,a)}l((s=s.apply(n,[])).next())}))}function es(n,e){var t,s,r,i,o={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]};return i={next:a(0),throw:a(1),return:a(2)},typeof Symbol=="function"&&(i[Symbol.iterator]=function(){return this}),i;function a(l){return function(c){return(function(u){if(t)throw new TypeError("Generator is already executing.");for(;o;)try{if(t=1,s&&(r=2&u[0]?s.return:u[0]?s.throw||((r=s.return)&&r.call(s),0):s.next)&&!(r=r.call(s,u[1])).done)return r;switch(s=0,r&&(u=[2&u[0],r.value]),u[0]){case 0:case 1:r=u;break;case 4:return o.label++,{value:u[1],done:!1};case 5:o.label++,s=u[1],u=[0];continue;case 7:u=o.ops.pop(),o.trys.pop();continue;default:if(r=o.trys,!((r=r.length>0&&r[r.length-1])||u[0]!==6&&u[0]!==2)){o=0;continue}if(u[0]===3&&(!r||u[1]>r[0]&&u[1]<r[3])){o.label=u[1];break}if(u[0]===6&&o.label<r[1]){o.label=r[1],r=u;break}if(r&&o.label<r[2]){o.label=r[2],o.ops.push(u);break}r[2]&&o.ops.pop(),o.trys.pop();continue}u=e.call(n,o)}catch(h){u=[6,h],s=0}finally{t=r=0}if(5&u[0])throw u[1];return{value:u[0]?u[1]:void 0,done:!0}})([l,c])}}}function J0(n){return n instanceof SVGAnimatedLength?n.baseVal.value:n}function DS(n){return Zn(this,void 0,void 0,(function(){var e,t;return es(this,(function(s){switch(s.label){case 0:return e=document.createElement("canvas"),n instanceof cn?[4,vc(n,e)]:[3,2];case 1:return s.sent(),[3,3];case 2:e.width=J0(n.width),e.height=J0(n.height),t=e.getContext("2d"),n instanceof ImageData?t.putImageData(n,0,0):t.drawImage(n,0,0),s.label=3;case 3:return[2,e]}}))}))}function yL(n){return Zn(this,void 0,void 0,(function(){var e,t,s,r,i,o;return es(this,(function(a){switch(a.label){case 0:return n instanceof cn?(e=n.shape.slice(0,2),t=e[0],s=e[1],r=ImageData.bind,[4,vc(n)]):[3,2];case 1:return[2,new(r.apply(ImageData,[void 0,a.sent(),s,t]))];case 2:return i=document.createElement("canvas"),o=i.getContext("2d"),i.width=J0(n.width),i.height=J0(n.height),o.drawImage(n,0,0),[2,o.getImageData(0,0,i.width,i.height)]}}))}))}function xL(n){return Zn(this,void 0,void 0,(function(){var e,t;return es(this,(function(s){switch(s.label){case 0:return n instanceof SVGImageElement||n instanceof OffscreenCanvas?[4,DS(n)]:[3,2];case 1:return t=s.sent(),[3,3];case 2:t=n,s.label=3;case 3:return e=t,[2,Fh(e,4)]}}))}))}function J1(n){if(n<0||n>=256)throw new Error("Mask value must be in range [0, 255] but got "+n);if(!Number.isInteger(n))throw new Error("Mask value must be an integer but got "+n)}function bL(n){var e=n.shape[2],t=yl(n,2),s=ae(t,[-1]);return _u(s,e)}function $y(n,e){return ue((function(){return Ze(ii(n,Bt(e)),"int32")}))}function M3e(n,e){var t=e.shape,s=t[0],r=t[1],i=t[2];return ue((function(){var o=bL(e),a=Kn(Cl(0,i,1,"int32"),1),l=Ze(An(o,a),"int32"),c=ae(l,[s,r]),u=$e(c,Bt(1,"int32"));return gt((function(h,d){return ne(h,d)})(u,n),Bt(1,"int32"))}))}var vL=(function(){function n(e,t){this.model=e,this.outputStride=t;var s=this.model.inputs[0].shape;z(s[1]===-1&&s[2]===-1,(function(){return"Input shape ["+s[1]+", "+s[2]+"] must both be equal to or -1"}))}return n.prototype.predict=function(e){var t=this;return ue((function(){var s=t.preprocessInput(Ze(e,"float32")),r=Kn(s,0),i=t.model.predict(r).map((function(a){return Ht(a,[0])})),o=t.nameOutputResults(i);return{heatmapScores:Tr(o.heatmap),offsets:o.offsets,displacementFwd:o.displacementFwd,displacementBwd:o.displacementBwd,segmentation:o.segmentation,partHeatmaps:o.partHeatmaps,longOffsets:o.longOffsets,partOffsets:o.partOffsets}}))},n.prototype.dispose=function(){this.model.dispose()},n})(),D3e=(function(n){function e(){return n!==null&&n.apply(this,arguments)||this}return AL(e,n),e.prototype.preprocessInput=function(t){return ue((function(){return gt(rt(t,127.5),1)}))},e.prototype.nameOutputResults=function(t){return{offsets:t[0],segmentation:t[1],partHeatmaps:t[2],longOffsets:t[3],heatmap:t[4],displacementFwd:t[5],displacementBwd:t[6],partOffsets:t[7]}},e})(vL),Z1=["nose","leftEye","rightEye","leftEar","rightEar","leftShoulder","rightShoulder","leftElbow","rightElbow","leftWrist","rightWrist","leftHip","rightHip","leftKnee","rightKnee","leftAnkle","rightAnkle"],Uo=Z1.length,Z0=Z1.reduce((function(n,e,t){return n[e]=t,n}),{});[["leftHip","leftShoulder"],["leftElbow","leftShoulder"],["leftElbow","leftWrist"],["leftHip","leftKnee"],["leftKnee","leftAnkle"],["rightHip","rightShoulder"],["rightElbow","rightShoulder"],["rightElbow","rightWrist"],["rightHip","rightKnee"],["rightKnee","rightAnkle"],["leftShoulder","rightShoulder"],["leftHip","rightHip"]].map((function(n){var e=n[0],t=n[1];return[Z0[e],Z0[t]]}));function FS(n,e,t){var s=n[0],r=n[1],i=e[0],o=e[1],a=t.top,l=t.bottom;return[o/(t.left+t.right+r),i/(a+l+s)]}function CL(n,e,t,s){return{y:s.get(n,e,t),x:s.get(n,e,t+Uo)}}function IL(n,e,t){var s=CL(n.heatmapY,n.heatmapX,n.id,t),r=s.y,i=s.x;return{x:n.heatmapX*e+i,y:n.heatmapY*e+r}}function DT(n,e,t){return n<e?e:n>t?t:n}function FT(n,e){return{x:n.x+e.x,y:n.y+e.y}}function F3e(n,e,t){t===void 0&&(t=.3);for(var s=0,r=0,i=0;i<n.length;i++)e.keypoints[i].score>t&&(r+=1,s+=Math.pow(n[i].x-e.keypoints[i].position.x,2)+Math.pow(n[i].y-e.keypoints[i].position.y,2));return r===0?s=1/0:s/=r,s}function $3e(n,e,t,s,r,i,o){for(var a=o[0],l=o[1],c=t(n),u=c.y*s+c.x,h=r[Uo*(2*u)+e],d=r[Uo*(2*u+1)+e],f=n.y+h,p=n.x+d,A=0;A<i;A++){f=Math.min(f,a-1);var m=t({x:p=Math.min(p,l-1),y:f}),g=m.y*s+m.x;f+=h=r[Uo*(2*g)+e],p+=d=r[Uo*(2*g+1)+e]}return{x:p,y:f}}function wL(n,e,t,s,r,i,o,a,l,c){for(var u=r[0],h=r[1],d=i[0],f=i[1],p=a[0],A=a[1],m=[],g=function(M){return(function(T,k,B,L){var U=k[0],V=k[1],W=B[0],H=B[1],ee=Math.round(((U+T.y+1)*H-1)/L);return{x:Math.round(((V+T.x+1)*W-1)/L),y:ee}})(M,[u,h],[d,f],l)},x=0;x<s;x++){var v=$3e(n,x,g,o,e,c,[p,A]);m.push(v)}for(var b=-1,w=1/0,_=0;_<t.length;_++){var N=F3e(m,t[_]);N<w&&(b=_,w=N)}return b}function SL(n,e){var t=n[0],s=n[1];return[Math.round((s-1)/e+1),Math.round((t-1)/e+1)]}function EL(n,e,t,s,r,i,o,a,l,c,u){for(var h=o[0],d=o[1],f=n.shape,p=f[0],A=f[1],m=e.shape.slice(0,2),g=m[0],x=m[1],v=ae(e,[g,x,2,Uo]),b=new Float32Array(u*Uo*3).fill(0),w=0;w<t.length;w++)for(var _=w*Uo*3,N=t[w],M=0;M<Uo;M++){var T=N.keypoints[M],k=_+3*M;b[k]=T.score,b[k+1]=T.position.y,b[k+2]=T.position.x}var B=FS([s,r],[h,d],a),L=B[0],U=B[1],V=ao(b,[u,Uo,3]),W=a.top,H=a.left,ee={variableNames:["segmentation","longOffsets","poses"],outputShape:[p,A],userCode:`
    int convertToPositionInOutput(int pos, int pad, float scale, int stride) {
      return round(((float(pos + pad) + 1.0) * scale - 1.0) / float(stride));
    }

    float convertToPositionInOutputFloat(
        int pos, int pad, float scale, int stride) {
      return ((float(pos + pad) + 1.0) * scale - 1.0) / float(stride);
    }

    float dist(float x1, float y1, float x2, float y2) {
      return pow(x1 - x2, 2.0) + pow(y1 - y2, 2.0);
    }

    float sampleLongOffsets(float h, float w, int d, int k) {
      float fh = fract(h);
      float fw = fract(w);
      int clH = int(ceil(h));
      int clW = int(ceil(w));
      int flH = int(floor(h));
      int flW = int(floor(w));
      float o11 = getLongOffsets(flH, flW, d, k);
      float o12 = getLongOffsets(flH, clW, d, k);
      float o21 = getLongOffsets(clH, flW, d, k);
      float o22 = getLongOffsets(clH, clW, d, k);
      float o1 = mix(o11, o12, fw);
      float o2 = mix(o21, o22, fw);
      return mix(o1, o2, fh);
    }

    int findNearestPose(int h, int w) {
      float prob = getSegmentation(h, w);
      if (prob < 1.0) {
        return -1;
      }

      // Done(Tyler): convert from output space h/w to strided space.
      float stridedH = convertToPositionInOutputFloat(
        h, `+W+", "+U+", "+i+`);
      float stridedW = convertToPositionInOutputFloat(
        w, `+H+", "+L+", "+i+`);

      float minDist = 1000000.0;
      int iMin = -1;
      for (int i = 0; i < `+u+`; i++) {
        float curDistSum = 0.0;
        int numKpt = 0;
        for (int k = 0; k < `+Uo+`; k++) {
          float dy = sampleLongOffsets(stridedH, stridedW, 0, k);
          float dx = sampleLongOffsets(stridedH, stridedW, 1, k);

          float y = float(h) + dy;
          float x = float(w) + dx;

          for (int s = 0; s < `+l+`; s++) {
            int yRounded = round(min(y, float(`+(s-1)+`)));
            int xRounded = round(min(x, float(`+(r-1)+`)));

            float yStrided = convertToPositionInOutputFloat(
              yRounded, `+W+", "+U+", "+i+`);
            float xStrided = convertToPositionInOutputFloat(
              xRounded, `+H+", "+L+", "+i+`);

            float dy = sampleLongOffsets(yStrided, xStrided, 0, k);
            float dx = sampleLongOffsets(yStrided, xStrided, 1, k);

            y = y + dy;
            x = x + dx;
          }

          float poseScore = getPoses(i, k, 0);
          float poseY = getPoses(i, k, 1);
          float poseX = getPoses(i, k, 2);
          if (poseScore > `+c+`) {
            numKpt = numKpt + 1;
            curDistSum = curDistSum + dist(x, y, poseX, poseY);
          }
        }
        if (numKpt > 0 && curDistSum / float(numKpt) < minDist) {
          minDist = curDistSum / float(numKpt);
          iMin = i;
        }
      }
      return iMin;
    }

    void main() {
        ivec2 coords = getOutputCoords();
        int nearestPose = findNearestPose(coords[0], coords[1]);
        setOutput(float(nearestPose));
      }
  `};return Al().compileAndRun(ee,[n,v,V])}function _L(){return Cu()==="webgl"}function P3e(n,e,t,s,r,i,o,a,l,c,u,h){var d=o[0],f=o[1];return l===void 0&&(l=.2),c===void 0&&(c=8),u===void 0&&(u=.3),h===void 0&&(h=10),Zn(this,void 0,void 0,(function(){var p,A,m,g,x;return es(this,(function(v){switch(v.label){case 0:return p=t.filter((function(b){return b.score>=l})),_L()?(m=ue((function(){var b=EL(n,e,p,s,r,i,[d,f],a,c,u,h),w=lr().makeTensorFromDataId(b.dataId,b.shape,b.dtype);return p.map((function(_,N){return(function(M,T){return ue((function(){return Ze(zi(M,Bt(T)),"int32")}))})(w,N)}))})),[4,Promise.all(m.map((function(b){return b.data()})))]):[3,2];case 1:return A=v.sent(),m.forEach((function(b){return b.dispose()})),[3,5];case 2:return[4,n.data()];case 3:return g=v.sent(),[4,e.data()];case 4:x=v.sent(),A=(function(b,w,_,N,M,T,k,B,L,U){var V=k[0],W=k[1];U===void 0&&(U=5);for(var H=_.map((function(ge){return new Uint8Array(N*M).fill(0)})),ee=B.top,K=B.left,te=FS([N,M],[V,W],B),le=te[0],fe=te[1],Ie=SL([V,W],T)[0],Se=0;Se<N;Se+=1)for(var De=0;De<M;De+=1){var Be=Se*M+De;if(b[Be]===1){var he=wL({x:De,y:Se},w,_,U,[ee,K],[le,fe],Ie,[N,M],T,L);he>=0&&(H[he][Be]=1)}}return H})(g,x,p,s,r,i,[d,f],a,c),v.label=5;case 5:return[2,A.map((function(b,w){return{data:b,pose:p[w],width:r,height:s}}))]}}))}))}function L3e(n,e,t,s,r,i,o,a,l,c,u,h,d){var f=a[0],p=a[1];return c===void 0&&(c=.2),u===void 0&&(u=8),h===void 0&&(h=.3),d===void 0&&(d=10),Zn(this,void 0,void 0,(function(){var A,m,g,x,v,b;return es(this,(function(w){switch(w.label){case 0:return A=s.filter((function(_){return _.score>=c})),_L()?(g=ue((function(){var _=EL(n,e,A,r,i,o,[f,p],l,u,h,d),N=lr().makeTensorFromDataId(_.dataId,_.shape,_.dtype);return A.map((function(M,T){return(function(k,B,L){return ue((function(){return gt(ne(Ze(zi(k,Bt(L)),"int32"),$e(B,1)),1)}))})(N,t,T)}))})),[4,Promise.all(g.map((function(_){return _.data()})))]):[3,2];case 1:return m=w.sent(),g.forEach((function(_){return _.dispose()})),[3,6];case 2:return[4,n.data()];case 3:return x=w.sent(),[4,e.data()];case 4:return v=w.sent(),[4,t.data()];case 5:b=w.sent(),m=(function(_,N,M,T,k,B,L,U,V,W,H){var ee=U[0],K=U[1];H===void 0&&(H=5);for(var te=T.map((function(Qe){return new Int32Array(k*B).fill(-1)})),le=V.top,fe=V.left,Ie=FS([k,B],[ee,K],V),Se=Ie[0],De=Ie[1],Be=SL([ee,K],L)[0],he=0;he<k;he+=1)for(var ge=0;ge<B;ge+=1){var Ne=he*B+ge;if(_[Ne]===1){var Oe=wL({x:ge,y:he},N,T,H,[le,fe],[Se,De],Be,[k,B],L,W);Oe>=0&&(te[Oe][Ne]=M[Ne])}}return te})(x,v,b,A,r,i,o,[f,p],l,u),w.label=6;case 6:return[2,m.map((function(_,N){return{pose:A[N],data:_,height:r,width:i}}))]}}))}))}function kb(n){return Math.floor(n/2)}var O3e=(function(){function n(e,t){this.priorityQueue=new Array(e),this.numberOfElements=-1,this.getElementValue=t}return n.prototype.enqueue=function(e){this.priorityQueue[++this.numberOfElements]=e,this.swim(this.numberOfElements)},n.prototype.dequeue=function(){var e=this.priorityQueue[0];return this.exchange(0,this.numberOfElements--),this.sink(0),this.priorityQueue[this.numberOfElements+1]=null,e},n.prototype.empty=function(){return this.numberOfElements===-1},n.prototype.size=function(){return this.numberOfElements+1},n.prototype.all=function(){return this.priorityQueue.slice(0,this.numberOfElements+1)},n.prototype.max=function(){return this.priorityQueue[0]},n.prototype.swim=function(e){for(;e>0&&this.less(kb(e),e);)this.exchange(e,kb(e)),e=kb(e)},n.prototype.sink=function(e){for(;2*e<=this.numberOfElements;){var t=2*e;if(t<this.numberOfElements&&this.less(t,t+1)&&t++,!this.less(e,t))break;this.exchange(e,t),e=t}},n.prototype.getValueAt=function(e){return this.getElementValue(this.priorityQueue[e])},n.prototype.less=function(e,t){return this.getValueAt(e)<this.getValueAt(t)},n.prototype.exchange=function(e,t){var s=this.priorityQueue[e];this.priorityQueue[e]=this.priorityQueue[t],this.priorityQueue[t]=s},n})();function Q3e(n,e,t,s,r,i){for(var o=i.shape,a=o[0],l=o[1],c=!0,u=Math.max(t-r,0),h=Math.min(t+r+1,a),d=u;d<h;++d){for(var f=Math.max(s-r,0),p=Math.min(s+r+1,l),A=f;A<p;++A)if(i.get(d,A,n)>e){c=!1;break}if(!c)break}return c}var TL=[["nose","leftEye"],["leftEye","leftEar"],["nose","rightEye"],["rightEye","rightEar"],["nose","leftShoulder"],["leftShoulder","leftElbow"],["leftElbow","leftWrist"],["leftShoulder","leftHip"],["leftHip","leftKnee"],["leftKnee","leftAnkle"],["nose","rightShoulder"],["rightShoulder","rightElbow"],["rightElbow","rightWrist"],["rightShoulder","rightHip"],["rightHip","rightKnee"],["rightKnee","rightAnkle"]].map((function(n){var e=n[0],t=n[1];return[Z0[e],Z0[t]]})),Nb=TL.map((function(n){return n[1]})),$T=TL.map((function(n){return n[0]}));function Rb(n,e,t,s){return{y:DT(Math.round(n.y/e),0,t-1),x:DT(Math.round(n.x/e),0,s-1)}}function PT(n,e,t,s,r,i,o,a){a===void 0&&(a=2);for(var l=s.shape,c=l[0],u=l[1],h=(function(x,v,b){var w=b.shape[2]/2;return{y:b.get(v.y,v.x,x),x:b.get(v.y,v.x,w+x)}})(n,Rb(e.position,i,c,u),o),d=FT(e.position,h),f=0;f<a;f++){var p=Rb(d,i,c,u),A=CL(p.y,p.x,t,r);d=FT({x:p.x*i,y:p.y*i},{x:A.x,y:A.y})}var m=Rb(d,i,c,u),g=s.get(m.y,m.x,t);return{position:d,part:Z1[t],score:g}}function U3e(n,e,t,s,r,i){var o=e.shape[2],a=Nb.length,l=new Array(o),c=n.part,u=n.score,h=IL(c,s,t);l[c.id]={score:u,part:Z1[c.id],position:h};for(var d=a-1;d>=0;--d){var f=Nb[d],p=$T[d];l[f]&&!l[p]&&(l[p]=PT(d,l[f],p,e,t,s,i))}for(d=0;d<a;++d)f=$T[d],p=Nb[d],l[f]&&!l[p]&&(l[p]=PT(d,l[f],p,e,t,s,r));return l}function BL(n,e,t,s){var r=t.x,i=t.y;return n.some((function(o){var a,l,c,u,h,d,f=o.keypoints[s].position;return a=i,l=r,c=f.y,u=f.x,(h=c-a)*h+(d=u-l)*d<=e}))}function z3e(n,e,t){var s=t.reduce((function(r,i,o){var a=i.position,l=i.score;return BL(n,e,a,o)||(r+=l),r}),0);return s/t.length}function Py(n,e,t,s,r,i,o,a){o===void 0&&(o=.5),a===void 0&&(a=20);for(var l=[],c=(function(p,A,m){for(var g=m.shape,x=g[0],v=g[1],b=g[2],w=new O3e(x*v*b,(function(k){return k.score})),_=0;_<x;++_)for(var N=0;N<v;++N)for(var M=0;M<b;++M){var T=m.get(_,N,M);T<p||Q3e(M,T,_,N,A,m)&&w.enqueue({score:T,part:{heatmapY:_,heatmapX:N,id:M}})}return w})(o,1,n),u=a*a;l.length<i&&!c.empty();){var h=c.dequeue();if(!BL(l,u,IL(h.part,r,e),h.part.id)){var d=U3e(h,n,e,r,t,s),f=z3e(l,u,d);l.push({keypoints:d,score:f})}}return l}var Kp,G3e=[-123.15,-115.9,-103.06],V3e=(function(n){function e(){return n!==null&&n.apply(this,arguments)||this}return AL(e,n),e.prototype.preprocessInput=function(t){return $e(t,G3e)},e.prototype.nameOutputResults=function(t){var s=t[0],r=t[1],i=t[2],o=t[3],a=t[4],l=t[5];return{offsets:a,segmentation:t[6],partHeatmaps:l,longOffsets:o,heatmap:i,displacementFwd:r,displacementBwd:s,partOffsets:t[7]}},e})(vL),LT="https://storage.googleapis.com/tfjs-models/savedmodel/bodypix/resnet50/",OT="https://storage.googleapis.com/tfjs-models/savedmodel/bodypix/mobilenet/";function um(n){if(typeof HTMLCanvasElement<"u"&&n instanceof HTMLCanvasElement||typeof OffscreenCanvas<"u"&&n instanceof OffscreenCanvas||typeof HTMLImageElement<"u"&&n instanceof HTMLImageElement)return(function(e){if("offsetHeight"in e&&e.offsetHeight!==0&&"offsetWidth"in e&&e.offsetWidth!==0)return[e.offsetHeight,e.offsetWidth];if(e.height!=null&&e.width!=null)return[e.height,e.width];throw new Error("HTMLImageElement must have height and width attributes set.")})(n);if(typeof ImageData<"u"&&n instanceof ImageData)return[n.height,n.width];if(typeof HTMLVideoElement<"u"&&n instanceof HTMLVideoElement)return(function(e){return e.hasAttribute("height")&&e.hasAttribute("width")?[e.height,e.width]:[e.videoHeight,e.videoWidth]})(n);if(n instanceof cn)return[n.shape[0],n.shape[1]];throw new Error("error: Unknown input type: "+n+".")}function QT(n,e){return(function(t,s){return(t-1)%s==0})(n,e)?n:Math.floor(n/e)*e+1}var hm={low:"low",medium:"medium",high:"high",full:"full"},W3e=((Kp={})[hm.low]=.25,Kp[hm.medium]=.5,Kp[hm.high]=.75,Kp[hm.full]=1,Kp);function Ly(n,e,t){var s=t[0],r=t[1],i=(function(o){if(typeof o=="string"){var a=W3e[o];return z(typeof a=="number",(function(){return"string value of inputResolution must be one of "+Object.values(hm).join(",")+" but was "+o+"."})),a}return z(typeof o=="number"&&o<=2&&o>=.1,(function(){return"inputResolution must be a string or number between 0.1 and 2, but was "+o})),o})(n);return[QT(s*i,e),QT(r*i,e)]}function wd(n,e,t,s,r){var i=e[0],o=e[1],a=t[0],l=t[1],c=s[0],u=c[0],h=c[1],d=s[1],f=d[0],p=d[1];return ue((function(){var A=Is.resizeBilinear(n,[a,l],!0);return A=Tr(A),(function(m,g,x){var v=g[0],b=g[1],w=x[0],_=w[0],N=w[1],M=x[1],T=M[0],k=M[1];return ue((function(){var B=Kn(m);return Ht(Is.cropAndResize(B,[[_/(v+_+N-1),T/(b+T+k-1),(_+v-1)/(v+_+N-1),(T+b-1)/(b+T+k-1)]],[0],[v,b]),[0])}))})(A,[i,o],[[u,h],[f,p]])}))}function Oy(n,e){var t=e[0],s=e[1],r=um(n),i=r[0],o=r[1],a=s/t,l=[0,0,0,0],c=l[0],u=l[1],h=l[2],d=l[3];o/i<a?(c=0,u=0,h=Math.round(.5*(a*i-o)),d=Math.round(.5*(a*i-o))):(c=Math.round(.5*(1/a*o-i)),u=Math.round(.5*(1/a*o-i)),h=0,d=0);var f=ue((function(){var p=(function(A){return A instanceof cn?A:Fh(A)})(n);return p=rw(p,[[c,u],[h,d],[0,0]]),Is.resizeBilinear(p,[t,s])}));return{resized:f,padding:{top:c,left:h,right:d,bottom:u}}}function Qy(n){return Zn(this,void 0,void 0,(function(){return es(this,(function(e){return[2,Promise.all(n.map((function(t){return t.buffer()})))]}))}))}function Uy(n,e,t,s,r){var i=e[0],o=e[1],a=t[0],l=t[1],c=(function(u,h,d,f,p){return f===void 0&&(f=0),p===void 0&&(p=0),d===1&&h===1&&f===0&&p===0?u:u.map((function(A){return(function(m,g,x,v,b){return v===void 0&&(v=0),b===void 0&&(b=0),{score:m.score,keypoints:m.keypoints.map((function(w){var _=w.score,N=w.part,M=w.position;return{score:_,part:N,position:{x:M.x*x+b,y:M.y*g+v}}}))}})(A,h,d,f,p)}))})(n,(i+s.top+s.bottom)/a,(o+s.left+s.right)/l,-s.top,-s.left);return r?(function(u,h){return h<=0?u:u.map((function(d){return(function(f,p){return{score:f.score,keypoints:f.keypoints.map((function(A){var m=A.score,g=A.part,x=A.position;return{score:m,part:g,position:{x:p-1-x.x,y:x.y}}}))}})(d,h)}))})(c,o):c}var UT={architecture:"MobileNetV1",outputStride:16,quantBytes:4,multiplier:.75},zT=["MobileNetV1","ResNet50"],GT={MobileNetV1:[8,16,32],ResNet50:[32,16]},VT={MobileNetV1:[.5,.75,1],ResNet50:[1]},WT=[1,2,4],zy={flipHorizontal:!1,internalResolution:"medium",segmentationThreshold:.7,maxDetections:10,scoreThreshold:.4,nmsRadius:20},Gy={flipHorizontal:!1,internalResolution:"medium",segmentationThreshold:.7,maxDetections:10,scoreThreshold:.4,nmsRadius:20,minKeypointScore:.3,refineSteps:10};function HT(n){var e=n.segmentationThreshold,t=n.maxDetections,s=n.scoreThreshold,r=n.nmsRadius;if(e<0||e>1)throw new Error("segmentationThreshold "+e+". Should be in range [0.0, 1.0]");if(t<=0)throw new Error("Invalid maxDetections "+t+". Should be > 0");if(s<0||s>1)throw new Error("Invalid scoreThreshold "+s+". Should be in range [0.0, 1.0]");if(r<=0)throw new Error("Invalid nmsRadius "+r+".")}function qT(n){var e=n.segmentationThreshold,t=n.maxDetections,s=n.scoreThreshold,r=n.nmsRadius,i=n.minKeypointScore,o=n.refineSteps;if(e<0||e>1)throw new Error("segmentationThreshold "+e+". Should be in range [0.0, 1.0]");if(t<=0)throw new Error("Invalid maxDetections "+t+". Should be > 0");if(s<0||s>1)throw new Error("Invalid scoreThreshold "+s+". Should be in range [0.0, 1.0]");if(r<=0)throw new Error("Invalid nmsRadius "+r+".");if(i<0||i>1)throw new Error("Invalid minKeypointScore "+i+".Should be in range [0.0, 1.0]");if(o<=0||o>20)throw new Error("Invalid refineSteps "+o+".Should be in range [1, 20]")}var kL=(function(){function n(e){this.baseModel=e}return n.prototype.predictForPersonSegmentation=function(e){var t=this.baseModel.predict(e);return{segmentLogits:t.segmentation,heatmapScores:t.heatmapScores,offsets:t.offsets,displacementFwd:t.displacementFwd,displacementBwd:t.displacementBwd}},n.prototype.predictForPersonSegmentationAndPart=function(e){var t=this.baseModel.predict(e);return{segmentLogits:t.segmentation,partHeatmapLogits:t.partHeatmaps,heatmapScores:t.heatmapScores,offsets:t.offsets,displacementFwd:t.displacementFwd,displacementBwd:t.displacementBwd}},n.prototype.predictForMultiPersonInstanceSegmentationAndPart=function(e){var t=this.baseModel.predict(e);return{segmentLogits:t.segmentation,longOffsets:t.longOffsets,heatmapScores:t.heatmapScores,offsets:t.offsets,displacementFwd:t.displacementFwd,displacementBwd:t.displacementBwd,partHeatmaps:t.partHeatmaps}},n.prototype.segmentPersonActivation=function(e,t,s){var r=this;s===void 0&&(s=.5);var i=um(e),o=i[0],a=i[1],l=Ly(t,this.baseModel.outputStride,[o,a]),c=Oy(e,l),u=c.resized,h=c.padding,d=ue((function(){var x=r.predictForPersonSegmentation(u),v=x.segmentLogits,b=x.heatmapScores,w=x.offsets,_=x.displacementFwd,N=x.displacementBwd,M=u.shape,T=M[0],k=M[1],B=wd(v,[o,a],[T,k],[[h.top,h.bottom],[h.left,h.right]]);return{segmentation:$y(Ht(B),s),heatmapScores:b,offsets:w,displacementFwd:_,displacementBwd:N}})),f=d.segmentation,p=d.heatmapScores,A=d.offsets,m=d.displacementFwd,g=d.displacementBwd;return u.dispose(),{segmentation:f,heatmapScores:p,offsets:A,displacementFwd:m,displacementBwd:g,padding:h,internalResolutionHeightAndWidth:l}},n.prototype.segmentPerson=function(e,t){return t===void 0&&(t=zy),Zn(this,void 0,void 0,(function(){var s,r,i,o,a,l,c,u,h,d,f,p,A,m,g,x,v,b;return es(this,(function(w){switch(w.label){case 0:return HT(t=Yr(Yr({},zy),t)),s=this.segmentPersonActivation(e,t.internalResolution,t.segmentationThreshold),r=s.segmentation,i=s.heatmapScores,o=s.offsets,a=s.displacementFwd,l=s.displacementBwd,c=s.padding,u=s.internalResolutionHeightAndWidth,h=r.shape,d=h[0],f=h[1],[4,r.data()];case 1:return p=w.sent(),r.dispose(),[4,Qy([i,o,a,l])];case 2:return A=w.sent(),m=A[0],g=A[1],x=A[2],v=A[3],b=Uy(b=Py(m,g,x,v,this.baseModel.outputStride,t.maxDetections,t.scoreThreshold,t.nmsRadius),[d,f],u,c,!1),i.dispose(),o.dispose(),a.dispose(),l.dispose(),[2,{height:d,width:f,data:p,allPoses:b}]}}))}))},n.prototype.segmentMultiPerson=function(e,t){return t===void 0&&(t=Gy),Zn(this,void 0,void 0,(function(){var s,r,i,o,a,l,c,u,h,d,f,p,A,m,g,x,v,b,w,_,N,M=this;return es(this,(function(T){switch(T.label){case 0:return qT(t=Yr(Yr({},Gy),t)),s=um(e),r=s[0],i=s[1],o=Ly(t.internalResolution,this.baseModel.outputStride,[r,i]),a=Oy(e,o),l=a.resized,c=a.padding,u=ue((function(){var k,B=M.predictForMultiPersonInstanceSegmentationAndPart(l),L=B.segmentLogits,U=B.longOffsets,V=B.heatmapScores,W=B.offsets,H=B.displacementFwd,ee=B.displacementBwd,K=wd(L,[r,i],o,[[c.top,c.bottom],[c.left,c.right]]);return k=U,{segmentation:$y(Ht(K),t.segmentationThreshold),longOffsets:k,heatmapScoresRaw:V,offsetsRaw:W,displacementFwdRaw:H,displacementBwdRaw:ee}})),h=u.segmentation,d=u.longOffsets,f=u.heatmapScoresRaw,p=u.offsetsRaw,A=u.displacementFwdRaw,m=u.displacementBwdRaw,[4,Qy([f,p,A,m])];case 1:return g=T.sent(),x=g[0],v=g[1],b=g[2],w=g[3],_=Uy(_=Py(x,v,b,w,this.baseModel.outputStride,t.maxDetections,t.scoreThreshold,t.nmsRadius),[r,i],o,c,!1),[4,P3e(h,d,_,r,i,this.baseModel.outputStride,o,c,t.scoreThreshold,t.refineSteps,t.minKeypointScore,t.maxDetections)];case 2:return N=T.sent(),l.dispose(),h.dispose(),d.dispose(),f.dispose(),p.dispose(),A.dispose(),m.dispose(),[2,N]}}))}))},n.prototype.segmentPersonPartsActivation=function(e,t,s){var r=this;s===void 0&&(s=.5);var i=um(e),o=i[0],a=i[1],l=Ly(t,this.baseModel.outputStride,[o,a]),c=Oy(e,l),u=c.resized,h=c.padding,d=ue((function(){var x=r.predictForPersonSegmentationAndPart(u),v=x.segmentLogits,b=x.partHeatmapLogits,w=x.heatmapScores,_=x.offsets,N=x.displacementFwd,M=x.displacementBwd,T=u.shape,k=T[0],B=T[1],L=wd(v,[o,a],[k,B],[[h.top,h.bottom],[h.left,h.right]]),U=wd(b,[o,a],[k,B],[[h.top,h.bottom],[h.left,h.right]]);return{partSegmentation:M3e($y(Ht(L),s),U),heatmapScores:w,offsets:_,displacementFwd:N,displacementBwd:M}})),f=d.partSegmentation,p=d.heatmapScores,A=d.offsets,m=d.displacementFwd,g=d.displacementBwd;return u.dispose(),{partSegmentation:f,heatmapScores:p,offsets:A,displacementFwd:m,displacementBwd:g,padding:h,internalResolutionHeightAndWidth:l}},n.prototype.segmentPersonParts=function(e,t){return t===void 0&&(t=zy),Zn(this,void 0,void 0,(function(){var s,r,i,o,a,l,c,u,h,d,f,p,A,m,g,x,v,b;return es(this,(function(w){switch(w.label){case 0:return HT(t=Yr(Yr({},zy),t)),s=this.segmentPersonPartsActivation(e,t.internalResolution,t.segmentationThreshold),r=s.partSegmentation,i=s.heatmapScores,o=s.offsets,a=s.displacementFwd,l=s.displacementBwd,c=s.padding,u=s.internalResolutionHeightAndWidth,h=r.shape,d=h[0],f=h[1],[4,r.data()];case 1:return p=w.sent(),r.dispose(),[4,Qy([i,o,a,l])];case 2:return A=w.sent(),m=A[0],g=A[1],x=A[2],v=A[3],b=Uy(b=Py(m,g,x,v,this.baseModel.outputStride,t.maxDetections,t.scoreThreshold,t.nmsRadius),[d,f],u,c,!1),i.dispose(),o.dispose(),a.dispose(),l.dispose(),[2,{height:d,width:f,data:p,allPoses:b}]}}))}))},n.prototype.segmentMultiPersonParts=function(e,t){return t===void 0&&(t=Gy),Zn(this,void 0,void 0,(function(){var s,r,i,o,a,l,c,u,h,d,f,p,A,m,g,x,v,b,w,_,N,M,T=this;return es(this,(function(k){switch(k.label){case 0:return qT(t=Yr(Yr({},Gy),t)),s=um(e),r=s[0],i=s[1],o=Ly(t.internalResolution,this.baseModel.outputStride,[r,i]),a=Oy(e,o),l=a.resized,c=a.padding,u=ue((function(){var B=T.predictForMultiPersonInstanceSegmentationAndPart(l),L=B.segmentLogits,U=B.longOffsets,V=B.heatmapScores,W=B.offsets,H=B.displacementFwd,ee=B.displacementBwd,K=B.partHeatmaps,te=wd(L,[r,i],o,[[c.top,c.bottom],[c.left,c.right]]),le=wd(K,[r,i],o,[[c.top,c.bottom],[c.left,c.right]]),fe=U,Ie=$y(Ht(te),t.segmentationThreshold),Se=(function(De){var Be=De.shape,he=Be[0],ge=Be[1],Ne=Be[2];return ue((function(){var Oe=bL(De),Qe=Kn(Cl(0,Ne,1,"int32"),1),Ye=Ze(An(Oe,Qe),"int32");return ae(Ye,[he,ge])}))})(le);return{segmentation:Ie,longOffsets:fe,heatmapScoresRaw:V,offsetsRaw:W,displacementFwdRaw:H,displacementBwdRaw:ee,partSegmentation:Se}})),h=u.segmentation,d=u.longOffsets,f=u.heatmapScoresRaw,p=u.offsetsRaw,A=u.displacementFwdRaw,m=u.displacementBwdRaw,g=u.partSegmentation,[4,Qy([f,p,A,m])];case 1:return x=k.sent(),v=x[0],b=x[1],w=x[2],_=x[3],N=Uy(N=Py(v,b,w,_,this.baseModel.outputStride,t.maxDetections,t.scoreThreshold,t.nmsRadius),[r,i],o,c,!1),[4,L3e(h,d,g,N,r,i,this.baseModel.outputStride,o,c,t.scoreThreshold,t.refineSteps,t.minKeypointScore,t.maxDetections)];case 2:return M=k.sent(),l.dispose(),h.dispose(),d.dispose(),f.dispose(),p.dispose(),A.dispose(),m.dispose(),g.dispose(),[2,M]}}))}))},n.prototype.dispose=function(){this.baseModel.dispose()},n})();function H3e(n){return Zn(this,void 0,void 0,(function(){var e,t,s,r,i,o;return es(this,(function(a){switch(a.label){case 0:if(e=n.outputStride,t=n.quantBytes,s=n.multiplier,ZR==null)throw new Error(`Cannot find TensorFlow.js. If you are using a <script> tag, please also include @tensorflow/tfjs on the page before using this
        model.`);return r=(function(l,c,u){var h={1:"100",.75:"075",.5:"050"},d="model-stride"+l+".json";return u===4?OT+"float/"+h[c]+"/"+d:OT+"quant"+u+"/"+h[c]+"/"+d})(e,s,t),[4,Ma(n.modelUrl||r)];case 1:return i=a.sent(),o=new D3e(i,e),[2,new kL(o)]}}))}))}function q3e(n){return Zn(this,void 0,void 0,(function(){var e,t,s,r,i;return es(this,(function(o){switch(o.label){case 0:if(e=n.outputStride,t=n.quantBytes,ZR==null)throw new Error(`Cannot find TensorFlow.js. If you are using a <script> tag, please also include @tensorflow/tfjs on the page before using this
        model.`);return s=(function(a,l){var c="model-stride"+a+".json";return l===4?LT+"float/"+c:LT+"quant"+l+"/"+c})(e,t),[4,Ma(n.modelUrl||s)];case 1:return r=o.sent(),i=new V3e(r,e),[2,new kL(i)]}}))}))}function Y3e(n){return n===void 0&&(n=UT),Zn(this,void 0,void 0,(function(){return es(this,(function(e){return(n=(function(t){if((t=t||UT).architecture==null&&(t.architecture="MobileNetV1"),zT.indexOf(t.architecture)<0)throw new Error("Invalid architecture "+t.architecture+". Should be one of "+zT);if(t.outputStride==null&&(t.outputStride=16),GT[t.architecture].indexOf(t.outputStride)<0)throw new Error("Invalid outputStride "+t.outputStride+". Should be one of "+GT[t.architecture]+" for architecture "+t.architecture+".");if(t.multiplier==null&&(t.multiplier=1),VT[t.architecture].indexOf(t.multiplier)<0)throw new Error("Invalid multiplier "+t.multiplier+". Should be one of "+VT[t.architecture]+" for architecture "+t.architecture+".");if(t.quantBytes==null&&(t.quantBytes=4),WT.indexOf(t.quantBytes)<0)throw new Error("Invalid quantBytes "+t.quantBytes+". Should be one of "+WT+" for architecture "+t.architecture+".");return t})(n)).architecture==="ResNet50"?[2,q3e(n)]:n.architecture==="MobileNetV1"?[2,H3e(n)]:[2,null]}))}))}var QC=["left_face","right_face","left_upper_arm_front","left_upper_arm_back","right_upper_arm_front","right_upper_arm_back","left_lower_arm_front","left_lower_arm_back","right_lower_arm_front","right_lower_arm_back","left_hand","right_hand","torso_front","torso_back","left_upper_leg_front","left_upper_leg_back","right_upper_leg_front","right_upper_leg_back","left_lower_leg_front","left_lower_leg_back","right_lower_leg_front","right_lower_leg_back","left_feet","right_feet"],YT=(function(){function n(e){this.mask=e}return n.prototype.toCanvasImageSource=function(){return Zn(this,void 0,void 0,(function(){return es(this,(function(e){return[2,DS(this.mask)]}))}))},n.prototype.toImageData=function(){return Zn(this,void 0,void 0,(function(){return es(this,(function(e){return[2,this.mask]}))}))},n.prototype.toTensor=function(){return Zn(this,void 0,void 0,(function(){return es(this,(function(e){return[2,xL(this.mask)]}))}))},n.prototype.getUnderlyingType=function(){return"imagedata"},n})();function j3e(n){if(J1(n),n!==255)throw new Error("Foreground id must be 255 but got "+n);return"person"}function X3e(n){if(J1(n),n>=QC.length)throw new Error("Invalid body part value "+n);return QC[n]}var K3e=(function(){function n(e){this.bodyPixModel=e}return n.prototype.segmentPeople=function(e,t){return Zn(this,void 0,void 0,(function(){var s,r,i,o;return es(this,(function(a){switch(a.label){case 0:return e instanceof ImageBitmap&&((s=document.createElement("canvas")).getContext("2d").drawImage(e,0,0),e=s),t.segmentBodyParts?t.multiSegmentation?[4,this.bodyPixModel.segmentMultiPersonParts(e,t)]:[3,2]:[3,5];case 1:return i=a.sent(),[3,4];case 2:return[4,this.bodyPixModel.segmentPersonParts(e,t)];case 3:i=[a.sent()],a.label=4;case 4:return r=i.map((function(l){var c=l.data,u=l.width,h=l.height,d=new Uint8ClampedArray(u*h*4).fill(0);return c.forEach((function(f,p){f===-1?(d[4*p]=QC.length,d[4*p+3]=0):(d[4*p]=f,d[4*p+3]=255)})),{maskValueToLabel:X3e,mask:new YT(new ImageData(d,u,h))}})),[3,10];case 5:return t.multiSegmentation?[4,this.bodyPixModel.segmentMultiPerson(e,t)]:[3,7];case 6:return o=a.sent(),[3,9];case 7:return[4,this.bodyPixModel.segmentPerson(e,t)];case 8:o=[a.sent()],a.label=9;case 9:r=o.map((function(l){var c=l.data,u=l.width,h=l.height,d=new Uint8ClampedArray(u*h*4).fill(0);return c.forEach((function(f,p){f===0?(d[4*p]=0,d[4*p+3]=0):(d[4*p]=255,d[4*p+3]=255)})),{maskValueToLabel:j3e,mask:new YT(new ImageData(d,u,h))}})),a.label=10;case 10:return[2,r]}}))}))},n.prototype.dispose=function(){this.bodyPixModel.dispose()},n.prototype.reset=function(){},n})();function J3e(n){return Zn(this,void 0,void 0,(function(){return es(this,(function(e){return[2,Y3e(n).then((function(t){return new K3e(t)}))]}))}))}var jT={runtime:"mediapipe",modelType:"general"},Z3e=(function(){function n(e){this.mask=e}return n.prototype.toCanvasImageSource=function(){return Zn(this,void 0,void 0,(function(){return es(this,(function(e){return[2,this.mask]}))}))},n.prototype.toImageData=function(){return Zn(this,void 0,void 0,(function(){return es(this,(function(e){return[2,yL(this.mask)]}))}))},n.prototype.toTensor=function(){return Zn(this,void 0,void 0,(function(){return es(this,(function(e){return[2,xL(this.mask)]}))}))},n.prototype.getUnderlyingType=function(){return"canvasimagesource"},n})();function eTe(n){return J1(n),"person"}var tTe=(function(){function n(e){var t,s=this;this.selfieMode=!1;var r;this.selfieSegmentationSolution=new R3e.SelfieSegmentation({locateFile:(t=e.locateFile)!==null&&t!==void 0?t:function(i,o){return e.solutionPath?e.solutionPath.replace(/\/+$/,"")+"/"+i:o+"/"+i}}),e.modelType==="landscape"?r=1:r=0,this.selfieSegmentationSolution.setOptions({modelSelection:r,selfieMode:this.selfieMode}),this.selfieSegmentationSolution.onResults((function(i){s.segmentation=[{maskValueToLabel:eTe,mask:new Z3e(i.segmentationMask)}]}))}return n.prototype.segmentPeople=function(e,t){return Zn(this,void 0,void 0,(function(){var s,r;return es(this,(function(i){switch(i.label){case 0:return t&&t.flipHorizontal&&t.flipHorizontal!==this.selfieMode&&(this.selfieMode=t.flipHorizontal,this.selfieSegmentationSolution.setOptions({selfieMode:this.selfieMode})),e instanceof cn?(r=ImageData.bind,[4,vc(e)]):[3,2];case 1:return s=new(r.apply(ImageData,[void 0,i.sent(),e.shape[1],e.shape[0]])),[3,3];case 2:s=e,i.label=3;case 3:return e=s,[4,this.selfieSegmentationSolution.send({image:e})];case 4:return i.sent(),[2,this.segmentation]}}))}))},n.prototype.dispose=function(){this.selfieSegmentationSolution.close()},n.prototype.reset=function(){this.selfieSegmentationSolution.reset(),this.segmentation=null,this.selfieMode=!1},n.prototype.initialize=function(){return this.selfieSegmentationSolution.initialize()},n})();function nTe(n){return Zn(this,void 0,void 0,(function(){var e,t;return es(this,(function(s){switch(s.label){case 0:return e=(function(r){if(r==null)return Yr({},jT);var i=Yr({},r);return i.runtime="mediapipe",i.modelType==null&&(i.modelType=jT.modelType),i})(n),[4,(t=new tTe(e)).initialize()];case 1:return s.sent(),[2,t]}}))}))}function sTe(n,e,t,s){var r=n.width,i=n.height,o=1,a=Math.cos(n.rotation),l=Math.sin(n.rotation),c=n.xCenter,u=n.yCenter,h=1/e,d=1/t,f=new Array(16);return f[0]=r*a*o*h,f[1]=-i*l*h,f[2]=0,f[3]=(-.5*r*a*o+.5*i*l+c)*h,f[4]=r*l*o*d,f[5]=i*a*d,f[6]=0,f[7]=(-.5*i*a-.5*r*l*o+u)*d,f[8]=0,f[9]=0,f[10]=r*h,f[11]=0,f[12]=0,f[13]=0,f[14]=0,f[15]=1,(function(p){if(p.length!==16)throw new Error("Array length must be 16 but got "+p.length);return[[p[0],p[1],p[2],p[3]],[p[4],p[5],p[6],p[7]],[p[8],p[9],p[10],p[11]],[p[12],p[13],p[14],p[15]]]})(f)}function NL(n){return n instanceof cn?{height:n.shape[0],width:n.shape[1]}:{height:n.height,width:n.width}}function rTe(n,e){z(n.width!==0,(function(){return e+" width cannot be 0."})),z(n.height!==0,(function(){return e+" height cannot be 0."}))}function iTe(n,e){var t=(function(s,r,i,o){var a=r-s,l=o-i,c=l/a;return{scale:c,offset:i-s*c}})(0,255,e[0],e[1]);return ue((function(){return $e(ne(n,t.scale),t.offset)}))}function oTe(n,e,t){var s=e.outputTensorSize,r=e.outputTensorFloatRange,i=NL(n),o=(function(u,h){return{xCenter:.5*u.width,yCenter:.5*u.height,width:u.width,height:u.height,rotation:0}})(i),a=(function(u,h,d){return{top:0,left:0,right:0,bottom:0}})(),l=sTe(o,i.width,i.height),c=ue((function(){var u,h=(u=n)instanceof cn?u:Fh(u),d=ni((function(A,m,g){return rTe(g,"inputResolution"),[1/g.width*A[0][0]*m.width,1/g.height*A[0][1]*m.width,A[0][3]*m.width,1/g.width*A[1][0]*m.height,1/g.height*A[1][1]*m.height,A[1][3]*m.height,0,0]})(l,i,s),[1,8]),f="constant",p=Is.transform(Kn(Ze(h,"float32")),d,"bilinear",f,0,[s.height,s.width]);return r!=null?iTe(p,r):p}));return{imageTensor:c,padding:a,transformationMatrix:l}}function aTe(n,e,t){return ue((function(){var s=Ht(n,[0]),r=s.shape[2];if(r===1){var i=s;switch(e.activation){case"none":break;case"sigmoid":i=Tr(i);break;case"softmax":throw new Error("Softmax activation requires two channels.");default:throw new Error("Activation not supported ("+e.activation+")")}var o=t?Is.resizeBilinear(i,[t.height,t.width]):i;return Ht(o,[2])}throw new Error("Unsupported number of tensor channels "+r)}))}var XT={runtime:"tfjs",modelType:"general",modelUrl:"https://tfhub.dev/mediapipe/tfjs-model/selfie_segmentation/general/1"},KT={flipHorizontal:!1},lTe={outputTensorSize:{width:256,height:256},outputTensorFloatRange:[0,1]},cTe={outputTensorSize:{width:256,height:144},outputTensorFloatRange:[0,1]},uTe={activation:"none"},hTe=(function(){function n(e){this.mask=e}return n.prototype.toCanvasImageSource=function(){return Zn(this,void 0,void 0,(function(){return es(this,(function(e){return[2,DS(this.mask)]}))}))},n.prototype.toImageData=function(){return Zn(this,void 0,void 0,(function(){return es(this,(function(e){return[2,yL(this.mask)]}))}))},n.prototype.toTensor=function(){return Zn(this,void 0,void 0,(function(){return es(this,(function(e){return[2,this.mask]}))}))},n.prototype.getUnderlyingType=function(){return"tensor"},n})();function dTe(n){return J1(n),"person"}var eg,fTe=(function(){function n(e,t){this.modelType=e,this.model=t}return n.prototype.segmentPeople=function(e,t){return Zn(this,void 0,void 0,(function(){var s,r=this;return es(this,(function(i){return t=(function(o){if(o==null)return Yr({},KT);var a=Yr({},o);return a.flipHorizontal==null&&(a.flipHorizontal=KT.flipHorizontal),a})(t),e==null?(this.reset(),[2,[]]):(s=ue((function(){var o=oTe(e,r.modelType==="general"?lTe:cTe).imageTensor,a=Rt(r.model.predict(o),[0,0,0,1],-1),l=NL(e),c=aTe(a,uTe,l),u=Kn(c,2),h=co(u,[[0,0],[0,0],[0,1]]);return yA(h,[[0,0],[0,0],[0,2]],"symmetric")})),[2,[{maskValueToLabel:dTe,mask:new hTe(s)}]])}))}))},n.prototype.dispose=function(){this.model.dispose()},n.prototype.reset=function(){},n})();function pTe(n){return Zn(this,void 0,void 0,(function(){var e,t,s;return es(this,(function(r){switch(r.label){case 0:return e=(function(i){if(i==null)return Yr({},XT);var o=Yr({},i);if(o.runtime="tfjs",o.modelType==null&&(o.modelType=XT.modelType),o.modelType!=="general"&&o.modelType!=="landscape")throw new Error("Model type must be one of general or landscape, but got "+o.modelType);return o.modelUrl==null&&(o.modelType==="general"?o.modelUrl="https://tfhub.dev/mediapipe/tfjs-model/selfie_segmentation/general/1":o.modelUrl="https://tfhub.dev/mediapipe/tfjs-model/selfie_segmentation/landscape/1"),o})(n),t=typeof e.modelUrl=="string"&&e.modelUrl.indexOf("https://tfhub.dev")>-1,[4,Ma(e.modelUrl,{fromTFHub:t})];case 1:return s=r.sent(),[2,new fTe(e.modelType,s)]}}))}))}function mTe(n,e){return Zn(this,void 0,void 0,(function(){var t,s;return es(this,(function(r){switch(n){case eg.MediaPipeSelfieSegmentation:if(t=void 0,(s=e)!=null){if(s.runtime==="tfjs")return[2,pTe(s)];if(s.runtime==="mediapipe")return[2,nTe(s)];t=s.runtime}throw new Error("Expect modelConfig.runtime to be either 'tfjs' or 'mediapipe', but got "+t);case eg.BodyPix:return[2,J3e(s=e)];default:throw new Error(n+" is not a supported model name.")}}))}))}(function(n){n.BodyPix="BodyPix",n.MediaPipeSelfieSegmentation="MediaPipeSelfieSegmentation"})(eg||(eg={}));function gTe(n,e,t,s,r,i){i===void 0&&(i={r:0,g:255,b:255,a:255});for(var o=-r;o<=r;o++)for(var a=-r;a<=r;a++)if(o!==0&&a!==0){var l=(e+o)*s+(t+a);n[4*l+0]=i.r,n[4*l+1]=i.g,n[4*l+2]=i.b,n[4*l+3]=i.a}}function ATe(n,e,t,s,r,i,o){o===void 0&&(o=1);for(var a=0,l=-o;l<=o;l++)for(var c=-o;c<=o;c++)if(l!==0&&c!==0){var u=(e+l)*s+(t+c);(!r[n[4*u]]||n[4*u+3]<i)&&(a+=1)}return a>0}function yTe(n,e,t,s,r,i){return e===void 0&&(e={r:0,g:0,b:0,a:0}),t===void 0&&(t={r:0,g:0,b:0,a:255}),i===void 0&&(i=Array.from(Array(256).keys())),Zn(this,void 0,void 0,(function(){var o,a,l,c,u,h,d,f,p,A,m,g,x,v;return es(this,(function(b){switch(b.label){case 0:return(o=Array.isArray(n)?n:[n]).length===0?[2,null]:[4,Promise.all(o.map((function(w){return w.mask.toImageData()})))];case 1:for(a=b.sent(),l=a[0],c=l.width,u=l.height,h=new Uint8ClampedArray(c*u*4),d=Math.round(255*r),f=new Array(256).fill(!1),i.forEach((function(w){return f[w]=!0})),p=0;p<u;p++)for(A=0;A<c;A++)for(h[4*(m=p*c+A)+0]=t.r,h[4*m+1]=t.g,h[4*m+2]=t.b,h[4*m+3]=t.a,g=0,x=a;g<x.length;g++)v=x[g],f[v.data[4*m]]&&v.data[4*m+3]>=d&&(h[4*m]=e.r,h[4*m+1]=e.g,h[4*m+2]=e.b,h[4*m+3]=e.a,p-1>=0&&p+1<u&&A-1>=0&&A+1<c&&ATe(v.data,p,A,c,f,d)&&gTe(h,p,A,c,1));return[2,new ImageData(h,c,u)]}}))}))}class $S{static async create(e){const t=await mTe(eg.BodyPix,{runtime:"tfjs"});return e.log("success","Segmentation ready"),new $S(t,e)}constructor(e,t){this.segmenter=e,this.debug=t,this.maskCanvas=document.createElement("canvas"),this.maskCtx=this.maskCanvas.getContext("2d")}async segment(e,t){try{const s=await this.segmenter.segmentPeople(e,{multiSegmentation:!1,segmentationThreshold:.7});if(!s?.length)return;const o=await yTe(s,{r:255,g:255,b:255,a:255},{r:0,g:0,b:0,a:0},!0,3);(this.maskCanvas.width!==o.width||this.maskCanvas.height!==o.height)&&(this.maskCanvas.width=o.width,this.maskCanvas.height=o.height),this.maskCtx.putImageData(o,0,0)}catch{}}getMaskCanvas(){return this.maskCanvas}}const il=document.getElementById("video"),xTe=document.getElementById("three-container"),tg=document.getElementById("output-canvas"),Mb=tg.getContext("2d"),mi=new $L;window.__debug=mi;let PS=!1,Db=0,Fb=performance.now();const bTe=3;let u0=0;const vTe=5;let h0=0;const CTe=2;let d0=0,Ho,vm,RL,UC,zC,GC;const ITe=-10,wTe=-9.8;window.addEventListener("DOMContentLoaded",async()=>{mi.log("info","=== AR Wings (refactor) ==="),STe(),mi.updateStatus("Loading models..."),[UC,zC,GC]=await Promise.all([RS.create(mi),MS.create(mi),$S.create(mi)]),mi.updateModelStatus("Pose/Face/Segm ready"),mi.updateStatus("Ready - Tap Start")});function STe(){const n=document.getElementById("start-btn"),e=document.getElementById("instructions"),t=document.getElementById("camera-toggle-btn");document.getElementById("toggle-debug").addEventListener("click",()=>{const s=document.getElementById("debug-panel");s.classList.toggle("minimized"),document.getElementById("toggle-debug").textContent=s.classList.contains("minimized")?"+":"−"}),document.getElementById("clear-debug").addEventListener("click",()=>{document.getElementById("debug-logs").innerHTML=""}),n.addEventListener("click",async()=>{e.classList.add("hidden"),await ML(),t.style.display="block"}),t.addEventListener("click",async()=>{mi.log("info","Switching camera..."),await PL(),await ETe()})}async function ML(){await eB(),mi.updateVideoStatus(`Camera stream active (${Sd()})`),await new Promise(n=>il.onloadedmetadata=()=>n()),tg.width=il.videoWidth,tg.height=il.videoHeight,Ho=dV({video:il,container:xTe,videoPlaneDepth:ITe,debug:mi}),vm=new o6({scene:Ho.scene,debug:mi}),await vm.loadAssets(),RL=new a6({scene:Ho.scene,camera:Ho.camera,depthZ:wTe+.1,debug:mi}),PS=!0,mi.updateStatus("Running - Stand back!"),requestAnimationFrame(DL)}async function ETe(){PS=!1,tB(),pV(Ho?.renderer,Ho?.containerEl),Ho=null,u0=h0=d0=0,await ML()}function DL(n){if(!PS)return;requestAnimationFrame(DL),Db++,n-Fb>=1e3&&(mi.updateFPS(Db/((n-Fb)/1e3)),Db=0,Fb=n),Mb.clearRect(0,0,tg.width,tg.height);let e=UC.getLastShoulders();u0++,u0>=bTe&&(u0=0,UC.estimate(il,Sd())),h0++,h0>=vTe&&(h0=0,zC.estimate(il,Sd())),d0++,d0>=CTe&&(d0=0,GC.segment(il,Sd()));const t=GC.getMaskCanvas();t&&RL.updateMask(t,Sd());const s=zC.isFacePresent(.7),r=!!e,i=s&&(r||vm.hasLastAnchor());if(r){const{left:o,right:a}=e;vm.updateFromShoulders({left:o,right:a,videoWidth:il.videoWidth,videoHeight:il.videoHeight,facingMode:Sd()}),JT(Mb,o.x,o.y,"#00ff88"),JT(Mb,a.x,a.y,"#00ff88")}vm.setVisible(i),fV(Ho.videoPlane),Ho.renderer.render(Ho.scene,Ho.camera)}function JT(n,e,t,s){n.fillStyle=s,n.beginPath(),n.arc(e,t,5,0,Math.PI*2),n.fill()}
